cset: moving following pidspec: 16736
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.276023086 seconds)
loading group "string"... done (took 0.620842258 seconds)
loading group "linalg"... done (took 7.48849448 seconds)
loading group "parallel"... done (took 0.153923201 seconds)
loading group "find"... done (took 1.187784864 seconds)
loading group "tuple"... done (took 1.760191828 seconds)
loading group "dates"... done (took 1.238771307 seconds)
loading group "micro"... done (took 0.216889019 seconds)
loading group "io"... done (took 0.895033046 seconds)
loading group "scalar"... done (took 36.876887065 seconds)
loading group "sparse"... done (took 11.674140959 seconds)
loading group "broadcast"... done (took 0.93811263 seconds)
loading group "union"... done (took 12.045897973 seconds)
loading group "simd"... done (took 4.454839087 seconds)
loading group "random"... done (took 8.911104995 seconds)
loading group "problem"... done (took 1.81990002 seconds)
loading group "array"... done (took 20.62177828 seconds)
loading group "misc"... done (took 1.695025187 seconds)
loading group "sort"... done (took 3.256583938 seconds)
loading group "collection"... done (took 16.986111327 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.517127275 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123700926 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133008407 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119166346 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14658532 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117307038 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12476775 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086559283 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.819734796 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146911979 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115595755 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.395997133 seconds)
done (took 5.309920244 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174803081 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083722307 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085120291 seconds)
  done (took 1.315245931 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068248715 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125778003 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06994778 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069591652 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070363457 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069198072 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069492865 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069440222 seconds)
  done (took 1.69195383 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075365535 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071754241 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069003238 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071910705 seconds)
  done (took 1.435597493 seconds)
done (took 5.843522871 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.743325404 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211360303 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185556442 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.379285612 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127343582 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.168877155 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653289784 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325014808 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18918168 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077432127 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10747909 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.336821005 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.120508843 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635068348 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076056432 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092028653 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139166867 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433017325 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070295045 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085541299 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09202999 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131218235 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086811777 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076736638 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148184957 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070499165 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132599017 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083335223 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069126408 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214656059 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174995093 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662286486 seconds)
  done (took 10.280777576 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100157479 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099066213 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070917928 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127832988 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099626429 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072243226 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077377916 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070096701 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091776417 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130679932 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093392441 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1074206 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068787095 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071476856 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086014976 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20913329 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082481861 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08351771 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073308494 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080401357 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109990134 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080422332 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082860723 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082171812 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130878375 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18472617 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102087221 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102862109 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070937758 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084182224 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117341887 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130983894 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068688926 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070729269 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12797687 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097420868 seconds)
  done (took 4.730545775 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.951399123 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.121837178 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140498688 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089873917 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131406763 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06757507 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107636411 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068625333 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081978492 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.203865885 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.367826801 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.571780459 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.131160934 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112005785 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104554873 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070438725 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071280621 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069845897 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.423512264 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099002067 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10720887 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082426339 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072911856 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070047333 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067206329 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069438645 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065881925 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069859823 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.113799811 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078334858 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.301883003 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119663244 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070186566 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101423666 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.133241126 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.074514256 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.166539568 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070306319 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094126155 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092052921 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136864922 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071792536 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068643249 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.156090414 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067997958 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072803425 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.072289136 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086874912 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105382921 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119565997 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068414189 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068896475 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164570055 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068434517 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081289358 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.101002299 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155426382 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068888469 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.259503557 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091323222 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072770145 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068508413 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.166089501 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126025048 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070401937 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069836729 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070857278 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071358928 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.323415618 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069050957 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.926108326 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075275861 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079089707 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072117581 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071627246 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075169724 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075222962 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090925977 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069057901 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07576951 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068411467 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069278004 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069752999 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08469821 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067589405 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.482057773 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070247955 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070903471 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06855828 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092342261 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098259524 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069600956 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068856831 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102094402 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070648145 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069620627 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068946396 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084754544 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07265023 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115301881 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070588812 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.083092793 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099731683 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06794104 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071441874 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103104446 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080361501 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071085091 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.405618181 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072877312 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069952516 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068196507 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070054181 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068805106 seconds)
    (114/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067113566 seconds)
  done (took 21.603998826 seconds)
done (took 38.715121755 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24337364 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075225853 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075920073 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075632695 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075527668 seconds)
  done (took 1.781236664 seconds)
done (took 3.007213295 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120063868 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098367711 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067186414 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09723915 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071089574 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100002593 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099664714 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078326918 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099587234 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068064107 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096966972 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067257793 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067488278 seconds)
  done (took 2.36784656 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085981182 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086250539 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07220506 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084638199 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067051678 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084687529 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084099168 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093294935 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083569993 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07505568 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066379875 seconds)
  done (took 2.101509455 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08426848 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086223745 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071745385 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084153501 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066812257 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084082157 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083486815 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087400526 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084479458 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076498571 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066490234 seconds)
  done (took 2.088543396 seconds)
done (took 7.770270484 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079448673 seconds)
  done (took 1.284249276 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.521908649 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.622715321 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08240295 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.106779145 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.185260321 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112521616 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.244872725 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086717474 seconds)
  done (took 8.337419788 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102696281 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071577226 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075650802 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073249084 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07527328 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072792806 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073715174 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074492184 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071135013 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071561433 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071228985 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072480502 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070717302 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070891169 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07336646 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072229741 seconds)
  done (took 2.475809363 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093246004 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092378337 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075523811 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077766812 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07411673 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073294657 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076303809 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07532677 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073112058 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074167285 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077002465 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07475456 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073426299 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066726767 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07573715 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07809321 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072663334 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076011674 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07647527 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076766411 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07676381 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066393482 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073835881 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076125399 seconds)
  done (took 3.132971713 seconds)
done (took 16.445065226 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105466618 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07009573 seconds)
  done (took 1.385883117 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082036696 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083164526 seconds)
  done (took 1.38487706 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082981703 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068103549 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089840371 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078744612 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068368402 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06806073 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087719386 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068249468 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067872072 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068540459 seconds)
  done (took 1.9681559 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070387949 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077669471 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071580514 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081965799 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07587898 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067081401 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073294389 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069762466 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078606745 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065212307 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073082638 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084729139 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073109707 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086066071 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073478372 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070500078 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072581864 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069900105 seconds)
  done (took 2.558079053 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067929116 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069146894 seconds)
  done (took 1.360318099 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069245385 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066247911 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069140152 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069071913 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065957154 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065056429 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065781713 seconds)
  done (took 1.689549096 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.356895625 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117980066 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.299818533 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074034377 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08391368 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252690725 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068536196 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073998675 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073904774 seconds)
  done (took 2.66106608 seconds)
done (took 14.237598534 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081129702 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088058802 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097720113 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.37054395 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093893292 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069086589 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115838641 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.17772627 seconds)
done (took 2.329622804 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208719031 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.655639236 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.407912143 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203580873 seconds)
  done (took 2.49252514 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329958263 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089638586 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062463773 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070425755 seconds)
  done (took 1.789201679 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06932279 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07148614 seconds)
  done (took 1.37418521 seconds)
done (took 7.098811895 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069670259 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088085679 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068936552 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068612624 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066411865 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069052837 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066172763 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.066204616 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066766399 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068902122 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06628472 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068625328 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.068784482 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.068613302 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06866607 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066294965 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06683775 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.182423914 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066559478 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066431866 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066095136 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068674563 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066033964 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066411556 seconds)
  done (took 3.018095216 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086420834 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069464928 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074266573 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073572119 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071410659 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073324591 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073606294 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068537882 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073477352 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070724044 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071126187 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07136162 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070914076 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071477988 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070986047 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071924816 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07366066 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068936571 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070524221 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072055895 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073766469 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068793882 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071423341 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073380983 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071010807 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072067722 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070908003 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068521361 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07363 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071470343 seconds)
  done (took 3.404131816 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072366199 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066102307 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066730491 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072918844 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066070958 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067975827 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066251584 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066021028 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067427649 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066699739 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066956596 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066740136 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065840601 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067122508 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067004554 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070245324 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081153104 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066408677 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065955136 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066641946 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069846232 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06858226 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066581185 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06609098 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066145487 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065978807 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067074533 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066068845 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067189715 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066532744 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069578838 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070145568 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066541492 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073871922 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070137564 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066404805 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070346693 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066177469 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066478908 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066248823 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066019572 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065786557 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065976466 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073350161 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06635724 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06761083 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066182393 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066787733 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066988184 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068425262 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066081882 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067055704 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068051352 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067372575 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070299418 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06606485 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066693355 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066000278 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066698398 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066424328 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065960931 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065869701 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068831527 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066484055 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080963614 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073450568 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066440823 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067829304 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067072618 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069048526 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067897246 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079573469 seconds)
  done (took 6.145370577 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090232301 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08861844 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068254587 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068372636 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065391841 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06699479 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072195822 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066598425 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06821282 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084746966 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067372933 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067949967 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067823237 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070154242 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066922891 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068345449 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074588394 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064281714 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066369069 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070121227 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067106636 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071411526 seconds)
  done (took 2.820031877 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149002838 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072554948 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105989781 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078243719 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073453343 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077180382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072563388 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072053565 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072477505 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070641118 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070001993 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072083561 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072276978 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069997008 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07045773 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070114539 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072487183 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070301473 seconds)
  done (took 2.6628044 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07965269 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068520888 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088363956 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068777006 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068583543 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071990893 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072956526 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075740278 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07101817 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068551041 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075590805 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070742685 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070936298 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068657647 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070706132 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068868038 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070645238 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068519316 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075611585 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072699346 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072552398 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076209858 seconds)
  done (took 2.847735331 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081516999 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070925537 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082743746 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070062473 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064877227 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067194874 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072485361 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068128612 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073060407 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070227105 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068383016 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067097296 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070705848 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068153057 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070817214 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068296661 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070242983 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068033327 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070197381 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064291894 seconds)
  done (took 2.659909553 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087415721 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070004594 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070256165 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077038709 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070135862 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070739013 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076589322 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070313146 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070304137 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0899026 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07080373 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070628356 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076369392 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07676236 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070740625 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076593857 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076771914 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07653202 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07075264 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070589364 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090296696 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071119897 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077587706 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070258268 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070120867 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070792664 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070187937 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074461873 seconds)
  done (took 3.337386646 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069623088 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068982346 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066635451 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066567147 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065783226 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06660727 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066467743 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067064798 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069082365 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066302085 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068341671 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069096505 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068940107 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068786602 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068881167 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069208076 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069509971 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066759745 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066634576 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066565015 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068669625 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069201785 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068692155 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067010634 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066336672 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068776088 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066448465 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066368601 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069098874 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066430633 seconds)
  done (took 3.292956145 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076664309 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075545386 seconds)
  done (took 1.412632309 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065041909 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08136503 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066025481 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073182705 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072258563 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070069983 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075424675 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072245655 seconds)
  done (took 1.831035684 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083693615 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078640808 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070274468 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079092433 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079255633 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084729085 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135358033 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069287012 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075454508 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067743148 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081810704 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0686386 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075258949 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069939886 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075539067 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07608718 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067041882 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073378709 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070234891 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06792003 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069309415 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076928566 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071712895 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064736063 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070590294 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090598285 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079292426 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068638986 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071865998 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076268994 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074670318 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063638472 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068410527 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068774457 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067403176 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077253331 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082540248 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072084842 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077053698 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068958346 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077064129 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064088907 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073471958 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075691547 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079559684 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069162031 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069746706 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064174601 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067382282 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071781723 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064617947 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069472023 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063847157 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075603596 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073215824 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07944956 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068052115 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070489897 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072123564 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071931802 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075059153 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071362434 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071470056 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068704283 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078486907 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073762026 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076945132 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064276086 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063238516 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066644263 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077994259 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090452111 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074423203 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06903087 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069314938 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066831965 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072229447 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069550936 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074004268 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075990399 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068614234 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073590195 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076000251 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0694278 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071460858 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075064598 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066945398 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070792144 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06664843 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084041158 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067043265 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068913082 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066580254 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078332911 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071933584 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067737381 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066682379 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075586048 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062501641 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067590298 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067905048 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068898344 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077124824 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071077827 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071921267 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076379578 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074969821 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06866607 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070881252 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.19343239 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07236753 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069772365 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.0769395 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064607453 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073277321 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070753563 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069946008 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077913062 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067769211 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068779649 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076218271 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074994633 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068125684 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065608823 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071530992 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068615229 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071346688 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077447415 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067736266 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065106155 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064653045 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072721598 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068331521 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072999548 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073323355 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072480535 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064263478 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067109384 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073590512 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.0780618 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069363119 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070119049 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075156025 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070454893 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068511295 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075742721 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071924249 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068062721 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075338128 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06974444 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063677856 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070989478 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072225466 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067536035 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073125643 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071271382 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070782841 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06904669 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067250903 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074220824 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070097048 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068214942 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069614553 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067874646 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079425024 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070634514 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064107824 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066079462 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075637205 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067138233 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068261413 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068446492 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071086754 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068870578 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066751083 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068295388 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071385006 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076595143 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071624857 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068918198 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074420763 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080641843 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067980245 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071386379 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068428403 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06936911 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069463038 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077863329 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074523993 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072831913 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071315674 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066321931 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074338212 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076642691 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068837264 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067609254 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068657098 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072327296 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074730378 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072231841 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069026984 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066783044 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069281863 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069955181 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070815561 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067564147 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06806528 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072606188 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066592354 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072916263 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068065066 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077867056 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071655795 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063644192 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069545358 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065958584 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073769046 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063383887 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066175145 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067543834 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06821832 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066835353 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.20020344 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065365956 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076590579 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077185266 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070554772 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069517738 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069029 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076707084 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071147024 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072790899 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073092681 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075211604 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08025517 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068979747 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072690873 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081702054 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068784877 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063750803 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074016385 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067730417 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067929219 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068303708 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067187465 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072365909 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076398012 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07568611 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063548949 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071823003 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067928634 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068470369 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064807984 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073062861 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072775539 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070076427 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076324697 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069648137 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.0690879 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07235496 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068228831 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069371908 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069236594 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072368795 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06950554 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070561688 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06921386 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071505289 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068011121 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066453125 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070302924 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068446085 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069672958 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073866238 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068301339 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069335654 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071015594 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069018154 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069644504 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06979004 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068652977 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072560125 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069740405 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069689258 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071976402 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064346225 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076226769 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067996934 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076181308 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069168233 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065893298 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073914467 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071336025 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072837244 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069459488 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068955598 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070261827 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068047091 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071609521 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075475363 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067978566 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079018303 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075471003 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070255404 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071753352 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069543278 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071181466 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068473392 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070241765 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069516182 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069731372 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068598649 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073146438 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071412621 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069312944 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070846239 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068355811 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068645599 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069057899 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063604286 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06811505 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068449612 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068051753 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07739084 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068529191 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068526039 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067630831 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068350836 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066783827 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065294015 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073361111 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073822038 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067671701 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073851165 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067362915 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069013883 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077104026 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.195693004 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068820623 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067954938 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068839884 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076448159 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069705854 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078732871 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070232761 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069364072 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066711056 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069738262 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06827878 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064283314 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066860187 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072423616 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068786433 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068479222 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068438246 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071433837 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069779938 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078289932 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068612191 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069962214 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069244534 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066517446 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067845707 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068504442 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072041872 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070320416 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067208168 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06673243 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068284167 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.07023157 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071502144 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06800191 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071190901 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076119913 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068435912 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071874212 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071127037 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064222989 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071998407 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068232026 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068125511 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068561252 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072257648 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07487142 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069173377 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077655269 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068432353 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069894885 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06876973 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066707295 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06835987 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068443963 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068157817 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068291397 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069154476 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076389569 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066622327 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072614425 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068848306 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069684153 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075378927 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06963204 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072045985 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074034933 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069857688 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070648514 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07666837 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072278868 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071906165 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069702317 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070565371 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07516388 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068173456 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075188562 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069586094 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069292141 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070863141 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067406215 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068643439 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068299547 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068065459 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075265146 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069507583 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068697048 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068723425 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066709253 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070563863 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072031411 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076453586 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07146597 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072025328 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064310056 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065804764 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06894379 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067403933 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070632421 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07042292 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074204654 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070338846 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069251973 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067360381 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077371842 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074267034 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072254129 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066611688 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071569202 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068316065 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070086196 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069083827 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068462555 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068482365 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071995218 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069668487 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067489653 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.207614972 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074637978 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069736542 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071230276 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070859049 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069778315 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064689462 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069199036 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071062792 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073747555 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071859697 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069964406 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080217807 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068290003 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069525984 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071431923 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0684852 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073636365 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06471292 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071121104 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069575566 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06989566 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064094883 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069100131 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06706016 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071183181 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068833579 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06471523 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079382204 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07814539 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07217361 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068121131 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067705665 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063934197 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064369913 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068414339 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069421623 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070681255 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078504179 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06875522 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068579977 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064767565 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069218093 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072031646 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073020323 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066633809 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063925105 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06890944 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072342512 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074272423 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067360462 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068349465 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07191852 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070792569 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066867484 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071085864 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066259213 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07209676 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080738856 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068933534 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069881689 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074798791 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075975261 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068861411 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064215393 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068912222 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072379306 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069889645 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069592678 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06949936 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083497159 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072180884 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068800984 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067936348 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071859438 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071471187 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076867354 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070213056 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068971838 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073880504 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07119271 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075754985 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072334348 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076197408 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072725463 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072380283 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068344327 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070020594 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067612365 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068702472 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069831219 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069302867 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073109726 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07468158 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068102676 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078601652 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077067044 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070029711 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06570772 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068147263 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06842978 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064019253 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068256835 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066303065 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066973147 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066719575 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067792519 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070072309 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072594447 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070035918 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067620149 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067120799 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062287292 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070601184 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069842805 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069022048 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.200174934 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069551776 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070395023 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073699725 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072532118 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067701395 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071489068 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071584915 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070623369 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064347259 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075646585 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06773996 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07154247 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068796998 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069405376 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070058512 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072561732 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073107291 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07013649 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071931315 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073582245 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070850806 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067365327 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067217778 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075867037 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067260929 seconds)
  done (took 44.153255944 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100884326 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065859295 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064711715 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064782605 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074917399 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064839074 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064582143 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065255923 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065915321 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067367901 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064513023 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064904444 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071688858 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078785858 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074642803 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069038404 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064724354 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065849052 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064451449 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06542801 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072076828 seconds)
  done (took 2.804847854 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07440179 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079802846 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076333294 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08322047 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073113547 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072545845 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076468615 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072443133 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079440102 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074369321 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079725551 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072108616 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074268561 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073942653 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074140327 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072680885 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079858457 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073436375 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071840144 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076134519 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073143417 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076801205 seconds)
  done (took 3.002143734 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068817221 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068025765 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070882052 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064177997 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068166702 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063679176 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070216755 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066379696 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07091168 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067707681 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068523264 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067881775 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069736504 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063969272 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069383517 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066528816 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109612584 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071633007 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067983091 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069215174 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064212688 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070512212 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064372538 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06454784 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067853152 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07086678 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068948111 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06623142 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068246093 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067787418 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068550388 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066778995 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070784331 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069730814 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067830537 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06795196 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06797008 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070832107 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064145897 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066457785 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069115204 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064794863 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068614749 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070210139 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066602829 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067593759 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070275979 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068220571 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064020432 seconds)
  done (took 4.712688524 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079827548 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109115411 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069478751 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090414195 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081232062 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074031212 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072158907 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090844499 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065973903 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066971583 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082193825 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080231724 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084107862 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073125263 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074929176 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067915072 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068820746 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066889964 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070740586 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067823936 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071130882 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074292896 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081024543 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078998497 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071167651 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067159367 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067284257 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071510992 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078874041 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071962078 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072272292 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072464644 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081404398 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072467923 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066896573 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069872474 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082231832 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068130888 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069663741 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065836868 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069789024 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071278625 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074523009 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083232617 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068394048 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072762877 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067794239 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065866253 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079144083 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070177943 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075428074 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080243979 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070972173 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068020901 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072047388 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081783334 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067975921 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066909372 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071209506 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078606814 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06606586 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07176814 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079453995 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070070394 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07453439 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080094639 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072715103 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07112226 seconds)
  done (took 6.507059076 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077602986 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09656038 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083440675 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083903631 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07733814 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077477976 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077126119 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077433977 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076954693 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081574758 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07806789 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115587844 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073077134 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079620211 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085748594 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077377403 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077115254 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077473136 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077243461 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077180158 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076912682 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083821742 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07708992 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083560726 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080257216 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073723359 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077383242 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077602923 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083735489 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077562496 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080965357 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077165862 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077547713 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083580522 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080137571 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076977145 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067311404 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077185083 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077473869 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077061967 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073362364 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083615141 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076755585 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072767339 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077280185 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077037938 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084604054 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080401354 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07921882 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080744919 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077569044 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083370949 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077269344 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077449493 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083806731 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08618224 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083648024 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083413106 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077426817 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083357972 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083696512 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086453581 seconds)
  done (took 6.351754501 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083153057 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075457904 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082782065 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06458018 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069298458 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073992106 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06649666 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066710609 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075511783 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075045761 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077382047 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073634665 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076652892 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07766465 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074167331 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076645692 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073469672 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073484162 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075282753 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074243034 seconds)
  done (took 2.871149783 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076438746 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08395863 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06938931 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073318747 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071985866 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073660852 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071290764 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071484883 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069633989 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071101616 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077507039 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077395823 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06927772 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073631826 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077356163 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073198307 seconds)
  done (took 2.55273691 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083809084 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075185865 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080790253 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.069010064 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068875795 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065299779 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068263383 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063799134 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064656545 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079853332 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068563149 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078849098 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068186823 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067190489 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065484012 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073599922 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065622658 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065783508 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068490739 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079907545 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071708086 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067363838 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.0712787 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067940003 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070422733 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071976043 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067621927 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068552949 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065238099 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068844599 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070577818 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071498552 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065388403 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066394535 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067321917 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066052417 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068620877 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068713906 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073093629 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068200138 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066513493 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070219137 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068445714 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069211021 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065082988 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068415708 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064798475 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07036061 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066222827 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070564831 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068230362 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071077575 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069036807 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074919178 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071133286 seconds)
  done (took 5.204785736 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081351376 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071666717 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063600309 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066661311 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071189639 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069690477 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071995771 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069138184 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069469336 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066588521 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069796423 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070980068 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069680392 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071843664 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069681793 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07173636 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064627345 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069033415 seconds)
  done (took 2.645106331 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073509962 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068636895 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075239356 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068596577 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068649592 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070976041 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064729712 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066823243 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066949367 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069085727 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068720084 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070703858 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067201676 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070535505 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068573332 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068413002 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070750838 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067351974 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068919548 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0647135 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070814304 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067351118 seconds)
  done (took 2.894738747 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094189482 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083967657 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138225817 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080863381 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086639419 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074522021 seconds)
  done (took 1.936970303 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092859944 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101430301 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069553244 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071258765 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076897515 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071771062 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072047936 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07225159 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079272952 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077305546 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072889721 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082660304 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080070844 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078870204 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077208944 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077217281 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072911871 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072021791 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068451484 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084317579 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072223784 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079352614 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072364968 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07208978 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072308773 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078472237 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079489311 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077986938 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07203943 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079367722 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077644473 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072347207 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079746914 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077699277 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071277169 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079410448 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072727338 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084114857 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077453482 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078538483 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07163701 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07698191 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079300375 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07618247 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079660261 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072281365 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076181727 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072211892 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072033228 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085871959 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077645622 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078434495 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077464623 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079829577 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079572304 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085819264 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077062657 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078415958 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077433623 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0777486 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078414126 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077291349 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079051294 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077546561 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077373079 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078548594 seconds)
  done (took 6.484558828 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106081813 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068939925 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07160136 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077596622 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078646766 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072252777 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072451715 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072172667 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072158097 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069719739 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108656937 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072538814 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079103915 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079151034 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072529875 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072604601 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072107095 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078666048 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069166178 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086237201 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072135861 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079466543 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078628427 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078603062 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077414315 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07743729 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07231446 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072237132 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072267057 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072116274 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076524163 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072058732 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078830006 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069198269 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078409655 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072588838 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07199156 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076477602 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07174183 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077392688 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078481534 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084317362 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072045869 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071948344 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077410225 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07218808 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072256356 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06991679 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07199712 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069190724 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077282079 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07702441 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077232666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078680215 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072401789 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072309027 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072529194 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072608455 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072796948 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077094063 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078856992 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072774983 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086084047 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072173365 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072231362 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078603682 seconds)
  done (took 6.40646621 seconds)
done (took 133.195339221 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.194606499 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173475234 seconds)
  done (took 1.742405899 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071442424 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097815538 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078105377 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131406146 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068589889 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103354747 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102154 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079006464 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068703917 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068979596 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068459733 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071008324 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133309574 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069064226 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067983318 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070744109 seconds)
  done (took 2.744587492 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09851498 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15684257 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102887461 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068358921 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098728075 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074550292 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067559806 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079071158 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07304867 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067788477 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073955369 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072678146 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067721514 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072527729 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073215202 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074129683 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06771858 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074405828 seconds)
  done (took 2.856976641 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09846282 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092124247 seconds)
  done (took 1.585955753 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.150971277 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134869693 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200861427 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.330858249 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15525159 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.145456524 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.141913748 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141378603 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113905913 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13632625 seconds)
  done (took 3.042559918 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099956032 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148687576 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266069669 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115523801 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074594347 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092730471 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117380005 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080857323 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081547521 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081205063 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081144578 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077895728 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099841261 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074962954 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076289349 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077605933 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10243366 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075415123 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076472303 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077491559 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100530364 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069454539 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07523395 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074754854 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078550824 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078750247 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069081578 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068797942 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077428102 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076148101 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078319775 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09202127 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07823802 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103612745 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073150083 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104862745 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07854161 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074823836 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076846489 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074857748 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079504482 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079315183 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07567889 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077635591 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068314735 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078374119 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068732144 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069419789 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079030966 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069527198 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078948227 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078076996 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104014264 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069642649 seconds)
  done (took 6.076381008 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108807662 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108076507 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072153327 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112892283 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105486507 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071137879 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105834721 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099026859 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108478954 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071910844 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070256785 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071722416 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081707587 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082401425 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115822038 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108687421 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074205038 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071043874 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108096795 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107876183 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070964857 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102437176 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097553288 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107217243 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069779454 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071430946 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070130854 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072059201 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07780481 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079161306 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071183941 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080314978 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085238279 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078368628 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070286991 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070657612 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071186589 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.0807842 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080447971 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080004188 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078491564 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069626536 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070443155 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071638595 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071353158 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070024846 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079282647 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08065137 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07883729 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070776109 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072071029 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070779815 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071598388 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080057086 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078185935 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080757831 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080094326 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070315398 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070780478 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073275835 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080650734 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08042017 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080164935 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071711058 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080322161 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073725679 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081192918 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084611061 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071082797 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07199773 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070382352 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070795903 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071436402 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079595071 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078585008 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071935631 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070874822 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070734081 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080099897 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078546152 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070433991 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077826741 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069535571 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069786163 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071848614 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071441928 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077050696 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079313573 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071449694 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070015169 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069845108 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069268955 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06862125 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07579095 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078052552 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077484605 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077288338 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070294919 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077873913 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.212628888 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072623439 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080130681 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071174754 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072198758 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071937481 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079403001 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079185284 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080704843 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071485581 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071782912 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079079421 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082091816 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071040976 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078509324 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080270294 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079546925 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070442208 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081341181 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071330922 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080973491 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071206609 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080336514 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070751525 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080283741 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071554393 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069949838 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070823763 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080390942 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072172857 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070556037 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072304036 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070681805 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078831747 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084063891 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071936329 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079121137 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079301916 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072081707 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078907333 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070642229 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07981479 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070657709 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071964143 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069804191 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081756495 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07152765 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070306903 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070629633 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080690064 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070439517 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081059441 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078575771 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0696558 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081844959 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081016167 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078434354 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08030267 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071870254 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070237319 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070382537 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070716761 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078133416 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079652183 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072654753 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070414047 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078166359 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080812132 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069971547 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079015889 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078762318 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078933563 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070676094 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07065419 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081353161 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081213893 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078775597 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079063422 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079241489 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071002174 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078569498 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079000243 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07098603 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08434187 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071285446 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082064212 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078630335 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076758501 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078456891 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079664895 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079819228 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08022281 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081782276 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068610372 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069292435 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077633198 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068918506 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069444826 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076794357 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071539685 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070383742 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.21951105 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072455209 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081429756 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070708891 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.08088666 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070525586 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07191998 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084133749 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071594408 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072136834 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080637658 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073169111 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079879725 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081852034 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079647523 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071178099 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071509088 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080038874 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080035838 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071469486 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070727392 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072910754 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079298444 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078758366 seconds)
  done (took 19.011397517 seconds)
done (took 38.470012895 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.190791518 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.144811435 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.156407692 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111159849 seconds)
  done (took 2.091758098 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.110616616 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097175276 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090286824 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067783065 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096899267 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067779193 seconds)
  done (took 1.966099852 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267165723 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.184224308 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169174465 seconds)
  done (took 2.053795808 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.190784627 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.1779322 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.419550375 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254146871 seconds)
  done (took 2.576934726 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.136323153 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086565195 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069314854 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08480128 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.12632346 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.152597352 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096709802 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.120401533 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080270886 seconds)
  done (took 2.435366584 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141196128 seconds)
done (took 12.700736199 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.229853216 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.221000909 seconds)
    (3/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.189571872 seconds)
    (4/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.218758624 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093012454 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.102270034 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.0698218 seconds)
    (8/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.176642855 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.226560191 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082601775 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101873429 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.161490992 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.23446373 seconds)
    (14/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055465828 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078003747 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077668871 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088686024 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.170293315 seconds)
    (19/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.170465613 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075865051 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120245676 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076168981 seconds)
    (23/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.090688015 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070150916 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074292278 seconds)
    (26/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.11189992 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110767161 seconds)
    (28/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071636614 seconds)
    (29/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101401618 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.202620647 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075093311 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081208916 seconds)
    (33/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074969385 seconds)
    (34/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079056803 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075910898 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077624786 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068465854 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066438118 seconds)
    (39/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.275833665 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.21856102 seconds)
    (41/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.180452399 seconds)
    (42/309) benchmarking ("sort", Float32, false)...
    done (took 0.129272424 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 0.152431869 seconds)
    (44/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.162026776 seconds)
    (45/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077532783 seconds)
    (46/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.152534722 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.1849397 seconds)
    (48/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068733456 seconds)
    (49/309) benchmarking ("sort", Int64, false)...
    done (took 0.069102122 seconds)
    (50/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.199199424 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121909779 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084089649 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077585392 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078661394 seconds)
    (55/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068596959 seconds)
    (56/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075703507 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.198397008 seconds)
    (58/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.15819634 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.110406759 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074683667 seconds)
    (61/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081963794 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100997698 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066159804 seconds)
    (64/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.18929473 seconds)
    (65/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076911639 seconds)
    (66/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.15785062 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089062125 seconds)
    (68/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089015326 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089862815 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090542957 seconds)
    (71/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072114998 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.154873512 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091244883 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054853301 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077360469 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087466407 seconds)
    (77/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.153775422 seconds)
    (78/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.165779054 seconds)
    (79/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.189977067 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.238583551 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090430624 seconds)
    (82/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080568766 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067074465 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076615531 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074164075 seconds)
    (86/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054798136 seconds)
    (87/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076711954 seconds)
    (88/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.110758365 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053727518 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127816724 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111688539 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07602346 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076470527 seconds)
    (94/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067184942 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091571134 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.158657666 seconds)
    (97/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.152816151 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077592873 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092281143 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.191308159 seconds)
    (101/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100525325 seconds)
    (102/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068418123 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088726084 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074488346 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138296457 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113350325 seconds)
    (107/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068569003 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074515031 seconds)
    (109/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075534787 seconds)
    (110/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075986241 seconds)
    (111/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092116832 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144590116 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066436453 seconds)
    (114/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055726083 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.178133773 seconds)
    (116/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111057335 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176548795 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056448471 seconds)
    (119/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.14987078 seconds)
    (120/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054950461 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156865224 seconds)
    (122/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076743553 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16554356 seconds)
    (124/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071002199 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075165469 seconds)
    (126/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054182551 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07414557 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076012793 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092687828 seconds)
    (130/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079486435 seconds)
    (131/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.174216049 seconds)
    (132/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07735347 seconds)
    (133/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075406201 seconds)
    (134/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.091949055 seconds)
    (135/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099435678 seconds)
    (136/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055528178 seconds)
    (137/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054166963 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092229124 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065935998 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068287466 seconds)
    (141/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073660095 seconds)
    (142/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065567421 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136169742 seconds)
    (144/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072445737 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075133445 seconds)
    (146/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099725258 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06832164 seconds)
    (148/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066941254 seconds)
    (149/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07365947 seconds)
    (150/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073179951 seconds)
    (151/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05568853 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074115611 seconds)
    (153/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053961594 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054294617 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.150319546 seconds)
    (156/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.156140952 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089049458 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053886321 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113331896 seconds)
    (160/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05457055 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143101242 seconds)
    (162/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06544975 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068152783 seconds)
    (164/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07091456 seconds)
    (165/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066806657 seconds)
    (166/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076871716 seconds)
    (167/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187984797 seconds)
    (168/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.151160083 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073869415 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068924894 seconds)
    (171/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074159619 seconds)
    (172/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093430259 seconds)
    (173/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109636916 seconds)
    (174/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053783049 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068379468 seconds)
    (176/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075576798 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053821991 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.1089542 seconds)
    (179/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075470872 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080682497 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135076509 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093434656 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119512833 seconds)
    (184/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113370055 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.055701247 seconds)
    (186/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053331312 seconds)
    (187/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055249748 seconds)
    (188/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.23824576 seconds)
    (189/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072607351 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076784973 seconds)
    (191/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.056452188 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056929719 seconds)
    (193/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.066467992 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080692087 seconds)
    (195/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071122367 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167141998 seconds)
    (197/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055796667 seconds)
    (198/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096037496 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06819394 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074619436 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079983933 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.099414444 seconds)
    (203/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054648168 seconds)
    (204/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055835575 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075918614 seconds)
    (206/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069869315 seconds)
    (207/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053933632 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087730217 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115881785 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074924778 seconds)
    (211/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066468584 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.119423797 seconds)
    (213/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.190928174 seconds)
    (214/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054620822 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074886854 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077046028 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138433425 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089052432 seconds)
    (219/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080947129 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08429849 seconds)
    (221/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066831328 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122895364 seconds)
    (223/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068515831 seconds)
    (224/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054173986 seconds)
    (225/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07515865 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068499323 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068260429 seconds)
    (228/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054573594 seconds)
    (229/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108728116 seconds)
    (230/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069561245 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054650744 seconds)
    (232/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099361038 seconds)
    (233/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057906748 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054308468 seconds)
    (235/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073774794 seconds)
    (236/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068021922 seconds)
    (237/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064910439 seconds)
    (238/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076584458 seconds)
    (239/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058044397 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069273136 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068978139 seconds)
    (242/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079028579 seconds)
    (243/309) benchmarking ("sort", Int8, false)...
    done (took 0.145078478 seconds)
    (244/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055423588 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.152047765 seconds)
    (246/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069634153 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.152939826 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096922981 seconds)
    (249/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054453612 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067274641 seconds)
    (251/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174078377 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070112321 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176122058 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068281381 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067924012 seconds)
    (256/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054973564 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055173754 seconds)
    (258/309) benchmarking ("sort", Float64, false)...
    done (took 0.127834862 seconds)
    (259/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075619042 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054350257 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068369439 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090843756 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067884396 seconds)
    (264/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055316059 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067945862 seconds)
    (266/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091747408 seconds)
    (267/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055251117 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.081011569 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07556482 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086413532 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074368651 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069245981 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067830226 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07955202 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094078101 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075548914 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067979245 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070273012 seconds)
    (279/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17459948 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068368369 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068712963 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075997979 seconds)
    (283/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053748098 seconds)
    (284/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056106378 seconds)
    (285/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078933036 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06611526 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071024077 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074208519 seconds)
    (289/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055315076 seconds)
    (290/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055294509 seconds)
    (291/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074292485 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067386025 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056197835 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053827349 seconds)
    (295/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055202597 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168534239 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053676843 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073620899 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069842601 seconds)
    (300/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053721134 seconds)
    (301/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055532354 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.117143774 seconds)
    (303/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088934865 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085812423 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053981878 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066454885 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.256211141 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071470417 seconds)
    (309/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.069431523 seconds)
  done (took 31.313207619 seconds)
done (took 32.760156152 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084508256 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09477561 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078611497 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094237059 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082961034 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077920794 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075970649 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080674384 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082283852 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084826595 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081312212 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057937025 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077379619 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077332679 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077907898 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093065652 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08161 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076063244 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07586142 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067521407 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076268294 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068189228 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07036405 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057229203 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080926612 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074028279 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076816722 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076592206 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068088726 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06842462 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071990452 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075984225 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067738537 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082004009 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075619429 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075749273 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077232931 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079120549 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069947579 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068588282 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07673519 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068798434 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075760948 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076429613 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075347466 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074096363 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075608457 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079276489 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091439883 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070120074 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077217855 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077762066 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080322862 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075156649 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072282315 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07537697 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073340462 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092036219 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075874318 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070126159 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.0769925 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076712248 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07336775 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075419449 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075594759 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077457426 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078918853 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074016547 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076783943 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074924587 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067779595 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075295027 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072326413 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067790065 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077920917 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08199488 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066777096 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073873458 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075009442 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07572801 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067758801 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070318825 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069692845 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07428991 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069871462 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057759175 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072354951 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074987184 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067300723 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075661461 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07462104 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075697757 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069541348 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079347986 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067427135 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073070017 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068123121 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068617711 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06979596 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07217109 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068361541 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069834179 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077027509 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068938764 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074048879 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079773041 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06738816 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07426122 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067025801 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067436019 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080602361 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077191589 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067532956 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069918344 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066629242 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074340089 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066239891 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066559811 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066754355 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066699353 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073309361 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067044725 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069083653 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.215467744 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082293061 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068940032 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071978572 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071521502 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068450301 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07485515 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068017559 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068870263 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070097153 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064293146 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070202489 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.0683348 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075971239 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070469631 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075216817 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069974832 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07676455 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073999167 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074430736 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073819375 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066985382 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062141044 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070658845 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070253057 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069930814 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067776638 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07005804 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067433376 seconds)
done (took 12.862731468 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069706102 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.132333478 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09525475 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094698002 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086066304 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069167111 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.0770183 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096324771 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070368594 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098520749 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088278376 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086532479 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110220646 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067517254 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068710296 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07304343 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070196207 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082548232 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.098368014 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088183174 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111810716 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068468265 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092233441 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089046705 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087711028 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093663282 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070289321 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073141814 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073042076 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101291412 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089042031 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072506362 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069271372 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098052349 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092438796 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083224842 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069151598 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083556112 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069734244 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068749593 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070447582 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096854274 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081162279 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081255294 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072847884 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078394357 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070134118 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08361722 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089607008 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079459537 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085950895 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.09895051 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071870405 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084433647 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067438108 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086278568 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077400097 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071286818 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069796737 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076452404 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069491642 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072538155 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081674965 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081584077 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072884324 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084808955 seconds)
  done (took 6.936656967 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086483086 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09390703 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085072213 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088174511 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068368001 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068966713 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068977504 seconds)
  done (took 2.101275654 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06919049 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088423246 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089232349 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089757456 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083069541 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089370788 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077893256 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069975087 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089465473 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070510011 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088970034 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098636082 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072844542 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.0765118 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090477184 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069225568 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091157321 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069618926 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071907994 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09038854 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071509251 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09776617 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073127063 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069847658 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082637034 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070004589 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112472266 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07341725 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071422934 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072786796 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067437433 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106007178 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082382482 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076487062 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069556837 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083603753 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.0833182 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067920852 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08476973 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078899824 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082061582 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069790473 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070639664 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067355473 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072937899 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079183885 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069872156 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070033799 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072359577 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087460409 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07042356 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082096649 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071546915 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07432855 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070594916 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076511197 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078851446 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070209666 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087477679 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071119023 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084662949 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083660505 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081797251 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083591834 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071549067 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08238472 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081920413 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072629001 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07092435 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072852757 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084124286 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068328858 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071570501 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07953156 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071202803 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090316451 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090343635 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071005092 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081636804 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070207054 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069975963 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069272005 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090088812 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074819989 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069446675 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073141149 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072819095 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067864117 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068736664 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073730489 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068085488 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07098958 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07238042 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072077564 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071815129 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084033959 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071375477 seconds)
  done (took 9.056598646 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072108252 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07107829 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071663947 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070761395 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070823988 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070559483 seconds)
  done (took 1.997695935 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091027985 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070764811 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081991421 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074169582 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103579058 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087984271 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088189254 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078876948 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084286281 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079701706 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087604928 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088968607 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092267856 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074302412 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087683535 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073457735 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087887035 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076319514 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079672093 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074371605 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086589743 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074472852 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074321733 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082760789 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077206286 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073988885 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08050445 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080155087 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079551839 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080236528 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074756987 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077269298 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072562395 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078745109 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08833345 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07272856 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073782755 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07871094 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073965245 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079334606 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088441947 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074320161 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07552449 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078999668 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07856025 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072887076 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078736115 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080804242 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087669272 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07823489 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078559387 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073306042 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077121022 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078481085 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072758828 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079003377 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078508104 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088057108 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.0736898 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072789669 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070555245 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077461312 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07902758 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078155403 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079374841 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079194554 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072987774 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074267868 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07460039 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073596999 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078960315 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07082679 seconds)
  done (took 7.239333318 seconds)
done (took 28.869242099 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536937952 seconds)
  done (took 2.061567503 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.596375232 seconds)
  done (took 2.152307595 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.555506366 seconds)
  done (took 8.104115637 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.363058269 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.466137967 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.702483091 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136068434 seconds)
  done (took 3.245880306 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.717762639 seconds)
  done (took 2.273252959 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.229642691 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220697226 seconds)
  done (took 2.018570068 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376146336 seconds)
  done (took 1.921446916 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.078206141 seconds)
  done (took 2.627728996 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.231272818 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175164988 seconds)
  done (took 1.962488523 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.450750532 seconds)
  done (took 2.00051404 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.801029125 seconds)
  done (took 6.352610468 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220159229 seconds)
  done (took 1.81729644 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235313342 seconds)
  done (took 1.792148318 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.754506941 seconds)
  done (took 3.311524359 seconds)
done (took 43.207818917 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085041582 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086450781 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086950663 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082942829 seconds)
  done (took 1.878160998 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078603585 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074835625 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078580289 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075186266 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078153224 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07486724 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076403244 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077128816 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074902768 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075308742 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075510188 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074231485 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077079879 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076349605 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073388634 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077492037 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07757045 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075049569 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077066644 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075077316 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073000576 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077054207 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077038519 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074451289 seconds)
  done (took 3.383071448 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080194625 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07485314 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076998464 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073643321 seconds)
  done (took 1.872202935 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080367929 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090797755 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088597096 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080167766 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090984577 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087202656 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071133873 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071611991 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072304078 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079529122 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070018625 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.0951248 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088968809 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079689822 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082086008 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067989987 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069896607 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087990148 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081028633 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08059455 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07279427 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080495384 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071020772 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089574236 seconds)
  done (took 3.492313712 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086842084 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10081551 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081194402 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091160263 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093653295 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067875107 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087929251 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093549087 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124494717 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068429701 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07372919 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068328026 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076011653 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067882168 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082853204 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110728591 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111447581 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071472936 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099623747 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06870184 seconds)
  done (took 3.300211076 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074834089 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072224814 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073419163 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069060051 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079037444 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074829487 seconds)
  done (took 2.015579943 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070299376 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070643245 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069638287 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069240207 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073889887 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070082918 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068550043 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070116092 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069947755 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069214944 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069300456 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068262443 seconds)
  done (took 2.405807327 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.182551196 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071187592 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07121117 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069046572 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072346595 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069091027 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082872982 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070405734 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092993845 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069093883 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069109548 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070967908 seconds)
  done (took 2.558504302 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192887614 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077230934 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221488926 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147546364 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107788617 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111481481 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111006196 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110005188 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.135103439 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098267102 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1580428 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160138135 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105392425 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133371523 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089985702 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100413265 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14818949 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158056898 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104907843 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158338498 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139845156 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123223743 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141593707 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100890046 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104675431 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117820284 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073475409 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080455166 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161897822 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128687874 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139139635 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114742765 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091946413 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169076489 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161816244 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135449176 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143913459 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085239189 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103034783 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129308459 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186224737 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088506138 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300915694 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11107842 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082293644 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131279342 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116410833 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11708161 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104217249 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09071843 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142068587 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174910193 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131021284 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087295084 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121928568 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110908464 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.111222872 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111932127 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169770538 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153123197 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125672235 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073947903 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10965344 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145469618 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128238408 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105619027 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120932645 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094115263 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128199997 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148027895 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119455318 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137890622 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114166215 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089112173 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11712506 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133522204 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123714308 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154017665 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121398956 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074933386 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119175371 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099282284 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082368683 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142782976 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076509404 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166089895 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09892752 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105050975 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120144611 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105945475 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106030249 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148368415 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286473713 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103417324 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06907086 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105116435 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11630772 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140530461 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088672722 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105862796 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115710702 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078948878 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13220066 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078105979 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122315397 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078030749 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121055032 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127046802 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079111933 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119613767 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102347232 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100125245 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127774576 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151701145 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088903923 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082444951 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158808405 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119430103 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101292643 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137761103 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1493521 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099852788 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098541902 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142397827 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164050649 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089213545 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156574055 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104226315 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084220632 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08766204 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120519684 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109502075 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121204221 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082859756 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116334619 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157607993 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076181046 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094894129 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130337803 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079788559 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081188519 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10392103 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103180017 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095628757 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097393655 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100607066 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130401944 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273311511 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106439326 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122259376 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099337567 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161190704 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089029342 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102118748 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103589069 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072049852 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128788861 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149004929 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081234754 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153911785 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119222398 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113719673 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117039807 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085016161 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133455125 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079977716 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072270141 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138448931 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108461962 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107202491 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143955841 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114146744 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120233945 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115619648 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127416731 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126517226 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125777402 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105574916 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088846688 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109616813 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124319999 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075117088 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090337273 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081194701 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10384962 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09526184 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083949371 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136283705 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120667214 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111029506 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1104795 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096170195 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140451785 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077005451 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122460343 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116395921 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095387853 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144826919 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145336524 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128314989 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096918063 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284338324 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072667454 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076603151 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088588178 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118922171 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084048285 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08430489 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114420038 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14119621 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127347391 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134440971 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12009871 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118055033 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148680795 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071997643 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117779821 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140643906 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119608572 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104722616 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091627209 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097948054 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137235967 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104621124 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169983206 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11184698 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121218262 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148441053 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100948436 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080475818 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101610728 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128426698 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102611886 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136938364 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098388181 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088915235 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106290992 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07935802 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098342125 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123681855 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115764813 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131162049 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112386112 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129227631 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078601647 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111474144 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119307744 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118695272 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066000317 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115083526 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152186665 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094828821 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113968747 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299662792 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080543421 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133246623 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164871392 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139070542 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085623393 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106732061 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11785883 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124557491 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116500416 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134174726 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104963219 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132444316 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107778412 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085569376 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087984142 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096529034 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102802745 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093453756 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103107212 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110952003 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09566391 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127474952 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102925411 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108549168 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115114732 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099247894 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091687374 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096329133 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166420871 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116164562 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162016054 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099022585 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136712584 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15522657 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076512065 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080953244 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07921323 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133612304 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086088339 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127036286 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108803681 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114812006 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120754672 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134188934 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095489837 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070297153 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10631285 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128761383 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120595183 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097680428 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100962201 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152416119 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.248097523 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080671892 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110300472 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115115351 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103229383 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162375795 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064501021 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104287129 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078533167 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080966258 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122392923 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144706799 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081975785 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099796632 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117784824 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111110774 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12287118 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098550745 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109536188 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122588999 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143467723 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123602897 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08985532 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108681473 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124434904 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149104851 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101800763 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098221378 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166433456 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145160632 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.152278126 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086665453 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11202879 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111900051 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107015516 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134307772 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084439494 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155121338 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083590128 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132527995 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102060564 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088717304 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125093071 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108957025 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088403961 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139721466 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113906507 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082922702 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07834702 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113791807 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116171425 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102128041 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075378533 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290480753 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075996809 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130186323 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15526768 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082608418 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103267056 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095945652 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081970428 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105018415 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101621849 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088340145 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100293469 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164005233 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086642439 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143272856 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130094319 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109295664 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129993246 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101610467 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639587822 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07880079 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144797075 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113431062 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163024432 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099024495 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114977962 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107640923 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118152782 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138348559 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101594823 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177508749 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127957996 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114030402 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080640062 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101416216 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10302764 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087388398 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106192888 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111514257 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113297778 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093224074 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.1144334 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121629096 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082881369 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095251042 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148879273 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112230592 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138059778 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13307048 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085312032 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114613067 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289309584 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082174838 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115886261 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146426883 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106575912 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09924094 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082592294 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099853486 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153369086 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07574823 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153208182 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120447715 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107484383 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111181628 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109723253 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127626728 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103842945 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119447059 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092506431 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106067276 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110990803 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0825357 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078703671 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103702892 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10879636 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097512433 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096635361 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100170672 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145374445 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.0746091 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098253455 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113200708 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138672481 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165281573 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087743649 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083946661 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117159552 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113997453 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110543736 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118438882 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080508504 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082429236 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081378934 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082177077 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106605262 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111507653 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112776544 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108610009 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153444513 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083548218 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223595425 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094772911 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102145622 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070429426 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078297358 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094756406 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251075578 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106237768 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111863065 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154918386 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095907607 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090309039 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092279406 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077859126 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085084192 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1228105 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107458665 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116072107 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101074845 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065239224 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105950558 seconds)
  done (took 57.932879781 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109919644 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08495434 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097711679 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145200556 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122355129 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20037945 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156989183 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188681328 seconds)
  done (took 2.793271267 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070258079 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095743471 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104033708 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084036426 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068430803 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07180058 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.219283899 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082974765 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068504816 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.093794332 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079974489 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071925753 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.412743047 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068332123 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070456964 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064737992 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070174189 seconds)
  done (took 3.475381649 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.377474998 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620739253 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.331951208 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078664598 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.919618121 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095068664 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.152335769 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13806928 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080538513 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.544972339 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.408947552 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132530485 seconds)
  done (took 18.566282769 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085003956 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078606708 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091518635 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091482639 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081209264 seconds)
  done (took 2.182982066 seconds)
done (took 107.445525145 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085701759 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.583987451 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057263724 seconds)
  done (took 2.352405023 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089381127 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08728498 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087609101 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085081623 seconds)
  done (took 2.046392989 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076910543 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079895511 seconds)
  done (took 1.846617683 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225420047 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169262234 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.0969537 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085154073 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082278931 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082354831 seconds)
  done (took 1.944447758 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075369576 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078160418 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075139462 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079039628 seconds)
  done (took 1.994432262 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079078895 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056323311 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058055193 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060839744 seconds)
  done (took 1.943350325 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088383426 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084284705 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080994231 seconds)
  done (took 1.943558264 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100649673 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08946894 seconds)
  done (took 1.879009562 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084099563 seconds)
  done (took 1.77494552 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094529024 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100302907 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128478431 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109872482 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135311469 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107126582 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086118684 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086677066 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078471556 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087594155 seconds)
  done (took 2.70387108 seconds)
done (took 22.690867126 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08004409 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369874382 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362561004 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091948522 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670993722 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360518039 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.965987692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09506532 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140090766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070600202 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087074855 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651900312 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.959194188 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32802665 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.944156767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327695986 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652419168 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072066356 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070782371 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071006511 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.954521627 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071162237 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071085283 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072364104 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652293278 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374946585 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071755771 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328917094 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071908989 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072957899 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359208682 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071882042 seconds)
  done (took 16.211905896 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08998584 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120664834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075368043 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086494791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073707055 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073166681 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074367475 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071872681 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12184755 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07067986 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087574067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07080223 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074592519 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071907159 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090233569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070959818 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071888122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072078106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07384392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071796011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089839486 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071673959 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071722599 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072295021 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071766663 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082750198 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07217238 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071708785 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071801031 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07325209 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07491426 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07272656 seconds)
  done (took 4.206036388 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116551475 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126516645 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076058558 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106229093 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113796275 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073403741 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144774485 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.0956967 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128284452 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071607864 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088262446 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071362277 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103858139 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072498211 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091063371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071734309 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072799993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07219204 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071452731 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072022404 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09043469 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071481354 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072072597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072491914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071922872 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084990154 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071810921 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072034102 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071993776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073429791 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075164273 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072372497 seconds)
  done (took 4.4369029 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075418633 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078261819 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086269473 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086882135 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07212198 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074712661 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075977068 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072982803 seconds)
  done (took 2.320264868 seconds)
done (took 28.871958901 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081800884 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07192504 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07489238 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.0904908 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075771359 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079875399 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069610709 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078737462 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075729732 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075474892 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077191885 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070858595 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074214046 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070180339 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077478766 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071409182 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081839985 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075093576 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081316384 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081941838 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073059872 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076309933 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07831988 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082151503 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081400361 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081439695 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079761145 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076043529 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071661475 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074035083 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080263007 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086581266 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071446114 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081435868 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071342952 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.0710665 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074934049 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071172621 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081867946 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079286678 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072691517 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079841652 seconds)
  done (took 4.897431347 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089876834 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093060043 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086054014 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064181839 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068667062 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067670802 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090638052 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063083952 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063762219 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089858093 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059785686 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06219267 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.0659985 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058222556 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063697295 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060710436 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064555154 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05898222 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063493848 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063090761 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090699127 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057401225 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080259126 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065830927 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059690143 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065142745 seconds)
  done (took 3.522843844 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076893706 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085616231 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091294137 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143539224 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114120888 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080274995 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081818969 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095122665 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09651556 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07011177 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073614791 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095306979 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09047531 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077046011 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071677283 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087827006 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088265388 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072356127 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075879828 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093896715 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088127028 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088008897 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094351405 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086351806 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069706338 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072905193 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074298937 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085773198 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072991564 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079210065 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073180449 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073827623 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072486354 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081891612 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073822905 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07248836 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096147691 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079753705 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081656483 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071494711 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078497813 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071427066 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093952901 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126498034 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069998537 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076454728 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074908926 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07968799 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070397174 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096094783 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081364947 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070642794 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07369397 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06980281 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070201897 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07319887 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072495887 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072756226 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078907929 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076166716 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094257914 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075719255 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086417325 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070443999 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078448175 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070194497 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071401118 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069838593 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095684826 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072938545 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110474219 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07186888 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072053329 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079282604 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078772968 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077056349 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07052603 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086607908 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080905248 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075423825 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078024313 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073634917 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072701206 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098194163 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073142543 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072378695 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071751791 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075581407 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073111624 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071603481 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083332731 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07019973 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072924864 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086781294 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070606926 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072026434 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075982676 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074652533 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070149003 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080980876 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074710288 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070957538 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079341808 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070367138 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072644347 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081883197 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076394084 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069355884 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074185499 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075373509 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070893791 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071373761 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072446324 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071811688 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078291907 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076252124 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07408186 seconds)
  done (took 11.00241174 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162347648 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150772106 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074121614 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143867878 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079333294 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08138658 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145176634 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094470154 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071463841 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071523369 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071343971 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110311675 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105712011 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116251868 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080968847 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071385529 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093397356 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114259641 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147591042 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142674153 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093565919 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078762822 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073773045 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07291316 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073164154 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080487015 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087752983 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079836195 seconds)
  done (took 4.516797508 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083406487 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103175665 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077634059 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091840883 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091402571 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071234578 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073219902 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072097761 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087261784 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080771072 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070661187 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075819743 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077173586 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07374985 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07180462 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077073982 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077638411 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072530414 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074710804 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076393821 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080901149 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093811644 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07417928 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072279778 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075893646 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070314893 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066102371 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085801001 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07119648 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095041466 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069017065 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075522361 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08410388 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07202228 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070922642 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07134364 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070689869 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071094153 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073119857 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069340905 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069436331 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060999108 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070245074 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080669587 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083834237 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059828961 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075364646 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075618516 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075732067 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06833788 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073915991 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073547285 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073504607 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078107524 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07463195 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075765322 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071630603 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076540687 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078971714 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070945235 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068433345 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069593221 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075217024 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068343244 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085802043 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075511697 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069510455 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070713159 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07235765 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083782907 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070796534 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075586837 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068433827 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072668885 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075877853 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072750487 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07201203 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069472651 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070650947 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07117854 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058796192 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070847979 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057246457 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073672448 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06888905 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06952804 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070670126 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074923218 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081450297 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071924857 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076258689 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073351206 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070169876 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07400497 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063393393 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073186965 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080854597 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084777415 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071055359 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069078791 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082387824 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075476647 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070194127 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059858587 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07499213 seconds)
  done (took 9.554569977 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092972183 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073006593 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084508642 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091858367 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08899037 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076969847 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080497803 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072708072 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086036624 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07650073 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07923292 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070868059 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080730114 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080006613 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072929855 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080052979 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074439899 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085367086 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084763935 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071283664 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079276759 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082959349 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091936807 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083219729 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081710132 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083595543 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091890104 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079739267 seconds)
  done (took 4.029846385 seconds)
done (took 39.217050606 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.790800693 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.949703992 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.778693888 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.107160386 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.857000102 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.976003704 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.867208831 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.770586994 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.032349432 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.809178966 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.069322161 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.841223073 seconds)
done (took 65.685467355 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.833424718 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.914911609 seconds)
    (2/2) benchmarking "String"...
    done (took 2.008410794 seconds)
  done (took 5.62212104 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.986141558 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.372050373 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.01990408 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.770588538 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.776588832 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.086301639 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.574203278 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.290827964 seconds)
  done (took 30.593110338 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.943479882 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.99309141 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.463833218 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.496904447 seconds)
  done (took 15.647109035 seconds)
done (took 63.475626027 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.756859448 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.814262286 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.797356987 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.751393411 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.824857589 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.777949548 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.199097899 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.789184121 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.763166841 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.758868999 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.765964429 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.185308847 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.778807953 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.075501668 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.765164624 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.766010249 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.802238268 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.314630296 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.920061903 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.780432091 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.779745924 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.982900679 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.769512117 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.779228721 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.76702324 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.765421819 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.166325608 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.77359325 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.375777559 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.768622183 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.795584177 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.336349289 seconds)
  done (took 204.144292603 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.763928377 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.661808701 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.747025174 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.808157267 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.155973242 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.945405991 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.870969133 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.216113766 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.767717932 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.767849517 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.950206516 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.763455385 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.977531553 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.708657418 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.790011159 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.845753057 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.929248962 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.987564851 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.796163618 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.913380416 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.786144132 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.766253002 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.724842656 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.936703916 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.769267504 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.828214808 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.772371292 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.76755533 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.955421023 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.893477319 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.809070977 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.76814523 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.962273619 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.633038855 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.775039976 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.774729999 seconds)
  done (took 168.983568846 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.94891749 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.135157465 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.763071714 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.763516258 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.763061625 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.769099358 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.761742811 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.884758417 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.890335023 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.383726943 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.292057495 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.814659093 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.763439771 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.565962572 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.764375678 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.829269432 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.775957947 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.763747773 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.780160631 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.789213055 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.766079197 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.765183066 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.892122123 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.77621979 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.763903917 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.771390854 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.764663469 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.767987147 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.134811366 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.763642074 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.144017176 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.764022883 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.769396402 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.611941034 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.857890918 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.005976701 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.764624844 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.762666512 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.764285863 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.847021896 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.765304975 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.768690389 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.764539419 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.982709256 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.766344467 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.763656244 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.765206404 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.767580755 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.906601377 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.764887927 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.886874422 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.767380563 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.248091618 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.766557937 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.765603284 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.622825851 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.349824019 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.76719165 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.767541586 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.764676325 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.766319144 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.771821121 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.657904104 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.83791032 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.768320445 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.768792692 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.771025693 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.76572607 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.789015489 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.769407517 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.753082656 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.823444648 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.888457176 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.895250776 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.766185822 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.833666088 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.860286398 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.765669718 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.76497136 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.766443451 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.766763242 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.846568545 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.767317887 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.891238603 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.765878257 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.773638466 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.767055656 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.817721004 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.834805159 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.769308572 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.627815618 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.770462326 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.766467683 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.039060176 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.833224555 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.768729421 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.767097551 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.893859774 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.890125301 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.477061332 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.770570664 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.536431994 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.906111822 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.771629455 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.767083137 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.913801747 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.770418764 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.849037646 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.772934504 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.769496408 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.800234767 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.768592477 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.825823866 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.76977117 seconds)
    (114/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.76866393 seconds)
  done (took 401.52277178 seconds)
done (took 778.353564264 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.371187505 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.343305627 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.439916097 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.364137785 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.333838821 seconds)
  done (took 13.549856744 seconds)
done (took 15.247551735 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.854749616 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.860831211 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.790052945 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.859075196 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.786427575 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.856681703 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.840430781 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.792210507 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.825674534 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.793637835 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.828328427 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.791586744 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.779679618 seconds)
  done (took 25.357156596 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.003780694 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.033563521 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.84075916 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.005813562 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.816101725 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.028762268 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.938824282 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.921159602 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.922560843 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.787409258 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.7822746 seconds)
  done (took 22.781743155 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.011280489 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.01375679 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.847075372 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.012963914 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.820623857 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.008259538 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.932833988 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.926197775 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.924774761 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.788042771 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.781912109 seconds)
  done (took 22.770780991 seconds)
done (took 72.609550348 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.779495245 seconds)
  done (took 3.479202779 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.807169283 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.968128113 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.783732937 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.787628392 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.778294293 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.77993636 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.788233134 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.777582027 seconds)
  done (took 16.172178829 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.777762538 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.773857169 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.778697917 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.776564972 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.77760102 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.777527118 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.777569753 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.778211049 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.776060249 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.774010463 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.775418063 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.775613878 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.774056848 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.774004713 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.777529477 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.774273391 seconds)
  done (took 30.119202438 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.776173237 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.773999104 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.775288884 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.775107295 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.774233392 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.774069665 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.775316563 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.774395391 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.77605873 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.77596333 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.7759322 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.775010531 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.775359617 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.775547262 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.775509838 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.775084387 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.774553812 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.775025506 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.778566106 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.775317218 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.775202392 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.774837238 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.776173928 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.776133867 seconds)
  done (took 44.311626197 seconds)
done (took 95.782403768 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.527885893 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.662239567 seconds)
  done (took 9.892004459 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.782567303 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.781296543 seconds)
  done (took 5.341292794 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.781242243 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.782881689 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.781914339 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.7812145 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.782077984 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.782288112 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.781358635 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.782310913 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.781814215 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.780348468 seconds)
  done (took 19.521389202 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.781087491 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.782001289 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.780335565 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.782259712 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.782422006 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.779422226 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.781723086 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.782595089 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.782268927 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.778773881 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.78197338 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.7796275 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.781913922 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.780607886 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.781844887 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.780031155 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.779728331 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.781555768 seconds)
  done (took 33.764514978 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.78478917 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.783809501 seconds)
  done (took 5.274028253 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.779490987 seconds)
    (2/7) benchmarking "second"...
    done (took 1.781095777 seconds)
    (3/7) benchmarking "month"...
    done (took 1.780350905 seconds)
    (4/7) benchmarking "year"...
    done (took 1.780290842 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.780088157 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.779524012 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.781003673 seconds)
  done (took 14.167620856 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.784231622 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.930583489 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.99320414 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.438926479 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.784846124 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.786376188 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.745579982 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.786860563 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.788617468 seconds)
  done (took 19.745106197 seconds)
done (took 109.408190092 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.648146309 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.779471479 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.001176281 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.844093887 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.828166599 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.119143908 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.807388477 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.064328506 seconds)
done (took 42.798141938 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.780498739 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.498298209 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.505937384 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.888588538 seconds)
  done (took 15.60175462 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.766116679 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.299503459 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.823479084 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.369800361 seconds)
  done (took 19.968862641 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.148970241 seconds)
    (2/2) benchmarking "read"...
    done (took 2.135087395 seconds)
  done (took 5.995694257 seconds)
done (took 50.054963938 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784691596 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.785394162 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.786439665 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.788246343 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.783675372 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.784997261 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.783094572 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.782213942 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.782710363 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.785622847 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.783184876 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.785392436 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.785278195 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.788166113 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787208338 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785890045 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785512719 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787541926 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.784068766 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784620377 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786254503 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787429284 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.78409778 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.784491299 seconds)
  done (took 44.554338121 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.786291142 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.784420521 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.787226159 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.786526798 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.78483873 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.786966584 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.787552279 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.783438907 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.787033077 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.78643277 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783737393 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.783817633 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.789182081 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.784507257 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787579529 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.785540851 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.787702744 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786284963 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787989533 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.785805978 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.787934597 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785339448 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.784934073 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.788351434 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.784462209 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.784232884 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.787279965 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.787256561 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789985794 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.785303643 seconds)
  done (took 55.296005026 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.793019935 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.794724222 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.787512905 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.789541109 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.788402573 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.787446379 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.787743435 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.789636843 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.787961498 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.788934427 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.787805443 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.788146484 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.788321163 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.788463673 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.790764028 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.789478626 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.788955271 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.789325621 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.789549648 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.788840302 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.789568511 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.789029193 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.789023576 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.789935989 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.790250082 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.789358258 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.790630181 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.789812579 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.789917217 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.789400815 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.790354813 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.790208952 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.789338507 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.789423686 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.789180805 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.789529201 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.793919021 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.79773306 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.79010405 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.790133269 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.79053812 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.791118468 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.79051152 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.790486229 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.78959183 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.789354663 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.789533031 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.791108653 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.792320367 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.790524283 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.792211955 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.79204459 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.790561359 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.793723345 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.791080643 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.790973152 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.790469651 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.79020393 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.791499482 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.792312247 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.790579634 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.790622725 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.790960938 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.791321298 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.792015228 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.792392299 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.79197165 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.790973973 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.791914133 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.792051229 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.792041664 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.791076383 seconds)
  done (took 130.622693462 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.790874059 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.788453583 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.789031129 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.789504618 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788718669 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.79194196 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.789837176 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792352006 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789320284 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.792015831 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79234283 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.78941548 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789473538 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.791328296 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791869777 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.789688725 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.792723796 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.790437997 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.793128415 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.792495626 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794368629 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.791432633 seconds)
  done (took 41.113988609 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792470513 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.792402445 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.791051096 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.793908435 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.79150214 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.793377433 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.794055006 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.794726474 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795131274 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791192672 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79067137 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794207193 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.791467984 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791481087 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791375678 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.789759298 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79333879 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.791423309 seconds)
  done (took 33.978542252 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.79273949 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.791851655 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.793886241 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.791549379 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.7922613 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.794713179 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792486004 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.794962929 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.79472035 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.791093102 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.793255492 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794708471 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.79424903 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79137577 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794373893 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.793471781 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.795829816 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793884283 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795294252 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792137087 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.792575665 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794451362 seconds)
  done (took 41.172597755 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795293565 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.794864805 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.793526103 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.79308961 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.793435518 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.796960018 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.796082019 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.792719507 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.795045589 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.794912031 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793591417 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.795716057 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.793310729 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.794473543 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.793304783 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.793805772 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.795862583 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.794947993 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795799857 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.793982699 seconds)
  done (took 37.609079098 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.79710513 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797323919 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.796720481 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796648473 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798310811 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.799968846 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800147843 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.800137482 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800384066 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.800481287 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.79973396 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.799854404 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800283568 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.799902898 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79864419 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799626962 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79898551 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79990668 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.800054741 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800919548 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.799446857 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.800456781 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800289053 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.800692792 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799989192 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.800330155 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800682307 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800628584 seconds)
  done (took 52.106699412 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800699692 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.79931322 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.797456491 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.797073602 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.797107874 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.797452128 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.796239159 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.796382524 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.798696506 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.796829186 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.798535194 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.79915758 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799936832 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.801482997 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.799627792 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.800515562 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80089947 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.798263171 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797444231 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798074234 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.799743447 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799589323 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.80044331 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.797597641 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796649032 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.801005304 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798204381 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.798805407 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800702948 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.798414372 seconds)
  done (took 55.685174793 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.819498579 seconds)
    (2/2) benchmarking "in"...
    done (took 1.818943593 seconds)
  done (took 5.360781571 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.797502614 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800420205 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.799822324 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.798722232 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.798622937 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.800431186 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.800811974 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799399455 seconds)
  done (took 16.118383048 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.801404544 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.801212135 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.801220752 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.802111932 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.802977629 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.801490736 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.807718397 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.801392581 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.802895928 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.802461383 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.807999953 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.809980388 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.805184092 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802881758 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.802835929 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803178147 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.802613625 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.804171231 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.803299669 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.803254943 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803534751 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803684634 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.803555478 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.79987359 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.803689657 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.813299623 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.806380587 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.803185581 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802807112 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.806382667 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.80351518 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.800276006 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.804553593 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.804816254 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.802686639 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.80623173 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.812645807 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803731812 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.809727511 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804898548 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.805145119 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.802431339 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.804534556 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.805875328 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805079033 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.805347387 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.803817431 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.800789722 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.803535416 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.806240325 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.807189241 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803321733 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.8016503 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.807511982 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.804883383 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.811126185 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.807058825 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.807515612 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.812211562 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.814390583 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.816696756 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.811212895 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805207689 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.805475802 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813740587 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.827491844 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812234876 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.803304847 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.802328559 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.805921877 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.813040235 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.818317191 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.814271479 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.806442558 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.806199377 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.805364587 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.805076059 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80523206 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.812319755 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.809661284 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.807143617 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.806504161 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816191383 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.826830177 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.80547772 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.806914774 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.806410359 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.806457519 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.806526618 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.816617611 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.807624387 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.807875578 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.806982594 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.80765024 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.8075023 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.808823224 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.806157904 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.807678071 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.804723193 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.806227058 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.808100671 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.811302251 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.81549824 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807344492 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.808186683 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.813447811 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.808594192 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808265331 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.81411752 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.808104789 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808375878 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.80804893 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.813322848 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.805097138 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.809748797 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.814602052 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.808133562 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.810972029 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.809557528 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.808289385 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.817775767 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.832415428 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.808689626 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.809520903 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.813812386 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.819574243 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809246725 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.810200099 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.80813261 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.806104592 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.806315754 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.809699948 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.809186454 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.80923454 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810478469 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.809412914 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.809852221 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.809321031 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.810381598 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.810725649 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.810352737 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.809330344 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.811137119 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.811212746 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.811639431 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.811382085 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.815904639 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.808908403 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.810385159 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.812889369 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.807971777 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.810452383 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.811999656 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.81241147 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.810828747 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.811839642 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.810986146 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.810877006 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.810037533 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.809359444 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80980551 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.811603983 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.815022839 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.811408337 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.814523065 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.810563883 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.80772651 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.811984242 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.810418669 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.81104937 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.810090872 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.809394893 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.81364027 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.818288014 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.811282217 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.811976126 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.814817234 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812227968 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812885989 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.812893558 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.814524719 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.817667753 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.812664707 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.818271999 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.811728239 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813241606 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.810386822 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.812701203 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.811681029 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814526452 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.814971784 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.819887263 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825037962 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.820729552 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.813709317 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.814963783 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.812762815 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.816022091 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.81629112 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.812925908 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.813432093 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814136791 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.812595827 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.814166195 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.81448215 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.815861294 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.811731778 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.812879889 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.814010087 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.813754987 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.813693786 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.813437868 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.814494027 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.812498318 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814219929 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815950873 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.814391809 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.814305946 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.814730851 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.815267297 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.814569287 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.816102642 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.820929778 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.812004228 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816485428 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81569621 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.816085407 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.814534 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.815585033 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818332525 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.816134437 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822798149 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.815787728 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.815842899 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.822231737 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.815526906 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.814220512 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.818977517 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.816812971 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.815067271 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.818688811 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.823085478 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.816540356 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.816790604 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.816774474 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.81635077 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.81563336 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.821410838 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.813355937 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.81596038 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.815599402 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.818833425 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.815111357 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.817698749 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.817627098 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.818751562 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.819514326 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.817791042 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.818242647 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.81901167 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.817218515 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.817779563 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.818249588 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81946374 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.826760729 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.823439134 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.81796978 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.819477575 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.819382068 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.821151752 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.818640967 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.818425737 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.817980628 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.829527894 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.826338506 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.82402905 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.818746138 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.819230563 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823362944 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.819212365 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.822116599 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.818853773 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81929103 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.819038825 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.818111637 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.815210315 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818435196 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.819068111 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.818945635 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.818934904 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.822873191 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.819016044 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.818433687 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.819729858 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.82057298 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.819842943 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.818582582 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.820138729 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.821070468 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.822274086 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.818286855 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.818260382 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825885569 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821093805 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.821716056 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.819120383 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.819771563 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.820059946 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.821454148 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.822024887 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.824197339 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.827586468 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.823594686 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.828122655 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.820712763 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.82852358 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.821134482 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.823966592 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.828646274 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.818374242 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.81900129 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.821290767 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.822014079 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.828181435 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.821584159 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.820617471 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.825678523 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.821463045 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.821659393 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.82128021 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.822031998 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.821362721 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.823967594 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.830015065 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.822376115 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.825328194 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.823745736 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.819887057 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.822924606 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.820588901 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.819880288 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.825221355 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.823015649 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.822924466 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.822145714 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.823065396 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.822019399 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.824212769 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.82325271 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.818286357 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.822307902 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.828769817 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.823413543 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827532691 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.822721038 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.82999638 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.824060731 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.829583323 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.824514153 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.824006605 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.82535599 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.822844752 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.824730076 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.823458501 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.823710555 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.824007256 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.824691785 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.826266647 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.825030667 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.826583249 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.824724847 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.825251113 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.823766514 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.832680184 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.847826369 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.825601741 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.828812825 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.82333251 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.825016078 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.830074458 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.825068203 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.822797026 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.826562687 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.832883771 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.830562308 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.824058249 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.824397996 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.826461235 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826611954 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.824210507 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.825491358 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.825967445 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.825694931 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.825798654 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.825768097 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.827553121 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.824019598 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.825102287 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.825801859 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.824862551 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.834961442 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.826714657 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.826170816 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.827496308 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.825021633 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.826055494 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.825769379 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.826411828 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.825808792 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.825897063 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.826466038 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.831077191 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.831286069 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.828271064 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.826056779 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.826168796 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.827139158 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.825885964 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828552402 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.828139595 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827326862 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.826827149 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.827187753 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.827303357 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.825242334 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.825809753 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.827774119 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.828278191 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828936798 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.834279263 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829050019 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.824778949 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.826876076 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82699844 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.825032702 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.827332796 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.835312347 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829007644 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.836852718 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.834115056 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.831892719 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.828899859 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.830784248 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.835079641 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.827387809 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.828348915 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.828929212 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.829735982 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.829964814 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.830731662 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.82944451 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.834627294 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.827723337 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.827798906 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.835648593 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.828503012 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.829037394 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.829154787 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.831464088 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.827652648 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.826223547 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.828643362 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.827993062 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836802803 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.830805859 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.830866731 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.830344435 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.8266263 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.829324138 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.834217017 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828474982 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.830743022 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.826667377 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.830758863 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.830874195 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.829778904 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.827569554 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.829417151 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.829258314 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.832642122 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.836220388 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.826977739 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.831349687 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.82997661 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.830986616 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.832692424 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.831389188 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.830216167 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.827865471 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.829786525 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.832987745 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.831182857 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.832747384 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.829535264 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.830154436 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.830704052 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.83290029 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.833529933 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.840500275 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.83748685 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.827449872 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.831004493 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.831119834 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.832210359 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.832968942 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.831800399 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.831534135 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.83173261 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.83099201 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.832022018 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.831572724 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.83385664 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.848201052 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.831113358 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.832614819 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.831909535 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836106224 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.83189943 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.828926192 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.830495148 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.833101644 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.833893717 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.839474377 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.834759428 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.839201976 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.833211507 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.833079676 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.836574373 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.835906455 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.840889198 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.835356732 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.833043587 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.832299018 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.836569762 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.848018992 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.833655079 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843355721 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.860783236 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.834852159 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.834473944 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.837006077 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.833083337 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.835745046 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.835039326 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.834629315 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.833051235 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.832092129 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.834693125 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.834535454 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.839877282 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.835623032 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.834120045 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.832483659 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.835181693 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.83526796 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.831381442 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.835461571 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.832914736 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.833906245 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.834366924 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.835084968 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.835364474 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.847844783 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.84482279 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.834276379 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.835563987 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.831130708 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.838012902 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.83786186 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843790058 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.841431828 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.835289886 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.836689581 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.835551126 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.835894011 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.831935771 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.836337527 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.834766073 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.834978012 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.832967002 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.848341248 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.843150909 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.838767802 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.836052973 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836401078 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.835318302 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836568249 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.83638289 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.837117854 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.838359281 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.836670111 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.840348308 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.836029323 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.835579548 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.838601788 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.841937877 seconds)
  done (took 1087.031263492 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.832684267 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833451375 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.832715335 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.833212771 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833758808 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.833266552 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833835082 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.833627552 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.83387896 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.834612959 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.834670057 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834298969 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.833709109 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.836023875 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.834306238 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.835127581 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834425682 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.833582439 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.835010702 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.833709676 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.833466105 seconds)
  done (took 40.268288021 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.836059916 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.835270874 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.835483666 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.83754073 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.834132127 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.837575361 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.834270655 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83659159 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.837667097 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835005674 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.83723525 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837331228 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.833713678 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.835387877 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834421513 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.839088202 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.838876324 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.835938224 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.83880767 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.836686942 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839253152 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.836334559 seconds)
  done (took 42.160107363 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.839559853 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.842056878 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.838006415 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.836589866 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.838727125 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.836716817 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.840832329 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.84045975 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.839986829 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.839198869 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.838505332 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.840110619 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.846341399 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.843652818 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.839950767 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.838545461 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.982818262 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.840829505 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.842017238 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.840157542 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.836889587 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.846474901 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.837360585 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.838081663 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.83999432 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.839740576 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.838920675 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.838791813 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.840979535 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.840438663 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.845268012 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.839453882 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.840101741 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.842257258 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.840753088 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.841781758 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.843682283 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.841479729 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.839095045 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.84100147 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.851051566 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.859814469 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.841483455 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.847137117 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.839956633 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.839973594 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.844108552 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.848515842 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.83902257 seconds)
  done (took 92.128580142 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.841228853 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.841376931 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.838527909 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.841447149 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.842054826 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.842567634 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.841834217 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.841626253 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.83887703 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.838709043 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.841868072 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.840172429 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.839144602 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.842936225 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.842137168 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.839239077 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.839999066 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.839231204 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.838765728 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.838882993 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.839433228 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.842285009 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.841723736 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.840206481 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.841953724 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.839794033 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.840287575 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.843632734 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.84042325 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.840318749 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.842175819 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843273899 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.844284663 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.841275748 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.841092212 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.843466182 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.842807258 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.840718123 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.842950743 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.840606275 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.843539104 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.843260207 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.843773798 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.843558614 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.840309228 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.840915858 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.840541801 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.841669157 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.840714674 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.844414563 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.843521663 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.841929905 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.843750551 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.842339928 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.844804087 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.845211162 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.840804002 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.84174466 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.844382068 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.842442425 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.841099816 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.845678978 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.84217979 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.84399961 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.844977436 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.843599075 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.843189496 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.844968309 seconds)
  done (took 127.010296234 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845500665 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.84628555 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846825404 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846779188 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845796982 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.847183017 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.846453941 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.847505713 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.846358029 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.846667986 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.846598054 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.84512976 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.846853895 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.845622966 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.84642829 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.847184136 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.847609701 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.84727328 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.847553007 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847158304 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.848212412 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.848263178 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.848528298 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.847982863 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.848305933 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.847583704 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.84662544 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.847455005 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847110202 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.847386826 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.848754302 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.847879946 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.848740426 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.848399038 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.848192386 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.848434478 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.848712132 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.848815934 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.848678971 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.848201738 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.849730236 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.84866462 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.849512074 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.84820631 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.848381422 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.848926372 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.848489248 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.849327043 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.84794709 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.850184088 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.850498801 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.848850706 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.850779445 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.849274229 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.850446388 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.848774313 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.850251574 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.849840083 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.848636286 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.849198578 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.849590853 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.849639198 seconds)
  done (took 116.346493897 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.84811384 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.849364354 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.845605496 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.846076981 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.84855856 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.845800958 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.847707961 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.848400085 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.849079312 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.848001346 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84825315 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84642505 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847527325 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849134556 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.846903744 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848218573 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847182104 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.84730356 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.84986985 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.847138044 seconds)
  done (took 38.72293203 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.848524696 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.849341027 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.84657753 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.847765463 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.849335599 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.84773896 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.8496886 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849170205 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847419447 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850243588 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.851811124 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.850942407 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84837352 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.847987672 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.850379085 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.847356858 seconds)
  done (took 31.351901177 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.847813537 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.849871725 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.851100834 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.851695352 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.848811959 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.848219366 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.850649848 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.848253678 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.848443665 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.851569653 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.85160534 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.851927566 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.85054417 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.850854239 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.848039814 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.84991653 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.849374034 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.84940013 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.851161316 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.852521673 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.850420121 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.849250766 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.852472358 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.851832827 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.849157179 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.848476468 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.84891422 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.849500059 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.849453098 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.852172585 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.85055226 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.85080598 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.849680311 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.850109531 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.853640658 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.850257258 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.852869256 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.851382539 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.851400657 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.85291322 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.852715892 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.85017782 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.852792028 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.852453073 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.849853154 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.853463727 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.850867773 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.85088921 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.849491345 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.850789203 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.851730179 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.853298569 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.852634048 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.853359379 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.853777062 seconds)
  done (took 103.566274624 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.854249217 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.854774321 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.851618145 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.854190637 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.854895671 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.851027071 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.853561725 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.850916875 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.851626922 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.852087912 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.852385989 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.854720646 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852018531 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.854783922 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.852263747 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.854652001 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.851675588 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.852194428 seconds)
  done (took 35.128223053 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.851647655 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.852036303 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.854124402 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.851506241 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.851435666 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.854895699 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.853474036 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.85399481 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855183645 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.85330076 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853553737 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.854627233 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855414985 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.856055664 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.851950675 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852578407 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.855311196 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.855161362 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.851838045 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.852786989 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.855686033 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.855846094 seconds)
  done (took 42.556796609 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.854328885 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.854763646 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.871171241 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.876059408 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.877310509 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.889633985 seconds)
  done (took 12.998548786 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853771914 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856915277 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853693977 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856949026 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857450128 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855149676 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85541387 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85509622 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856953797 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854690752 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854185326 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856525045 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856457687 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853695425 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857273178 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856706438 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856587995 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856422909 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854482491 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858032632 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855161952 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857461166 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854554744 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856272215 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854157854 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854747644 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858603223 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855462646 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85689125 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858181402 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858432255 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855856678 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857951286 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855866204 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858938535 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856690376 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854928066 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858228288 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857834139 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857404538 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.859687188 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85930004 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859731863 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856554524 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859819169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856422022 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856695672 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857013628 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85628356 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857538617 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859175669 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855939073 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859333018 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859508591 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85945465 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860325131 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857871965 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857403589 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859401339 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856566592 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856485277 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85960501 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857928102 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857454946 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860381945 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858179104 seconds)
  done (took 124.341110932 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858510586 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.857076752 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858062075 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858320692 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857616488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857488989 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856588849 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85669344 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856787449 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857428687 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859727621 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857958902 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857897473 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857807044 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858967505 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858654287 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859230455 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859205101 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857380002 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861118042 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85862907 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857586423 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858100449 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857995811 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858738746 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860440403 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859176262 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858425247 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859414147 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858189427 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859240898 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858920378 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859318294 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.857896535 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858532987 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858935497 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85807383 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858146693 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859177134 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8620388 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859516608 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862701854 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860647248 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860411023 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860877565 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859750424 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859918637 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860175799 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858833645 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859987106 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859879638 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861512637 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861611759 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860755313 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8603068 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86017179 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860327641 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860578942 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861458184 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86247775 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860240895 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860093714 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862464452 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86026833 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861228366 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861705673 seconds)
  done (took 124.499668642 seconds)
done (took 2533.441367205 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.857117224 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.859337185 seconds)
  done (took 15.498451215 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.027749338 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.977301307 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.86227245 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.91165443 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.861670256 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.883557179 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.880053831 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.863783593 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.863388162 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.862457715 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.862339059 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.048134277 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.918454062 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.862386988 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.862612464 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.955647043 seconds)
  done (took 52.288294222 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.866606454 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.867065102 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.878237874 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.868824931 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.867349189 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.879490477 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.900381391 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.869492911 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.89959825 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.880265662 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.935198276 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.878146645 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.865616425 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.916832056 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.881356747 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.881228425 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.962386082 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.941909788 seconds)
  done (took 35.82360022 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.943719301 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.871831082 seconds)
  done (took 10.605883095 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.877619154 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.859962389 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.868257235 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.872047337 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.892199612 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.868392317 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.898876385 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.904155771 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.869294854 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.869284669 seconds)
  done (took 70.568472704 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.872254598 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.868222128 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.867827768 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.866806012 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.860751757 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.862845403 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.866248294 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.862273233 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.526837808 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.902633323 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.873512832 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.871474669 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.866427396 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.868406587 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.865185418 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.891067373 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.979184939 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.863872598 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.863833764 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.872533948 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.867089972 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.931337167 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.882133153 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.869751616 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.896302703 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.525847274 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.877558621 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.874798706 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.968821838 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.865896257 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.867326378 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.868087889 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.870776042 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.278332328 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.13616972 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.868227372 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.883825919 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.875439927 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.865782215 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.005477546 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.869024904 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.873231066 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.607664692 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.114364013 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.975292599 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.913774365 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.179055344 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.886602598 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.870487265 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.898009912 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.871292773 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.869343486 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.881829187 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.363142544 seconds)
  done (took 132.215938544 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.866253229 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.215035466 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.033999836 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.866599196 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.152716263 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073178544 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.866876082 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.914874862 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.867388699 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.099521916 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.125148788 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.973168907 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.866145132 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.865987521 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.86613889 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.863844964 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.024349421 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.939707044 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.866119246 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.864389278 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897124083 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110435239 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.991419202 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.867906368 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.89624013 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.080339538 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.991594259 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.974059758 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.654788467 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.864788751 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.931460507 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.868328053 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.867627973 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.86467486 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.024656015 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.964801818 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956448201 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.868905759 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.864476624 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.865162134 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.537133505 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069465988 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.964502785 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.010718688 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.067800252 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.073935542 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.651265881 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.865059843 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.609616165 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.032256176 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.098222405 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.104108535 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.992954777 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.869943737 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.397097994 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866356348 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.865699894 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.119339756 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011924139 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.967594328 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.867902909 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.86788541 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.867258566 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.114679574 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.871949352 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.965851532 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869735759 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.866906844 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.966639763 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.969604026 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.009345763 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08322703 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.90063498 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.817323051 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.408090797 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.117802561 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.935941459 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.120987313 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.869713414 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.867249978 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950346989 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.709781521 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.123183376 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118702691 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.122648269 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.905977362 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.596272269 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.868056942 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.099682508 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.091938664 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.132162671 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.076706618 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.111156862 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.196562937 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.868658911 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.868364281 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.092212387 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.006904408 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.871344234 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.21790018 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10418657 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.416364655 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.891490277 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.176664098 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002184544 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.870795968 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.51178214 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.86895952 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.101096261 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.912415568 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.870840164 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.869242248 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.093110096 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.861908499 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.869325103 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.510514785 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.934822803 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.872014131 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.105218726 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.873426322 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.142123202 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.87218769 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109497773 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.893880284 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.904561007 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.102808145 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.075844927 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.873311393 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.117556261 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.118731424 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.989345824 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.095417193 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.566012439 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.869237895 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.161827996 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.873530693 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.869741484 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.043602083 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.873025144 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.019697967 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.875268224 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.166857404 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.895900422 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.10653162 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.874852818 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.137699282 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.907803437 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.924477623 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.873525896 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00510633 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873879399 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.797770844 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.030748493 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875336716 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.869821862 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.664195568 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.874049504 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.023453417 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.10751934 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.895910407 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.946551409 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.542794775 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.871179441 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955171303 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.898849393 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.265849514 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.872799816 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.126002069 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.874274042 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.872066152 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.872173069 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.113924435 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.057101465 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.873436116 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.872192049 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.7811816 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.871383263 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.87235146 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.057416929 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.333952197 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.871659147 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077256677 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87541166 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002472167 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.876173419 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.949569993 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.216330719 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.873366562 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.874223259 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.871802561 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.871351508 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.875684978 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.138611136 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.902997584 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.400720344 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.01344808 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.150200342 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.188285157 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.124781326 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.920316338 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.876035683 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.130415654 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.876736065 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.938795209 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.876107772 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.89687523 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10741125 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.875896063 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.085150298 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.154296892 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.734498306 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.924342252 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.876153648 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875268681 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.872961097 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.021205365 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.964808328 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.877237497 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.873912674 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.991471622 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.997700571 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.087094781 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.875773944 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.948827983 seconds)
  done (took 903.790413684 seconds)
done (took 1222.575333347 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.873584747 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.875257457 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.864417768 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.87642068 seconds)
  done (took 29.288515319 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.883753475 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.88020765 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.881931712 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.88040425 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.881690062 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.879659533 seconds)
  done (took 13.086779093 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.355406505 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.875113515 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.877992534 seconds)
  done (took 21.907881948 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.950013355 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.264466734 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.984977223 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.301733043 seconds)
  done (took 10.301426453 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.882763436 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.88149852 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.881971812 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.882676295 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.885098302 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.88603475 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.882303793 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.883406056 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.886402195 seconds)
  done (took 18.7534475 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.855520174 seconds)
done (took 98.99381798 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.186894052 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.219483602 seconds)
    (3/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.247097254 seconds)
    (4/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.441406303 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.94964819 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.194702376 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.984834412 seconds)
    (8/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.980903088 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.372659682 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.883492969 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.615638563 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.088522076 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.918314733 seconds)
    (14/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.840943865 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.897195057 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.876171991 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.413596213 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.881639307 seconds)
    (19/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.051623157 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.04869599 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.876238476 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.902093733 seconds)
    (23/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.883741329 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.056032794 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.034089179 seconds)
    (26/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.13787496 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.23736249 seconds)
    (28/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.944646213 seconds)
    (29/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.454108883 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.256376387 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.129281211 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.012776925 seconds)
    (33/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.044893391 seconds)
    (34/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.028805131 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.039617474 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.895946457 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.183070568 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.984150664 seconds)
    (39/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.178201793 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.175734564 seconds)
    (41/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.078401509 seconds)
    (42/309) benchmarking ("sort", Float32, false)...
    done (took 5.570573954 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 2.097071243 seconds)
    (44/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.10535498 seconds)
    (45/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.873382513 seconds)
    (46/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 3.655519112 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.178193737 seconds)
    (48/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.872262672 seconds)
    (49/309) benchmarking ("sort", Int64, false)...
    done (took 5.683650799 seconds)
    (50/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.301781997 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.871359674 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.220252127 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.963143495 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.138459336 seconds)
    (55/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.04271043 seconds)
    (56/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.900706306 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.862927033 seconds)
    (58/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.40028096 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.882652416 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.11950161 seconds)
    (61/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.389896653 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.963527117 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.970419034 seconds)
    (64/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.192896576 seconds)
    (65/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.010112454 seconds)
    (66/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.114310682 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.571552657 seconds)
    (68/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.899368408 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.806471892 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.999331067 seconds)
    (71/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.897449957 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.082814154 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.692570923 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.168799121 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.902906884 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.267185833 seconds)
    (77/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.114559616 seconds)
    (78/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.871002747 seconds)
    (79/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.591443608 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.854383968 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.920175685 seconds)
    (82/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.906644385 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.97169388 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.880926312 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 3.657942588 seconds)
    (86/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.973853119 seconds)
    (87/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.946599891 seconds)
    (88/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.986559811 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.168787471 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.91117752 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.973394355 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.90197351 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.895722402 seconds)
    (94/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.957619142 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.531098716 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.407887888 seconds)
    (97/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.868304063 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.329147157 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.58323912 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.876038268 seconds)
    (101/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.97877601 seconds)
    (102/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.881893059 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.348029761 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.159406334 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.886455353 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.959012549 seconds)
    (107/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.880484966 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.179983235 seconds)
    (109/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.909018371 seconds)
    (110/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.967462857 seconds)
    (111/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.015607791 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.715025318 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.154363544 seconds)
    (114/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.178908608 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.060086402 seconds)
    (116/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.077399168 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.888245105 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.866611145 seconds)
    (119/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.152556134 seconds)
    (120/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.96261791 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.990744789 seconds)
    (122/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.914029794 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.877736068 seconds)
    (124/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.944517642 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.130167995 seconds)
    (126/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.07612553 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.130330194 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.884025834 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.874590961 seconds)
    (130/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.088498375 seconds)
    (131/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.79812953 seconds)
    (132/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.96027667 seconds)
    (133/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.897413215 seconds)
    (134/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.774082755 seconds)
    (135/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.947318215 seconds)
    (136/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.348793131 seconds)
    (137/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.936877177 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.531026348 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.231386622 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.186438974 seconds)
    (141/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.969195788 seconds)
    (142/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.993130366 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.880126785 seconds)
    (144/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.972343335 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.881695702 seconds)
    (146/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.960710165 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.214064437 seconds)
    (148/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.889844773 seconds)
    (149/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.888434353 seconds)
    (150/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.966825149 seconds)
    (151/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.185395889 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.028136975 seconds)
    (153/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.972979175 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.051388333 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.974041815 seconds)
    (156/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.046237898 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.019556673 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.946226862 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.944875716 seconds)
    (160/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.10355918 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.866849902 seconds)
    (162/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.9927079 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.178314786 seconds)
    (164/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.931359728 seconds)
    (165/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.091806657 seconds)
    (166/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.97484277 seconds)
    (167/309) benchmarking ("sort", BigInt, false)...
    done (took 6.862389219 seconds)
    (168/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.8460748 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.158031588 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.948161994 seconds)
    (171/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.276540844 seconds)
    (172/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.896311785 seconds)
    (173/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.999293606 seconds)
    (174/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.228420867 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.858731858 seconds)
    (176/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 3.336222611 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.799994939 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.921321086 seconds)
    (179/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.872259845 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.679331815 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.853061381 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.97069873 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.830776076 seconds)
    (184/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.579217606 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.832255718 seconds)
    (186/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.035080105 seconds)
    (187/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.172567366 seconds)
    (188/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.002642133 seconds)
    (189/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.01626328 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.864387011 seconds)
    (191/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.021853006 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.826722641 seconds)
    (193/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.364098042 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.023898178 seconds)
    (195/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.113837498 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.312988416 seconds)
    (197/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.833551354 seconds)
    (198/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 5.077630483 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.235156378 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.912910404 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.553445629 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.006984048 seconds)
    (203/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.644829027 seconds)
    (204/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.328496759 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.877188172 seconds)
    (206/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.922276319 seconds)
    (207/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.975845932 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.01341563 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.832711522 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.084869857 seconds)
    (211/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.092752218 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.939075496 seconds)
    (213/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.404197881 seconds)
    (214/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.270721871 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.068963569 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.683225149 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.718819162 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.758515973 seconds)
    (219/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.364602472 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.691338898 seconds)
    (221/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.086017157 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.938961225 seconds)
    (223/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.230209143 seconds)
    (224/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.274931755 seconds)
    (225/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.871434953 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.10849497 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.086784255 seconds)
    (228/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.915198884 seconds)
    (229/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.977236269 seconds)
    (230/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.935826416 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.000572543 seconds)
    (232/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.132387465 seconds)
    (233/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.266940866 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.312321981 seconds)
    (235/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.982655995 seconds)
    (236/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.185840666 seconds)
    (237/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.291859468 seconds)
    (238/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.857096399 seconds)
    (239/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.333771577 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.954210905 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.702426385 seconds)
    (242/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.924140519 seconds)
    (243/309) benchmarking ("sort", Int8, false)...
    done (took 4.750512421 seconds)
    (244/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.83191549 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.030967862 seconds)
    (246/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.990695562 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.020665273 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.838452695 seconds)
    (249/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.584786745 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.993444044 seconds)
    (251/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.854945234 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.954821631 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.86152731 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.495586162 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.185729734 seconds)
    (256/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.957140739 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.843401867 seconds)
    (258/309) benchmarking ("sort", Float64, false)...
    done (took 6.263941451 seconds)
    (259/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.946671657 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.101600357 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.164715341 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.699688238 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.009375693 seconds)
    (264/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.934678773 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.550649509 seconds)
    (266/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.891266066 seconds)
    (267/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.249579115 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.882036266 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.201895964 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.837280765 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.895890916 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.860651584 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.026645387 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.859441524 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.969767496 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.895921775 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.214541748 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.006674624 seconds)
    (279/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.871119477 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.221697213 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.870527236 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.948023475 seconds)
    (283/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.95541784 seconds)
    (284/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.858519135 seconds)
    (285/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.207304742 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.026426912 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.867808771 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.883142571 seconds)
    (289/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.996420318 seconds)
    (290/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.276758558 seconds)
    (291/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.89567991 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.272467784 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.856237571 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.092578052 seconds)
    (295/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.308918887 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.871123999 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.232283578 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.908706274 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.931850464 seconds)
    (300/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.006246091 seconds)
    (301/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.168622396 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.891183536 seconds)
    (303/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.88131541 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.809103405 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.188447149 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.102289962 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.815040437 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.88469286 seconds)
    (309/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.809300956 seconds)
  done (took 1007.605156023 seconds)
done (took 1009.466110882 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.898516032 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889692707 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.868345731 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.888197044 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.977986702 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.894078477 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.87808425 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.870310297 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.913548397 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.915863037 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.864023896 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.890569654 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.868742439 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.866915692 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.86380235 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.880387193 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.182951773 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.900785181 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.880451974 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.873503941 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.88104241 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.861152031 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.916138039 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.887812486 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.865338764 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.865751685 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.86449192 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.879967171 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.976241428 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.862096129 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.862465077 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.873428897 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.175471183 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.892941239 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.854187502 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.876453719 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.868389746 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.866022775 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.861468389 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.886751887 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.257289826 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.897926487 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.85638408 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.855960491 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.856469478 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.860153227 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.856108216 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.862281295 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.869483701 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.869830444 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.249087131 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.915292768 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.857378508 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.856173635 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.867484575 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.856050063 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.860182253 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.872130731 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.875402919 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.873648083 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.152455736 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.891109778 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.856397262 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.870223713 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.864156385 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.280895372 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.891375118 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.857649635 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.253029149 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.904052146 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.280278734 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.905313582 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.85300981 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.864590884 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.884412938 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.161060205 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.875500357 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.849600726 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.856655658 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.844973516 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.857162175 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858139129 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.84972022 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.846283458 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.859100124 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.871720406 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.852588226 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.843310299 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.850795086 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.860948227 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.851357852 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.850862473 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.843240771 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.834690639 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.850291229 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.842985199 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.843783875 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.841451844 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.845128426 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.850112588 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.238264324 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.901679938 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.835804478 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.835377686 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.838692951 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.853861546 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.23594482 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.883917969 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.862411614 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.885837035 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.842300468 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.138575374 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.872314728 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.859482903 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.847153396 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.843948815 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.833174472 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.13878961 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.265622125 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.899413757 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.839446497 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.837716951 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.855684325 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.843058256 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.839249013 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.15893966 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.878328045 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.854352052 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.960305736 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.850780202 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.874654143 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.838520342 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.84423401 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.871161719 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.855286634 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.875077255 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.842098521 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.85691112 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.856203665 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.83622777 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.852503384 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.850656423 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.843355367 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.846192512 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.836280986 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.869496532 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.85399428 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.852306827 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.860981952 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.962702945 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.840270288 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.138162847 seconds)
done (took 291.060793472 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.913359968 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.835731259 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.941709782 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.842300953 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.924000677 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.928800443 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.839885286 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.839489609 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.837233757 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.218355216 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.836999669 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.838040254 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.841574698 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.83814427 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.921202523 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.841580081 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.838375938 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.1822937 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.843693846 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.913607117 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.841732291 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.837216042 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.842017145 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.221632941 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.836547795 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.843333298 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.911722141 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.841364528 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.182493934 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.84313674 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.844075682 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.183565578 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.932177215 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.861539789 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.850754723 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.851205431 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.926372962 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.847895343 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.923257862 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.922371409 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.944087241 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.883299751 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.838836126 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.840080002 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.846990274 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.84415932 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.842518784 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.870278463 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.837858418 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.840977568 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.182777288 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.851553147 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.852707912 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.841019279 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.840294998 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.866004625 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.841683223 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.84469616 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.933209309 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.84493671 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.904748916 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.219017604 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.220223294 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.843475493 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.836132898 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.844044548 seconds)
  done (took 182.47495361 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.908678934 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.918676111 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.908258427 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.846982859 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.894526399 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.911322032 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.848713559 seconds)
  done (took 15.000893692 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.850974168 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.8475461 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.895763836 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.897048966 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.845937745 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.991884696 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.843877552 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.854494881 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.842744532 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.895938221 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.844406656 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.844061052 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.852418478 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.843432495 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.894050122 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.856495843 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.962074326 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.849112602 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.848012572 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.996997484 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.843710252 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.851489273 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.8992091 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.858685638 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.84919608 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.854382409 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.431578224 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.846134393 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843390164 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.844048677 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.843395824 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.887119599 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.845265257 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.840778827 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843132323 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.961821059 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.846816693 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843710969 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.84520867 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.844049539 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.845506007 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.844148926 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.845904047 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.842860122 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.847417839 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.870881033 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.846022288 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.846297711 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.844933414 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.847413155 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.897456718 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.84674101 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.842506875 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.843505202 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.901459717 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852297769 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.849095089 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.844475231 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.848021683 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.844072312 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.997084929 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.896487907 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.847599372 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.897909131 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.848232199 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.846452295 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.849705683 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.845884741 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.942548802 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.846351159 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.897139687 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.843907563 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.005421026 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.870568426 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.84789103 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.850283752 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.849773033 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.849418812 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.849294952 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.853289589 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.845232209 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.849003792 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.851837572 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.844354253 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.844577875 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.957958287 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.954573883 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.84334083 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.855694361 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.85057701 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.840555278 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.896077324 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.847486646 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.839310922 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.900830011 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.959591785 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.901967016 seconds)
  done (took 203.514158826 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.843843627 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.848988302 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.842221662 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.854080178 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.834298195 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.833288685 seconds)
  done (took 12.819987927 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.833352362 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.830317945 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.830469678 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.834364897 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.829777332 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.832758423 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.832011834 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.832396345 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.835452708 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.82970996 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.832464094 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.829829461 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.831349094 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.830045297 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.831257092 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.832708883 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.83419373 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.827950347 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.832343651 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.830389526 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.996293419 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.835057706 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.838652671 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.837308844 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.844782009 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.827374034 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.836819003 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.830440125 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.830025793 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.841652309 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.838812542 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.825099038 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.83269836 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.829720466 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.835507194 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.831431399 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.826433194 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.827442667 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.823671529 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.83230581 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.829313886 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.829502794 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.825499111 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.822296646 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.824146727 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.826324245 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.829857477 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.816198722 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.809476709 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.808728345 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.809983676 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.807489255 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.81071595 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.814988098 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.810934857 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.813043721 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.816039868 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.816546593 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.815626476 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.818383182 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.811211029 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.813409936 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.813963115 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.824053891 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.807209668 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.816144353 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.816156456 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.8222909 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.814053676 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.813285833 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.815616774 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.81157532 seconds)
  done (took 134.332506515 seconds)
done (took 549.92136763 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.958324701 seconds)
  done (took 8.671953072 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.863911436 seconds)
  done (took 8.665640065 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.402512117 seconds)
  done (took 10.173542186 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.867010311 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.886167514 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.857673836 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.841643474 seconds)
  done (took 29.239561151 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.909848563 seconds)
  done (took 8.671903003 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.861628693 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.839042005 seconds)
  done (took 15.49742955 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.003896796 seconds)
  done (took 8.769847062 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.337807716 seconds)
  done (took 9.118987715 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.86546832 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.877586904 seconds)
  done (took 15.511627527 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.823201052 seconds)
  done (took 8.583788464 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.398961086 seconds)
  done (took 11.248868896 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.863698373 seconds)
  done (took 8.729230489 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.864722341 seconds)
  done (took 8.626952247 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.952369518 seconds)
  done (took 8.715478504 seconds)
done (took 161.950527003 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.841869964 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.84255105 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.839365468 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.832294591 seconds)
  done (took 29.107740921 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.866740995 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.865603927 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.86889041 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.877015959 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.869703742 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.8686015 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.856343695 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.856981864 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.873266958 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.866147888 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.865702394 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.865170487 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.86263964 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.856379334 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.867527027 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.865679999 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.874669643 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.864815815 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.856723951 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.866769231 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.830810377 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.8743482 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.866326733 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.830135498 seconds)
  done (took 46.475381514 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.026954717 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.901106432 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.984237158 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.882890066 seconds)
  done (took 9.543649093 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.883025937 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.883743435 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.895050405 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.935156412 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.969406563 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.89428851 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.856510257 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.852766265 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.838424958 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.88518128 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.959985929 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.87901827 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.96905966 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.831840236 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.039018884 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.831642937 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.830625 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.883559168 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.934678633 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.948077363 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.83177744 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.883938963 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.887053314 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.881147882 seconds)
  done (took 47.234835789 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.829726123 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.839068409 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.837310874 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.830857697 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.830622988 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.830680922 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.837239182 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.833160422 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.853295584 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.834045168 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.83242081 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.831612526 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.831676875 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.831971024 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.831728978 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.844198853 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.845859697 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.831507646 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.837611145 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.838271316 seconds)
  done (took 38.463579981 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.827657681 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.680279836 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.17883884 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.081996549 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.827950526 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.827304621 seconds)
  done (took 31.176090665 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.847766189 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.839285925 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.832430822 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.891860488 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.977496444 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.841297098 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.832933173 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.846605066 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.882274959 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.899305933 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.859529572 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.863858212 seconds)
  done (took 24.165558192 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.831351975 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.840757793 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.831001139 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.856549334 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.844892665 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.842706942 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.840781423 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.827550499 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.84763553 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.854534389 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.842877578 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.847133172 seconds)
  done (took 43.86418984 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917774157 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.716683714 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.489838722 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549282522 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.364211792 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040217139 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.357309752 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001693492 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.83216364 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102684705 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.394440397 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073363887 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.082723925 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83084651 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901295286 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.306577702 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125831664 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063890085 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860555897 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513074526 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030173687 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.515018897 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.673532439 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.035931188 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11647104 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.035746062 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.170334184 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.867835991 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041914219 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94182264 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917087869 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907613871 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182591004 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124059638 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037863444 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918276795 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562260908 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.624689853 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.903542263 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.777885485 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.54023621 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.042034429 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91437982 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914016855 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843429006 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.510125734 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088227547 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.911389873 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.611181144 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.912432962 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922131199 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002035974 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.915913775 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.718225213 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862320262 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.191583805 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.910580639 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915494297 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.482444991 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.99868622 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.621521673 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.851644441 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.008771908 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.606529358 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394361233 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.071185967 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.918608153 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922967848 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851211668 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.650590886 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047365503 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.064730787 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.941370737 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573208671 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215724691 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.576508834 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.006751184 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225953099 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.79999287 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.854499408 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149511023 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.879304978 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857477555 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.779178354 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.85711435 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200906496 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958268551 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.573165087 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969367856 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094409178 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.932919586 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944283378 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933162584 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.146085195 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.801531461 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920091685 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.436237114 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204620689 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948989811 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.095267243 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853531958 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.924425707 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176820032 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.1336144 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.255202669 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.406907786 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083225563 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92679422 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.009349266 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.941551808 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.937199844 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.202301156 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995980142 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.005826261 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056896709 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.875833281 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24795569 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9583163 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.100589454 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.513155659 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18834599 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.263101111 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.177888558 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01381698 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.931454627 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.930588706 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.721785346 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.554467328 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.15003464 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.929031073 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.500922956 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935710538 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.929441873 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864606197 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.590923261 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.521237507 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.033543154 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154334601 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.839504952 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.343131916 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86217431 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071012103 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.033345594 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.147311087 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.579080826 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.008440222 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186962504 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415554896 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.246627984 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068488185 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94474624 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048311291 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951719685 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.332203812 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.299760825 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.928256252 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.930621886 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.674658562 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.999535943 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933200781 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.937980025 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.723658864 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221810647 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.959334567 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.930687562 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.866972899 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.940252078 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01352212 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932855174 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.936349234 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.454639102 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.685817921 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.94669621 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.617239507 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17166922 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940829552 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.671612084 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12040434 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.00900131 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.213059712 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000263456 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.867798056 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.63537993 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.636125073 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930372763 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866578174 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.93585181 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945013626 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945523549 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.154424248 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.211535148 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.981260154 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.623119302 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.050955401 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938624866 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.934133839 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937171763 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.433127769 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.027690084 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.561367844 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.058182036 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065274861 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.944962849 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.86566933 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.935443023 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933140905 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.933610275 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.895102907 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983498942 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.621412293 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265355824 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190268046 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.57826071 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951057913 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.693762958 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.06110705 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.957357374 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.475786857 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976464149 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.041896099 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009825991 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.943017478 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.673718356 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.701357255 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.503727612 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241317975 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.266798808 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385004885 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.401506245 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.270932084 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.107008334 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167919911 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.468745219 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.998946748 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113002675 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878897466 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019009267 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.583206556 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289444617 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952406665 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162377756 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322182832 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.530110887 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100156899 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150515803 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97176956 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.837647456 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.976107075 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.463277923 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092647336 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.456044361 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163704622 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105192201 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.486024004 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.049169536 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.937318597 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.422676373 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028467425 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.644396889 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.297207592 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.557326256 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.540632493 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307553069 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.938109986 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.391731038 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306693483 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366355054 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.028123598 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868517564 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.950850392 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.949429643 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.943930891 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.922992948 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.868153075 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.222526755 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948384449 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175505455 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.290864681 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20993793 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.854650749 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.949892606 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943490467 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255693745 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.689365918 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188325894 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.368172644 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.527248788 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952683745 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.871559463 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870340836 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.646851839 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.939242415 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915128412 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176038464 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.049440203 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.896780327 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390802634 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26889326 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.199977621 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.956139685 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.226240337 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220006935 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.678100232 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966495466 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.044777051 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.463005376 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.656861316 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.161878595 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.173268852 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737067275 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.171449814 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.599555921 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.924973977 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.946675386 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156092098 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.16284162 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.520198952 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197631641 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.672743891 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.952596412 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315070975 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00800838 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.536156506 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.15263035 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.036806981 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952908256 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020657637 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950106242 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.949601666 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.953820185 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987982409 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.536379158 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.07805574 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.956684872 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03222963 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.045368395 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.529878391 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.957868257 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230835992 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309741925 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.285707967 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009192549 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.944951181 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950216468 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882946608 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085559229 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.390073804 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213345583 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.071366431 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.0840976 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97216312 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.464000939 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299422962 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266129294 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219876444 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.834999 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947999075 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.034463138 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.169227463 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951174024 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.15232698 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190886971 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281158496 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.422927638 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.163768305 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.232368018 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214231295 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.320486328 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.949625507 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.540668429 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.961590335 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.493026897 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.988315048 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.555163107 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235807991 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955126413 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165977104 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.966430295 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.145375289 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.39967932 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.686126032 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.31217259 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.941124266 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.005576325 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.23276666 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356810678 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261977936 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020459275 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95743577 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.640349608 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087068047 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.902315313 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.213244268 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.949573863 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153125072 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.65762417 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.959040376 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233452382 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264360977 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.949055108 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.9317199 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00376647 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.950361842 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.168332749 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.233699272 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20397695 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958450105 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.951350704 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.761620466 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.223124067 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017850996 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880483343 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.950911729 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049189205 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197827762 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970728803 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.466527022 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.649774756 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251161709 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.872542327 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972429321 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430054965 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411496157 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281187577 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.488553555 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18930545 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.51210837 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.872303889 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.34085054 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.954247805 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411519761 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.341640364 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.951044752 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.527173842 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074958942 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.233309521 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282292557 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.961815307 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709697642 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.994387598 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178331944 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546505459 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894525555 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.954882577 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.013959891 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.950787382 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.081750334 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966409342 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.952514669 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891018588 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.801246356 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.442403529 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.957989858 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.939710539 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.568474448 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.57924087 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068360808 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108153133 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958059758 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.67261686 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.244260858 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.199386473 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.525631993 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.031917597 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.952496323 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950884581 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.87894821 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.150326246 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.151739135 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263413181 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.372376812 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.070095876 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958237475 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.166637018 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1646937 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.523301386 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111251963 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413460753 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073953245 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.881992935 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.667232554 seconds)
  done (took 1710.108368748 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.969446659 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.968004301 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.956425968 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.989063241 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.958000059 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.962272843 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.010398618 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.040069512 seconds)
  done (took 57.728513006 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.947932302 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.133706811 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.960841214 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.949261346 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.968620203 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.950552819 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.138614743 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.963307636 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.964021567 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.95974452 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.949348249 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.958504844 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.240761271 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.980911008 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.95155834 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.952813686 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.96073587 seconds)
  done (took 75.802162635 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.951842333 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.127009752 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.972482757 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.973761686 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.827939655 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.952623069 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.920512074 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.977927644 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.954945634 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.128120385 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.290389925 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.959554482 seconds)
  done (took 90.906571096 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.96923313 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.960349102 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.957774227 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.959088764 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.961714237 seconds)
  done (took 11.683337833 seconds)
done (took 2218.043204211 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.186108314 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.137837678 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.181955188 seconds)
  done (took 6.184898149 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.100402008 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.148295179 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.266435984 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.274096426 seconds)
  done (took 10.659830427 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.24889519 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.319961808 seconds)
  done (took 6.436091384 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.272388215 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.974053626 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.339778253 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.95471182 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.953437354 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.951928408 seconds)
  done (took 22.735131109 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.958127294 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.959410224 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.956504779 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.959188609 seconds)
  done (took 9.702716744 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.937244071 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.656245322 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.941125703 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.959523262 seconds)
  done (took 21.362083743 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.713881728 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.07758962 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.70037508 seconds)
  done (took 9.363376711 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.522634588 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.263019289 seconds)
  done (took 9.653865949 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.113075914 seconds)
  done (took 3.983413624 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.985522214 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.224635025 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.503203244 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.531260205 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.631400408 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.206241528 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.300203215 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.189424163 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.408761078 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.445292379 seconds)
  done (took 26.296551163 seconds)
done (took 142.019231828 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.493521285 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.986179258 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.160762193 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.32700039 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.19041654 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.159828232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.174287219 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.339483147 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.013342322 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.98586423 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.320506044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.192170882 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.121590004 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.974925177 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.128838248 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.977193514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.182938571 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.332603592 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.005885946 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.220366482 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.182820598 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.964482619 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.158371944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.98132198 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.191437761 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.11257013 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.508885798 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.982308781 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.147665278 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.523623623 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.11347235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.366795204 seconds)
  done (took 171.38982834 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.957658709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.957629109 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.957285656 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.957177693 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.570887855 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.95769989 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.959444201 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.958856154 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.423354066 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.412762185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.958318842 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.564645481 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.957145194 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.955235374 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.955660313 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.957043201 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.585811833 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.959495197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.960179673 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.958265203 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.958057165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.394267203 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.958455679 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.391695028 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.580097373 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.961372945 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.957725928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.957942787 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.963424267 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.963451274 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.964769479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.960149135 seconds)
  done (took 212.812000853 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.919945376 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.956987329 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.962277578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.959481373 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.959489519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.957160744 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.959093497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.958421984 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.716118209 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.710425825 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.964381602 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.966666309 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.968470956 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.959623483 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.971200693 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.957014174 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.972607294 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.951412957 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.973218744 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.974926994 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.97496355 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.610879855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.97756201 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.615300185 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.970826031 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.96631336 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.961186331 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.968790392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.971354761 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.973457088 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.976385688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.958931473 seconds)
  done (took 223.528873915 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.220516328 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.968964817 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.968468691 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.875568341 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.967728404 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.963765528 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.970763348 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.214304849 seconds)
  done (took 20.047905455 seconds)
done (took 629.658685228 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.500230665 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.337637079 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.145057545 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.992038861 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.345535459 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.021772905 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.98443363 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.056195956 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.611537834 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.063318769 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.655602274 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.009085488 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.74106551 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.016117597 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.110939526 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.045816742 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.559008235 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.64840583 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.164861656 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.14758558 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.158731657 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.91539327 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.072822953 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.639218934 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.766273395 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.966946691 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.062341038 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.571368169 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.997510808 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.151182969 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.803110188 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.314710653 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.004249653 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.982838068 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.038195132 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.019173231 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.251156415 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.004786535 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.111895025 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.714029502 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.155498443 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.521826253 seconds)
  done (took 107.255078132 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.957236053 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.955050194 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.957949136 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.957725465 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.95916469 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.958015227 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.956685424 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.95668949 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.956955069 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.957509386 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.955342345 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.954806992 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.954361465 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.956602152 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.954582088 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.957693039 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.958079605 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.958232564 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.957275991 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.958368126 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.959898069 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.957272758 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.972200292 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.955131423 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.957168715 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.955891443 seconds)
  done (took 52.787551824 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.974169424 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.136401956 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.211063318 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.993539756 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.972332721 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.972699419 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.989486725 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.977525235 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.97269266 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.972296078 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.077987973 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.978982323 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.992143807 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.210709693 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.991712099 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.972877775 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.972222993 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.972593495 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.142979266 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.987014097 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.989206585 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.974562935 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.991575392 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.985488774 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.972640769 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.973156784 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.975370728 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.440096627 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.979651005 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.076034557 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.027044788 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.996219808 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.414292129 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.217414272 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.031102396 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.982345205 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.973455473 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.080054926 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.981732382 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.971263237 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.990426441 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.979896372 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.206907307 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.474222142 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.986946012 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.972484301 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.451584295 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.091243851 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.013379431 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.986113548 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.211140317 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.994340568 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.975358893 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.971438285 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.008586951 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.976747314 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.9725024 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.319385566 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.986462857 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.994198171 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.978233585 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.974453255 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.145871704 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.984795597 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.134344915 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.985180824 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.980035382 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.973404239 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.212951001 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.992836182 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.479813974 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.991885855 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.976706426 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.078832082 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.140317505 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.483762947 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.987649037 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.149807474 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.432512445 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.997893191 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.985441179 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.430350267 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.002770417 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.982261819 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.977293955 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.974712559 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.973778664 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.016875472 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.988707972 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.407707431 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.483582888 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.340457985 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.003855385 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.992086989 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.976779577 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.321501501 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.983219195 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.974783855 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.20330645 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.488081469 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.990887697 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.98419427 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.465745408 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.995257454 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.993589265 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.987401737 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.216635046 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.99449442 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.020235557 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.973963226 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.980630662 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.978029655 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.996304568 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.985663854 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.976476259 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.456599808 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.105128876 seconds)
  done (took 244.641090409 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.97389979 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.986648084 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.97439476 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.991962052 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.971668877 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.977465052 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.972562911 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.970563875 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.97528383 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.971906663 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.971182808 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.974387835 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.974343792 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.977340424 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.99011358 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.978406413 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.57779136 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.970632896 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.974398288 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.984014499 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.626126139 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.976527965 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.975475836 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.972050351 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.972787429 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.973537394 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.980334452 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.986701659 seconds)
  done (took 170.491926263 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.979923891 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.092835254 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.000669793 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.008455947 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.987378795 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.9764633 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.003220315 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.996194746 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.985039771 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.974355987 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.977954034 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.037884116 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.99088898 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.07721633 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.015322008 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.009097802 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.078058553 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.991422846 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.979276342 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.976084281 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.007965449 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.973116876 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.040715176 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.10333653 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.998245364 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.096879441 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.987988171 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.978938782 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.980003921 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.096194218 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.994408274 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.037438785 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.006888094 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.994222847 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.096623846 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.096022307 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.086387429 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.00941691 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.985639478 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.975867401 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.980283414 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.967528139 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.093366284 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.995128461 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.979478731 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.083550106 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.999308688 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.983616374 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.98948125 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.978719232 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.995508228 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.998490168 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.046343493 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.111881429 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.015348584 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.002954141 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.005526596 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.26323077 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.989967609 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.080281785 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.9778081 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.096698765 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.002801303 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.969894544 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.979824751 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.982846228 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.006839989 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.007963093 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.08244747 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.988751257 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.081055281 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.020658019 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.987706496 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.980882594 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.984620858 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.097769505 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.098942282 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.019422826 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.01631584 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.011437148 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.975166179 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.980623205 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.972091651 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.998821752 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.985961896 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.098446948 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.10115744 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.994158268 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.982138052 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.983863576 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.983048437 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.009160473 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.105233914 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.018248182 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.073753213 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.053899147 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.058214856 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.998125343 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.995622608 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.985114476 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.043460232 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.995341652 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.994714927 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.314137679 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.055109782 seconds)
  done (took 214.285661617 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.471028982 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.041993257 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.040011321 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.300777764 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.340889024 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.921684272 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.028482213 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.029141409 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.055196177 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.220278772 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.09620412 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.051321389 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.019103541 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.005230214 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.031103302 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.054877745 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.046764502 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.395192776 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.129483927 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.192171517 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.017408993 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.307046122 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.309492386 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.431410306 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.068220706 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.362431659 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.692718483 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.175078787 seconds)
  done (took 64.735909501 seconds)
done (took 856.075229102 seconds)
SAVING RESULT...
DONE!
