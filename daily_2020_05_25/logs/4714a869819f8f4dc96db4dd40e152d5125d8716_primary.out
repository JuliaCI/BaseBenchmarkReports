cset: moving following pidspec: 30914
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.246776724 seconds)
loading group "string"... done (took 0.589519442 seconds)
loading group "linalg"... done (took 8.130616683 seconds)
loading group "parallel"... done (took 0.17319227 seconds)
loading group "find"... done (took 1.279448319 seconds)
loading group "tuple"... done (took 1.983729787 seconds)
loading group "dates"... done (took 1.328431931 seconds)
loading group "micro"... done (took 0.203228563 seconds)
loading group "io"... done (took 0.934763615 seconds)
loading group "scalar"... done (took 40.365398973 seconds)
loading group "sparse"... done (took 12.44667805 seconds)
loading group "broadcast"... done (took 0.962296559 seconds)
loading group "union"... done (took 13.875286339 seconds)
loading group "simd"... done (took 4.833123537 seconds)
loading group "random"... done (took 9.283804686 seconds)
loading group "problem"... done (took 1.609036006 seconds)
loading group "array"... done (took 21.436178589 seconds)
loading group "misc"... done (took 1.737914687 seconds)
loading group "sort"... done (took 3.355163002 seconds)
loading group "collection"... done (took 18.16750302 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.544633311 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125114553 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137179593 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120364206 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149967396 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117453306 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125417722 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08482738 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.859669823 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150116652 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115756404 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419834716 seconds)
done (took 5.341132058 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172230054 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089319172 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079835578 seconds)
  done (took 1.233200644 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067075908 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128213336 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067244083 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067948864 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071528415 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067973045 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067239286 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067132333 seconds)
  done (took 1.597236472 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074069888 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06928772 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067521935 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069251112 seconds)
  done (took 1.344364034 seconds)
done (took 5.48741519 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.79906028 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210687 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189657282 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412754296 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135673933 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179584988 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643095567 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.33814218 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193752804 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094828178 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11383824 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391946216 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125333428 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.628541762 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078195287 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096510753 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143948866 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.445322257 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071306774 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085113341 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094001989 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131065818 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.081095639 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076906654 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150129398 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070783247 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144178983 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084771162 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069317274 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.257046272 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175469929 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66685764 seconds)
  done (took 10.480321391 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101790743 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100288818 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06954606 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125591066 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098564722 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070536335 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076228324 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068479354 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090387618 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129387882 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092099482 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10932737 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066847422 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07036891 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083844256 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198613034 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080829552 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082368447 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071702178 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083241011 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10815758 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079091684 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080395403 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080287011 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129510935 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17114111 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100317178 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.1008966 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068938909 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082257663 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115908044 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128317003 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066680736 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066641571 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126076743 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095409749 seconds)
  done (took 4.569676946 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.012311008 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15277309 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091390608 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136010232 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090991531 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065584832 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110460218 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066287338 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08362254 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239122758 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.383983741 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.629678146 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.124127989 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117892395 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105246689 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071818711 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072645981 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068384773 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.2874181 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101783988 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109354599 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084409414 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071594064 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070021593 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066079834 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072833737 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064773223 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069420105 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088793808 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076969054 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.332850977 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126701523 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06937769 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.960492189 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167157294 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068463424 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106148749 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161137084 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094202858 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063841055 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141313742 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068209027 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064388506 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.300700399 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094630702 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064869652 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072085724 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067293452 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085824129 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110002291 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121082151 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066389157 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066356254 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169555339 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065407856 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082497026 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.249701645 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153566095 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066996546 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.302923105 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095925979 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074377382 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067470652 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.219678051 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.120691047 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069372166 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06865274 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070239467 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069729223 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382299886 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067157583 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.215226345 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069121766 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077169371 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070918423 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071542001 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079342793 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079855515 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091742869 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067720569 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074333935 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067693151 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066918575 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06755385 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094137025 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.390696256 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067706724 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07311817 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066458642 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093953671 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101627326 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068780285 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06626732 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103116221 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07094708 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066383846 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069092155 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119391025 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071156964 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113439504 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06751723 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.188094518 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066191069 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097644832 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070364771 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101956499 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079328821 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071608771 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.465703017 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066298119 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073167048 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067045106 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068726295 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067052388 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079422611 seconds)
  done (took 22.278802712 seconds)
done (took 39.404528374 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243287579 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084089922 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084494549 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084758961 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084268126 seconds)
  done (took 1.73319124 seconds)
done (took 2.865656893 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127230129 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099929934 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06616622 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101379788 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067127481 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11052482 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103158947 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085567574 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101152279 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065674557 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098323238 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065729888 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065226863 seconds)
  done (took 2.309612832 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08254461 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085017384 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07190203 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083993509 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064206875 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084272279 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083001862 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090953429 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083551019 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074626354 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064240328 seconds)
  done (took 1.997043313 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082766213 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.0837832 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069339908 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081808081 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062757995 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082142449 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081991994 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085521998 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081581539 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073750682 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062963789 seconds)
  done (took 1.971275053 seconds)
done (took 7.401409311 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075683227 seconds)
  done (took 1.188733701 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.542860155 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.600432188 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079028393 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100912298 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193174131 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.109910642 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.238304562 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083522636 seconds)
  done (took 8.23780315 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.107276985 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069508336 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071186526 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070262234 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070413028 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069995535 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07000258 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069803411 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070600946 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069613672 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.069953886 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070643662 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070369116 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071066333 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070719394 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071399722 seconds)
  done (took 2.360437915 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097333618 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.0966625 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074080123 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075964692 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073482105 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07250864 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075435413 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07408601 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071518613 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072926078 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075928943 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073944945 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073598445 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064754614 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075085845 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076674186 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071346956 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074976859 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075725106 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076510814 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075617227 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06448839 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073735172 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074814992 seconds)
  done (took 3.03595978 seconds)
done (took 15.945943912 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106095255 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068097623 seconds)
  done (took 1.293552395 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078536774 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080603936 seconds)
  done (took 1.286717595 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077821054 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062986831 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084448324 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074017625 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063676503 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06361243 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.083236519 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063641696 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064089636 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064517327 seconds)
  done (took 1.831102684 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065038623 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073292112 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07016967 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079600644 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071577535 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065150722 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069244558 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065806369 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.074234029 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063974182 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068843256 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083741758 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068722561 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085710588 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068869074 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068585321 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070292815 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067617668 seconds)
  done (took 2.416307402 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063099239 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064458434 seconds)
  done (took 1.264886274 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066729296 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06369241 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066235024 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06634753 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063685348 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063766531 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063810795 seconds)
  done (took 1.586927004 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400838533 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122947965 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.331589598 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07053008 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080467686 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257900831 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064853284 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070350375 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070291344 seconds)
  done (took 2.645816699 seconds)
done (took 13.46213868 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080615495 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086298154 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09847183 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416331353 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094886924 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068841816 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114374382 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18377399 seconds)
done (took 2.291363422 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213876288 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.817394731 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.48304774 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20655787 seconds)
  done (took 2.647160062 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.462373395 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081389673 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077444892 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067079149 seconds)
  done (took 1.837540142 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067354364 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070598808 seconds)
  done (took 1.284288562 seconds)
done (took 7.130853816 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065127573 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090612925 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064516088 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065238608 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.0645627 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064887344 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065029586 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06501602 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065210836 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064764534 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.064795265 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064963938 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070304049 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064970845 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065432078 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065692603 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066713503 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066789344 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067465135 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066571753 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066398792 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066367991 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066573602 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066784831 seconds)
  done (took 2.785782183 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082092378 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068243117 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068489856 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069018976 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069628403 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068902265 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069087935 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067161069 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069007369 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066771817 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069214916 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069593346 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067000742 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069554789 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067310614 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069089358 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068850842 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067374739 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067416734 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069882712 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068556565 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067682143 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06921334 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068397782 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069295319 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069452392 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066515718 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06745548 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069192851 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069095597 seconds)
  done (took 3.223933892 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065883327 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061035935 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062188994 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070498183 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061334817 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062189205 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062030167 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061635691 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063009028 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061648617 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062490924 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061161523 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061129823 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062232625 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062312329 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065710863 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079372883 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061968112 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062871638 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063409365 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.0671279 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061546163 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062037135 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062090905 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064282188 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061228022 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061567374 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061261979 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062096411 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061257347 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065237986 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065935159 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062876162 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070838441 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067186043 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063419853 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067073155 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063154916 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063645403 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06283497 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062579735 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062075482 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061453093 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070935152 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061327641 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063348519 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.0618824 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063736021 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062862109 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064975715 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062507732 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063222004 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065007421 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063973741 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068092756 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062493391 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064395009 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061711153 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062582044 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061491992 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061425695 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061718674 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064487778 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061802779 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078462214 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069868198 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061486375 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062780028 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062298942 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064324454 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062817363 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077198039 seconds)
  done (took 5.767187366 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086866871 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087233863 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066454208 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066435168 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062623074 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062383149 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070234964 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061874169 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066714584 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081058013 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062067356 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066458211 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06647249 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066166158 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062142273 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066455908 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07024787 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062134242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061924246 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066127966 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062448555 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070353207 seconds)
  done (took 2.664790194 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.145920336 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068485263 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105229343 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072503916 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07052456 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07248727 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068274321 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067773739 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068184764 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068452582 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068495361 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067876742 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070532151 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068375768 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068462582 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068399329 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068054707 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068413219 seconds)
  done (took 2.515264476 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078636084 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067049131 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086312655 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067415854 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067527095 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066932412 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071271226 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072246658 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06698257 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067779883 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072254192 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067064102 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067201167 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067580765 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067620712 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067255538 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066984654 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067413371 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072040804 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071380392 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071073618 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07272596 seconds)
  done (took 2.703296205 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08754395 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066275433 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082807497 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068747302 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06214506 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06217946 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068161586 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066833071 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067994218 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066518057 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067419827 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061955824 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06908861 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066957732 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069402111 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066831979 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066374843 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066844215 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066707593 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061960166 seconds)
  done (took 2.524890876 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08382206 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064793835 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065462926 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071194479 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065115975 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065076364 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071448261 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064952495 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065144193 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085671583 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065234177 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065432784 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071579419 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069328205 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065029324 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071371656 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074237846 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071467488 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065440182 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065001681 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085464908 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065124243 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071790652 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065071979 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065181628 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065266748 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065292378 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069473173 seconds)
  done (took 3.101923481 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065248821 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065544665 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064503738 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065089053 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064754423 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06509943 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065091875 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065159955 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06491007 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06498352 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064429235 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064701909 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064524318 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064563841 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064706771 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065264423 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065042299 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064961601 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06533669 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064810622 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064695703 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064390981 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064551698 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064978709 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064825759 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064459197 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065115057 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064802744 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064432423 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064751551 seconds)
  done (took 3.114223701 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075936684 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073123008 seconds)
  done (took 1.317341831 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063722751 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079698833 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061622835 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072784521 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070740392 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065031465 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07118941 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070648169 seconds)
  done (took 1.719051275 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085608375 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075684421 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064343437 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075974401 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074810154 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084778051 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126411208 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063939333 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074497246 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065088019 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082305991 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066375048 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074363293 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069364249 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074603236 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077566301 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061561434 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.06887693 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065872094 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062706211 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064646562 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07771941 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073788359 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062219261 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069192395 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091550726 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079878194 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063403213 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070796932 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076079391 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074285244 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06096029 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063682717 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064593778 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062106834 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074724205 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082317449 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071154272 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077007391 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064326529 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072007657 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061788398 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07253403 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074739398 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079800087 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064279585 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064047882 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06183233 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065463618 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070223074 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062319796 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068391725 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061781986 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076013067 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071923063 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079515933 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062980413 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069856936 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070768524 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071593039 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075631947 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070279349 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073763808 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063634117 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080165114 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074143419 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075669045 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062104818 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061316746 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061985838 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078282273 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092441923 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073438208 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064631195 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064643652 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061808266 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070820467 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064957443 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072853789 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076381182 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063680011 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068341113 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076132086 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068745225 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070492285 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070119679 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062557928 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067124706 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064874519 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083826791 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062865267 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06223506 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06534076 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079543033 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073282752 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063863759 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065558426 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075549377 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06105855 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064362845 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064600273 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069872338 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077636034 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068069892 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068244503 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077216233 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072975471 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069499741 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070502493 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060831468 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064385805 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065608374 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074701332 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060316651 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069569715 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066782881 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062687162 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074460759 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.060931663 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062669574 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074822419 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073922279 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061255296 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059794242 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069162321 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062219462 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064347778 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075612891 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061117389 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060641384 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060641746 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069923115 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062039095 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069913602 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065879308 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069903188 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060840777 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.189417072 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070203617 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077039501 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068752888 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070549492 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074560989 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070707824 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063762873 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076530592 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071241009 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066541006 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07388744 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068349158 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062149284 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066173437 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071481591 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062843588 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071254107 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066588568 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071166806 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064458727 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062556842 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070870082 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065098311 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067201468 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069086782 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062738925 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079216986 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070442162 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062452682 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061472593 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071116888 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065945903 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063889997 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067183579 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070732388 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064965546 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063435118 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064656691 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070987658 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071973624 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067274343 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065286059 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073595803 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.0809884 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063590373 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070992798 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064043838 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065568016 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065443135 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078326689 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074622538 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068112007 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070765742 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061779971 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074107151 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076178017 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066422782 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062124011 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067122123 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067869689 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075720032 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068187913 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065119718 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062956268 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069963396 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066863432 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071622544 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063577487 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066755189 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069651322 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062487491 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070087613 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064570203 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078909199 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071664539 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062290426 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066177341 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06260013 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075230152 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062028624 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065588915 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066701372 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065106082 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063585798 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070753161 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061417206 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076758127 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076887037 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069582529 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066317365 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063987318 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076423509 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069576165 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071953019 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070956143 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073837683 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079520554 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066074147 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07057504 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078724668 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063583451 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060957107 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073101779 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064715752 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063088952 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063023251 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062219402 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070611327 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070524825 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074125271 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061093882 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070745796 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062217437 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066537259 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062119649 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072601704 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07087104 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068252256 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075736213 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063838703 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063360607 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070246478 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062202984 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063385153 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063625437 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069746592 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062953858 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068427375 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064871194 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.0680534 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064611262 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060600771 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068375564 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062314524 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067575414 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071103359 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061807914 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06796392 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068987419 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062615595 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068710343 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066191036 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.196191423 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072092944 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070832637 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069723962 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071339115 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062606215 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075777863 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064004492 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076940965 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069100165 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06133477 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069992626 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071356869 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068795544 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064379644 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064834885 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069226233 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064158877 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07092585 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076637993 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065448915 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081931377 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076523662 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070685074 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071195479 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069150206 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070350065 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066778419 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068624003 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065589732 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069866709 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064149782 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073558401 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071067451 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068548779 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070045378 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064537907 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069117734 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064864653 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061653052 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067087223 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066596958 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064022013 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076771359 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064778582 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066927245 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063786633 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065392588 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063570438 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061757238 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070936562 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071209681 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064487706 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074902713 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066442543 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070091846 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079869215 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061351263 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062843314 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062448234 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065450626 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077184918 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064338762 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077416767 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069224378 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066666877 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061663333 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065924784 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.0643961 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062886467 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062291454 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072376302 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066447695 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063697726 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064236386 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070820599 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064695833 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076817737 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063096033 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068442214 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064118099 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061563233 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066554998 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066723684 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071136123 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065042566 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065202883 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062245395 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064072835 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06878553 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069862475 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063570848 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069739801 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07619816 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064137622 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070893835 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066597352 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061707094 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070472968 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063462853 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063568809 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066416937 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071290511 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070913038 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064646798 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078257438 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06390847 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072241299 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06411951 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062478055 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063278503 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063890458 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063578156 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066156916 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06475766 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076787021 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062041384 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070402363 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068838653 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06786376 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074430548 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064301423 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06998687 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069138423 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065563051 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069632668 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076184437 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066471036 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069669328 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06328921 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068510939 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072109283 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065066479 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074047912 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067984892 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062778348 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067961271 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06392738 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0627753 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062389455 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061894553 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072067543 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.062609505 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06518099 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064633425 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.194597149 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069109329 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067778186 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077919024 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071716556 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071659123 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.0621429 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062186296 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064638082 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065326519 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070148187 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070749818 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074381415 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070548413 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068003617 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06353464 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07908857 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074041856 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071629233 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066070186 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071862798 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064476515 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070768199 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068118319 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069438924 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065292672 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072194109 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069973837 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06680477 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074588627 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072013605 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06462209 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069453299 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069634201 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069784451 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06247392 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064398039 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070358343 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07262641 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070734158 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063974023 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079291356 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065559166 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069026268 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066200792 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063450509 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073139161 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06222711 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070309966 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065035449 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06492799 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06215648 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066498439 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065369927 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070636398 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066958103 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062435052 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079321105 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07820282 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070336299 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063381006 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063406098 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062158786 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062364621 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06637265 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064745225 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070386737 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079237942 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06639707 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066297446 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06338692 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065780336 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073424478 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073200925 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06173657 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062860124 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066974878 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070211207 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076010436 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063180262 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063830809 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071518996 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070709665 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062160262 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067112596 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061894781 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071720306 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081185301 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064030979 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070187769 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073923533 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076827977 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064596203 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062386651 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064335855 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07024555 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069482877 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064734316 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064550299 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083214856 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071146212 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066275764 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063161448 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070634201 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066314253 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077767322 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064756617 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064502715 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072418242 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073265484 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070977861 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074224047 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075772746 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070134628 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07014358 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063389734 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068917503 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063287671 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066441762 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064827538 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064712915 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070299927 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070807221 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066508572 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079094136 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077621802 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066232291 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061038986 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066025468 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066241258 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061761724 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063736675 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062097716 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061867678 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06195326 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062218895 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069112675 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071950799 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067370456 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063221531 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062341888 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060378439 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072193812 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069310692 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069214038 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060482111 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.198191955 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066145863 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073458046 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067911969 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066636035 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071283506 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070165718 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069926846 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063459374 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076115158 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063645575 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070792119 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066774886 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064363291 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065240877 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072310364 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06853331 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065523641 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070959642 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071578161 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0659825 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062954427 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062127139 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073953966 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06251054 seconds)
  done (took 42.482271804 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100403095 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063292707 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062567802 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063139463 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072300746 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063368161 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063191245 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063718978 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063755199 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066014937 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062732008 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062819421 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070427297 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07796933 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073718384 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067219849 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062877106 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063835833 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06299201 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06356482 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071531916 seconds)
  done (took 2.674645233 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071063484 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077941537 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075024634 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080688896 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071579482 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067806441 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075364163 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068173969 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075975405 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073124731 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075729025 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067919029 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073189854 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072875721 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073266986 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068333164 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076054079 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072046213 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068023364 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076098855 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068266655 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075707758 seconds)
  done (took 2.847475937 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06463324 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063509899 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069912405 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06148106 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063042528 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061898736 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066672427 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06214976 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066634868 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066777564 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066235612 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066050001 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070382969 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062193049 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067338235 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062606229 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107836725 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066659504 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064138541 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065050091 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06250733 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07132832 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062186738 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062322985 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065905786 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066841485 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064643689 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062180101 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064027503 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065827213 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063555788 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062031445 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070325921 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069686287 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066077086 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067688359 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065178143 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063564465 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061834501 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062247214 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069611978 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06290661 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067135503 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070199309 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062087725 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06221491 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070579458 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063455645 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061759049 seconds)
  done (took 4.482250626 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074991234 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111819184 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068351759 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091364371 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076787344 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070045984 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068532294 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09324511 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064323135 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064773485 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078775831 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078945912 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066738941 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067640297 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070585671 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066207119 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066923351 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065661946 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06899562 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065481162 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069500944 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.06981743 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076860493 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077539708 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06713459 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065039791 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065706686 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067417828 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077017136 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069599188 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067588736 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068377671 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078121764 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068695099 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065347178 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065674803 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078294796 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065934342 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065669731 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064448294 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065728599 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067425176 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070105634 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078564148 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066069623 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070695826 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066073436 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063889492 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077550496 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066099826 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070825293 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078840282 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066806585 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06619044 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067859157 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077351046 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066114124 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064452791 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066374646 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077648723 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064056479 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066874721 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07809275 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.0653257 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069608539 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07840457 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070822858 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067084763 seconds)
  done (took 6.21427657 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073987469 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094711889 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080624116 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079987064 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073765413 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074447546 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074467716 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074399957 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073823568 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077808632 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07413437 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115916248 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070313596 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075960671 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07377828 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074011184 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073941049 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090239297 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073452557 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073342068 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073362023 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079448323 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073528215 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079653127 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07654154 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069347118 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073495869 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073039113 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080040032 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073210473 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076627759 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073145711 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073646872 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079799224 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076609499 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073309471 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063590822 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073385976 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073984747 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073575454 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069112487 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079869566 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073420549 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069667212 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073424149 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073266263 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080100341 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076123283 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075649889 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077002121 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073291803 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079825748 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073014514 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073362216 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079699128 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082566425 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079325169 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080262157 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073533617 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07983653 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079500375 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08221575 seconds)
  done (took 6.018769342 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078137076 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070505357 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081558321 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061922287 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061767789 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071929582 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062828344 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061905323 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070381132 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073282289 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072459163 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072389871 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07498691 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072756518 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072203396 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074839187 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072291032 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072491822 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070369455 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071984505 seconds)
  done (took 2.712230878 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076328278 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081381163 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068117311 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071827076 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067203164 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071952957 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066859088 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067815989 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068277411 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067700581 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07370559 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073605594 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068053536 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072244658 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073357075 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072129137 seconds)
  done (took 2.416318466 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08400999 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070520423 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077128685 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063634425 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067646918 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062738603 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063564197 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06149289 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062537986 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076448831 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063438301 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074540009 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063317964 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062661406 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062948842 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068992539 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062724917 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063352434 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063273105 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076642016 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070675052 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064686246 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067447495 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063429856 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068808023 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070699137 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064987379 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066923057 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063742335 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06416563 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069361578 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070305217 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063528977 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06441159 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062613927 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063380384 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063452647 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063807696 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.087706802 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06362422 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062250274 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06854848 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063617749 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064682068 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062848219 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064082364 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062682719 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069280504 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063756478 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068836955 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063861102 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066087734 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064241632 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070941627 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066226991 seconds)
  done (took 4.94796632 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07886388 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068643786 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062363995 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061931582 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067295773 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068234354 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067386435 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067792162 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06829821 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062309937 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068647741 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067074243 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068263226 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067426569 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068486273 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067751259 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062131837 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067886399 seconds)
  done (took 2.500159241 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073401972 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067041042 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071888681 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067032229 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066995541 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066693961 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061947859 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062179023 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062343596 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067148998 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067037936 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066459442 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062223411 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066897742 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067007476 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067225417 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066971704 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06267354 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067278009 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062190579 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066791303 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062514432 seconds)
  done (took 2.732714069 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095785924 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083565233 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139641628 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079319705 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085987795 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071940255 seconds)
  done (took 1.838248094 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092430932 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098105532 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06674574 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06700021 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073065061 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070062925 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070359441 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070658313 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075294161 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075930804 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070796382 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075649505 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075374783 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077370936 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073622123 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072948704 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071029642 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073760563 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067116618 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080439593 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07087728 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07554675 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070829897 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070862841 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071042297 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077335579 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075954156 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0758454 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07074874 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075324034 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073412217 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071032998 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075814037 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0759706 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067414017 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075329044 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071104139 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080601212 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073250623 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077017576 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067199901 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073206174 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075426726 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074858873 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07524223 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071132215 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074852389 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070793184 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071134229 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082048934 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073058082 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077196984 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07302764 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075132068 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075523036 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081551623 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075474099 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077222497 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072976722 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075187135 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077177255 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073531098 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07693898 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07577522 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073265532 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077148995 seconds)
  done (took 6.205710923 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104663413 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067653328 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071330575 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075271462 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076765777 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070849365 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071768471 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070950788 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071203448 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067978251 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105880633 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071037263 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077650243 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077681608 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071209644 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071397143 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071081575 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077862232 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068104859 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08243326 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070839077 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077237399 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077287166 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077403795 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075891436 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073419245 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071226039 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07114982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070828178 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070850953 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074690903 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070861353 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077368637 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06773104 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077401116 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070989662 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070974662 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07503123 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071219933 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07333297 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077657842 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080452527 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070859125 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070826555 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075663685 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070779903 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07098312 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067844909 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070906538 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06752284 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07531803 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075249378 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075893366 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0768636 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071322469 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070565052 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070423359 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070420404 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070546149 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072955437 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079134616 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070886623 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081672241 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070867251 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070701272 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077024582 seconds)
  done (took 6.197056177 seconds)
done (took 126.856516823 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207891592 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184909097 seconds)
  done (took 1.666032219 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074036788 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104610235 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082396868 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133662153 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071279385 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10569796 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104458745 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084109182 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071238417 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071287564 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071228962 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07375138 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136801034 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071318313 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071513038 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074299026 seconds)
  done (took 2.69213833 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104304258 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.167164179 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108172654 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069073528 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104679687 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077453048 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069158006 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081929507 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075999686 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071023432 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077570634 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075600481 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071166959 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077597368 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075916336 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077528096 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070838957 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077454971 seconds)
  done (took 2.827244004 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103653362 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094939687 seconds)
  done (took 1.497169623 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.172471861 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133065382 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20186485 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345791014 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.154624298 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.423533353 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.139087021 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138962738 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113004033 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135806032 seconds)
  done (took 3.251024502 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104165648 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169259494 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293764018 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12091925 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076211428 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090856504 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122293344 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081995345 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083691328 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083231735 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083740037 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078581629 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1026816 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076938044 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076181208 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078569519 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106497159 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075465608 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076069322 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078879602 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106077106 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070241256 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076672742 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075028281 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.0810508 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081313045 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07111512 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070058878 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078543548 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076022821 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.0792785 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087871485 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08089683 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10704019 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074053149 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10771171 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078290355 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076391141 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076318922 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07632415 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080112846 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080279057 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078268041 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078280234 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071106903 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078589124 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071120192 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069849775 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080830449 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071340471 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080135702 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079270978 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106392019 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07152349 seconds)
  done (took 6.107504068 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108448223 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107600973 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070787251 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112501971 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103796926 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070161481 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105641541 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099188927 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107588378 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07141339 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069193832 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071069589 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080137217 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081406964 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115880549 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108086763 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072787282 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07020291 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108046342 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108259553 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070076117 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101951188 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098372853 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107075007 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069002737 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070562973 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069713617 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070937471 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076697434 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077602295 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069521377 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079228213 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083714809 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07818328 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068443674 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06916906 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068980904 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078662734 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078982011 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078435404 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076875139 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068209158 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069215322 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070487202 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069759414 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068463398 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077452803 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07870401 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077314338 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069038025 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070453858 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069369752 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070053078 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078059378 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075909677 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079094649 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078516683 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069306672 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069150174 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071647446 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07917171 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078358393 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077998008 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069835363 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078524472 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068907518 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079231542 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082052261 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069267757 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072905653 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069459891 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06907232 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070928846 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076375803 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076563049 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070273143 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069080071 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069149466 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07881953 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077384245 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068939711 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07624079 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068182996 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068718736 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070259714 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070603765 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076125922 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078214165 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070574711 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069267011 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068959405 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068600947 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068613127 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075861595 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078184531 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077781688 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077439483 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069968825 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077691069 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.0766293 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070498512 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077397075 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068525802 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070183328 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06945536 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076328938 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07552461 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077669079 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068515037 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068231245 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075528481 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077679191 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067957384 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074526204 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07678949 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075705581 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067003319 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078319025 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06858599 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076381773 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068328571 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077235745 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202919377 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078634038 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070654797 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069743713 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069413647 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078012864 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070414353 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0692294 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070407549 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069424761 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077657821 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081530946 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071426532 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077784055 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077850808 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070583617 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077998875 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069807889 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078772451 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06950168 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070651019 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068258139 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081033353 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069735607 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069378994 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069547904 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079818062 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069827004 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079438796 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077365252 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068441191 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080327347 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079060591 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075748254 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078891924 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070691802 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069483418 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068879324 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06919936 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076882188 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078751372 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070555853 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069298355 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076893471 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079264965 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069613557 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077259259 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077179367 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078507295 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069326573 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070061268 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080106349 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079695351 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07725251 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077589297 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078003822 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070053166 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077061484 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077796488 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069435868 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083186174 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069649409 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081833008 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077514226 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076310824 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078035651 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079202766 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07920257 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079267663 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081681351 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068681248 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.0697898 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078077923 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069377292 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069355938 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077082577 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070543408 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070812953 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081492034 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06983832 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079441648 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068480319 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077946101 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068369796 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070306385 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081997747 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06978321 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07061757 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077604987 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069022364 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076710811 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079039025 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.0766538 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070032375 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072789383 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077991701 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078565247 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069119329 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068916937 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070390178 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076875199 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076240941 seconds)
  done (took 18.452047364 seconds)
done (took 37.800699091 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207846302 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154027193 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18458406 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115695159 seconds)
  done (took 2.060990643 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.109151502 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099080513 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088118745 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066759198 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094903813 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066518946 seconds)
  done (took 1.85286327 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.289126135 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197396234 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179733595 seconds)
  done (took 1.993048017 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.21253252 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192746982 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464918283 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.286927891 seconds)
  done (took 2.583891658 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142086349 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.083030712 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065305978 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083683627 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.125544995 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.150834576 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.094206312 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118922294 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076930294 seconds)
  done (took 2.323237678 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147919938 seconds)
done (took 12.319823497 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.104585703 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07335984 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069505462 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07601013 seconds)
    (5/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.221765392 seconds)
    (6/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077320819 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115650984 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.157855846 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.210140275 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.121414486 seconds)
    (11/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075994315 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086326342 seconds)
    (13/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075646083 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.117607948 seconds)
    (15/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.196657605 seconds)
    (16/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.23200116 seconds)
    (17/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.499676532 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085720588 seconds)
    (19/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.121312468 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.202978286 seconds)
    (21/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069404213 seconds)
    (22/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085134879 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174763598 seconds)
    (24/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089784594 seconds)
    (25/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.176744982 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074246383 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080807712 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085910694 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.092576308 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130151191 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.176950717 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.129796968 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.177686206 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147739058 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076107259 seconds)
    (36/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.132030099 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066264465 seconds)
    (38/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.168717717 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.175152521 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135728117 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.194566366 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.24438925 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.06668854 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079518766 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075091043 seconds)
    (46/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092312569 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093015028 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.157708669 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066570972 seconds)
    (50/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.084593681 seconds)
    (51/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066273344 seconds)
    (52/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169974349 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 0.067642143 seconds)
    (54/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17946218 seconds)
    (55/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077082382 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084007104 seconds)
    (57/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.178957731 seconds)
    (58/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.202453789 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067666937 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075097359 seconds)
    (61/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075328131 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079289466 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.100258091 seconds)
    (64/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066276046 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.171593608 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102297298 seconds)
    (67/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.166284694 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075707061 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065503086 seconds)
    (70/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.211762333 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.181714176 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066663809 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.069071983 seconds)
    (74/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.226310219 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077034801 seconds)
    (76/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073719137 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.228531064 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.091742638 seconds)
    (79/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078331079 seconds)
    (80/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076994462 seconds)
    (81/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.079060674 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086272517 seconds)
    (83/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07741989 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112784749 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.098303712 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.226780938 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.197329577 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07911676 seconds)
    (89/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.290795241 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.141985878 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.168703631 seconds)
    (92/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.182113722 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084822304 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093973354 seconds)
    (95/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073831457 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067957859 seconds)
    (97/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.076732969 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089630947 seconds)
    (99/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074775513 seconds)
    (100/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067463706 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.219154008 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.201335841 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066670002 seconds)
    (104/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068679549 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122776126 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124497348 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067513512 seconds)
    (108/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075540784 seconds)
    (109/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.12856376 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077950221 seconds)
    (111/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074905992 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.085401579 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140966435 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075876605 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091677731 seconds)
    (116/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.182051575 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069077906 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173662768 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067827899 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.19616065 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066968155 seconds)
    (122/309) benchmarking ("sort", Int8, false)...
    done (took 0.146821794 seconds)
    (123/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172668097 seconds)
    (124/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.170376347 seconds)
    (125/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077367975 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.1347499 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089119732 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074939807 seconds)
    (129/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076592102 seconds)
    (130/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067259125 seconds)
    (131/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.143689435 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070886185 seconds)
    (133/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077469308 seconds)
    (134/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093103071 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084850665 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066942438 seconds)
    (137/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197376755 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066886093 seconds)
    (139/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066392829 seconds)
    (140/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070099798 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069207628 seconds)
    (142/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073414588 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091200858 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074721094 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06731291 seconds)
    (146/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.093414836 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078412749 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074948909 seconds)
    (149/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.230170387 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175366923 seconds)
    (151/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066614313 seconds)
    (152/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.12539819 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181406553 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117832877 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065621245 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075430199 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.069073343 seconds)
    (158/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.194961163 seconds)
    (159/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068842258 seconds)
    (160/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.194595672 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069046959 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066160826 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065806108 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088430186 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088228247 seconds)
    (166/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068573935 seconds)
    (167/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093004395 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066578028 seconds)
    (169/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06671343 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141336942 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066676757 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074459987 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066313954 seconds)
    (174/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066605554 seconds)
    (175/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065258473 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073066975 seconds)
    (177/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075112818 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067439483 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086361717 seconds)
    (180/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.126228752 seconds)
    (181/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066346454 seconds)
    (182/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.06655654 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067014855 seconds)
    (184/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065916998 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072984398 seconds)
    (186/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066228595 seconds)
    (187/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067086515 seconds)
    (188/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120244129 seconds)
    (189/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075177186 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065190551 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070168275 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107552771 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072537589 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066673617 seconds)
    (195/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.065549313 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066068744 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065495441 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078253098 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06535531 seconds)
    (200/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092042928 seconds)
    (201/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065949455 seconds)
    (202/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.078887485 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065735124 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066367659 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072831366 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.077350506 seconds)
    (207/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072090082 seconds)
    (208/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066147195 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131561271 seconds)
    (210/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065033984 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072009206 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069020615 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.233214122 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094590474 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067859061 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066387715 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.219890633 seconds)
    (218/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.139557955 seconds)
    (219/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.06941247 seconds)
    (220/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072158614 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074845798 seconds)
    (222/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067034154 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076770805 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130466741 seconds)
    (225/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06690368 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137895041 seconds)
    (227/309) benchmarking ("sort", Float32, false)...
    done (took 0.135377223 seconds)
    (228/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.137500248 seconds)
    (229/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077823803 seconds)
    (230/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.132732219 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06939056 seconds)
    (232/309) benchmarking ("sort", BigInt, false)...
    done (took 0.195595985 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07679686 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069726461 seconds)
    (235/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074613082 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068912907 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069862797 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119664069 seconds)
    (239/309) benchmarking ("sort", Float64, false)...
    done (took 0.13380889 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098294858 seconds)
    (241/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071609438 seconds)
    (242/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066447579 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069827118 seconds)
    (244/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090933399 seconds)
    (245/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075775498 seconds)
    (246/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.128256984 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126999218 seconds)
    (248/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067131079 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067497598 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066355627 seconds)
    (251/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06867403 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067216352 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181972337 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148477585 seconds)
    (255/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.082117823 seconds)
    (256/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.080765718 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06769851 seconds)
    (258/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067859452 seconds)
    (259/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07147875 seconds)
    (260/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067313217 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068052749 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067915226 seconds)
    (263/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068260379 seconds)
    (264/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067941321 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076063579 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066864494 seconds)
    (267/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075441881 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073463396 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066830409 seconds)
    (270/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075673764 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.070614201 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074709024 seconds)
    (273/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075000292 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091444109 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067071571 seconds)
    (276/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.143370565 seconds)
    (277/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067469491 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092313835 seconds)
    (279/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06720841 seconds)
    (280/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066419842 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067173181 seconds)
    (282/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078847821 seconds)
    (283/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074804935 seconds)
    (284/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06691334 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088659776 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074649905 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066875317 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067554162 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065277903 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131814153 seconds)
    (291/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081847255 seconds)
    (292/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078600089 seconds)
    (293/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06694608 seconds)
    (294/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078549022 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073108443 seconds)
    (296/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.078657899 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067802841 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066421478 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137422321 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066282344 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08863777 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121252399 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065559468 seconds)
    (304/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065335908 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071273512 seconds)
    (306/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06650405 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065721389 seconds)
    (308/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090075015 seconds)
    (309/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066827363 seconds)
  done (took 33.143518698 seconds)
done (took 34.48483496 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087546147 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099914414 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074862231 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09413141 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082527348 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097218332 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075460025 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080010602 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082527694 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081449186 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079849479 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07324799 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075957075 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075966655 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074115205 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098150571 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08064595 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075193466 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074660113 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066175708 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075349908 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066653079 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066562988 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073276586 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078065931 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073824529 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076483211 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075438777 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066570386 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067197601 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071257841 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075121679 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066405305 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079564093 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076424076 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075982785 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078916295 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081561628 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068580314 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069093701 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078654223 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068314164 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075236401 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073516533 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071647014 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073582866 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075209716 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079144071 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098052955 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071176255 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07662014 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078032592 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078231742 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072320522 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07142721 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074443415 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073084669 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097905245 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075257096 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070944675 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076113183 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075753943 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072931433 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074342872 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074628822 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077320314 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078630729 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072790773 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076966426 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073801251 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066125188 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074767189 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071091217 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066571198 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077330365 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079032415 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06556993 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070682126 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074276896 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075251346 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066677601 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073325945 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065872364 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071042069 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070624301 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072638132 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072401044 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.0735628 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065973122 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075212417 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073752546 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074119094 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066210439 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079258389 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066423644 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072424443 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066446983 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066427036 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066017767 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071647431 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066158537 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070669768 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07495141 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065886787 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070837568 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07941912 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066658692 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073673125 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065849691 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066336358 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078029231 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07678633 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066593227 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07052049 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065611496 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071782705 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066904708 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065941648 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066217865 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066425215 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070724158 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066077171 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070495607 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072042825 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078237461 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.0658528 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070865353 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070179488 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066081356 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072425955 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066236972 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065779747 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06517921 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078773644 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070067252 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065486784 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071490729 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070357256 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073710792 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06486659 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073672812 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07087186 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069710478 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07147814 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064447676 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075773369 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069796972 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069136074 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065008864 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064977779 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064777668 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06537659 seconds)
done (took 12.58222632 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070571761 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117594142 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.0966694 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096922885 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086216952 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069476483 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077178898 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.094252852 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068856122 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.09652247 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088657119 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088221933 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.1096075 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066063836 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067215216 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068144088 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068487606 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.079223873 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094511904 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089298087 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106569909 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06693321 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086482814 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087194497 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.084152427 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088400575 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067644491 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067838631 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06989309 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08981401 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092244337 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069926389 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067978888 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090786927 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085325897 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080162474 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068204578 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.076225175 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067904762 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066796916 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06834606 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087648655 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074992037 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075629187 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068084907 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074788326 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068375412 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082837366 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087580292 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075806115 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082305423 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091590208 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070711969 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083503807 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06650493 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083100821 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076502204 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067482852 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067598678 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072409885 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067662767 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069890458 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078692872 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076158123 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071948036 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082213884 seconds)
  done (took 6.638979764 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084711005 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09465405 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083299532 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083812392 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066882039 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067255431 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067505271 seconds)
  done (took 1.980815026 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067758367 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090255031 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090479523 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090386589 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081395392 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091293185 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07549754 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067755835 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09629032 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066909824 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087256065 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09789388 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070862041 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079659611 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092269691 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067269643 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091546016 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067511101 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067987374 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091276534 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071939448 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094656128 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078962983 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067947063 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080241921 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068205608 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100752742 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07556672 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068824982 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069130497 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068816662 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.09454052 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079709341 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079663615 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068650118 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082295847 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080990585 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070715709 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078487573 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078985656 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080517744 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068728936 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066209371 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068927449 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070684652 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079002385 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066522063 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069097836 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069197158 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086995777 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066755843 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079580707 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070914087 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073227856 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073223455 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072853051 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075917635 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069542756 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086560386 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069395799 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08440726 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083756101 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081306091 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083956467 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06761505 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079856793 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081166854 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069087388 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069601951 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069386961 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084102981 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071098761 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069741419 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079468103 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06739042 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091876964 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091469555 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067138 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080956529 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06825945 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069135403 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079367848 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091311828 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073070889 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068716849 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07146476 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069440304 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070377386 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066138205 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07164928 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068447535 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07283887 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068650729 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070956452 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070053567 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083379377 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066481871 seconds)
  done (took 8.847170048 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070143575 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068642884 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069867566 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068641229 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068135841 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068668206 seconds)
  done (took 1.873121472 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091790572 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068038516 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08152764 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069117784 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104000437 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085441491 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083832201 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077937319 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082268868 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079978093 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084029052 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087324833 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088013672 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070698793 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083813925 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069717403 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083651975 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072569185 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079501791 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071204317 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081851438 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070724828 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070986479 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086906321 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071934973 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069648926 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077738963 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079769734 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079865275 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078237334 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070805123 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072402047 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075870788 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077779787 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083857476 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075054691 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06854651 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074652547 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071467499 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07189563 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086111832 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070577503 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071406519 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074993626 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077586045 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077816801 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074689526 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077085405 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08316775 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07443387 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074512201 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.06956879 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071968203 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075013462 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075241851 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077839206 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075014068 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08405775 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07061257 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075277936 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068272317 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072006792 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077135629 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071568814 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075584164 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074849188 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076122089 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070722007 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070847175 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068569565 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075502522 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068267911 seconds)
  done (took 6.940395433 seconds)
done (took 27.733550757 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.523825531 seconds)
  done (took 1.937989107 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.627553357 seconds)
  done (took 2.070592883 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.503832822 seconds)
  done (took 7.944845743 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.383027628 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.4566406 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.756502067 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137131772 seconds)
  done (took 3.207722047 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708686779 seconds)
  done (took 2.157678023 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236596839 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22540983 seconds)
  done (took 1.921457365 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.349848746 seconds)
  done (took 1.789682645 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.055966894 seconds)
  done (took 2.499675538 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.236297675 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164031787 seconds)
  done (took 1.846639754 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445262294 seconds)
  done (took 1.890014041 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.223113705 seconds)
  done (took 5.671537842 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.219698177 seconds)
  done (took 1.700206381 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235289405 seconds)
  done (took 1.680830294 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.731307462 seconds)
  done (took 3.178540304 seconds)
done (took 40.951184806 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083360947 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08566472 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084981012 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081173635 seconds)
  done (took 1.763282206 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076152064 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070727291 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074675656 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070708524 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07486479 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070770164 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072321074 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073457321 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070495988 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.070880568 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071165448 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070685934 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07387626 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072615087 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069917246 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074052965 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074607517 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.070700019 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074137859 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.070914794 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068852758 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073838697 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073730871 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070353792 seconds)
  done (took 3.182550281 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078843168 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073497003 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07557719 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072386019 seconds)
  done (took 1.756242373 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07648133 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087723089 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086275117 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077134859 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.08839091 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083814256 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067506187 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06730534 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068582452 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077026241 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066933382 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092801349 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085952175 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076655527 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07892652 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063889653 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065876017 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085331454 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077788857 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077602101 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068565279 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07709423 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066719144 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086938934 seconds)
  done (took 3.303786754 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08170162 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066510136 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080530707 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091875735 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093463832 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066183928 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079548286 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094123176 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.13586645 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066235944 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071976438 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066760809 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104707636 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066310105 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081387948 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109321265 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113238804 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070163058 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099131347 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066864981 seconds)
  done (took 3.168694893 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083189507 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072809692 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070803925 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.0658668 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078817491 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076073454 seconds)
  done (took 1.911103373 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068870905 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067839855 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068388082 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068464778 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074632135 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069746068 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068342821 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070580033 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070368442 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070040454 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069639161 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068623477 seconds)
  done (took 2.29674729 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.191459846 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069549082 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068797443 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066642551 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.0706086 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06672711 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081971368 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067881286 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09368492 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068911346 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069269584 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071535677 seconds)
  done (took 2.449764059 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191149256 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076564992 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225519019 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147577559 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104390448 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111302457 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112453904 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108461811 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133573091 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097727607 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153438932 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159857579 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103537998 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128922078 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087186702 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119682181 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144050022 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155625201 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099256702 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153643519 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134913652 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122046169 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141535251 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097260096 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101119772 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112407287 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072282446 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076939796 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159024155 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123121821 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13604894 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104925221 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089734438 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170060289 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156771459 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131769433 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140970461 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08162062 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117888196 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128736898 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192981822 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086780263 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149352272 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101862955 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077405405 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123070358 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108406543 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113858654 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099418903 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086190083 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275712621 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174906477 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128701698 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083557268 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116262239 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106374343 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1090276 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113982814 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169280302 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15014474 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121418306 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069618829 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107072282 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142676234 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126261903 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104976634 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117614722 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090122042 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124507817 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148660204 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117712996 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135769389 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112315288 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084995433 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115102946 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131831687 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12165671 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161640765 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118361433 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071323082 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11556396 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095167562 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077682214 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141605767 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074042734 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165576628 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095945362 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120585236 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124868319 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104714891 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105239234 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150188516 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134344184 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10118542 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083961282 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099633902 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114107246 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136790144 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08490609 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104804905 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111125999 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076964754 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12618996 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072653367 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114541153 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092345488 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112993924 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118735422 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077978899 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114393388 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246089404 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101461384 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12552558 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151272996 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086663846 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078422009 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157281219 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118532442 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100909577 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136056436 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149837173 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120654243 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095642613 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137953738 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163787222 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087658171 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152238306 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099258765 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081107338 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102752395 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117453981 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106241089 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118614065 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07878669 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115890992 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154833297 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072500466 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093595367 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126808504 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079083203 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078140391 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101451212 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100463503 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094036718 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097989157 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100815953 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129882228 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117503112 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101628544 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117939636 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093635729 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155840316 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084723803 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101847919 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100581097 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070599572 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125862025 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146590261 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077194622 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152484835 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116427776 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110757755 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112704484 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080524097 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129535731 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076449846 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070422588 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131493907 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1076798 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103662738 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.140203059 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25732636 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.121810044 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117454486 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128598603 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125148967 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126108436 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106093534 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088537404 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111141715 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123818524 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071681541 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089312089 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080444625 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100117369 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091347234 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081487016 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13234863 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117211618 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106967923 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110312602 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094841814 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141143302 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076524902 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11852067 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116768354 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092372972 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145233542 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143540191 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126724513 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097685038 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129990338 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071672589 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072866756 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086231601 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117488734 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081941846 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082065614 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10901206 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141405588 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120587584 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129382251 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117901209 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11140895 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148744979 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07150301 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116139335 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136403504 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115814911 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102177833 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088475487 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095039562 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13539106 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100202251 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170339464 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109242292 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116949423 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146949806 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09857082 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076982469 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099688399 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123168411 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096418686 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.28561828 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096824093 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084648114 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104247524 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077058013 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096908151 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119602331 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113383373 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13247203 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107333843 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125442762 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076040305 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108570624 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117241115 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116645296 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081424911 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11141542 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156584234 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093792043 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111369212 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141833722 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076904441 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134696078 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163179013 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136143141 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082128165 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101268266 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11622032 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120571202 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112607748 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131335094 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101277503 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130383622 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108626352 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083489908 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084117778 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092618501 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099947947 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108877297 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10046854 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109937497 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092811031 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123743239 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099243526 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106750498 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112591617 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098453716 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094634679 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094334871 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163998904 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114827884 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159227995 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09686867 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.133876601 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149574979 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072532157 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07596407 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077570969 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129026542 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081271174 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121146824 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.1057561 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259830264 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118950592 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132042911 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093234603 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070635753 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105304129 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126878618 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117838182 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093280825 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100513824 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150136386 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114792739 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07747039 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107895661 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111980946 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101632152 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164369443 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079512279 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105955312 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074909464 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077717846 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119531345 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142361513 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080907973 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101222289 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114829554 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10679587 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120190347 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094715271 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107051716 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125146991 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139301044 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120658689 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087294435 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106922481 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122355752 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145112405 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101033595 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097489371 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163879795 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142720694 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.149357149 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085084352 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112352481 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109919992 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105491448 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129987134 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081504925 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15095231 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07906074 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126833347 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097594283 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086238393 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121336114 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107527458 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084775374 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134659029 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110437359 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078899037 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076265227 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256244662 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114752316 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100000815 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07288916 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13098769 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07247647 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127840167 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161521255 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078284547 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101325445 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093119598 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080791592 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099192988 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098842327 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084083664 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097229494 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162056707 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085059004 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138215578 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126297013 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106311548 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129420075 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100905524 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639898564 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078824206 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14310597 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110881084 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167040295 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098560904 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116676511 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109071236 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118708055 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138696428 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101046001 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176934039 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123688725 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113555773 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076562072 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098140515 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099576305 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086377327 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102382678 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109384489 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108497776 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091668346 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11305037 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116662886 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08021842 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093376474 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145543329 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111009447 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134712577 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131190749 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081861095 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111778701 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128168375 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077084325 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.111551672 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139884197 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250455925 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099277245 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081544474 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098314619 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16354172 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071383575 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149580586 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116138411 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106487042 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110783894 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106243001 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12463602 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100390107 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116337667 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090492961 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104627179 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144760641 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08190719 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076733773 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101062738 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105708373 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094766558 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094905804 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096097509 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142754656 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070676785 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094938504 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109979436 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136178699 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161359981 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102241504 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081634775 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11409757 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113868899 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109393956 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115871183 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079653885 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078795145 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080037082 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.09816283 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120724615 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109994657 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114297269 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104871717 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15177084 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08147162 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220791988 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092799746 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101397423 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086383818 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077895807 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093146209 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092909044 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099669378 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107120365 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163655113 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093123423 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087226678 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089802538 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072727836 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080947461 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118748606 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104374455 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111449892 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099306469 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.078947025 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097786569 seconds)
  done (took 56.630292374 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.105279314 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082835741 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097703709 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14406339 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121437669 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199704793 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150906823 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189253355 seconds)
  done (took 2.688124728 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068576636 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094035955 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103760893 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082728671 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06664347 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068213647 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227560381 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083101405 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06671853 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091202087 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077101284 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068588261 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.441412739 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070230758 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068475883 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076169724 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067602474 seconds)
  done (took 3.375132271 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.383026581 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603284262 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.346726323 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076393905 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.980676882 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091286292 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.189729429 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140302473 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081258764 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536674811 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.372637906 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135978531 seconds)
  done (took 18.501646262 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083387192 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076886803 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091443533 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091106268 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079803231 seconds)
  done (took 2.065525601 seconds)
done (took 104.557129073 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082594408 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.436095062 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070273054 seconds)
  done (took 2.09493331 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091922535 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.09010674 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089584771 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088050886 seconds)
  done (took 1.93051157 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075341163 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077778191 seconds)
  done (took 1.715874644 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231526716 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.179960378 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099611397 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084014069 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081098715 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081757788 seconds)
  done (took 1.813809889 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073731823 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073731405 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074414148 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074039288 seconds)
  done (took 1.858513386 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068629293 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067750101 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069777431 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072280024 seconds)
  done (took 1.842398069 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085305873 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085732005 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080142131 seconds)
  done (took 1.814954672 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102440853 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091725586 seconds)
  done (took 1.758690841 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08177835 seconds)
  done (took 1.646984079 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091329995 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101312847 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13406271 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117369858 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140304447 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.116620225 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085279869 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086276022 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079748479 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087178249 seconds)
  done (took 2.604105857 seconds)
done (took 21.233934212 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079475667 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374984394 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362156039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091507203 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671124247 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358611292 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.9827727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093574757 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142937164 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071127539 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086440392 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649780317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.98580331 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330446015 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969390018 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332353746 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651209825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06969652 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068809982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069560442 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974797256 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068820982 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069073957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069772221 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650156088 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373932787 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069941745 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.331650755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070947883 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071977195 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358117823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070367048 seconds)
  done (took 16.167709294 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071545871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122634465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073938493 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085772611 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072276375 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071085034 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072588954 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070135459 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121732401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069544017 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0864387 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069219587 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073464557 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070089106 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089094402 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069720386 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070694704 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071359655 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070342043 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071154959 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089823869 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069997207 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070639124 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071165227 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070742866 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082838822 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073712265 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070642368 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071284208 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072585694 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073199221 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071303543 seconds)
  done (took 4.040213033 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117568821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126981048 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074922664 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107393427 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116119173 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074450469 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149298465 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096293471 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129003395 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070172877 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087097954 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069607774 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104113621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070626141 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090271382 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070942604 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071212921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071007482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070840969 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071081466 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090057066 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070361307 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070633547 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07099117 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070892679 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084616054 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070918114 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070697796 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070561895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072482669 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074018851 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071316199 seconds)
  done (took 4.307210807 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071396593 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074352465 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081279455 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082352698 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068269026 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071701005 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073726083 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069581662 seconds)
  done (took 2.176559967 seconds)
done (took 28.263452177 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079537689 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068906613 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072069145 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087692671 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075069453 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079722357 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066354999 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076252871 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073279372 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073099019 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075274836 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068438852 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07122674 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066076933 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073937785 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067450358 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082185051 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072261092 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081185362 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082468116 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071192842 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073933333 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076298251 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081857526 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082323043 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082045249 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077881094 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074976057 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069992814 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071434581 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071555857 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080485862 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082221336 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082622546 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068704648 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06835519 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072695687 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069907681 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083310192 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077900278 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070325256 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077868789 seconds)
  done (took 4.715948559 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085438794 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090649803 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082741273 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080391047 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091269372 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083890049 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087574147 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078522044 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078418564 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087219686 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074668634 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081847425 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080105259 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073737176 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078230724 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076074046 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080376424 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074614077 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078456449 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078675866 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089278299 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073763589 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088886288 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081029286 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076848399 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082153255 seconds)
  done (took 3.709121691 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074104591 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086671451 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093554758 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144561706 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113900254 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083189432 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082754898 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092768521 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09802423 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070085393 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074337689 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094114644 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096130646 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078087561 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072082443 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088116944 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086512248 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071789833 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076157808 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098570677 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090552194 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086679722 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095908093 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086103104 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068701537 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072149465 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073799329 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085523571 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071973814 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080660868 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07213491 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076293854 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070505787 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079754559 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072577935 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069055904 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093817432 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080463048 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08163696 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069650416 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078970653 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070149166 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095016669 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132114285 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07045144 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075351643 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074131997 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08068182 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068355219 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096604773 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081273575 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068652142 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069783357 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068137586 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068470541 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071212447 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070453399 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071645972 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079098848 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075568501 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091069778 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074095722 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086459883 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068377237 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079463608 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06834294 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070365421 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067552315 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097223068 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070788271 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113120983 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070069486 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067785811 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079944652 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079216758 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075057738 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068726645 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086558473 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080324159 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07329689 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077489441 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071962801 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072900157 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099358156 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069429591 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068854429 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067801367 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07250832 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07263959 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069831892 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081341587 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068277372 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072372775 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08704407 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068893848 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069787979 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073068289 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071294925 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068322284 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080129409 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073751856 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070328628 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07942253 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06975807 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072431478 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082051003 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075501983 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068126808 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071118083 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072542633 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070038821 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070085173 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072528198 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.0707102 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075794201 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075462558 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074984026 seconds)
  done (took 10.810363429 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166865502 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159638444 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071989585 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150000132 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07776538 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081290176 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153432158 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096932375 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071593209 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072476924 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070160916 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110548722 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106874512 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117368721 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081964178 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070182801 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092410855 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116201233 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155810481 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150071263 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094463152 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07948019 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073993991 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071634188 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071245703 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079086239 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08707924 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078224209 seconds)
  done (took 4.435399218 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079549323 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104017252 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073886383 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092537618 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089019493 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069962409 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071268306 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07117424 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086000181 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080003292 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070610295 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07537964 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073734751 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073530094 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070348729 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076228813 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076645702 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068962232 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073790518 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075346288 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079871281 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09554909 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073730016 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069478943 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072133106 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069665889 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078272705 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082319771 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069775276 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105845184 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067475541 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074786788 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086916107 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070291921 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069507302 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069816998 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069999792 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06984808 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071011171 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068311174 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068615411 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073836369 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068397318 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077865377 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082652013 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071249004 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071739613 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072609636 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072580167 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067711665 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07236895 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072376203 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072856889 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077366217 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073894161 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07265303 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070608148 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096199952 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075709792 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069477045 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06882164 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068598316 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07221326 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079339145 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08524979 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071988724 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068613155 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069621713 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082517254 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082944945 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068913011 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074317606 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067964853 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071393375 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072308143 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07217464 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070790952 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06813364 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073358103 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.0701073 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070279871 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069304083 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069163111 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072380309 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067875977 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068578401 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069847473 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071593731 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078538598 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068917262 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073511654 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070630317 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069209882 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072857036 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075325855 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073009357 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08017883 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080929404 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070354185 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068129961 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083386854 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072513138 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069368609 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075677953 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074270559 seconds)
  done (took 9.439286512 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092151357 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071371839 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087846674 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094483572 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080443185 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075957008 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079752796 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069677496 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085967059 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074284226 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077056501 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068308302 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080548323 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079316155 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069859955 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080271843 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072228424 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086727446 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083912113 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068895454 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078335509 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081864678 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082213605 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084240093 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083122146 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084733464 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081749633 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080550922 seconds)
  done (took 3.870001423 seconds)
done (took 38.557245487 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.684361776 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.836348227 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.654709579 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.844417315 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.719498492 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.868335979 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.748631328 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.648809354 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.964680543 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.694969203 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.983422633 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.88253951 seconds)
done (took 64.263485807 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.689404221 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.80472785 seconds)
    (2/2) benchmarking "String"...
    done (took 1.901071 seconds)
  done (took 5.295149511 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.909181867 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.313620248 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.907372036 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.648854398 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.655023433 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.100669013 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.418440393 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.15579334 seconds)
  done (took 29.789646661 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.865983555 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.874170885 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.362902225 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.400768029 seconds)
  done (took 15.141742699 seconds)
done (took 61.508154562 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.703379941 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.69848482 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.686862471 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.648982637 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.74361839 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.672233111 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.782496986 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.660607634 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.650494381 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.657072963 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.653162372 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.135906037 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.657859122 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.809504175 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.650771768 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.652247456 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.67998241 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.269825932 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.853857005 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.65879449 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.655303463 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.682992447 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.653126828 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.65156634 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.688329838 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.651813391 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.041865374 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.665535468 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.262856824 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.65632538 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.689488319 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.975087862 seconds)
  done (took 199.789507625 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.650649993 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.681117649 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.859135923 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.652001318 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.13074231 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.847404865 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.747447414 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.172790709 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.65646602 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.665151643 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.959686087 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.650993418 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.981577709 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.627723572 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.686810908 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.708736932 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.810154904 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.9695683 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.690127033 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.795353191 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.657081441 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.838174675 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.791251181 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.912258893 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.686501445 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.750355533 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.661630923 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.654020894 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.834399649 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.787431657 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.657863172 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.678646587 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.812025153 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.523084464 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.662986797 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.656971401 seconds)
  done (took 166.099554708 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.832324228 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.652750565 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.651247399 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.654044262 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.651891126 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.658218902 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.652147891 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.771535568 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775918139 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.315635944 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.178129496 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.710505 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.651991332 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.411601622 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.652300641 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.716871375 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.663359646 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.65558527 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.667201372 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.677474948 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.6556627 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.655071879 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.774129225 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.6640402 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.651450935 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.663248027 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.653400365 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.657814634 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.040371169 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.653017376 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.709398332 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.655745209 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.662276581 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.89652805 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.654696492 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.655183282 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.484568331 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.180717126 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.885577369 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.653259849 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.656050435 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.659339749 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.653550075 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.881339419 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.654023594 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.653635985 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.655686372 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.653859189 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.654783104 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.825555536 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.653806815 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.776315675 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.654477309 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.138591263 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.653476411 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.655817478 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.031902369 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.260806198 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.657021708 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.657152909 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.654507085 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.655428328 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.660509259 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.955361998 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.730441915 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.655798204 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.655502192 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.660420908 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.65509901 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.74794302 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.657732873 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.363661302 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.668969134 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.784762667 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.775600799 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.65930681 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.719665176 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748354063 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.655240677 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.655395923 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.655197534 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.654815827 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.736310364 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.65561549 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.767373167 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.668371934 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.657410304 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.713993103 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.726177468 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.656386982 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.480325838 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.658753855 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.655397986 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.89138423 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.720097288 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.657127072 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.657982457 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.743536524 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777359755 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.374421748 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.659225565 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.97336656 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.65668628 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.742338397 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.657341818 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.783938296 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.660533664 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736186218 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.66552827 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.657258018 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.693067785 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.658600765 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.6694576 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.65918305 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.029660152 seconds)
  done (took 387.103706409 seconds)
done (took 756.474653699 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.257966365 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.21961927 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.320579404 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.239112556 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.211123773 seconds)
  done (took 12.844947035 seconds)
done (took 14.440801569 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.738694782 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.740752639 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.675912068 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.737447746 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.672644104 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.73638011 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.721400826 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.679215268 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.70753069 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.679783914 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.706552993 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.678801962 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.664406694 seconds)
  done (took 23.73620219 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.882568683 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.881975757 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.722140737 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.879315015 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.698986671 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.887599108 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.81088349 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.798645086 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.813981474 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.668071329 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.665798553 seconds)
  done (took 21.308254057 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.885715937 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.894586677 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.729664003 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.886044841 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.702717453 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.884492194 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.814741423 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.805435463 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.800558404 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.669294905 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.66618688 seconds)
  done (took 21.33758125 seconds)
done (took 67.978984545 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.661025888 seconds)
  done (took 3.258780968 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.678915256 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.83670649 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.662537217 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.663188352 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.661900899 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.665147268 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.662112008 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.6621825 seconds)
  done (took 15.092228668 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.661583819 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.661894118 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.661756421 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.661754654 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.662351151 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.661685421 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.662691856 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.661701475 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.662281568 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.662967951 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.663215433 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.663266829 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.662276334 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.661889991 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.662391068 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.663611984 seconds)
  done (took 28.195997165 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.664460379 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.662586332 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.662751386 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.662694286 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.663465824 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.66283429 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.66436831 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.66288624 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.661715324 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.66323736 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.662872921 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.662793847 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.662876806 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.662542005 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.66317362 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.663206552 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.663397864 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.662241073 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.667101605 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.662824163 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.663305199 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.662946586 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.66278034 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.664660415 seconds)
  done (took 41.520135122 seconds)
done (took 89.664574634 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.418152197 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.271146926 seconds)
  done (took 9.288950085 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.666838614 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.663804294 seconds)
  done (took 5.002498983 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.663056751 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.663375783 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.663983463 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.663795066 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.663903983 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.662866902 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.664417233 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.664610103 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.664999942 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.665157447 seconds)
  done (took 18.240860709 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.665644641 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.663938439 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.664026706 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.664917638 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.666448644 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.666908675 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.666915825 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.666546371 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.66642648 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.667062229 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.665500433 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.664817312 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.664488371 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.66404688 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.664847796 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.663538342 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.66397369 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.664768432 seconds)
  done (took 31.576177266 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.665167822 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.664623933 seconds)
  done (took 4.931238991 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.663573149 seconds)
    (2/7) benchmarking "second"...
    done (took 1.66479722 seconds)
    (3/7) benchmarking "month"...
    done (took 1.664034342 seconds)
    (4/7) benchmarking "year"...
    done (took 1.665105633 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.664764058 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.664642182 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.664344221 seconds)
  done (took 13.25344186 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.666358535 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.833538333 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.898192693 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.303385302 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.665606408 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.668119573 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.602921342 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.668214932 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.670067264 seconds)
  done (took 18.579246525 seconds)
done (took 102.471999454 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.552139536 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.666935457 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.933025087 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.724024173 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.728966592 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.001434256 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.699217385 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.943453969 seconds)
done (took 41.851292893 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.691585385 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.422229809 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.445384517 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.802201122 seconds)
  done (took 15.273176044 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.663887918 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.964109395 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.690265595 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.544518 seconds)
  done (took 21.469526586 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.025438775 seconds)
    (2/2) benchmarking "read"...
    done (took 2.016071838 seconds)
  done (took 5.64953157 seconds)
done (took 50.688052774 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.666926339 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.666481533 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.666395504 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.666718149 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.6672075 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.666711842 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.667100967 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.667945712 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.666916353 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.667264864 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.666334245 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.666669633 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.66688384 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.666108904 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.667058892 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.667525022 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.66659841 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.667175448 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.667373321 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.668507105 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.668047548 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.668137828 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.667973386 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.668624493 seconds)
  done (took 41.617422407 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.668675719 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.668666753 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.669017399 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.668386112 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.668242049 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.668640569 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.668541363 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.668581984 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.668498635 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.669133395 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.668962978 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.669064911 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.667760783 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.668088057 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.668874379 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.668258362 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.668812821 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.667968425 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.668459083 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.668816564 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.668663023 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.669205262 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.6687198 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.667994978 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.668921752 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.669095345 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.669040661 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.668648438 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.669169109 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.668311673 seconds)
  done (took 51.665350065 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.667857766 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.669028152 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.669709958 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.669077624 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.668882517 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.669578951 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.670212547 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.6688333 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.669024109 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.670262317 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.66976149 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.669581862 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.669374682 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.669303213 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.669715819 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.669459361 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.670629693 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.669335597 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.670052003 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.669794282 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.670787879 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.671081597 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.670839113 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.67030384 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.669794381 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.670062455 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.669475528 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.670070762 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.670135431 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.672481852 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.670330164 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.670288718 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.670246833 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.670819624 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.6712344 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.669916981 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.670048563 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.670483504 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.671693312 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.671039776 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.672304616 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.671544133 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.670804927 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.671729551 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.670603551 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.671151558 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.671331427 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.67069618 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.671461722 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.67164296 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.671534746 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.671649013 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.670655958 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.671444435 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.671202907 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.671232369 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.671360685 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.672014368 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.671777106 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.672128661 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.671877693 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.671406291 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.672061369 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.671738995 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.671830144 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.671105128 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.672453958 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.671837663 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.671474826 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.673213096 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.672316912 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.67250219 seconds)
  done (took 121.900631106 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.672264153 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.673265682 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.672372945 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.672398922 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.6726593 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.672424862 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.672850056 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.672421464 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.673381823 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.673478759 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.67251662 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.673087156 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.673867351 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.673879975 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.674082178 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.673420708 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.67374239 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.673881305 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.672869299 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.674430694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.674363324 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.675401945 seconds)
  done (took 38.422654986 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.673293957 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.673931271 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.674180154 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.673532357 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.674231755 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.674874354 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.673901996 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.674137872 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.674689624 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.673089989 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.674567113 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.674883103 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.674659023 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.674133147 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.673752407 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.674178008 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.675249384 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.673998026 seconds)
  done (took 31.745548641 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.6743384 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.67429454 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.673957919 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.674816631 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.673426083 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.674929577 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.674386056 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.674549211 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.675027521 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.675137604 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.674290004 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.675048894 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.67461695 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.67440006 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.674201655 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.674894021 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.675395692 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.674399078 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.674781352 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.675898767 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.674467585 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.675427924 seconds)
  done (took 38.454012835 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.674666624 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.674480387 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.67562504 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.675256506 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.675403289 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.676277058 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.67730034 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.675749181 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.675555622 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.675384741 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.67634967 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.677181403 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.676046921 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.676496454 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.676956149 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.676790472 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.676451546 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.67631079 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.675858042 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.67590386 seconds)
  done (took 35.132193238 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.677007068 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.678490774 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.677618533 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.677699116 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.677715741 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.677138469 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.677041257 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.677513668 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.677707365 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.677794563 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.677387609 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.677965933 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.677629486 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.67801087 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.677529522 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.678297654 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.677662089 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.678450292 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.677225444 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.677895483 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.678279737 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.677417621 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.679165791 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.678422189 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.678868074 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.678488651 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.678963808 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.678213191 seconds)
  done (took 48.595291308 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.676908756 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.677384417 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.677278077 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.677253406 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.678556338 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.677638738 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.678481708 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.678240601 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.677508162 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.67760114 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.67871854 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.677397486 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.677799476 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.679093473 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.678485493 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.678764096 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.677770348 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.678930701 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.678563048 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.678653432 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.67813798 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.678452922 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.679097124 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.678567678 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.679113518 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.67893475 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.679309484 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.679190716 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.678951168 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.679145872 seconds)
  done (took 51.964166613 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.699098908 seconds)
    (2/2) benchmarking "in"...
    done (took 1.698221052 seconds)
  done (took 5.01265173 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.679679753 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.678262764 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.678836235 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.678865179 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.678990119 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.678825918 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.679377841 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.679571977 seconds)
  done (took 15.048238407 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.680445619 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.679742789 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.679780199 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.67973511 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.679936259 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.680432117 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.687763696 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.679807351 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.684042018 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.681816911 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.689082833 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.689079098 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.684315724 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.682054472 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.681879206 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.683414425 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.680571117 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.681259501 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.681141845 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.68196254 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.68104501 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.683923201 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.68410272 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.680447677 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.683136256 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.692968738 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.685996914 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.680860185 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.682770524 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.686249511 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.682870509 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.680537355 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.681423082 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.682040181 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.681836312 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.681863661 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.690122097 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.684187526 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.688886129 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.68515591 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.684846544 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.682868647 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.68426622 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.684531235 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.686973468 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.682198438 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.681325347 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.681802576 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.681701519 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.685774207 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.690448899 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.684036746 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.682916256 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.687798744 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.684839061 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.690363325 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.683046963 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.68627584 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.693563597 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.693070577 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.695099906 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.692268495 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.68576219 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.683038429 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.693392821 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.709215907 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.689788258 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.683276872 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.682905266 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.682464831 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.69136082 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.696132916 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.694256499 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.684224056 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.683265249 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.683414155 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.685842575 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.684044035 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.691270705 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.689097757 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.683568286 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.683860552 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.694050432 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.709368757 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.684641816 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.684957694 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.683682983 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.684164649 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.685283612 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.696160648 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.684564524 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.684526725 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.684058023 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.686481741 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.684655137 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.683749335 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.684128928 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.686656265 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.684620319 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.68497823 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.684671349 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.689134946 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.696737525 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.685333294 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.686091153 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.693523556 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.687201219 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.688863653 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.694465718 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.686343894 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.686589394 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.687934493 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.694669586 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.685746315 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.688839313 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.695019072 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.685558177 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.687602406 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.685242374 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.68568383 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.695239573 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.714279 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.685864736 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.68504758 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.691959639 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.6977474 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.685376119 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.690964576 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.686257632 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.685713199 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.685708961 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.688920931 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.685468923 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.688279417 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.686376036 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.689531695 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.68601341 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.686423578 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.686411349 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.688878309 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.688069583 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.688689842 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.688990269 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.689808277 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.6866196 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.689920773 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.69363313 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.687087289 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.689241816 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.688272579 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.687324588 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.687671526 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.690108949 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.68807595 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.68835303 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.688013778 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.689517393 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.687824418 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.689733967 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.688067231 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.688186263 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.689050446 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.693614967 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.688302441 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.693253721 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.689084041 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.688461941 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.688223618 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.688269566 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.688615644 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.688403322 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.688037027 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.692132106 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.697628869 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.688928956 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.689182891 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.692416724 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.688881295 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.687995465 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.688571674 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.693357722 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.698358396 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.688722553 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.696006086 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.688620161 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.688864637 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.689494727 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.691022113 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.69047357 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.689232198 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.693991193 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.696086841 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.701324157 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.700237067 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.690183296 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.693533503 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.690746696 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.693604165 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.694278542 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.690406977 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.689282345 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.689489824 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.691611855 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.689479934 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.692772646 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.689746176 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.689890181 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.690163426 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.690439055 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.689289957 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.69029416 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.693047406 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.694098369 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.690027421 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.690859671 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.690736326 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.691294208 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.68937013 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.690377737 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.689825513 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.690308884 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.690736715 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.698382737 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.690337099 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.692793563 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.69382229 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.691655157 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.690493987 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.691618263 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.694971386 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.693571433 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.699263788 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.691896193 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.693268013 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.69928673 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.693026195 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.690756381 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.696376377 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.693139723 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.693173887 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.696516578 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.701727204 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.692113765 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.693520682 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.694051691 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.692969797 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.691858788 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.69686149 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.688844712 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.691034358 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.688312517 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.692324083 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.689696892 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.693702138 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.692739123 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.690970733 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.694861518 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.690929794 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.690320998 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.694300704 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.690874161 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.691032978 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.690063234 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.69521491 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.699481862 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.697118325 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.690168291 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.691236173 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.691466192 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.694281096 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.693799178 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.69052293 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.692928525 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.704483407 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.700339632 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.699367768 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.695342092 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.691093616 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.699605437 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.692452298 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.696797017 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.693771947 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.6938779 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.693947351 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.694373565 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.691980605 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.694364733 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.691945427 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.695182355 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.694765615 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.696776434 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.691895201 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.693672596 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.691380218 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.692546516 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.691453904 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.694271239 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.69204963 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.696537506 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.69690087 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.692725106 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.694234193 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.700547238 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.695549727 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.695457022 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.694334544 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.69399596 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.692283157 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.693816536 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.692336986 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.698259301 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.701630405 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.69749925 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.705196065 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.696397094 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.703854528 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.692575837 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.698592111 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.7011873 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.6927672 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.692180275 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.6935415 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.693621281 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.700954148 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.693768364 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.694587964 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.698085214 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.693769166 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.693332288 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.693446155 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.694264534 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.692877859 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.693710938 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.704328477 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.695618882 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.700393317 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.698507574 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.693684912 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.695187744 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.694120886 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.69321614 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.700068821 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.694916244 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.697729723 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.696037745 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.694419407 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.695053842 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.694408394 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.695208901 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.693880547 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.69448434 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.702098436 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.695492224 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.699589557 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.69464313 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.704294912 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.694985367 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.70263488 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.696221145 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.695248235 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.695048251 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.694101561 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.69685287 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.695466558 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.698384255 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.695963151 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.696629564 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.698971934 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.695853975 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.697009295 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.698590703 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.694447174 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.697372001 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.7059568 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.719809408 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.699106594 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.699402568 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.69619186 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.699677897 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.700252063 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.695257575 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.695684868 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.70136533 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.708639821 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.705289706 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.699035767 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.6971673 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.698833016 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.696867979 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.695666205 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.696111594 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.697060547 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.696035167 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.69697565 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.697264168 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.703098013 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.697232091 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.698036285 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.700689649 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.698169547 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.709842598 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.697840914 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.698835424 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.696889646 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.697062158 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.700439485 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.69975692 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.697449585 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.700988786 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.697181219 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.700258064 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.705716792 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.704328843 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.701930135 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.699742389 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.697336412 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.700217545 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.698741881 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.698240768 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.69871507 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.698567568 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.701244565 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.699020332 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.698730377 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.697609375 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.698016523 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.6993898 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.698063916 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.70311691 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.708500227 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.700755756 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.697669714 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.698518821 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.698355878 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.698785635 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.70128578 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.707854176 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.703400379 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.710907962 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.70645231 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.703795086 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.701055229 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.703181469 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.709532465 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.698908157 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.701305857 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.699983152 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.702965584 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.700167125 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.705028913 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.700987575 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.708401155 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.702780149 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.700576478 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.70874 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.704316729 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.700101776 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.703366086 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.705779258 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.702411325 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.699462864 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.701012552 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.704787255 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.711204295 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.707210626 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.703801653 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.704798237 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.698541595 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.703503599 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.704955934 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.700419229 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.703225074 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.699849978 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.703786196 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.700419083 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.700092264 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.700380312 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.700539905 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.700906973 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.705470526 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.708587221 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.700353822 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.705548525 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.703395201 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.700741438 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.702178746 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.701179233 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.700748258 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.701004838 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.701365934 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.700991146 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.70417309 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.705949517 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.700406021 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.702995008 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.705612819 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.702163006 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.706046254 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.713680846 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.709230054 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.701724888 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.701459298 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.702059816 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.707027665 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.702069158 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.702556564 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.704758212 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.70516905 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.701683121 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.703091443 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.704559027 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.707502165 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.71938891 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.702066161 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.704790466 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.705240713 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.707897206 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.70199178 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.702549684 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.702678731 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.704524313 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.70746088 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.710463377 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.70246093 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.711477166 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.705249079 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.704497697 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.707453658 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.708676791 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.71115533 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.707258225 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.702608346 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.703589591 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.709438925 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.720937907 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.703141356 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.712975734 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.735682922 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.704211348 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.705090666 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.704364293 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.705479092 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.703066348 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.705714175 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.703937153 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.704174011 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.703323449 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.703920249 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.704984629 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.712868094 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.707350808 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.703859439 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.70473909 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.704821144 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.705557059 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.704018957 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.703798173 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.704144501 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.704615294 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.704813018 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.704227912 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.706872041 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.717586989 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.715230058 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.704263244 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.704886411 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.704708275 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.710324943 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.709956985 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.71754833 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.713977272 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.705067322 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.704876745 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.708274781 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.705277384 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.705550925 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.708305092 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.707989019 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.706832618 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.705116423 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.718213715 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.714788806 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.711362723 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.706713099 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.706126374 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.706601265 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.709122388 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.706132419 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.706109654 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.710189684 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.707100174 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.710045906 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.706424767 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.707051822 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.710850985 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.714194713 seconds)
  done (took 1012.3371536 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.707341864 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.705826253 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.70613332 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.707091249 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.705950557 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.706804147 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.706228852 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.705978206 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.706561073 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.70642035 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.706673384 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.706993093 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.706564377 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.706776021 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.706747153 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.707285685 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.707304529 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.706512208 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.707281822 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.707716404 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.706633989 seconds)
  done (took 37.482381154 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.706724256 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.707325672 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.707255909 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.706921026 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.70796535 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.706567034 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.707152657 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.706635879 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.707453022 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708579453 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.707928629 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70765453 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.707838189 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.70812915 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708512544 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.707747456 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.707627267 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.707413902 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.707772055 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.707537976 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.707694902 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.707784025 seconds)
  done (took 39.209029091 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.708787762 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.709077978 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.70999191 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.70763887 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.709074883 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.70759616 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.708703286 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.707985348 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.707611956 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.709464459 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.708796275 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.709925147 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.717321688 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.716701995 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.711434314 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.708340329 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.855094614 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.709214987 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.710289497 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.709788047 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.708699071 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.716001592 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.709058432 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.707946686 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.707533286 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.708806482 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.709099173 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.708639978 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.70947368 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.710723719 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.714549396 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.709500052 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.71170783 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.713218643 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.709852691 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.711616288 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.714466539 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.709922301 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.709880474 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.709980544 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.720831941 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.733331863 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.709848525 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.716957096 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.710486866 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.710099661 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.71501418 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.718215036 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.71028539 seconds)
  done (took 85.643684364 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.710558123 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.71134321 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.710165825 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.710853913 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.710717037 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.710594083 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.710498178 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.71143957 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.710222395 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.711617428 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.710136637 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.710275456 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.710813202 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.709871613 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.710613093 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.709819597 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.711039781 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.709712905 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.710272186 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.710393133 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.710295559 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.709823135 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.710602999 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.71225557 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.711057674 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.709969055 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.710842463 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.70995228 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.711429014 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.710534073 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.710962401 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.711925928 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.710254948 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.709414623 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.709405614 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.709816479 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.710510096 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.710525087 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.709273638 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.708998496 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.708811978 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.709439715 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.710487678 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.710998568 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.710182779 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.710458558 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.710239537 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.710636526 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.711728528 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.710265859 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.710590403 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.710629124 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.710987396 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.71109594 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.711673956 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.710975804 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.710691826 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.711363921 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.71153743 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.71144144 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.711314387 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.709620349 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.710583759 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.710173923 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.709199086 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.711548531 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.710681542 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.711047647 seconds)
  done (took 117.965418068 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.710249247 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.710214929 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.710710584 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.711063505 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.710192881 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.711229091 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.710761429 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.710026328 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.710286539 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.710314602 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.710038787 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.708685687 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.70965436 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.709878788 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.710214473 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.709755569 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.70913318 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.709704045 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.709608772 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.710050368 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.710636845 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.704970779 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.704650808 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.704789449 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.704896552 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.705825969 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.708762909 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.704232371 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.70424855 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.703630959 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.703735364 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.70408084 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.705038451 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.7033546 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.703040052 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.703117209 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.703331416 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.703598627 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.70470437 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.702875112 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.703262625 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.703288908 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.703230896 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.704071395 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.703548066 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.702592327 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.703871258 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.703588775 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.703088818 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.703108613 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.703897946 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.703852153 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.704667536 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.703734361 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.704071591 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.704404406 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.703991914 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.703931309 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.704206578 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.704509856 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.704838007 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.70434034 seconds)
  done (took 107.426958977 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.703477837 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.702797935 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.703572082 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.704236688 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.704407033 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.704957004 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.702807724 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.705249839 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.703332661 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.70437984 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704558497 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.704010885 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.703920073 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.703092187 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.703370477 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704206569 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.705111402 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.703899538 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.703629348 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.702883706 seconds)
  done (took 35.717171515 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.702989647 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.704695172 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.703886695 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.704473449 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.703990133 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.704304852 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.704067088 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704758796 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.704245086 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.703383635 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.704438808 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.703982497 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7039162 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.705397545 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.703717982 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.703717989 seconds)
  done (took 28.905494153 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.70505454 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.705620142 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.705785554 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.704700172 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.704182732 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.70463297 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.704722254 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.707954107 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.704108 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.705126403 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.705154167 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.705175858 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.704298969 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.705970806 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.70447575 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.704699609 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.705582063 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.704937215 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.7041851 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.706530428 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.705881904 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.705315619 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.704577393 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.705067455 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.705144209 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.719586956 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.702789683 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.703205549 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.703045569 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.702332896 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.703593469 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.703373377 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.700504941 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.699972431 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.700721672 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.700849322 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.700636048 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.699129948 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.697360301 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.697769349 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.697421651 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.6974734 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.697349844 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.697580113 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.697695351 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.696583006 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.69761649 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.697784972 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.698976717 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.697722719 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.69766275 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.698091041 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.69798644 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.697767792 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.698741667 seconds)
  done (took 95.272628544 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.696410636 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.696753574 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.697113543 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.697484111 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.697299795 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.697515175 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.697939958 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.697601313 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.697373831 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.697898887 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.699087059 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.697301908 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.697733054 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.697675859 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.697449122 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.697575129 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.698213934 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.696520453 seconds)
  done (took 32.187817946 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.696557127 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.697390513 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.697455041 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.697609971 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.697277389 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.697216881 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.699053998 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.699284719 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.697544551 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.69817118 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.697171509 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.697180928 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696988013 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.698571427 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.697863238 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.697397977 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.696669367 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.697425991 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.697080939 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.69752264 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.698567819 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.697898054 seconds)
  done (took 38.981592473 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.697525298 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.697537607 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.712467323 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.719346918 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.719072127 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.732486827 seconds)
  done (took 11.911814213 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697215656 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697691678 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.699171347 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697069047 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69718692 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696566024 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697230881 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698058585 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698854177 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696400987 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696760349 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696929968 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695856883 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696730511 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698210941 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695795135 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695858644 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695619063 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695680477 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695368464 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696883165 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695097344 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69438998 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694801521 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694941083 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694931322 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696872701 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694322136 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694063418 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694086507 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693988044 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694654134 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694599324 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694647909 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.692676889 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693298446 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693470891 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694075491 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693674668 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.692361457 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.691818119 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.692377128 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69222926 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.692640679 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.692252606 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.689407309 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.690815891 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.690691593 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.690355152 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.690768427 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.691998199 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.690243274 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.690265214 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.690155232 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689865902 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.690362817 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.690678626 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.690108251 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.690252621 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.690122258 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.690342654 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.690233537 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69118414 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.689886508 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689272711 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.689402258 seconds)
  done (took 113.418545605 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.689092604 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.689604022 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689534226 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.688655482 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.688753252 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.689630953 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.690282976 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.689384523 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.689417075 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.689807315 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.689613462 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.689491464 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.690738371 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.690247104 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.689401549 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.689456597 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.689641483 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69043838 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.691287349 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.689526897 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.689176885 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.690413378 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689621121 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.689328619 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.690765121 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.68962316 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.689348234 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.690154552 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.689381195 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.689046872 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.690913856 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.689526315 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.688987407 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.6890973 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689443649 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.689197864 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.691623869 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.688732023 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.690072466 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.689289155 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.68967788 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.689603061 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.690727939 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.689595749 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.689595934 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.689316952 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.689950277 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.68968323 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.690854066 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.689599353 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.690009787 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.689906248 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.689567739 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.6898688 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.690999039 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.689021257 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69021932 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.689616369 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.689800822 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.690261778 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.689930186 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.689005741 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.690035994 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689903283 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689423714 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.690104008 seconds)
  done (took 113.151202357 seconds)
done (took 2350.776852485 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.754648308 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.705539533 seconds)
  done (took 15.084706946 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.853227583 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.805253366 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.693269554 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.700182875 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.692678472 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.719315201 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.710182121 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.692984159 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.692461058 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.692890253 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.691493667 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.876085907 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.702407327 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.692282707 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.691961116 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.783316098 seconds)
  done (took 49.318163403 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.695425458 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.696502082 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.704669155 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.697498277 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.693959243 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.706359746 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.724858276 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.699320223 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.728227888 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.706351274 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.761915515 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.705482018 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.694895992 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.745051165 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.707277547 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.709125287 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.788313084 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.770343595 seconds)
  done (took 32.56177117 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.770981222 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.699393209 seconds)
  done (took 10.104073751 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.688187597 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.745382884 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.695054842 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.701701199 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.689421515 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.705289041 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.719627425 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.72067654 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.708265617 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.723455973 seconds)
  done (took 68.726944993 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.697271936 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.693695916 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.691379191 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.689723184 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.687350648 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.693593434 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.69212316 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.694081143 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.345666754 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.72641466 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.698642635 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.696572925 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.69083918 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.691841431 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.688649625 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.715950276 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.803890616 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.6881988 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.687714649 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.696079753 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.693010514 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.743259881 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.703785349 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.691326293 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.721408862 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.344638046 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.700755541 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.697149702 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.826669633 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.689901189 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.692318601 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.878189817 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.69669417 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.15680379 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.966955907 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.696973818 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.703164055 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.696986439 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.688070674 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.811344334 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.692359813 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.696042742 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.618321538 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.944455884 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.783928277 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.734306716 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.992622396 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.707032519 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.691441204 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.719837018 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.693402668 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.691636792 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.705246591 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.207768788 seconds)
  done (took 122.973755131 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.690453839 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.03753992 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.854905841 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.689020439 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.973297075 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.895024113 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.691853083 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.735564134 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.691265834 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.917621534 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.939642855 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.792517494 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.690541451 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.687697546 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.692280173 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.68798044 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.842487072 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.760419695 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.693001535 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.688898756 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.717855346 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.92948416 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.810547948 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.692244556 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.718739454 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.899023708 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.810932269 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.79237488 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.464450341 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.690673838 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.753661973 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.691914977 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.689780066 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.689567925 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.844536572 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.781793474 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.774052921 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.692547716 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.690568995 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.691590262 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.346932372 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.888443577 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.784547104 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.818564212 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.940638577 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.893796225 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.46791665 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.690018132 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.420782462 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.855252527 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.917823135 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.91779519 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.808556314 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.693612351 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.024881979 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.692103212 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.691239534 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.939229449 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.911282678 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.786284513 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.695286723 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.691957109 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.690918913 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.92976087 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.694732422 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.784016729 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.694185118 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.690113829 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.786717763 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.787644608 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.922377631 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.902721589 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.720382617 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.032007725 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.193106348 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.936535017 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.755699881 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.939920804 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.695987842 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.692087177 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.771841758 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.533684126 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.943244325 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.932488821 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.935586147 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726041218 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.414927259 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.692687547 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.917426197 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.912323768 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.951077841 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.941584794 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.925741002 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.012720868 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.691483375 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.691231412 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.015285113 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.814736775 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.694759282 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.033976973 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920827198 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.211125533 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.718177668 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.993694279 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.820490179 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.694524635 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.319808725 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.69360022 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.920123137 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.731990044 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.69373928 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.694332704 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.910534563 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.684956705 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.695356905 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.369582348 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.75307004 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.696199334 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9251832 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.696637754 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961631171 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.695910963 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.923537733 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.134827972 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.723900776 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.865017262 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.940222252 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.695951469 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.93234762 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.934698937 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.807215787 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.912620259 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.401644692 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.694520156 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.977455745 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.696955054 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.693848219 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.86310391 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.69691754 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.835081622 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.697175859 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.987153781 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.715923528 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.923619366 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.698308611 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.945760736 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.725499292 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.745121357 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.697873359 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.234335867 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.69645286 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.612682687 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.851227404 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.695865269 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.693800928 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.250687709 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.69644023 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.84157638 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.919849253 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.716348654 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.765672063 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.358823044 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.6952767 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.775556276 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.718465103 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.083830763 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.697282844 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.94334243 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.697095894 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.695192827 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.696076517 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.929152055 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.877837603 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.697825125 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.695749987 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.599002299 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.695444027 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.695489043 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.875383465 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.031060128 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.696698952 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.896793685 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.698455833 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.823087518 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.700812378 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.775649541 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.028232551 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.698043841 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.697357109 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.697481442 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.696717875 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.69757842 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.902998529 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.720512338 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.189147359 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.832857506 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.967098019 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.005177618 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.935905846 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.738596285 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.700687387 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.951189337 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.700663113 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.758192323 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.698923082 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.716690737 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.922338299 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.700673105 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.959614486 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.966379459 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.540734799 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.746150801 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.6994013 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.698931191 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.698938512 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.841347677 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.781274124 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.700231123 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.697346314 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.810911637 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.818454532 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.905917397 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.69915905 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.745428798 seconds)
  done (took 863.353149688 seconds)
done (took 1163.74963078 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.699023031 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.697492694 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.701084941 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.702726995 seconds)
  done (took 28.435453782 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.706856718 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.701331335 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.701239832 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.700854891 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.699924206 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.701018361 seconds)
  done (took 11.846066549 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.73270859 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.698700825 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.69928885 seconds)
  done (took 20.765728885 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.77201014 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.085971287 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.834770563 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.113217041 seconds)
  done (took 9.440957273 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.701962147 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.701562853 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.701796982 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.700870241 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.708144963 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.707373392 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.700790648 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.700726219 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.708282329 seconds)
  done (took 16.969505518 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.88242505 seconds)
done (took 92.974840866 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.860692682 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.109830149 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.830561717 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.856384064 seconds)
    (5/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.018784191 seconds)
    (6/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.728885888 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.719160029 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.810123013 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.709311789 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.843543992 seconds)
    (11/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.871484221 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.914915841 seconds)
    (13/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.735908094 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.481241186 seconds)
    (15/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.819270217 seconds)
    (16/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.724811742 seconds)
    (17/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.518779312 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.897598585 seconds)
    (19/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.519705826 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.092296231 seconds)
    (21/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.714520605 seconds)
    (22/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.425263597 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.714146265 seconds)
    (24/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.719061039 seconds)
    (25/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.160066909 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.728568787 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.711285088 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.136835888 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.972224428 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.811294343 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.821265519 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.816821332 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.576237567 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.715038668 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.885350705 seconds)
    (36/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.607773378 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.820016139 seconds)
    (38/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.789916451 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.827438713 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.739107039 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.101463675 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.029209904 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.205044689 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.375127137 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.741692219 seconds)
    (46/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.72306806 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.70980653 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.025816867 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.713971307 seconds)
    (50/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.9582786 seconds)
    (51/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.872444125 seconds)
    (52/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.960044023 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 5.403114642 seconds)
    (54/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.797906851 seconds)
    (55/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.728587003 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.961033464 seconds)
    (57/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.711850715 seconds)
    (58/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.406408121 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.963374349 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.733997931 seconds)
    (61/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.861989997 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.882290289 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.828231486 seconds)
    (64/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.91355487 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.82723151 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.339428681 seconds)
    (67/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.820264288 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.717641282 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.798975115 seconds)
    (70/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.931657427 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.872026779 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.910214206 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.930866549 seconds)
    (74/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.154455716 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.733685637 seconds)
    (76/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.711391331 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.03641482 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.663842085 seconds)
    (79/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.954090377 seconds)
    (80/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.721886336 seconds)
    (81/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.913889968 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.688692567 seconds)
    (83/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.385284459 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.851335712 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.601425427 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.029058812 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.452257319 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.715060051 seconds)
    (89/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.929622133 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.180359909 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.796929919 seconds)
    (92/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.876580129 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.717846936 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.43572613 seconds)
    (95/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.742173909 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.010834299 seconds)
    (97/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.797391288 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.108609154 seconds)
    (99/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.720795059 seconds)
    (100/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.07471651 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.720570437 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.145615094 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.020280141 seconds)
    (104/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.719164762 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.370799473 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.800243529 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.09937757 seconds)
    (108/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.876042717 seconds)
    (109/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.832164778 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.721539725 seconds)
    (111/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.92083908 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.912668341 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.713271849 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.741723553 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.490285471 seconds)
    (116/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.721157629 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.714424821 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.936757473 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.398461372 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.030447134 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.860876698 seconds)
    (122/309) benchmarking ("sort", Int8, false)...
    done (took 4.593423969 seconds)
    (123/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.821939317 seconds)
    (124/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.820928791 seconds)
    (125/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.856518857 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.714714976 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.684299321 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.810355357 seconds)
    (129/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.74394355 seconds)
    (130/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.448434848 seconds)
    (131/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.236057272 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.774360668 seconds)
    (133/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.713247087 seconds)
    (134/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.81859915 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.068606483 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.041681593 seconds)
    (137/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.902559367 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.03797751 seconds)
    (139/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.948805495 seconds)
    (140/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.776619019 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.713732481 seconds)
    (142/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.257413241 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.051758496 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.970752788 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.712056606 seconds)
    (146/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.657905682 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.978042277 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.742674012 seconds)
    (149/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.713589813 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.804266247 seconds)
    (151/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.830534401 seconds)
    (152/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.822910766 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.716389108 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.720595739 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.822447644 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.732478569 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.927798747 seconds)
    (158/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.010331439 seconds)
    (159/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.962677285 seconds)
    (160/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.897772165 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.497454371 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.802989002 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.033789144 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.610542321 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.847112913 seconds)
    (166/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.817134116 seconds)
    (167/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.73864188 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.714288687 seconds)
    (169/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 3.502427217 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.718252436 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.636582142 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.743720244 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.030161858 seconds)
    (174/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.104123813 seconds)
    (175/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.723500611 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.848752645 seconds)
    (177/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.793188257 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.010919959 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.607317322 seconds)
    (180/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.811959883 seconds)
    (181/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.874450338 seconds)
    (182/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.908916117 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.065903661 seconds)
    (184/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.964216339 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.046007236 seconds)
    (186/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.719335118 seconds)
    (187/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.727596644 seconds)
    (188/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.973973148 seconds)
    (189/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.715589349 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 3.354041831 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.831621517 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.839993828 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.733569957 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.71666983 seconds)
    (195/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.500810898 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.932922781 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.968323499 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.284663299 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.92396414 seconds)
    (200/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.763968634 seconds)
    (201/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.715399378 seconds)
    (202/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.284830432 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.993161422 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.029322864 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.790720599 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.061278243 seconds)
    (207/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.7260536 seconds)
    (208/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.716940598 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.804207437 seconds)
    (210/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.851429487 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.949082023 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.780208491 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.113781869 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.719278903 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.896795371 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.210085551 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.168868706 seconds)
    (218/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.979037945 seconds)
    (219/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.802637364 seconds)
    (220/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.817883151 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.919813142 seconds)
    (222/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.095494817 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.370765085 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.752381866 seconds)
    (225/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.002796597 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.720247432 seconds)
    (227/309) benchmarking ("sort", Float32, false)...
    done (took 5.45582702 seconds)
    (228/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.859306907 seconds)
    (229/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.748422565 seconds)
    (230/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.727951622 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.225504649 seconds)
    (232/309) benchmarking ("sort", BigInt, false)...
    done (took 6.719871958 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.7467261 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.009374534 seconds)
    (235/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.736678517 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.969308466 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.723030774 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.823045396 seconds)
    (239/309) benchmarking ("sort", Float64, false)...
    done (took 6.856032362 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.716026359 seconds)
    (241/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.787770744 seconds)
    (242/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.719516749 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.06241736 seconds)
    (244/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.119984702 seconds)
    (245/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.723800072 seconds)
    (246/309) benchmarking ("map", abs, Int8, false)...
    done (took 3.438338942 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.849417005 seconds)
    (248/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.826596999 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.722753 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.949840519 seconds)
    (251/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.798457213 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.71882029 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.813141994 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.721353673 seconds)
    (255/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.968858852 seconds)
    (256/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.860083295 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.066506166 seconds)
    (258/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.94324562 seconds)
    (259/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.802865744 seconds)
    (260/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.058578661 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.723276716 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.155394804 seconds)
    (263/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.922562882 seconds)
    (264/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.798969019 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.068626001 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.068402821 seconds)
    (267/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.749899665 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.735829348 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.402494892 seconds)
    (270/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.745480766 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.035737052 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.749791993 seconds)
    (273/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.741991745 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.389892587 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.111749303 seconds)
    (276/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.769206838 seconds)
    (277/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.121723415 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.349202714 seconds)
    (279/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.0377891 seconds)
    (280/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.11248512 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.722022016 seconds)
    (282/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.679239605 seconds)
    (283/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.773219822 seconds)
    (284/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.05609548 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.73998779 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.556402895 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.070921532 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.724903957 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.90384277 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.847322943 seconds)
    (291/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.538155438 seconds)
    (292/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.895842003 seconds)
    (293/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.682593425 seconds)
    (294/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.220215476 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.764579666 seconds)
    (296/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.983259889 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.727306191 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.11931023 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.864739203 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.120223316 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.631601708 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.854625111 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.809229231 seconds)
    (304/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.801046127 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.737037088 seconds)
    (306/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.853646725 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.932437714 seconds)
    (308/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.724579419 seconds)
    (309/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.944045767 seconds)
  done (took 957.846532991 seconds)
done (took 959.774940219 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.749714919 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.744148711 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.726226348 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.747400949 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.839602908 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.773146208 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.740227637 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.730607762 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.776354405 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.775122353 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.72551274 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.771052125 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.728061256 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.727523973 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.726759382 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.74276914 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.034898475 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.757305894 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.745800577 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.738428687 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.744598686 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.725469276 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.777094866 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.771544162 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.7312644 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.731195835 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.731222221 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.747089948 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.840078373 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.729704224 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.732375164 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.740252734 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.034964699 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.75547224 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.725025745 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.746986762 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.739681 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.73958353 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.732185889 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.760658981 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.121324698 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.765587454 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.729196338 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.729148091 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.728098491 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.734527204 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.730289828 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.736533299 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.743337154 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.744261398 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.118100165 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.782807623 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.732516146 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.729266604 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.74168867 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.730086044 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.732001351 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.746726777 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.748821666 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.745471113 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.02067825 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.76576098 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.732255062 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.748455588 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.738137839 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.151729434 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.766175077 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.738270133 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.122594536 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.775127165 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.154834682 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.779171922 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.733538921 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.745830389 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.762352805 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.036172492 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.758069373 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.73038227 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.739277246 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.729299078 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.742535176 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.745688246 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.73472715 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.730387848 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.746796269 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.777578873 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.743366671 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.73197605 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.741799289 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.750433107 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.741041857 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.743655895 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.734514472 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.72920431 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.743717563 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.736413874 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.73466993 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.73364869 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.736323436 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.744525723 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.12203863 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.786151586 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.729715192 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.72852322 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.731360636 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.74639878 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.120916895 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.770093945 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.754501647 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.782712313 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.733903469 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.022129215 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.764217718 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.749513376 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.744776004 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.734237775 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.731241378 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.021130439 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.148558968 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.786128992 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.732550545 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.729843938 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.748978998 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.733834371 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.729875821 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.037700178 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.763376254 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.750050233 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.85538964 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.745521184 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.765558957 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.729910158 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.736602823 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.782940655 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.74975625 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.766083313 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.735655182 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.74948869 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.750661558 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.730272017 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.745391519 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.746093797 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.732649657 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.740767725 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.73029892 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.783587908 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.749065625 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.748919995 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.754638889 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.85725045 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.731240116 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.025193716 seconds)
done (took 272.811994023 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.813739851 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.730496008 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.823623409 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.732216727 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.82257436 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.806702885 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.732966472 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.733308453 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.733070184 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.227962191 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.733256113 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.737850103 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.732118878 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.733061478 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.804023691 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.736074717 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.73289738 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.184857485 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.735033526 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.812541457 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.732054033 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.733585496 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.733047908 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.218432622 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.731942629 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.732613858 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.812441676 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.734031273 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.166378391 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.732116667 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.733713334 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.167037197 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.812411074 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.761082848 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.742773793 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.738815718 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.823637367 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.745485492 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.800995914 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.802399655 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.828798707 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.767870071 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.733068428 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.73290034 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.737682442 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.736919075 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.735798231 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.768402275 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.733893631 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.741404034 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.185807475 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.739054642 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.742228503 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.735291157 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.73548503 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.762189867 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.735125512 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.736389858 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.813592454 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.737164774 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.801624572 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.219917585 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.229698929 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.735162516 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.734676789 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.734943132 seconds)
  done (took 176.116536992 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.801218343 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.811550057 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.801122728 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.739803858 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.785055786 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.802804048 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.740363074 seconds)
  done (took 14.149759731 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.742000563 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.735993646 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.785024455 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.785374912 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.736047911 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.891466071 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.736944805 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.747881423 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.741367068 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.762766381 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.737214552 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.735791642 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.743659815 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.735908975 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.783916625 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.747066184 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.851576245 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.737530773 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.737194314 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.884800556 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.743139405 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.744621873 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.762277307 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.749591349 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.738408191 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.744107754 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.308690172 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.737924475 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.73806894 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.737299156 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.737221921 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.778673009 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.738786621 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.738713708 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.738774009 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.854040672 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.739693256 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.738717923 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.736609216 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.736772865 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.738548349 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.737490416 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.737431025 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.737781509 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.737712866 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.760352379 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.738619028 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.738719153 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.737883693 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.738946154 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.763124292 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.737768494 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.738678239 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.742505425 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.779711272 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.743083366 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.738690074 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.738586871 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.738593824 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.738432724 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.8864168 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.787915115 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.738142723 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.78914045 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.73844574 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.738368609 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.737218955 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.738818101 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.827025041 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.739288007 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.787643228 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.738891739 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.897342566 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.762751855 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.740955743 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.742450973 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.742938318 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.740126099 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.736929064 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.745826514 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.739427437 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.740522256 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.745373899 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.744997419 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.73880088 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.85189553 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.882165533 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.739036899 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.740302616 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.746810352 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.739524602 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.7833308 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.739082328 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.739376262 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.796202453 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.855682852 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.766549575 seconds)
  done (took 192.882001048 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.746751978 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.746028549 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.741069976 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.755060512 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.740633463 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.739957695 seconds)
  done (took 12.142785207 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.742302195 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.743660475 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.740377582 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.74141065 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.740416397 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.740622169 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.740196752 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.742391828 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.745511439 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.740368577 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.741568384 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.744548818 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.742960055 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.741248935 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.740185934 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.741141423 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.741971439 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.741497529 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.742225584 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.741161916 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.993323189 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.741129585 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.741909782 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.749327707 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.745791884 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.742401238 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.754602526 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.742148357 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.742432052 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.74910352 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.746898952 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.742745765 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.748359402 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.749409092 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.746815753 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.7480306 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.746260701 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.745632553 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.741825485 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.743293887 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.74675712 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.742725337 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.742135998 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.745932546 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.744953074 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.752655351 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.749339288 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.75648346 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.742913667 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.746929094 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.746372196 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.742398987 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.743987542 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.746288855 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.75039432 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.74894732 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.751488508 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.743889749 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.742759376 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.749183672 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.748994717 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.743985321 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.745007971 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.747817243 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.748081565 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.746513768 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.748979584 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.747592262 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.744040889 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.744478455 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.746620617 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.743713987 seconds)
  done (took 128.565267662 seconds)
done (took 525.539740149 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.004531345 seconds)
  done (took 8.680234177 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.7700783 seconds)
  done (took 8.509019923 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.162802483 seconds)
  done (took 9.841755561 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.798756768 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.767349711 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.758554266 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.745379975 seconds)
  done (took 28.76989987 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.042023885 seconds)
  done (took 8.718800025 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.76607647 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.742443745 seconds)
  done (took 15.259242661 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.749554118 seconds)
  done (took 8.426771012 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.063189138 seconds)
  done (took 8.749776871 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.762950488 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.75674099 seconds)
  done (took 15.218619433 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.745865021 seconds)
  done (took 8.422883629 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.92152162 seconds)
  done (took 9.706662205 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.767138092 seconds)
  done (took 8.516192115 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.796963011 seconds)
  done (took 8.47456181 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.80747756 seconds)
  done (took 8.484556772 seconds)
done (took 157.455366106 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.746592299 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.744480739 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.744641881 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.741707294 seconds)
  done (took 28.653872919 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.777318104 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.777277551 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.778480912 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.788507019 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.780458738 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.777468002 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.770142887 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.770442356 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.78896146 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.779896543 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.77920861 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.781556114 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.777163451 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.770810938 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.77971388 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.780640899 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.789162388 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.78059936 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.770922033 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.781418427 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.747138484 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.789015546 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.781958609 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.747571623 seconds)
  done (took 44.323860426 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.936847773 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.815758979 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.898723549 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.798247323 seconds)
  done (took 9.128158519 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.798356434 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.801340634 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.811552797 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.851310871 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.873217779 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.811167224 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.771889178 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.766281773 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.752539586 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.797857028 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.873448354 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.792324533 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.886630864 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.74587951 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.931951098 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.746111521 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.745859819 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.798454318 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.849274822 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.861498802 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.746375218 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.797206335 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.80078916 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.794550578 seconds)
  done (took 45.085880493 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.747008384 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.755179043 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.754227092 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.747891554 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.748291493 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.747896918 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.753752249 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.748621297 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.769956945 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.750039874 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.746645623 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.74899496 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.754592475 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.748808366 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.748015899 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.762360853 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.762612927 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.74892722 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.752251865 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.754533775 seconds)
  done (took 36.729846751 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.745876541 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.592280994 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.090517046 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.997249528 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.746880215 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.747182185 seconds)
  done (took 30.601039685 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.759898382 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.752956919 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.747480163 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.80291324 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.888096994 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.756530139 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.748979782 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.757965363 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.792358532 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.812476287 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.766889573 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.776818229 seconds)
  done (took 23.044052729 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.747525497 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.749167451 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.748965187 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.759922301 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.758935539 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.758015082 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.756549536 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.746774295 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.760503762 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.767241879 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.755499606 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.760008022 seconds)
  done (took 42.752993811 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825617033 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.622237715 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208356009 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210724374 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.273854778 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.950622907 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.747378184 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.832110443 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.748504949 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.018815803 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.189562723 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954701896 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.99097 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457637277 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.751683796 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.240347766 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04195531 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971823538 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779124433 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39915016 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858265684 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.238062329 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.458391656 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.860710597 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.951334892 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.868713579 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.006279768 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.696515371 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797050725 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.752359142 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753821629 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.749061156 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.021724169 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868838188 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81870907 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75435428 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.163271309 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.455109258 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.760878814 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.461486976 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.338941193 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.870846247 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752516972 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.748160405 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.676679708 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.232966412 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837002613 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.751507838 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.4489202 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.749325402 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.755400005 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824074387 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.751410536 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.557285754 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434692904 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.017855655 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.75066238 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754556312 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.310906031 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790366398 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332003235 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.681197865 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.843888051 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.463550254 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216683315 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.905485995 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.751857393 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753908165 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.676890844 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.465766138 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868620105 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.887072871 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.767451928 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38999897 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048970311 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.231088479 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.80603366 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03104363 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.506206362 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.680763892 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968429783 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.705502698 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.677973688 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.581088747 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.67653406 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975430881 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786541066 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.375364542 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788791108 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.835498853 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.759071411 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768691339 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755889059 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.967291698 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.647064857 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.751579668 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.104268023 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.008008356 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768494271 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.836676686 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.67834526 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.752662317 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995524518 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.95369863 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.95880633 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.235111306 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842392191 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.538358188 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.865817815 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.651289503 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.75656492 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.028624191 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81385502 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.797316366 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873421734 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.702900333 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007723649 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.566865635 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.952282956 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.174350765 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992810689 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.096601032 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.001535026 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814668429 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.758005014 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.752626474 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.472551235 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.364918089 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.969455556 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.765450136 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.20424677 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.756750004 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.754325527 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687217109 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.375033561 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.17470029 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.839812621 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.967725111 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.556248165 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150561666 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.680351365 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.8940515 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.745892544 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.96796107 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.409258081 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.846123212 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003648008 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.8436329 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.931701466 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860987449 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767787617 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846142139 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770860019 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.019541677 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.099017545 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.755775547 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.756067707 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.474173711 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.812757997 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.754819382 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.756428707 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.286767287 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033669793 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.78223933 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.76253577 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.628713028 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.765594455 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81603719 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757084365 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.757498726 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.272787677 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.258666819 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.759205085 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.406001788 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9712427 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.759290972 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.461359008 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945364137 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.767152408 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032179033 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821669734 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.681034084 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.455886576 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.45488419 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.755762134 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.681930483 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.756341964 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758547628 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760524492 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.942628409 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.03854779 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810015555 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.41679726 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.865607327 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763122913 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.760598207 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.758152214 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.269988152 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802402968 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.218034633 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.864770068 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885025451 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.767039752 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.682038994 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.760970136 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758526548 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.757233646 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.707620788 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807232213 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.418316551 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967676276 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005582437 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.164886425 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766436562 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.424816086 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.87743984 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.791090269 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.133743783 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.246089992 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.852244648 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822198516 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.763780671 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.418616658 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491266498 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32270059 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056980789 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080027821 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113687339 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.098225874 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.071379332 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.842498921 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984115573 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.279602103 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.813202572 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.845727475 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.695554094 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772032638 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.416179066 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11603087 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7664898 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977600502 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052872563 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.194095266 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893563451 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.965803044 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78859746 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.524790937 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.779693846 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.293786726 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779412257 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.258492371 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963991313 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840921586 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.139040244 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.839827038 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.757496554 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114546348 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800865521 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.463846238 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.110076793 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.104892259 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.285110368 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986289845 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.76093185 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.198893845 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118368679 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.899341658 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.870110499 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686673487 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.763861433 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.767700769 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.771667385 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.730590888 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.604317088 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.002612956 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76863316 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985230851 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.819751807 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127204917 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.666863967 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.763216535 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.759609477 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027348343 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382032178 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906161329 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.005127726 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.329047373 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768223006 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.688333112 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687813891 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.464133377 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.766435154 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725496735 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97855134 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.862697478 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.438950665 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.079538909 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061647612 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.005020289 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.773360391 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.039011303 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035967951 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.250307723 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782020608 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.859310866 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.12661421 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.472501724 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.97556412 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.987796513 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298694901 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.977906316 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220525478 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.73479161 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.759889924 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.967079566 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.976847715 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.207900835 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939384571 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.473441504 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.776393529 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131459042 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823834587 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.196211253 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.952515966 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.843933403 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76687995 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839269444 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.766050575 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.767571795 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.768344868 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772779939 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.192362067 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.883795276 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.774700217 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839562463 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832047035 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.338765686 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.771328762 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04051553 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128921413 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.105655645 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.826452283 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.76509481 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763502461 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.689401436 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89420956 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.203079206 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035169404 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.884296429 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.896921823 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783511281 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.123028213 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.028663788 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06314038 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036341487 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.648119601 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335881876 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.876093649 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.980098614 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771608313 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.967599222 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986603667 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072054187 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326986422 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.823387857 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.944327854 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039896207 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.124902155 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.763904106 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347695714 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.77832917 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176031726 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.799960307 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.219822717 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023325974 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768786039 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884383707 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.768585276 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.96372535 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.215507698 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.432854835 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115411806 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.617896677 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.768602597 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043815887 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.10052445 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07017201 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844147466 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771637531 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.467036256 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898360378 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.654689692 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.002064958 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.767799292 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969756836 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.47796928 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.77035625 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048622984 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070457756 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.768641737 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.696590308 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8047427 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.769714222 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.980803517 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985655695 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.013206833 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770368992 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.76847343 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.574554295 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049374807 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.828189848 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.69355044 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.770369282 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812651902 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.994211109 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.785237706 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.28163353 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.468912123 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059082126 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.675043255 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785754172 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.10729628 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.139783795 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109117668 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.293642539 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993727639 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.3228975 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.536470829 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13348425 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.770776076 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.094859595 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137017162 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.770613363 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.198879579 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867129898 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.043914828 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093207667 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.785785648 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502598326 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.800997345 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982545216 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.124002864 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698466343 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.774495863 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.816014369 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.769324453 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.779592556 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.777599697 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.726252619 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.14630375 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.597085182 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326944482 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.772810222 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.8801351 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.199375692 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.229737043 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864536564 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78718187 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770283569 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.481476587 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.056775276 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.013402265 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.20711632 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.852242846 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.771097521 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770389136 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.689326923 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.953678081 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.957911161 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065635411 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.043883895 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.866382351 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772598061 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.977607328 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974284323 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.212665357 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903471779 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.819934445 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.873144558 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.710201895 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.475386937 seconds)
  done (took 1607.949589249 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.780461323 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.804132868 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.781230262 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.830171667 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.798962483 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.791295303 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.821279714 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.778565481 seconds)
  done (took 56.090712972 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.772129025 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.934565516 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.775647275 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.772743891 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.776842199 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.772381731 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.932189224 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.783478162 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.777558096 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.776923207 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.773937351 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.774448994 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.054046544 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.792404651 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.772477394 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.233387344 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.776767549 seconds)
  done (took 72.964989848 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.779093662 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.234195599 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.808611521 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.777604234 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.874158105 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.778496597 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.888268022 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.780434407 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.779557628 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.029772976 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.071160932 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.800340467 seconds)
  done (took 89.309606168 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.78752327 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.777296758 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.777651865 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.777377156 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.778547265 seconds)
  done (took 10.614501388 seconds)
done (took 2098.942152309 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.007264394 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.968507367 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.019970985 seconds)
  done (took 5.695882687 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.918301637 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.969044127 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.079897535 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.088038586 seconds)
  done (took 9.768055998 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.083884766 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.146862029 seconds)
  done (took 5.941564787 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.095037657 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.800310057 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.153686474 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.779783229 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.782674368 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.780818341 seconds)
  done (took 22.058319627 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.781195074 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.780238192 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.780422195 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.779062656 seconds)
  done (took 8.831594592 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.777430658 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.473009774 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.781507801 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.78801025 seconds)
  done (took 20.531241747 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.973653847 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.896078426 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.922529033 seconds)
  done (took 7.502823387 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.000896698 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.574718649 seconds)
  done (took 6.286415481 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.937321192 seconds)
  done (took 3.648392826 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.808342778 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.049982881 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.267999593 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.299008911 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.37849272 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.605928994 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.106593145 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.002459405 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.21760903 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.231078684 seconds)
  done (took 23.678398847 seconds)
done (took 128.707035996 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.119751076 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.801044593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.990786974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.136991321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.018601727 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.984799773 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.001621272 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.12630952 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.818849722 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.807488667 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.139500152 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.01482435 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.950069132 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.802955423 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.958761588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.804558783 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.008826837 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.142083101 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.820583764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.038814241 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.016023313 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.780618189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.979381757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.795708612 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.015908383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.93405454 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.323975408 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.805485411 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.957831522 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.338588344 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.940007447 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.174957388 seconds)
  done (took 165.262093997 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.781530073 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.781566367 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.780423985 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.782571879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.329985875 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.783335456 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.782413686 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.781861338 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.181687254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.176188647 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.783942941 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.318628994 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.784732303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.781654481 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.783033529 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.783003235 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.341658986 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.782528873 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.783540657 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.78189036 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.783597719 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.161844953 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.78229257 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.178373271 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.330096835 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.784282533 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.782618995 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.783759312 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.78365426 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.783269373 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.784807042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.783202829 seconds)
  done (took 206.523713646 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.781323329 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.784804563 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.784829704 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.782789165 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.785235216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.784850889 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.786201324 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.784117805 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.406385826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.395202297 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.783713149 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.784899365 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.786653819 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.783827008 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.784257665 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.78442256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.78323442 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.783327754 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.785748101 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.785589798 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.786339431 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.546650079 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.796366316 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.552242789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.784656876 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.782624513 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.785108894 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.784705901 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.784856165 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.784938306 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.785600243 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.783918881 seconds)
  done (took 217.594776167 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.03310472 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.784422135 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.785755264 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.697679448 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.786371389 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.784634828 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.773680051 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.031667093 seconds)
  done (took 18.395017196 seconds)
done (took 609.494795668 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.137992683 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.98219009 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.963490403 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.808776679 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.047742313 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.851800497 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.804575256 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.867941444 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.62340754 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.879759628 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.477241583 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.827626228 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.571787271 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.834776338 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.927309631 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.862860464 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.375901228 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.473226769 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.978408937 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.868947542 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.982787117 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.707562795 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.885832994 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.640688206 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.594598691 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.764668167 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.837799035 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.372361829 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.81771711 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.961010601 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.489935863 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.068137092 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.819994584 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.803903492 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.859139204 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.838130322 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.028823361 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.816643898 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.932980271 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.504961653 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.868153603 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.518098564 seconds)
  done (took 98.997091939 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.797146005 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.793211387 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.792253265 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.793051762 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.801947449 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.79295541 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.792466081 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.791393773 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.793039635 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.79366591 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.793816118 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.80246808 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.79337746 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.801584516 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.793373161 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.794129067 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.793279741 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.802261615 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.794300217 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.793425419 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.794162633 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.794188249 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.789509229 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.794048372 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.794826599 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.794821134 seconds)
  done (took 48.396681344 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.789486163 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.958635721 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.031208219 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.809108089 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.789125714 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.792368293 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.80729018 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.795558641 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.791672596 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.792525217 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.89126161 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.79504901 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.807331267 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.032621651 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.806494456 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.789231013 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.789782376 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.789896149 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.966813201 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.80549084 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.809211449 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.794482042 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.808690275 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.802959197 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.791945986 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.790520707 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.79318141 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.286497238 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.799822774 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.890334665 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.835855512 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.814073712 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.237495748 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.042533053 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.84622273 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.799890156 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.790473112 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.894482242 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.796872985 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.791370291 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.80873247 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.795561282 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.033343386 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.317328477 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.805746263 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.791334755 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.296752558 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.904949743 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.832952114 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.80084544 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.036557802 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.808768721 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.792701899 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.791795987 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.8280241 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.797582727 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.791607118 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.150523012 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.805805688 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.809283352 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.797133112 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.791763399 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.97003333 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.79988042 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.960147549 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.801132812 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.798284019 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.791888745 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.036233829 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.809452064 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.329823073 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.80746105 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.792153251 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.892912698 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.966062959 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.323086533 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.804855686 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.970129772 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.255219293 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.817195174 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.800094653 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.278465001 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.820453451 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.800221399 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.793955821 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.794176369 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.791925127 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.836914335 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.80906256 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.23817198 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.328843377 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.168697139 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.819953886 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.807466242 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.792863045 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.151658582 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.801363707 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.794818215 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.027707468 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.333309093 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.807670643 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.800123236 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.307748313 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.810492365 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.812267776 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.802220538 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.042011586 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.810616921 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.838880643 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.794234402 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.80086738 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.796836474 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.813282326 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.802206786 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.794011425 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.297912609 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.914669397 seconds)
  done (took 223.523216494 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.793918163 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.797713659 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.792787183 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.79751396 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.792619873 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.793846938 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.79269519 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.792158224 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.794336918 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.793070995 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.793058641 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.795055549 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.795134405 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.799934175 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.801142339 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.795613161 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.395321412 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.792491227 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.794600576 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.793721484 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.433995643 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.797767962 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.794225086 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.793170922 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.793889927 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.793450252 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.805676884 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.79713317 seconds)
  done (took 165.233908783 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.795957036 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.906732625 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.813868154 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.823958072 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.803634218 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.795890715 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.892070646 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.813440479 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.801524464 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.797173799 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.797443817 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.854749464 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.806693702 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.893642665 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.826481608 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.903108791 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.899953256 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.802232205 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.796575141 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.79633966 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.824104953 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.804585929 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.856231252 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.9188639 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.814695781 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.908861232 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.814653693 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.797917729 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.796426175 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.908740708 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.815894661 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.85732607 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.825374185 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.814811916 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.914163701 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.911618556 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.900762623 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.900260167 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.802416636 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.798194139 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.797625855 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.797423419 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.909994931 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.816468539 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.797717264 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.913297417 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.815508334 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.798179121 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.798764743 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.798080402 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.810399473 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.815189951 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.863166307 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.926550129 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.832842652 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.820943564 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.894000521 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.921226087 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.801269388 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.894957186 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.8046786 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.911524877 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.818397948 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.799608087 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.801272931 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.803553458 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.827618126 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.903952409 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.902382379 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.806641871 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.895783832 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.83349354 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.805920736 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.799184267 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.799829787 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.910547502 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.914708655 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.833774872 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.83464096 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.829779728 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.807474346 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.799364822 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.800580048 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.815159689 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.804404913 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.91296115 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.913911395 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.80517144 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.799951844 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.800758606 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.80036077 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.822713202 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.918732513 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.834547091 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.90409903 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.864592473 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.873087127 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.814018227 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.814082226 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.804887218 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.861303223 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.813855679 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.812113944 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.08444371 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.859060008 seconds)
  done (took 195.13954362 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.172535156 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.849297717 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.855487536 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.113732587 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.156696446 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.743851273 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.845023423 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.847682131 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.870117879 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.028450088 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.9211146 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.86651215 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.835783667 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.821476601 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.84591463 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.871719713 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.856740165 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.182696131 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.066732398 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.998684813 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.835428684 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.146802692 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.159342186 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.428036733 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.896193814 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.227986983 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.411751062 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.979014526 seconds)
  done (took 59.572935761 seconds)
done (took 792.579443938 seconds)
SAVING RESULT...
DONE!
