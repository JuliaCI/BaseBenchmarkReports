cset: moving following pidspec: 6360
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.316219259 seconds)
loading group "string"... done (took 0.610436491 seconds)
loading group "linalg"... done (took 7.155061297 seconds)
loading group "parallel"... done (took 0.16801227 seconds)
loading group "find"... done (took 1.117235091 seconds)
loading group "tuple"... done (took 1.8724274 seconds)
loading group "dates"... done (took 1.196131031 seconds)
loading group "micro"... done (took 0.23427855 seconds)
loading group "io"... done (took 0.923511807 seconds)
loading group "scalar"... done (took 37.5306858 seconds)
loading group "sparse"... done (took 11.427810765 seconds)
loading group "broadcast"... done (took 0.972993231 seconds)
loading group "union"... done (took 12.629541394 seconds)
loading group "simd"... done (took 4.36899933 seconds)
loading group "random"... done (took 8.701658121 seconds)
loading group "problem"... done (took 1.905340055 seconds)
loading group "array"... done (took 20.277932555 seconds)
loading group "misc"... done (took 1.634056845 seconds)
loading group "sort"... done (took 3.080564125 seconds)
loading group "collection"... done (took 16.602557219 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.474039082 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122431664 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113861501 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118496006 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143550332 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11276425 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121304411 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083616185 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.801344878 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14384007 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117049651 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407593661 seconds)
done (took 4.977062267 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171563236 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080608059 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081695858 seconds)
  done (took 1.220813002 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065907694 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119264682 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066208855 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067331064 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067201398 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065961102 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066210023 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06632801 seconds)
  done (took 1.57674977 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071013052 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068116726 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067739114 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067541197 seconds)
  done (took 1.333702117 seconds)
done (took 5.438583408 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.755298301 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201629146 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.179815511 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.388665824 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128811864 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153867392 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638495399 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.243829248 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.179354685 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079537715 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102228539 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.3107064 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107167254 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.630724301 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075320145 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088765955 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.133993096 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.350522799 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.065789923 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08193657 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087195387 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126968728 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08323921 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07267508 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141777299 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066090654 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130380393 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080965273 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065017186 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206732286 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172198834 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655321566 seconds)
  done (took 9.882150859 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.093940607 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095677202 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069040152 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136928222 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093852991 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06798235 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069899323 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06638104 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085282257 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125085645 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086816141 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.098910245 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066158528 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069570474 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084646046 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201809685 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080503821 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081641248 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070494765 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075719891 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118582606 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076268387 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075894261 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075722821 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127006758 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181292037 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095821451 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095858504 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065307471 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078345263 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11363042 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123926814 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.063940983 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065658274 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123389122 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092278155 seconds)
  done (took 4.485699595 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.25839931 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138025226 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089902103 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.129336937 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064361007 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105270107 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064152757 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.078522323 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.193792953 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.258967516 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.565173153 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10914611 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100688827 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066270523 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067608549 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065664728 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.318625774 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106791293 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103539203 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079632452 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069044127 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06748285 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.338782791 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067076964 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062464227 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066938084 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056758319 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122286425 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068409338 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.911815498 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122522338 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065306754 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09953376 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164921453 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08533771 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.264089829 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066973358 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06349368 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.147841633 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110590971 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069513946 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066555296 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084482859 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102789461 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.109407036 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064328772 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065708448 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158829091 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063930864 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077579405 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.937334352 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151735975 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.074986128 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063324296 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.238569648 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084749086 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06761374 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063892296 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.156829284 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132692366 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068647646 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066756617 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068338736 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069838478 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.356918261 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066899462 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.723313491 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06908128 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076718007 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069848784 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067959866 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072172024 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07073262 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086051026 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064629233 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07317382 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064556614 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064892669 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.064919579 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.081676023 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.351436273 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066275997 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068291783 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064959477 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086523531 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096031902 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.064574067 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.063944146 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098739049 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066215384 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.064194263 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.200401372 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.064998891 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063052184 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083063467 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067475373 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111840819 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065454762 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.08870114 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06609603 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064596947 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100501832 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069142626 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097251927 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079572123 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066606021 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.392149333 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062534724 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063864623 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063920174 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066489381 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063961069 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.065765074 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.064816629 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.076931728 seconds)
  done (took 20.436098208 seconds)
done (took 37.120280545 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.231177265 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076714996 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076760776 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075939597 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075863079 seconds)
  done (took 1.684687222 seconds)
done (took 2.816491765 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.117969394 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097166319 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062716791 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09562018 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064066905 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099947646 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098830585 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079787884 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097178784 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.062929479 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093503848 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.062450181 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062815485 seconds)
  done (took 2.243443945 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081204354 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083586255 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069826229 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082367092 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064296507 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082521307 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081151409 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088572616 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080847829 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072221728 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063679748 seconds)
  done (took 1.971522312 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.07998723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082933126 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070334724 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082031585 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066369727 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081461202 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080876721 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08596773 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081241685 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07409201 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063703848 seconds)
  done (took 1.968202509 seconds)
done (took 7.299193541 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075482796 seconds)
  done (took 1.185125613 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.583893538 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.993483004 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082185591 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112140304 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.185235957 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118766795 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274564396 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087351941 seconds)
  done (took 8.735294735 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086880151 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067778126 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069046799 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069473019 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081865819 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070685655 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072531875 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06995815 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069555907 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071278787 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072218337 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069380877 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068772439 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070991031 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071996119 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070701634 seconds)
  done (took 2.333042341 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090211575 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089351556 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07238386 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072995763 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070295672 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070739971 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072724469 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071464119 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069143969 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070658206 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072909821 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07169954 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069564278 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063384624 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072088559 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07354427 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.068866027 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072028348 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073499215 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072976611 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072922049 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062516823 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069759182 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07236538 seconds)
  done (took 2.952013726 seconds)
done (took 16.323566802 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112093053 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069732491 seconds)
  done (took 1.299752512 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081319162 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082604985 seconds)
  done (took 1.293662262 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081855091 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063979134 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089906909 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076967741 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064559394 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06411688 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086418917 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064675967 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064242786 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064850178 seconds)
  done (took 1.854305718 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066510808 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077115322 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068487394 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079964031 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073395054 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064053123 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07236165 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067097449 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076156587 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061575554 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069581103 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080709818 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069930105 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082852318 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070896369 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067057985 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069255283 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066239891 seconds)
  done (took 2.411178565 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064735758 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065403325 seconds)
  done (took 1.260331204 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065977607 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063333457 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066182465 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066928169 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063674366 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062718044 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063946667 seconds)
  done (took 1.579438377 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.37305285 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109693075 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.299666441 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070695502 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08148781 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24749927 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064767341 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06952375 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070249213 seconds)
  done (took 2.561200536 seconds)
done (took 13.390733496 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077353823 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083582034 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.092707579 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.352902376 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089923442 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064366138 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111938971 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185218984 seconds)
done (took 2.198737315 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217524114 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.596670139 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384172971 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.198528653 seconds)
  done (took 2.313485835 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322064984 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087178716 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059317097 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066744156 seconds)
  done (took 1.678248437 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064168461 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067938099 seconds)
  done (took 1.271350045 seconds)
done (took 6.621321133 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065097628 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064278471 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082671412 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062628973 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.062389494 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064286647 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062154625 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062140109 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064146475 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06291758 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06659743 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064624732 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.064221512 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.064334364 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063967978 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06232798 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062045404 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066004958 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063574392 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063547902 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063429296 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065892633 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063161082 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063505315 seconds)
  done (took 2.723898204 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081362481 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065188565 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071680618 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070892016 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070092253 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074732766 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070893583 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06595752 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070903104 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067354009 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068259337 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067630864 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065972557 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068087916 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066328482 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068579894 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069159091 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064776485 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066455186 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068345713 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068873043 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064458686 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067800069 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069050565 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067476146 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068953474 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066328402 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065361387 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068716416 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067119759 seconds)
  done (took 3.205789475 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068169692 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061853788 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06308683 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069164968 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062351885 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063329116 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062267519 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062182084 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063255398 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061714408 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063169174 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061805399 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062156885 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062433089 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062617096 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065751971 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076767574 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062995414 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062058406 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063115237 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065013322 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061636406 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0619982 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062038643 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062128087 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062328351 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062732653 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062596488 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062898932 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.163723971 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064761878 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06508977 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061490817 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068531362 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065737787 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061334011 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066927546 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06302408 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063824929 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063061133 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062971716 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063367074 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063237839 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070494424 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063766069 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065107635 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063567265 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064363411 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063384133 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066209588 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062409677 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062371505 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063498587 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062843846 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065673885 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061178591 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062272501 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061116832 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062547181 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061266443 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061664195 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061332584 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064169133 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062379526 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076901834 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068293802 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061658243 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064517183 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064460205 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065357836 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064598736 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076779397 seconds)
  done (took 5.86711228 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087050353 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084386363 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063956614 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06324324 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060302676 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062881549 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065364518 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062410098 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063690759 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.067593107 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063221131 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06377693 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063697326 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074979286 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063079791 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065815709 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068549895 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061371642 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063800449 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06738298 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064224902 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066795043 seconds)
  done (took 2.629971722 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150365206 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068084957 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102184533 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071954819 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067748109 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072483575 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068684794 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06860088 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069952396 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068252355 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068049437 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069727895 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067351247 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068226298 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067948173 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068153637 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069347811 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067875548 seconds)
  done (took 2.510344671 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074691196 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06417026 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.083741551 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064406554 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064754449 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067146913 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068884278 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072225456 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066560731 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064034147 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072385433 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066484186 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066339473 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064007438 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06633893 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063971083 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066198963 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064127962 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07218618 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068425358 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068392925 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07182338 seconds)
  done (took 2.658109163 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077051856 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066320079 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080324644 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066603796 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060598952 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062353014 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068084753 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064391366 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069026101 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.065904893 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064392563 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062812037 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067504165 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064011234 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067246568 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064435829 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06599597 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064797037 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066096018 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060715289 seconds)
  done (took 2.486530578 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084021994 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066597288 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066698763 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073432782 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065407497 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06589165 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072780291 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065214339 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065429038 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084823322 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065442551 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065442549 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072808016 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070029227 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065634236 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072731376 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072362855 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072306251 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065959681 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06581114 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085264242 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065174246 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072590498 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06539961 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065673543 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066487105 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066500207 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070296733 seconds)
  done (took 3.116258255 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065221898 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064470676 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062653844 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062582979 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06181858 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061898574 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061902949 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061741719 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064172156 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062005584 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06421242 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064265493 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064296728 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064215404 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063951839 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063983442 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064140719 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061785501 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062204218 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061988103 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064343551 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064370814 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064250179 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061972474 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061872673 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064064507 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062101566 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061849485 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064299368 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062045313 seconds)
  done (took 3.057282773 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073089157 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070427553 seconds)
  done (took 1.307369645 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061411886 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077766554 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061756493 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068214033 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068756908 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065276699 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073784884 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069993302 seconds)
  done (took 1.706101965 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.078859711 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076957817 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067743259 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080840119 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076385285 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082763386 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131629836 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066870386 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07253249 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063430278 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.077371432 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.063896619 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070272771 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064619745 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.069784881 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070401367 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062991144 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069975323 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066829368 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063082489 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065608113 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072414246 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067140599 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06005564 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065523829 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.085835633 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075438179 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064614023 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067443673 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.071612867 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069656725 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05867339 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064221432 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064464091 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062531888 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.073255823 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07894328 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067160396 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.072350962 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064887036 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074286888 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059607342 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068613922 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070820005 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074241245 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064368143 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064841238 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059382052 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062061986 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066478969 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06020398 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064862414 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059471102 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073535787 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068009884 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074688551 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063755602 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06614822 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067778616 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068270821 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071301465 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066778187 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066884343 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064158887 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074157917 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068620206 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073122115 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.05970742 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058806222 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062220417 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.073886062 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085922074 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070566913 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064942584 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065224189 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062091148 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067305309 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065609535 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069851777 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.070668246 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06430705 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069530125 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072309597 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06499925 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067079569 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072264891 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062661283 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06698262 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062766571 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08023682 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063236877 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062648719 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062739747 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074389115 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068232347 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06436488 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062615268 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073071521 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060873928 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067065533 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067589355 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067477349 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07746223 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070408828 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070465663 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073580309 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072598849 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065127358 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06832207 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061731395 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065803907 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064050346 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07230927 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05913822 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067767909 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065944515 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06520999 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.192467922 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064129956 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06613086 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073098757 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071092475 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064174601 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06213739 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068335237 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06550194 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06912074 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.072669986 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064794852 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06106954 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060535824 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068975774 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064963231 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069358672 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069107456 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06893956 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059979696 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063597581 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069478032 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.073765649 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065547559 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066565737 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070811487 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066421939 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063871069 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071609309 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068207373 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064244502 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071169263 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066761039 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06033146 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068453953 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068407093 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063729727 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069105962 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067999651 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06691012 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066096437 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06396906 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071635619 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066565217 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063948904 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065014238 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064432635 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076351188 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069117272 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061139215 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06226391 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074045067 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064120127 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065916094 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064998403 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067695053 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06586804 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063141157 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064521817 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067314837 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075047577 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06895703 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066213546 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070108965 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07571861 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064567603 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068039838 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064279494 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065710787 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065772086 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073124162 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070309025 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069501461 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067073056 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061547538 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070127077 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072166109 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064400721 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063028729 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064360909 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068688275 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070471842 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068907174 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065410785 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063371133 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066029192 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067809838 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067714377 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064467747 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064064437 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071233722 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063182212 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071364456 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065688183 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074697775 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068192069 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060418248 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067556785 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063161277 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071060357 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060511261 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06443693 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065798042 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068185694 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066301401 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069069623 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061127999 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073226223 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073905131 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06700412 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066410039 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.0654528 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071525066 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066363943 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06889344 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06840825 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070585598 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075692635 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06430021 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068065169 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.196523499 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065959637 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061017591 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07114866 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064344975 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065241147 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064737158 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063480634 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068515982 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073796537 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072002638 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059987705 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067850926 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064589964 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065056261 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060863223 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070486217 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068962855 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066308842 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072571688 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066794298 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065934384 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.06847492 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064956534 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066701679 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067573301 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068294064 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06590669 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067772951 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06558362 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068909202 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06514456 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063607682 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066909131 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065577912 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066358909 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070443888 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064944867 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065970102 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068367375 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065918566 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066314932 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065645604 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064680903 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068661344 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066171467 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066273512 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067288427 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060310425 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072697589 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064776134 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073623117 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066732439 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0621273 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071502139 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067331612 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070634072 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065844023 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065884281 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066680208 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064933119 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068616757 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07174606 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064014044 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075305995 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07222941 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065933239 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068193344 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065375861 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066695818 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064778671 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066100436 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065766461 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065737407 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06485868 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069241775 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067478043 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065300041 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066710574 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065695646 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065289788 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065853292 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059861898 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063856436 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064076068 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064427006 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073868976 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065587207 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064913136 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063986898 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065346986 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06444229 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061550152 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071975402 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073144031 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064878674 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072060258 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064246523 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066596478 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.074510125 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.05891607 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062583316 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062330479 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063064611 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071217365 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065019748 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073645122 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065102592 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063997438 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062440464 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065205458 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063251309 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059413617 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063480535 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068666702 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064431157 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063970163 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06485295 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067286427 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065575762 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073750915 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064061912 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065343745 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064987045 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.18670998 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064870618 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065794333 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068673502 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065922694 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064092303 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.0628018 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064763521 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06650264 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066134888 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065017247 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067513162 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075317444 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064997485 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068668152 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06894816 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060593309 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068313538 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065080244 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065279252 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065107692 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069621163 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069428119 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066478686 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074217184 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065754248 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066787099 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065836942 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063581906 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065459034 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064768213 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064985993 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065469642 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066207896 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073529721 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063902221 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06826035 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065875051 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065775758 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07221901 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066380936 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068740088 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072190865 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066515689 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067465946 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073436381 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069972882 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068339215 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066851598 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067089793 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07108214 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064959557 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071746899 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065716326 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065902279 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067281158 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063373633 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065527998 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064940234 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065008477 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071923772 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065659912 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064935877 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064735364 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064280401 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066590083 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067661633 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072843557 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06776234 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068311285 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060789868 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061848643 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066059545 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063269808 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066898723 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067223563 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069985711 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067015843 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065025672 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063843557 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073758437 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070918065 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068446887 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06336503 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06862566 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065352915 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067151351 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065983698 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065099846 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066143793 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.068683925 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066139471 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064675601 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071222074 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067904462 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065629832 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066135648 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06568468 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065265676 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059995594 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065316766 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066611881 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069360975 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066815738 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064845401 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074784053 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062652366 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065115218 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068006097 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063902511 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069140198 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060305127 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066154476 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065321718 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065686505 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059984807 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06431012 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063621887 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066982522 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064406877 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060171217 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075165111 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073526613 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067947473 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063720456 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.188095964 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061061391 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060522806 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064888856 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066224831 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067509259 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074931562 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063977955 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06485246 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060556283 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064857882 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068124912 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068364812 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06291246 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060917729 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064314299 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068534616 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07074552 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063639709 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065421976 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068705675 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067789589 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063673097 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068318188 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062989667 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069220513 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077931512 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065897689 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065821249 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071941822 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072701779 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066088146 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060319985 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065666219 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06855061 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066321271 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06714908 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066546852 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079662181 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067806179 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06491597 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063985278 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067777453 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064902478 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072735565 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065837408 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065568234 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.06974346 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067027799 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073570781 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06792689 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072403233 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068233623 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068699777 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064143686 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065111815 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063664879 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064251655 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06591263 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065511139 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069913802 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072957431 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06418813 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076016877 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074133361 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067106413 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062343057 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065293069 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064849605 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060328437 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065604138 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063508109 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062895668 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063388328 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063673989 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06562853 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070037497 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065696905 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065182129 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064417183 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058962994 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06646165 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067284497 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065301954 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062080301 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064660998 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065373762 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.068734882 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067707618 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06244007 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066557318 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.0666676 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065844115 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060103182 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071091478 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06373687 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066464646 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064304522 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064341979 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065685602 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067881015 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068780516 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065620076 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067034953 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068144484 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06666482 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06221522 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062365816 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070009813 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062798097 seconds)
  done (took 41.677302284 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097022761 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060822846 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061150579 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060513348 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071604283 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061479109 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060293048 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061327055 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062204224 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064216853 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061091027 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06192635 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07063451 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077936701 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073740241 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066612107 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062088799 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063144204 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06214209 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062936211 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071025705 seconds)
  done (took 2.648169944 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072240008 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.068766299 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070450088 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073217305 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065109611 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068845349 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070436226 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068709231 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074025132 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065509642 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073824639 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068949712 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.065325089 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06513741 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06503252 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069174645 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074026395 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065852882 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068807377 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070100933 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068921178 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070217888 seconds)
  done (took 2.754572562 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065519665 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064826557 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066220722 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060608041 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06439232 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06784896 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067922742 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062449884 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067192803 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063511846 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.063397667 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.063857823 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066304373 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.059828966 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.064505907 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062513137 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.104810303 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067574208 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064111369 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06506571 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.059792118 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066156577 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060401717 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060238956 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063645676 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06779982 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065045185 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062406973 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063900145 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063737967 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064511076 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062875276 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065758826 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064839443 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063481833 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06381618 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064198307 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064280277 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060507429 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062577946 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065398347 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060629536 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064732095 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065432347 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062845587 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062428675 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065934118 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064261099 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059536955 seconds)
  done (took 4.408017165 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078515119 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.105777221 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066258311 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.0883328 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079462926 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075766127 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069536195 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088529029 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063617091 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063754156 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078620581 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077266918 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064113032 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068846391 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067618815 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063905007 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065208375 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063054576 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067341687 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063263846 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067394388 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070164336 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077710569 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076164647 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067653786 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063074016 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063375247 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067996004 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075777159 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067976778 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068620058 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06942907 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077830804 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06623255 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063077239 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065824685 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078586374 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063757861 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066114568 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061444928 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06601076 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067632453 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069937969 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078760847 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064370095 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068790443 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063484421 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060978162 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075522868 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066071202 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070740908 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076977928 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067313489 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063827771 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067768508 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077722372 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063798747 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062112139 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066495799 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075106463 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061672839 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067511222 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076657874 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066134653 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070552362 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077338492 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068734282 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067464237 seconds)
  done (took 6.140104813 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073300966 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07066128 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078841062 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077569254 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069939036 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07005425 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070531215 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070512843 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070115796 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074537984 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070018182 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090007246 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065749961 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073062088 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070285097 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070276226 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070718393 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070160112 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0699964 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069698751 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070140838 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077232839 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070018321 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077500294 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095903508 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066139195 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070407379 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07015592 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077658549 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069962593 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077088853 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070181699 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070631225 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077519292 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076815597 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069736539 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063340233 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069562484 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069607392 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069912412 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065623474 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07722046 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069432283 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065450186 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069611318 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069227737 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077691727 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076534649 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072085931 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074147125 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069837137 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077362318 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069710383 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070129279 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077321181 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.101913675 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077587352 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077771907 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070231097 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077476867 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07730472 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083721356 seconds)
  done (took 5.807601343 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081074009 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072930737 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074922299 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059858681 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062276997 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068385611 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062763274 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062537686 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072490416 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072510217 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074424882 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068096107 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07039991 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074352299 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067447438 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070559896 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06727035 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067536729 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072136125 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067611807 seconds)
  done (took 2.64734477 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072129874 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081618368 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065405219 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070484406 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067052582 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069791129 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066762322 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067333302 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065058605 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067143639 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073609808 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073625248 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065050477 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069532075 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073544566 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069353206 seconds)
  done (took 2.364498941 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.072296859 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07064071 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078252442 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064455774 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06273302 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061002267 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064136039 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059817891 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060700832 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075780937 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063711925 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.066369648 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06406562 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063346201 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06169523 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066477029 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060810826 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061823465 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064514101 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.075588201 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074983789 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062790779 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064951249 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064499477 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063835186 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068869101 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06365851 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061955104 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061271788 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064083133 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064193878 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067332386 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061436328 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061929499 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062681467 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061774699 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063738905 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064306196 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067210211 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.0640413 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062077653 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063878761 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063822583 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064851595 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060587965 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064698897 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060728625 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065919319 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062134206 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064618776 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064724984 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066688223 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064734538 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070492237 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06656153 seconds)
  done (took 4.823004012 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077913306 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068532881 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060402753 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063005379 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067832309 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06574025 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067581111 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066210319 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065979484 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062540038 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06591372 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066841683 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066303201 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067831006 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066031943 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067809317 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060399511 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065884956 seconds)
  done (took 2.452308792 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069240226 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064812599 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071246924 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064845173 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063952101 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066989196 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060603 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063005871 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063035657 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064107535 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063952031 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066530879 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062941383 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066514043 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064113589 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064593427 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066404384 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06303386 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064256595 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060576109 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066618049 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062660337 seconds)
  done (took 2.677251361 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.090645791 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.079606927 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.134387873 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07701741 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.081325881 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070139995 seconds)
  done (took 1.787622203 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088575781 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077156798 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064632558 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085611734 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071021672 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065620521 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066837492 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067221251 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074932858 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075095845 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067313036 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075061203 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074538999 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072995156 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070919684 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071001292 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065250969 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065241307 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064539419 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081358758 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065432875 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073778572 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065387705 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065349223 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065309837 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073293863 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073854537 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073940099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065546519 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073675055 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071140915 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065635414 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074291334 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073626564 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067491316 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073661488 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065561671 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081462326 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07098327 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073060952 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066858855 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071344925 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073564571 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070077571 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073614485 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065669926 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06960518 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06534745 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065370259 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083112185 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071390527 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072826277 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071062904 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073759874 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07354758 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082852938 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073929741 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073106935 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071197644 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076826907 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073644265 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071205287 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072912738 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074258552 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071636553 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072935594 seconds)
  done (took 5.997767097 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080372865 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084141781 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065485885 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074040603 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072926004 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065844589 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065559043 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065659922 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065876177 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066030324 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104456659 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066106567 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073186964 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073170959 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065903933 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06572428 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065814132 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073280616 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066145277 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083236505 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065614701 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07289838 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073437104 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072868508 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073862351 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071240729 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06565206 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065872434 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065995947 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065634312 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070024961 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066122721 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072866327 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065019018 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07305107 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065973895 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065709039 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070028304 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065343807 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071307292 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073406613 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081368694 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065432416 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065298496 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073715517 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065320248 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065653606 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065625354 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065370177 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065240081 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073773571 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074114332 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073659573 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072852208 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065484357 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065834133 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065456125 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065470566 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06584848 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070704656 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072736348 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065686302 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083389599 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065287379 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06557548 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073238159 seconds)
  done (took 5.901189027 seconds)
done (took 124.493196915 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.16571562 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.145163987 seconds)
  done (took 1.565125748 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067479018 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095882175 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.074708038 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.123937853 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065150389 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.096785555 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.095683109 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.075498323 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065442307 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065078182 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.064590836 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066912946 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.126199042 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.064751689 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.064934731 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06762784 seconds)
  done (took 2.54834644 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095388131 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.153856157 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.097684635 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064062539 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094822135 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071585566 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063334585 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07369357 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069335322 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064287583 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071697526 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.068865302 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.063799657 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.068976885 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069629389 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.070920163 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063570019 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.070893417 seconds)
  done (took 2.667202015 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098262805 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.088588808 seconds)
  done (took 1.458011813 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.149110624 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.102671777 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145491093 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.334847878 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16019367 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.225509598 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.122725908 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.123685477 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11302278 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.1189803 seconds)
  done (took 2.868563799 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.0958022 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149258208 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.250001762 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11250519 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.0707944 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091750091 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11366217 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076657438 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078435764 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078330155 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078498009 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074560666 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09693868 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.071758671 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071733398 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074338752 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099962211 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070825614 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072631748 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074573795 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096905382 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064264437 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.071567298 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07110267 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076020218 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075582212 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064426549 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.063877116 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074710658 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072110719 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07494873 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091117363 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075557382 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103562019 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.068556317 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104504416 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.074201076 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072141511 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072671418 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072209718 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077338825 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0766923 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.070753572 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074608648 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064378608 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07474975 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065457165 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064398149 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075871937 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065353974 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07617594 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074894049 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103918051 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065355265 seconds)
  done (took 5.767473254 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.098997124 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102282445 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070199196 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109124651 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098037356 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070494931 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099456456 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091950651 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.100320972 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068635112 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066883843 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068816206 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080648407 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080587122 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109185655 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102188137 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072079029 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069676763 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10125532 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.100586216 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066809458 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092978257 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.087770909 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.099086035 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066707118 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069140514 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066255704 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068993715 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075290891 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076754011 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068421048 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078954226 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081756863 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076626371 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065794904 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066624331 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067300272 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078182975 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077176703 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077392553 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07614651 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066212148 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066831527 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068353792 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068833192 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066388594 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077287782 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07880425 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076865054 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068156773 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068655027 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066796132 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068488299 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078598581 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075859868 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078883964 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077937046 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06680983 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067457322 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07152533 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079541627 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077498958 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0775177 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068171381 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077550341 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0672466 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077817077 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082378362 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066813787 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068549437 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067219232 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06818912 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068102817 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076451235 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07678566 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068201806 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067970242 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066686672 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078035519 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077085137 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066519982 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074844246 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065450861 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066630421 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06769235 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068022289 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075284565 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077767965 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068218503 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066450747 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067596708 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067138369 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065837606 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075137064 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078673751 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077495249 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07733839 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068004626 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077481099 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077613551 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068777324 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077894561 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067468259 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.190433266 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068518847 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078464953 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076897214 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078155706 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068293001 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067010398 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077101833 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079699951 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068314365 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078072431 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080112221 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078352665 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067167831 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080585347 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067713095 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079319929 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068997274 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078620926 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06801565 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078317044 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067883429 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067278322 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067707512 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077423573 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069123751 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066847059 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068355218 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068384424 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078349915 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081064816 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069348843 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080370093 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077324009 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069443223 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076906123 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067090181 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077988255 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068370597 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067902814 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066523068 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080635932 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067426884 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067651519 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067714993 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077853743 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067521503 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078590089 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077011363 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066842944 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079437178 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078447403 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075593359 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079535685 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069059475 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06706582 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066581444 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068552976 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076440691 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078396503 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069411764 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068061455 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077699297 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077656684 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066114768 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077044717 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076804491 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076909582 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066804944 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067809618 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078315029 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078744796 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076830106 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076282663 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077317624 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067102757 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076133982 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07680799 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066828671 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082815477 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066395585 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080519104 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077550619 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074898276 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077074888 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078837544 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078085408 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077803648 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080781254 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066236836 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066324676 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078374856 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06657271 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067634715 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077084735 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068492012 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06832122 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081532283 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06751683 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077584108 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066137553 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077418234 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065728586 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068314088 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081538934 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066454111 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.192501174 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078667873 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068472958 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076798133 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079771408 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07738248 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06638257 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069150693 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077777395 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077088126 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066966364 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068391869 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070071122 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.08345058 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075782032 seconds)
  done (took 18.214523721 seconds)
done (took 36.366109794 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.202424413 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.147496608 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.195169793 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114838911 seconds)
  done (took 2.030165619 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119414984 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097975425 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091803173 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063640093 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098610053 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063190391 seconds)
  done (took 1.846699719 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.299740515 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20362636 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176616687 seconds)
  done (took 1.980425215 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.193923473 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.183024492 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.387637701 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253463841 seconds)
  done (took 2.431442818 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141107316 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087423617 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065276557 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083116982 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132333082 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.154721059 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098364795 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121964291 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076142513 seconds)
  done (took 2.322828923 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14301084 seconds)
done (took 12.058585995 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162086481 seconds)
    (2/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.238080298 seconds)
    (3/309) benchmarking ("sort", Float64, false)...
    done (took 0.141892219 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.098880331 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068037076 seconds)
    (6/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.166769315 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.069806366 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145882589 seconds)
    (9/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.135607832 seconds)
    (10/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.159695508 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.075844243 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072071819 seconds)
    (13/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071775073 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.107006579 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.137722002 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145894309 seconds)
    (17/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.167098547 seconds)
    (18/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067026257 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090876669 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102000907 seconds)
    (21/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172031051 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.080596838 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063701726 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15195823 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066168709 seconds)
    (26/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07786104 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.190727729 seconds)
    (28/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.155530294 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.212632267 seconds)
    (30/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.071013915 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.06924316 seconds)
    (32/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.149234392 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.076987006 seconds)
    (34/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.136807113 seconds)
    (35/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.072146865 seconds)
    (36/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076362917 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.179322367 seconds)
    (38/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.206907072 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162148955 seconds)
    (40/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.070475493 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06877537 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070706703 seconds)
    (43/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.085744204 seconds)
    (44/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07112524 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083658462 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.137047731 seconds)
    (47/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184305321 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.060568565 seconds)
    (49/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069448225 seconds)
    (50/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.064742137 seconds)
    (51/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.170816487 seconds)
    (52/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070264145 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.190572356 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.065401466 seconds)
    (55/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050085321 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.073976213 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.136876894 seconds)
    (58/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071834607 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.163133408 seconds)
    (60/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100813846 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068015236 seconds)
    (62/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.094106713 seconds)
    (63/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.127515718 seconds)
    (64/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065156028 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086108747 seconds)
    (66/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07305285 seconds)
    (67/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147379552 seconds)
    (68/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.151319622 seconds)
    (69/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07164855 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072500165 seconds)
    (71/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.134383675 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087462116 seconds)
    (73/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.179868904 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073614218 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157830799 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.178766946 seconds)
    (77/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.065400977 seconds)
    (78/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050256351 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.064577854 seconds)
    (80/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.050550995 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119197492 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.138768948 seconds)
    (83/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072200255 seconds)
    (84/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05027146 seconds)
    (85/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.156693369 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.222184294 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092436335 seconds)
    (88/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075523578 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166850475 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.312058142 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15083648 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13085389 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091218147 seconds)
    (94/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051117777 seconds)
    (95/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108134921 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074516984 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05049837 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09234525 seconds)
    (99/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.104037529 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070361331 seconds)
    (101/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107259216 seconds)
    (102/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050617306 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070213781 seconds)
    (104/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075422073 seconds)
    (105/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.147542643 seconds)
    (106/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071837699 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145361217 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162765961 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072274269 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.08381467 seconds)
    (111/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.115875728 seconds)
    (112/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.075975236 seconds)
    (113/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.147567158 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171821192 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.133254571 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090081008 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.198257159 seconds)
    (118/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085522802 seconds)
    (119/309) benchmarking ("sort", Float32, false)...
    done (took 0.12504541 seconds)
    (120/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.072502335 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070276692 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.130657024 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072030381 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.107790274 seconds)
    (125/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073105074 seconds)
    (126/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077801337 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070448519 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085802918 seconds)
    (129/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.147951966 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09407253 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073041364 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089988007 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124005277 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069001729 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070341416 seconds)
    (136/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.181204346 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066185372 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051040222 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083581183 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063545569 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063689701 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069820331 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063383347 seconds)
    (144/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061081425 seconds)
    (145/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071441317 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087090578 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071079256 seconds)
    (148/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05010956 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063587125 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.065995058 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070858057 seconds)
    (152/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.14696437 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.063422297 seconds)
    (154/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.049827935 seconds)
    (155/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.049622574 seconds)
    (156/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051090615 seconds)
    (157/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073759615 seconds)
    (158/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064737523 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071554125 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087446915 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.191682505 seconds)
    (162/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087199781 seconds)
    (163/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06778229 seconds)
    (164/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.097764069 seconds)
    (165/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050110699 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08628739 seconds)
    (167/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068598255 seconds)
    (168/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071380943 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077164717 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065636733 seconds)
    (171/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085425023 seconds)
    (172/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059139642 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131823879 seconds)
    (174/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066951222 seconds)
    (175/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064598384 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064029756 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072999617 seconds)
    (178/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078762315 seconds)
    (179/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.069942418 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.14703684 seconds)
    (181/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052296841 seconds)
    (182/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07278862 seconds)
    (183/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078757562 seconds)
    (184/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053012319 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050103011 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.066177855 seconds)
    (187/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.059442834 seconds)
    (188/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.155101588 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070440242 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063725014 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05206888 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085019758 seconds)
    (193/309) benchmarking ("sort", Int8, false)...
    done (took 0.290186168 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073376195 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117645478 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.093590487 seconds)
    (197/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07226214 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092877387 seconds)
    (199/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.156404108 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070408414 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064982709 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050382298 seconds)
    (203/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05052306 seconds)
    (204/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.105327072 seconds)
    (205/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051120696 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063214668 seconds)
    (207/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051273118 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064058977 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064420283 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050304088 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.087962268 seconds)
    (212/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070869386 seconds)
    (213/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051031014 seconds)
    (214/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.147923205 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071190972 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.0730563 seconds)
    (217/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.14838091 seconds)
    (218/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063333169 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171523795 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.109058345 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061314391 seconds)
    (222/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051366905 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077751677 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.173995292 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065306637 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069219643 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088592157 seconds)
    (228/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050289018 seconds)
    (229/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051587995 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065143446 seconds)
    (231/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062021271 seconds)
    (232/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065861654 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.062606833 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.07605915 seconds)
    (235/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05039947 seconds)
    (236/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076981152 seconds)
    (237/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051122978 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064028554 seconds)
    (239/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071023272 seconds)
    (240/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064223946 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.129929729 seconds)
    (242/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06461468 seconds)
    (243/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068159892 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065389914 seconds)
    (245/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067649913 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064004989 seconds)
    (247/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.050814603 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064571769 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063453849 seconds)
    (250/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.06851678 seconds)
    (251/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051334655 seconds)
    (252/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09587253 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049541845 seconds)
    (254/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051763309 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069405099 seconds)
    (256/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070341554 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122909709 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050058507 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.102932783 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064096622 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05012057 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063910619 seconds)
    (263/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065221582 seconds)
    (264/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.049873559 seconds)
    (265/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.050381426 seconds)
    (266/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064458567 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063390419 seconds)
    (268/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065007771 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052428087 seconds)
    (270/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063106001 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.078579167 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070598666 seconds)
    (273/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071073325 seconds)
    (274/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050686118 seconds)
    (275/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050217734 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.071197306 seconds)
    (277/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050373323 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.10367533 seconds)
    (279/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050033428 seconds)
    (280/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052232349 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064031769 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050206805 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.04984583 seconds)
    (284/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.070306131 seconds)
    (285/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.063276008 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132224405 seconds)
    (287/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050121482 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.087566901 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086934591 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071521786 seconds)
    (291/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064288002 seconds)
    (292/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.085483357 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062512064 seconds)
    (294/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051510494 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.062522704 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06235126 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071203156 seconds)
    (298/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070245247 seconds)
    (299/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.171451957 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069582395 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087030371 seconds)
    (302/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.059883587 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.090027204 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069827556 seconds)
    (305/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05088377 seconds)
    (306/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059588255 seconds)
    (307/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071953246 seconds)
    (308/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050677038 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087632314 seconds)
  done (took 29.707430731 seconds)
done (took 31.025410598 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082946396 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089524445 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072579875 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09046655 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078691863 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.073888716 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070514043 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075957626 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.077753164 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07907372 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076211486 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053464856 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.071650524 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071768365 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072563824 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088075639 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.075665827 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.070739766 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071042466 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063200518 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071197987 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064373861 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065612082 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053875257 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076012114 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069611441 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.070160414 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072376537 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06428944 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06418095 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067302048 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072035816 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064339689 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076615706 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070730912 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071348502 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072203873 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074476266 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066031836 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064338297 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072289292 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06454828 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071158423 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071621666 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070215256 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069198015 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07085976 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075883616 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088494355 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066262239 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072388944 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074190479 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074237237 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070148763 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.067616675 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.070739332 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068933894 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088464743 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071734253 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065969302 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.071772082 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071962684 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069318206 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07112855 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070893542 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073039566 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073484327 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069418121 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072277958 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.06877199 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06360264 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071347762 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066758082 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064006509 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073539584 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07509891 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062573127 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069767054 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070436637 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069129796 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062982471 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065622182 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06515691 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069406516 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065880867 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.052958115 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067604205 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069575403 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062773985 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071243507 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069790688 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069931793 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065210729 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073159214 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063062081 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068601842 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064183857 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06379939 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065539756 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067396726 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063778303 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066032887 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072617179 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065344747 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069457362 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077016121 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063801752 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070249016 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063227008 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06329561 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07703558 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072848455 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064263631 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065835838 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062784355 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.0708939 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062678178 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063643176 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063434689 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063794498 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068846227 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063798159 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065501836 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070496522 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075468137 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063420158 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067026262 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065577023 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063545803 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068415231 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063602187 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.190645966 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06598838 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060672141 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065949553 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064422065 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070756192 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066291764 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071941099 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066309766 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.0721658 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068582728 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.06912307 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069090071 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063127418 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057011983 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066524016 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066124734 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066081234 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063919564 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065245728 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064250323 seconds)
done (took 12.063439799 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067722856 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139534225 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096448032 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092925358 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083633093 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064996584 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074084226 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.098696536 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066251884 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100136746 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084588945 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.082737247 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108931356 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063359976 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064232107 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068108948 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065962575 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.079267043 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097673422 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084050029 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11261203 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063420411 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091200072 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087820112 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.084661092 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09834371 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065237338 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068321838 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067542815 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087810291 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.084056541 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068642188 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06505227 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097265184 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.089453725 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081112271 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065016221 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.079705961 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06469609 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063999047 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066022915 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.094835325 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077287684 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077811498 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068468349 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067296532 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065320782 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081107505 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.086550696 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075993348 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083554952 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099330347 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066765148 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064671059 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062838633 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082686579 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063803057 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066804233 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064847849 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066525979 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064329538 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067450929 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.07905611 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.07911894 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068013238 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.077597935 seconds)
  done (took 6.560380959 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082751317 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088157984 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081315322 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080952799 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064188444 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065073152 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064698875 seconds)
  done (took 1.938621375 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06672304 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08623805 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.086886221 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.086953716 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081881491 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085693199 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073848876 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.064678203 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.078373858 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06574136 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08504376 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099267834 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.0651781 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.070814314 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.088082068 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064672609 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.087475958 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06495331 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068055908 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.0874375 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066554327 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.079594682 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068100242 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065391791 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078951949 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065095407 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110174907 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068952127 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066407644 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067777468 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062522427 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104230613 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.077771212 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073105952 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064613963 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078547791 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.078570481 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063082888 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080932766 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.069864354 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.078329177 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065010806 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065164699 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06252153 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068717613 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.074290954 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065892442 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065787626 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067200707 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084013605 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065900014 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078282552 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06798551 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067266601 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066601451 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068507725 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074373548 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065554703 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083953752 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066077634 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.080560205 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.080192126 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.077671804 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.079854938 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.066765642 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077832647 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.077888294 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067160525 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06717373 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068185972 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.080306848 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.062894036 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066181497 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.074731436 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066526751 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.086862495 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.086632823 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066113104 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.073470481 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065304929 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064612491 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06482767 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.086619929 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066862778 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064460236 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068566364 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067457111 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063148461 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063821452 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068444336 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.062742356 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.066356069 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067260307 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067673174 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0674149 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080312162 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06713144 seconds)
  done (took 8.479400725 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068931958 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066379438 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067877555 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066025094 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065846885 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066200178 seconds)
  done (took 1.833606114 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091504635 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067060352 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077903908 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071215427 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101396008 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.084295124 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084860445 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076356396 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081395777 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077002225 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083908297 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.085761688 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090520199 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071159399 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083828001 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070012083 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084922117 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073810468 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076507237 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071664222 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084044535 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07060052 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070787692 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.07915785 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073681165 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070052442 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065250502 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077084988 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076107855 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076658543 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070716129 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073309227 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.068782231 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076627857 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084090497 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.068867113 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069946639 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075479539 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070654493 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073354056 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085318341 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070631628 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072448665 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075264611 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076133972 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.068862628 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07498521 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07395054 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083811858 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074996333 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075120104 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069670303 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073250901 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07490346 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.068432367 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075934447 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074368559 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084074968 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07035192 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.068789339 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067525302 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073295897 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075871689 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073351781 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.076442427 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075658946 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.068690753 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070864067 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07083338 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.069686358 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075241881 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066732699 seconds)
  done (took 6.846049161 seconds)
done (took 27.053871289 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538904775 seconds)
  done (took 1.93320555 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.57542851 seconds)
  done (took 1.99534229 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.302366079 seconds)
  done (took 7.721373333 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.378556154 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.456214145 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.671698976 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129060961 seconds)
  done (took 3.084043854 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.665839994 seconds)
  done (took 2.094126065 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.206101898 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.191223806 seconds)
  done (took 1.835857124 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.372543867 seconds)
  done (took 1.79586823 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.070631878 seconds)
  done (took 2.495161188 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256134645 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15991294 seconds)
  done (took 1.846072272 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452803993 seconds)
  done (took 1.880923392 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.614131603 seconds)
  done (took 6.04351051 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203362507 seconds)
  done (took 1.671966432 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239703617 seconds)
  done (took 1.669188486 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.62154123 seconds)
  done (took 3.052553335 seconds)
done (took 40.54721224 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08056812 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079656396 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079140581 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076479073 seconds)
  done (took 1.731676795 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076830419 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071678503 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075254536 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070980101 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075617099 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071271984 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072530981 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075333664 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071342197 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071069509 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070779929 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070950915 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073749134 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072823235 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06979075 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07346854 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074767293 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071162889 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074138689 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071031013 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069596638 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073281544 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073590025 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070924489 seconds)
  done (took 3.173403744 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077617908 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071667282 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073097823 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070933751 seconds)
  done (took 1.732485546 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077790947 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090274128 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088462278 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076718263 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089912483 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084652545 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06789466 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068080678 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071781988 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075700154 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066682798 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093276691 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08579656 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.0754905 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077833564 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064383436 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066631763 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084390185 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.075554052 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076084003 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069283186 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075614033 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066733149 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08596022 seconds)
  done (took 3.289480556 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077414736 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101674839 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076224095 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085793659 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08825981 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063971412 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.072648519 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087378637 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12037378 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06431246 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068680701 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063992991 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071158586 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063824328 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074617784 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103089227 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106651987 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067061658 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.0938437 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064484829 seconds)
  done (took 3.059004581 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073396482 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068347217 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065009543 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067935367 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076339442 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071677668 seconds)
  done (took 1.871998252 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068315123 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066542468 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066304239 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065565471 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071111074 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066312153 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064491491 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065974987 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066180724 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065709821 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06527594 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064502488 seconds)
  done (took 2.236491316 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.169650435 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066960509 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068309193 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064875604 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.0694245 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065352401 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078347563 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066440313 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088661602 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064781676 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065080411 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066865541 seconds)
  done (took 2.377886379 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201241674 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074472068 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228528237 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133998123 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107926974 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112215414 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101443452 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110690177 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139006685 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098780584 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162321868 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160100089 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104420668 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133777371 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087475022 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.095641095 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149975665 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15810994 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100964125 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160817674 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139412371 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121891339 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142673198 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09876891 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10322809 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118237733 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070097874 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078737976 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164647379 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127607251 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142181728 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107967095 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090944122 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171535859 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164853124 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13814392 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131989813 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082541277 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100035554 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131072833 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198332431 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087378649 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16072183 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238401594 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080144092 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131190877 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117172469 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116938791 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104292062 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088820755 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141510373 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177148825 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13447481 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085448688 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109912244 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111938035 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112444114 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101540201 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176211786 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156450533 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124393152 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07031585 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097535984 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14994856 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128314765 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10623284 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123455539 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091538285 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128956859 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150136484 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115175433 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139807242 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125236487 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08678973 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116406526 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13643988 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12483169 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16525975 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12159961 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071717378 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121010529 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09990336 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079411455 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140543307 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073821758 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171930548 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09970388 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10787776 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112419394 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106736311 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106995381 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157421363 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140109786 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23570384 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065491221 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102431137 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117101621 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144167244 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085443434 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106021521 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113348443 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076410737 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134956833 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074888606 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120312274 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074179285 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122414917 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130191585 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074601278 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120037805 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098644268 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098671053 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130033387 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156494455 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087910037 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080452248 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164075605 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119601802 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101889653 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141278919 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151511792 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097388563 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099706846 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145705389 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173582773 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088059406 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159010648 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104580519 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082431554 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085484597 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120897801 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109438692 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.1189888 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080993579 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115323049 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162637986 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073235407 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092709575 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130046464 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077254849 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079134087 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100755314 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098078779 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093230348 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098348531 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101993638 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1342576 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121930647 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103079339 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259318638 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097232987 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167011675 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087224581 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098517424 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101495769 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068130845 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.1329753 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152313374 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077464897 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160273411 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119969943 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1036217 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116417001 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081516913 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136323597 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077925831 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069507617 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14003641 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107402249 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107201046 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.146306305 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102075036 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123411247 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116567226 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130044618 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128104629 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126445448 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102736257 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086781993 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109966689 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12155288 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071789231 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089349648 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078285272 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101942392 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093035565 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081733666 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13850455 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121165938 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097823125 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108893294 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094555869 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143355931 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074506691 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125481633 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116516794 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092494816 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148319621 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148985096 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128429096 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09760356 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142131041 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068861248 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072447958 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.225177719 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121070123 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082050497 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082600429 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1152904 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143318612 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12676468 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134269535 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109453998 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118052852 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151348451 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068344401 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114515326 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143422238 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118653729 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101307075 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08855478 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09668171 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138620873 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10591998 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1765368 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111083202 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123204777 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149804375 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097747104 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077809203 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100464443 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132074066 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101517725 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139532359 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097308077 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085928547 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107088199 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072990215 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097975964 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123579147 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116585417 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136710732 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111703892 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128910831 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076023012 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113286792 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117408628 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119011899 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063342481 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117674524 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158151834 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092292006 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116104504 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149942134 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077618858 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122120074 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.309046197 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141893871 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083071933 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10684314 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115869293 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124570042 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118486415 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136786222 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105288029 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132585727 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107282326 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084223742 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085469704 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095100127 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102405144 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092041308 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105470329 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11238332 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092539843 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128448477 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100849111 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108118547 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114885928 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095438772 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088567288 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095457781 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169355907 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117218776 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16751455 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096609743 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141337329 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158912006 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073292882 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077441905 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076515271 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136226867 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082189518 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127305593 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.095596752 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103196122 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121133097 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137213765 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092602439 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.0673963 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105965848 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129873181 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109678968 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096478051 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101889826 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158773507 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098317295 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077573385 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111387873 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102889511 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100451567 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305322792 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061076144 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096301398 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075636187 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07990601 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1241333 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148014743 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079306815 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099989574 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116660003 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107306977 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124870109 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09878362 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097936809 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112073904 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1444005 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125205298 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087861812 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109606037 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125798462 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152871784 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102847421 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092939541 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167581532 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149003877 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15522552 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086265621 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112059653 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111445136 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105642991 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134200052 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082078556 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158911417 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08039271 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132168241 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100884559 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087870273 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126071858 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111989951 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086191141 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14340079 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114490931 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080686951 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07615458 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114129846 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117747327 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103815025 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073881196 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135572811 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071810498 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129404228 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164866996 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079711982 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241353543 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095580272 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079440429 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106063091 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101082957 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087896633 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.095821394 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167469105 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085960026 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146397612 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138212444 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110476617 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133421173 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097480035 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633067895 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076431879 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147123102 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113284439 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167709481 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095505265 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11529415 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106636761 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122718283 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141006804 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10207644 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174820607 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129200697 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113242131 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078082864 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100260838 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099841998 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086101027 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102648102 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110832654 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112728655 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091311912 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113125588 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119911768 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080329174 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092870562 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1515632 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113192577 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139137382 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136022169 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082840718 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115013208 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135767355 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078327918 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118856067 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148143608 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103635601 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233351881 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079461054 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099581416 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167074296 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072266083 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157607285 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117821814 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106534149 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110676794 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111151083 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127903788 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105110165 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11922895 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091108863 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107740348 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110159012 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079540207 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075350915 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103371033 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110569265 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095249358 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096982053 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.094934204 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147826352 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069708015 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09308118 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100769953 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139546162 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169948088 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08641358 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081033876 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115592907 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109688424 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110323026 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1176022 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07769285 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080442846 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079940682 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.075652778 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.105813549 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109802425 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101898488 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108287677 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159282625 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.080887099 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224442152 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092860919 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102367627 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068651048 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077151167 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093417281 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094564265 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105291858 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098983923 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166149919 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092858044 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088458932 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09062373 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072086255 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219578323 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127927156 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109068308 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116658152 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095579867 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061676771 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107912888 seconds)
  done (took 57.420819491 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12024074 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082296432 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098366628 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144273749 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121695006 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210258338 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.152927515 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197220282 seconds)
  done (took 2.670885198 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06927248 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092741254 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098663348 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.0812831 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066189919 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067287619 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22046318 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.07890041 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.0656094 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.086741454 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076671442 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06794111 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.410025583 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064968314 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06565401 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060596592 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066231002 seconds)
  done (took 3.272814627 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.362574562 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.577865969 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.367853798 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072242022 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.639472328 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08999335 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.796345653 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.124310618 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072164321 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.514953034 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700830188 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124432239 seconds)
  done (took 17.987071374 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076953951 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069499076 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082618993 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082174151 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071982103 seconds)
  done (took 1.927326773 seconds)
done (took 104.231740299 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081106249 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.385211013 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053424778 seconds)
  done (took 2.012642585 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083870481 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083055413 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082834796 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082019578 seconds)
  done (took 1.883635175 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075453402 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075779706 seconds)
  done (took 1.696128029 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.220645131 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.155936161 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085766172 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082120029 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076315446 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076777251 seconds)
  done (took 1.784510005 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072546924 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074362173 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071111791 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075111894 seconds)
  done (took 1.840296089 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077228686 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053127529 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054753145 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.054750262 seconds)
  done (took 1.78588608 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085834366 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077750243 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077873013 seconds)
  done (took 1.788677211 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101567634 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083267556 seconds)
  done (took 1.730951502 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081757108 seconds)
  done (took 1.629059669 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099173986 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111535303 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12789757 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108059994 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13497413 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106221391 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083256719 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085114155 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075182941 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085275629 seconds)
  done (took 2.563436948 seconds)
done (took 20.797960169 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07902699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.172205083 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.352053775 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088375051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.655540579 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.347466535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.866107665 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090440995 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111131616 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066740529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082766288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650286779 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.855505898 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.130286996 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.840556974 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.165374451 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.63221209 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067434108 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067086155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066887857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.851661619 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067324676 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066830511 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067653753 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.631956439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.361299009 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067239716 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.164745042 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066368118 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068622268 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.345342295 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066976603 seconds)
  done (took 14.746061992 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071747278 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116499658 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072611021 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082750944 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069734851 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068415208 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070461435 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068061715 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117381585 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068396786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084654159 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067768989 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071452469 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068826331 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08587036 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066893227 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067470366 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067572277 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067137036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067466762 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085122041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066859666 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067396888 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067629481 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066957951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079238873 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067308038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067244729 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06772926 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069381361 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069723372 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067545654 seconds)
  done (took 3.924940186 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115794081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12333511 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073038716 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101854823 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111010516 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069308369 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141278048 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09139672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125448237 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067193734 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082897782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067327302 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099043331 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067724297 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086394076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067564963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06857698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067554076 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067096287 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067360367 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086131265 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06715153 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067631218 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067853017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067696083 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08031664 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067923531 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067895653 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067353667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068962609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070724669 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067978475 seconds)
  done (took 4.170642 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.0728688 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074434223 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082063938 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082288024 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068765615 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071689636 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072250283 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068772973 seconds)
  done (took 2.159480025 seconds)
done (took 26.552289315 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079923812 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068292387 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071769774 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079509724 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071841013 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077388194 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065848253 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073633203 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071178538 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071553441 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073691836 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066711472 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070156994 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066396727 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072314138 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066597411 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.077874101 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070784777 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077780331 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077728105 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06876187 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072065582 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072921307 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077762551 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07742033 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07811846 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076175041 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07160919 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068107919 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069478781 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077046371 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082153629 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067600603 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077962545 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067232215 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066514978 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070264035 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066813127 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.077807672 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075343307 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068380428 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07445524 seconds)
  done (took 4.596052127 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087670888 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090435174 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083229524 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060362718 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066089993 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063859844 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086820676 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058681626 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058779634 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086214995 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055094822 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058448781 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061575264 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053326272 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058480121 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056195702 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061058147 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054783982 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058072575 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05835406 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057374841 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053203122 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059070185 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062004604 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057962205 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060939451 seconds)
  done (took 3.239030723 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074521367 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082115599 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087563904 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125746781 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102110713 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076347239 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076704964 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091108475 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084209855 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065540922 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069725591 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092394612 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086983078 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072538569 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066337138 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083488609 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092073138 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068056161 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071745009 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089182366 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082900885 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082432719 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091296281 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079521287 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065680031 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068356094 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069890499 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079638164 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071871621 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075489149 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07036839 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069288919 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068090539 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07731969 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070040673 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068105483 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089464275 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075808869 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077282434 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066812562 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069737374 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067425773 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.087807677 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121280874 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.0660831 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072929873 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074195197 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075129829 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066715395 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084825912 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077278844 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066033962 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069485274 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065632087 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066973303 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079448297 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068490693 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068378045 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075521793 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069381562 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085107807 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070368146 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080939908 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066174858 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074145919 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065549737 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067211277 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065709424 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090955297 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068199659 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106365514 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067846508 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067693741 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075017921 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07334939 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0725496 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066494413 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080768563 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076565259 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069915149 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075042159 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069683166 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069372545 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086432533 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068888887 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068212161 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067365301 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072147884 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069037506 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067467953 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078894927 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066469867 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.06932052 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08239712 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065836968 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067387879 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072321941 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070572482 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065943517 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076992649 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070960887 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067091022 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075154369 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066120307 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069591378 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076149381 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072454976 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065141505 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071182672 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073023796 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067197838 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067944037 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069072817 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068277537 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074357321 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072903 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070386975 seconds)
  done (took 10.340352609 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158494464 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152069346 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069023422 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.141992839 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075193981 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077838174 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145066692 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093161481 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067056428 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067411583 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067662896 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110131658 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.103232641 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.110530593 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078295223 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066679428 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082459914 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.111791322 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146664378 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141521498 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082555355 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075440192 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068760118 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067960519 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069239501 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076951622 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.081338108 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075523618 seconds)
  done (took 4.266656571 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081289755 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096386496 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073217233 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087931986 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088865889 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066664246 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069184935 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068547468 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079277955 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077525319 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066619644 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071997123 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073421385 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070370809 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067922417 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07364445 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073813169 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068611022 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069635659 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072006521 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076408256 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079586364 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070594775 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065850983 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072635057 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066485343 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063428161 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083049599 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067225922 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088856302 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064598671 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073673237 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079973229 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067219599 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066066739 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066365891 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066315953 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066274479 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068471557 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065330789 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065390475 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056953569 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066027463 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077765932 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073068824 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055880154 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071263179 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071777594 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071830284 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064233868 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069521987 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069130294 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069396561 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073665665 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071211812 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07137493 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067638998 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.072571561 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074435409 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066449791 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063931905 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065016505 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070512204 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064397823 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074166332 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070724786 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064759725 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065856253 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068182299 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072704225 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06613803 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.06937347 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064124969 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068395869 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070708236 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068267982 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067546895 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065145886 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066450366 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066739536 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054680547 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066510001 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052639446 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069396648 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064367409 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064974193 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066442358 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070731084 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078056715 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067593623 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071906446 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067372879 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065708101 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069388375 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059070323 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.06884955 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081150516 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080755053 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066172368 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064424633 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080587064 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070692801 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065414828 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055564549 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073567369 seconds)
  done (took 8.939352147 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090499859 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068429557 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081979063 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089338999 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085570294 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073716883 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075603946 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068203515 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080902393 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072522967 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075328183 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.0676055 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076354111 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07584971 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069524862 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076018025 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070853809 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08207151 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081181627 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067092352 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074980051 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079244614 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.087609558 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.078922389 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077359592 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.078764887 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.087681873 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07109126 seconds)
  done (took 3.778204945 seconds)
done (took 36.71702598 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.643169132 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.809140578 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.636617187 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.964201087 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.717781219 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.722711511 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.776557462 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.630689184 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.806600858 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.673112768 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.8660028 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.665260422 seconds)
done (took 63.485750432 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.699430261 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.781733127 seconds)
    (2/2) benchmarking "String"...
    done (took 1.90307801 seconds)
  done (took 5.258642926 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.94327904 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.191108895 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.878693543 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.633056524 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.635410963 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.926013843 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.413412043 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.150408189 seconds)
  done (took 29.402443538 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.659747132 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.851952578 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.270130231 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.299583799 seconds)
  done (took 14.704246063 seconds)
done (took 60.660540184 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.625816709 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.657151297 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.653653319 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.615034766 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.688146582 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.647893225 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.844220278 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.588560163 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.629175019 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.617879773 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.634000444 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.063870005 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.63648922 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.889544093 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.634122214 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.643803722 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.656236859 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.952969725 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.787890098 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.650427943 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.657750814 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.644089414 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.641086413 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.638876117 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.680216915 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.640602634 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.045739213 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.651231415 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.258798095 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.635764098 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.664045103 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.048775489 seconds)
  done (took 199.899026351 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.638652981 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.717939225 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.783357753 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.673113992 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.116626434 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.824078901 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.755751353 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.159362276 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.642514192 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.640957462 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.760299458 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.637709684 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.790123313 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.585701118 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.669831609 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.727921888 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.91709224 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.788083314 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.670315675 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.786520864 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.667048566 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.637891066 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.603063042 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.731234145 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.654426014 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.667557637 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.649985751 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.784376738 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.829417359 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.87326816 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.649388654 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.656785958 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.859927838 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.509945925 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.663177801 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.657183917 seconds)
  done (took 164.960786677 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.803308807 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.640647344 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.638991513 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.638344503 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.654376868 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.637368683 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.762448465 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.763158217 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.101817436 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.310184713 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.688472176 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.42406206 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.634708003 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.705726987 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.649854124 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.640789466 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.653951644 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.668811915 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.639245899 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.63835281 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.76511122 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.649025027 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.816035029 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.647280881 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.639150449 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.645375754 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.0064777 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.637083856 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.645043579 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.897168734 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.636422709 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.639937715 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.448408381 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.862855537 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.727635679 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.639303848 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.645508105 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.638040622 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.858428567 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.636905966 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.64333754 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.64128861 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.644370902 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.780747308 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.63701815 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.767929841 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.63730863 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.127493457 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.63787324 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.640833651 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 26.518150404 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.266351771 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.639932934 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.644234084 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.64323772 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.640460932 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.641469665 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.647434982 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.892015828 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.712715802 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.638941688 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.644878588 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.646418589 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.638332401 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.679450251 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.641319588 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.665653935 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.692033015 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.752148318 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.76403645 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.641548794 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.704697922 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.734615102 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.63886616 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.641579429 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.640859646 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.643317531 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.72284707 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.638655957 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.734790355 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.645856386 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.643220319 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.692291899 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.708972803 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.639684136 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.468010029 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.642164788 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.641617474 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.933375915 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.701247271 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.639641169 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.641096766 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.641794974 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.642028614 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.752112241 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.763734064 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.406515337 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.641941201 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.887742843 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.644329895 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.641511634 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.768995712 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.63975898 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.794460556 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.640255298 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.722263449 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.643830781 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.643060734 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.641987971 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.640114502 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.677069565 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.642924677 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.69871848 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.637344561 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.012159468 seconds)
  done (took 389.896815539 seconds)
done (took 758.194135834 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.314004568 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.266132243 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.380384311 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.289676646 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.267248461 seconds)
  done (took 13.098839109 seconds)
done (took 14.679891102 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.728770643 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.730578474 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.66912578 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.72871321 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.660005658 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.727270896 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.709722413 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.666600536 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.698949153 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.665549926 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.696414749 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.666011791 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.65311407 seconds)
  done (took 23.582300127 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.87424614 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.875614949 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.713056627 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.875045237 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.687888974 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.867257036 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.800953721 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.792035243 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.794243124 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.658579914 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.657309463 seconds)
  done (took 21.180144951 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.877663374 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.878739107 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.714627673 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.873248794 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.689406351 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.87670142 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.801623797 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.790471011 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.791669904 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.657779238 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.654568984 seconds)
  done (took 21.191379971 seconds)
done (took 67.53533472 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.651477861 seconds)
  done (took 3.232970126 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.67361591 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.807658187 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.658210118 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.654804575 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.651639763 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.652238287 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.65402132 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.650395331 seconds)
  done (took 14.988208493 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.648927979 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.649263501 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.648863063 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.648937127 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.651133218 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.652729117 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.650933457 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.649304296 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.649591712 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.652164102 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.652029298 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.650585674 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.651756027 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.654779269 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.651572719 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.651653994 seconds)
  done (took 27.999496876 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.650171182 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.650496043 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.649679469 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.651440327 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.649880226 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.650802735 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.651884148 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.649497716 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.648943224 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.650273564 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.651273086 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.649997205 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.649370208 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.648761095 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.649981325 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.650593825 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.649519672 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.650270717 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.656921599 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.650520407 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.651457619 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.651025915 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.652748239 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.650440417 seconds)
  done (took 41.203642293 seconds)
done (took 89.007828229 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.458959894 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.95645888 seconds)
  done (took 7.999484801 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.656412387 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.651502459 seconds)
  done (took 4.928814157 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.651652762 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.653291128 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.651966416 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.652930258 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.65290757 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.653936024 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.65371379 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.653374679 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.651493566 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.654028856 seconds)
  done (took 18.115492272 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.653380874 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.652132136 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.649080108 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.652291129 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.655172605 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.650905772 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.652865825 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.651742352 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.652343067 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.651253932 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.653040832 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.650614184 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.653847157 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.650411127 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.653110583 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.650638054 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.651600943 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.651011662 seconds)
  done (took 31.321620184 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.652111198 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.654319746 seconds)
  done (took 4.891611093 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.651687753 seconds)
    (2/7) benchmarking "second"...
    done (took 1.650864737 seconds)
    (3/7) benchmarking "month"...
    done (took 1.651379958 seconds)
    (4/7) benchmarking "year"...
    done (took 1.651464646 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.650903412 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.650778996 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.652218942 seconds)
  done (took 13.146153069 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.653430186 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.809234924 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.880483118 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.356419893 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.657412032 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.657324846 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.606749154 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.659455075 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.658821272 seconds)
  done (took 18.525454184 seconds)
done (took 100.514482606 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.448747199 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.649702614 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.008066321 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.699279027 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.711277207 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.990529261 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.693439467 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.873573676 seconds)
done (took 41.66139815 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.679278254 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.199753116 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.228190665 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.015964564 seconds)
  done (took 12.030836194 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.636149609 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.166811798 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.685035641 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.244846895 seconds)
  done (took 19.342681309 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.016556297 seconds)
    (2/2) benchmarking "read"...
    done (took 2.004926094 seconds)
  done (took 5.614427574 seconds)
done (took 45.256190373 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.654286976 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.656943946 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.656255489 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.65441665 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.65373203 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.656335059 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.653371703 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.65427332 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.655202982 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.654318831 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.654262996 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.654971873 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.654140658 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.655081319 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.654249254 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.652456061 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.65079035 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.654524907 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.651531654 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.652167489 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.651812777 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.656147167 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.652045744 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.653313186 seconds)
  done (took 41.285075645 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.655622329 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.654151319 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.656987561 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.656096072 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.651887475 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.655873456 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.655835124 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.652018837 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.656343841 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.65785374 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.653862157 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.653256679 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.654171889 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.653639023 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.654655407 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.653236125 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.656554642 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.655519194 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.655640742 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.653783116 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.65669159 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.655649234 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.654899296 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.65635675 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.654610636 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.654829076 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.657417989 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.655033831 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.658585687 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.65732595 seconds)
  done (took 51.248176942 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.66183342 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.665677328 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.658177963 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.658506933 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.656645444 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.656695865 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.656731772 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.660252821 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.65758989 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.658515756 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.657899291 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.658006583 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.657797789 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.658567496 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.658981093 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.658359225 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.657765597 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.657456496 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.658860377 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.658412126 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.658262582 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.6576534 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.658287897 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.657222847 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.65824871 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.660264521 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.660058546 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.659512066 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.657713726 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.658399621 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.657896771 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.658202013 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.659096745 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.658960101 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.65994128 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.659180387 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.664265114 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.666635295 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.65913037 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.65900714 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.659189643 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.660200422 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.658589074 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.660397453 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.657898704 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.65869729 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.660145467 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.659052455 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.658172404 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.659341902 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.659218971 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.659203687 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.659766872 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.660388353 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.659095899 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.659216051 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.659908689 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.661977461 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.659297301 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.660313916 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.660714357 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.659770481 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.659177904 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.65938959 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.66080378 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.660336587 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.659262264 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.660962134 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.660653886 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.660616288 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.661045283 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.661000348 seconds)
  done (took 121.068080204 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.66102306 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.658650765 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.659336733 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.66013955 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.655881881 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.661253122 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.65803882 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.659267446 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.657966367 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.661764189 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.659578699 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.657074537 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.657984673 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.660826808 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.661400821 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.659785694 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.661947364 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.658397406 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.661961682 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.661329922 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.66291071 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.660941588 seconds)
  done (took 38.113725511 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.661717649 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.663003381 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.659771327 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.662415897 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.658915297 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.660489452 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.662061835 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.663310233 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.661623626 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.660047457 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.658849676 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.66369695 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.660515296 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.661834861 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.660483357 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.660202594 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.662679542 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.660101442 seconds)
  done (took 31.496389832 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.660287216 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.66148044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.662980854 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.66115665 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.657987361 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.663623491 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.662241396 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.661923118 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.663626297 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.661531491 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.662462864 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.661695225 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.663966831 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.659069987 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.664633871 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.664062866 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.663822776 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.662014971 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.663759459 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.661022998 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.661678186 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.663609507 seconds)
  done (took 38.163693074 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.662721679 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.663322987 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.66022728 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.660715096 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.661407036 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.662900653 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.663996806 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.659966114 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.663837311 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.663993581 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.661579949 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.664680477 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.660220803 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.662185226 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.660416357 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.662001519 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.66308239 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.663264077 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.662882913 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.661231045 seconds)
  done (took 34.840277445 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.664600862 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.66516266 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.663161544 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.66630113 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.666654414 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.66442187 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.664994742 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.665709557 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.66408297 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.665214956 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.665867614 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.667553154 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.665255199 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.665638022 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.665172481 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.665100991 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.665394356 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.665405156 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.664348471 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.665558882 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.665196751 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.664792294 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.664106981 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.665381209 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.66603427 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.666106829 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.665251382 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.664995373 seconds)
  done (took 48.224478239 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.663421533 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.665173553 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.662796661 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.66268206 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.662782248 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.662405996 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.663051896 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.661579795 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.665108967 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.662835817 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.666957091 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.666921848 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.663976286 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.666785501 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.66519992 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.68209491 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79336815 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.791064864 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791815277 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791566712 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.792523104 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795928594 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.793208402 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.79086024 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790723659 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.794936896 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79141352 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.792240068 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793378691 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.791279923 seconds)
  done (took 53.337006295 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.814215364 seconds)
    (2/2) benchmarking "in"...
    done (took 1.81560002 seconds)
  done (took 5.352941218 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.792668705 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.794388668 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.793590887 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.791814426 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.791891261 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.793653818 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.795345607 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79130292 seconds)
  done (took 16.06884593 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.800427549 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.793464484 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.793661766 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.794210601 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.792745877 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.793184075 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.801672988 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.792144583 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.796697968 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.797162737 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.802649789 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.804348456 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.799362931 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795762679 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.795504197 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.795798791 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.794413874 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.795289695 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.794836812 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.793313787 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.795514665 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797063571 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797068204 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.792602869 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.797301648 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.806991505 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.798759662 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.792478133 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.800124952 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.800445898 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.800003858 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.798333599 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.799508842 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.799483189 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.800703273 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.800669636 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.805851078 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797758495 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.807150458 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.805546934 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.79473114 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.795321042 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.796788137 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.799283693 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.798449846 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.800138397 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.798733144 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.794226461 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.795288603 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.806788307 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.806247596 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792760697 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.792150132 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.802160174 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.797956116 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803205729 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.798913386 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.798734492 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.804952301 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.808199998 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.808611049 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.802822379 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.798845707 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.794788586 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804733355 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.824046888 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803346173 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.797308303 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.792725165 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.797146689 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.802589257 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.812300548 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.812277975 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.798492875 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.795748962 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.798422155 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799920985 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.801288712 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.802805674 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.801831298 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.797977529 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.799784188 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807283819 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.826309081 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.797318863 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.801002394 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.800026797 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.796499688 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.804823739 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.810382832 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.800277783 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.797192872 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.800403492 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.799840979 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.804033341 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.796384022 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.796644225 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797438317 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.799253184 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.799562836 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.797108826 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.802098856 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.806815713 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.799813662 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.802392602 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.806697218 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.802748272 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799587955 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.807452868 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.800184257 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.799202764 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.798916256 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.804512563 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.794589021 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.800102945 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.807980263 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.798596343 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.802113129 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.802197386 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.797493633 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810641897 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.827887079 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.79843727 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.799343777 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.805140246 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.813105557 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.798591687 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.802521151 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.807096333 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.795349869 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.797405416 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.805579251 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.802155183 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.802854355 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.80374227 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.805165526 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.799770184 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.803311659 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.805521444 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.801768822 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.801136077 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.799723328 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.800768631 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.805347392 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.801485414 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.802197154 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.810557527 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.801483261 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.802961433 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.801765022 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.798761743 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789909796 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.790844851 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.791389165 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.791048534 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790290425 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.794425522 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.789652271 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.790176214 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.789833294 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.789961931 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.792121567 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.80021841 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.793011252 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.797535315 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.791598289 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.790755886 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.796693229 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.790585493 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.792133152 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.794615074 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.792237317 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.794972969 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.801457107 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.791764632 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.791747508 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.795342004 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.7926678 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.795870026 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.792227476 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.795656975 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.80028718 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.790666481 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.798811847 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.794074937 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.792193305 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.791628566 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.791939738 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.793052511 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791799498 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.793927205 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.801954469 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804904196 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802421341 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.795157298 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.797338224 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.79260468 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.797417667 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.796157291 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.791675878 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.793450388 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.792419371 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.790471465 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.792529434 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.793880237 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.792688328 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.791971509 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.793222318 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.792036415 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.793836792 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.792892298 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.793073955 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.797167339 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.789491156 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.79234905 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.7931966 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.791840666 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.789558117 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.79018594 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.792292813 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.791291209 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.793878762 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.798614814 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.791667699 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.792541126 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.794881036 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.794207569 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.792494643 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.793060079 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791961627 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.793265346 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.798628931 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.792564881 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.794961288 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804230565 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.790895011 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.790140812 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.793129623 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.792968438 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.787842278 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.794547331 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.79907654 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.789457481 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.789501631 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.790389015 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.792297388 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789484127 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.795078082 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.788334663 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.789780157 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.789716557 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.794812753 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.786042474 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.791709329 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.791390105 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.792511658 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793882697 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.790197507 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.78945036 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.789938816 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.788245809 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.790083256 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.792911333 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.793010902 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.798451446 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.793615093 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.788639645 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.789847468 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.788736263 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.790561129 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.788275548 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.789814274 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.788496092 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.803591324 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.798455262 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792527076 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.789123982 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.787941775 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79263786 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.791325267 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.789781988 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787064147 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788022972 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.78814526 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.790125068 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.784740195 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.785295116 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.785713554 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.787488624 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.788058894 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.791009815 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.785352104 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.785192562 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.7875545 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.785289297 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.789424012 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.782968536 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.786469309 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.790331355 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.787092836 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.787396757 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.788318295 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.793312754 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.7868197 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.788595528 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.787401014 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.788756187 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.787880959 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.789053283 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.789618362 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.789596889 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.797020377 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.792434897 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.795792044 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.788378931 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798098459 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.787341905 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.791198226 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.798166679 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.784749129 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.784879455 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.787028467 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.787239495 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796618361 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.784126875 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.786003187 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.792247429 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.787656704 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.788272513 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.788282904 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.787331656 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.786197497 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.785510761 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793420164 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.788541949 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.789863068 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.789230773 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.784527594 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.787591458 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.786772681 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.789192142 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.792851787 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.787157979 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.787682093 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.787522345 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.788186701 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.790443476 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.787062951 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.78685452 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.784673733 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.785342966 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.795898307 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.785650721 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.789394841 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.786506842 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.795094323 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.785293663 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.797277019 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.787518213 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.786686114 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.790185229 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.786264418 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.789774113 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.787057496 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.787667571 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.785772426 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.787600359 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.789427248 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.786341091 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.790007027 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.787307 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.787109276 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.786213697 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.796823487 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812534032 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.786136522 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788954057 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.785462878 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.787085275 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.794239699 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.788433411 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.786394457 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.790006499 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799595201 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795203407 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.787326375 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.78866153 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.788041564 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.789598437 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.786639188 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.78576344 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.789438722 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.786826571 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.789886763 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.787399803 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791711198 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.786644636 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.786665882 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.789084351 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.787310663 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.796540966 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.788394547 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.789243304 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.78882136 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.786807677 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.790453198 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.7866035 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.792867719 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.78651083 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.78769227 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.78782045 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794127561 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.793064025 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.790795783 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.787050887 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.786588039 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.789501814 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.787361086 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.787320841 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.785040798 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.787973796 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.789471236 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.789097639 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.788375798 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.787335483 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.788152639 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.789759595 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.788195678 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.792153578 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.794092362 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.78873966 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.784024553 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.786262002 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.787837739 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.784553328 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.790183884 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.797958791 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.791769162 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.795342608 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.796290279 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.791225608 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.789355452 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.789275904 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.793799591 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.786885794 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.790394236 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.787032249 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.785704118 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.784783589 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.790405135 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.786557849 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.794586019 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.788841291 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.786559843 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.795666935 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.787737833 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.788968203 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.788249226 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.792215961 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.787413901 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.783253371 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.78779463 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.784468118 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.79539624 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.791563673 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787217484 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.788182066 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.785931554 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.787779027 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.79302554 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.787515958 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.787408869 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.785183911 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.788421934 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.78860655 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.786283402 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.785874231 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.788632602 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.788760403 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.791556015 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.79507123 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.784127094 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.789541849 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.787390886 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.789329259 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786922699 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788614175 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.784199771 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.783815076 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.78855439 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.786788273 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.789250897 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.789019903 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.786555805 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.786997556 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.787867337 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.787170363 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.790335491 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.795567247 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.793053317 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.783813716 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.786251743 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.787478447 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.788218174 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.786269215 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.789070359 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.787406416 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.787724963 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.787938433 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.786871147 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.787574631 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.789129063 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.801317627 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.78793708 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.787193675 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.787592858 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.791025419 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.786376235 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.784841294 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.788232368 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.790556059 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.789799581 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.794576663 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.787391363 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.794472099 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.789024201 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.787971569 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.791358609 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.790558012 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.795208089 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.792185737 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.788810052 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.787984046 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.793710892 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.803827908 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.788936918 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.797440858 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.815621466 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.788827244 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.789634132 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.789731048 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.788712139 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.786196019 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.791404414 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.789138438 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.787027432 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788638467 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.790209026 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.788022884 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.79421546 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.79086763 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.788510567 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.789155475 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.790327161 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.790478075 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.786801906 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.788232409 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.788233937 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.790176932 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.789905418 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.789717346 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.789154088 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799719372 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.797664301 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.791502775 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.791177506 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.786370836 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.792065391 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.790408803 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.799669068 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.79687462 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.789804921 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.790789414 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.790572383 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790358427 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.787720096 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.789871305 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.790650055 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.789839896 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.786940467 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.801938761 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800369314 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.795774233 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.791561128 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.791273431 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.789458106 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793444329 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.790954074 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.791834207 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.791868449 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.791413105 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.794373407 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.792408366 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.791196745 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.791710134 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.797274548 seconds)
  done (took 1070.470363894 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.790235252 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.790684047 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786804938 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.789555123 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788487433 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.790468171 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788881389 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.789656671 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.788434927 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.788301019 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.79023993 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.791543787 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.788183997 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.788491698 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.790006511 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.787930899 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788345183 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.790920882 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.789538249 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.789679452 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.790252174 seconds)
  done (took 39.296552413 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.791246004 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.789736772 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.790672315 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.791007438 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790185551 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.792648599 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.78962891 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793067756 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.792170669 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790451874 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.792785057 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793588485 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.789788607 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.789993178 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791316862 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790948293 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.79229759 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7911517 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.790447118 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.791532341 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.792089156 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.79069393 seconds)
  done (took 41.130996583 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.793435473 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.795626408 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.792925954 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.791186509 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.795174464 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.7906032 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.797541093 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.793786587 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.793020628 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.796071453 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.79287257 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.79678382 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.799637096 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.798591283 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.797646623 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.794726306 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.938223135 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.79541544 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.795023102 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.793691746 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.790363097 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.799295742 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.793063096 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.791487176 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.792838435 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.794346484 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.795380596 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.795894354 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.796681825 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.795636102 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.797914053 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.795117377 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.793762981 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.797378119 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.792893325 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.79369419 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.796528354 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.795233859 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.793505956 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.796847843 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.802663673 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.815163142 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.797278607 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.800613196 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.794634278 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.794407853 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.797328659 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.801567495 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.791827494 seconds)
  done (took 89.86142973 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.792458808 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.795579224 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.789797658 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.795039939 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.794886372 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.796026791 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.797545768 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.795726704 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.794265631 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.793910728 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.795893185 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.795872669 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.792107437 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.795539418 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.794529403 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.793635786 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.792105985 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.79396069 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.792854953 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.792558345 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.790794605 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.79676355 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.799171512 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.790178963 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.794048455 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.792260833 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.7918612 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.794215682 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.79335118 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.791732643 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.796065493 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.794919574 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.797056045 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.793224332 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.794115905 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.795324401 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.795046996 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.791944078 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.796619618 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.794562855 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.7937667 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.796761337 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.795074255 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.796148116 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.793264309 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.795575371 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.793161947 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.795283392 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.79250328 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.795659793 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.797792658 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.79239758 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.795014934 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.792767473 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.795314933 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.796129749 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.795498024 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.792980092 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.797147354 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.794833665 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.79418057 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.798131206 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.793097441 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.796830787 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.79635232 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.794814966 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.795309648 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.798393562 seconds)
  done (took 123.758379249 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.798218894 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.796997502 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797879309 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797257871 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798523057 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.798162566 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.798029378 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.797823444 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.798795161 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.801723362 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.799501052 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.801192696 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.797563711 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.801415259 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.800812268 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.801253978 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.798737433 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.798630129 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.798794545 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797731305 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.800374019 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.800380413 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.800039001 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.802559026 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.80064664 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.800152826 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.799132876 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.801634462 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800029088 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.800343413 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.799100778 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.802236743 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.796141711 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.799601682 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.802881698 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.798284502 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.801284414 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801991856 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.799923417 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.802195327 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.801947337 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.801562217 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.800882445 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.800902707 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.801301011 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.801816715 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.802027693 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.801078361 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.800229251 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800559437 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.802286741 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.800366483 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80002712 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.801191174 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.799969556 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.800155354 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802518795 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800828736 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802795894 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.803587248 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800666926 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.803818782 seconds)
  done (took 113.34929078 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804426548 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.802716083 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.799145565 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.799643584 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.799384665 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.798500714 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.801677065 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.802145561 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.803135984 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.801130967 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802194687 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799062952 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798568448 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803491055 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.797972804 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79966216 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800279415 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.797211901 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803103296 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796815036 seconds)
  done (took 37.741840512 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.798601334 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.80334911 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.797945046 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804073524 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.801803935 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.798473741 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.800870564 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802893028 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799873042 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80644036 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.803280716 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801898813 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800930644 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.800166452 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.806002419 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.800095713 seconds)
  done (took 30.559436589 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.802208351 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.804787884 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.804478965 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.80659396 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.803725956 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.800717169 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.803975133 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.801092757 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.802070705 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.802967304 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.803675733 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.80266598 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.803628817 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.806245353 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.801558593 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.805264299 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.802025923 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.801827419 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.802621904 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.806209618 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.801837735 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.800275597 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.805468318 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.804045779 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.801006913 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.802747438 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.801204213 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.80074695 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.802312528 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.803270407 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.805714967 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.800763675 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.801829168 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.801608599 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.804382464 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.800537948 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.806536974 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.803221656 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.803731383 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.804081761 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.803919396 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.799489301 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.805493535 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.804024119 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.80098992 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.802033453 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.801085369 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.803733024 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.800994783 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.800913026 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.804522017 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.805429905 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.805025386 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.806492804 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.803722264 seconds)
  done (took 100.908063981 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804735876 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.804027927 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.804581903 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.805732384 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.804950708 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.802229919 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.805324035 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.802493552 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.805030187 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.803565913 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.803147497 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.804420221 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801318192 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.807957758 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.802807937 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.805056204 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.80333702 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.801437183 seconds)
  done (took 34.208390474 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.803828091 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.803626849 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.805977381 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.802505462 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.802300572 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.806480356 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802548945 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.805434347 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805319556 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.80241699 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803276669 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.807707033 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805873933 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.805583837 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.801266844 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804286305 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.806842028 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806377855 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.803208777 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803395291 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806592738 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.80538871 seconds)
  done (took 41.435133928 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.804133842 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.806833376 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.821593775 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.824417568 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.825636662 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.838201788 seconds)
  done (took 12.657445509 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806109712 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806063192 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.803747653 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806317716 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807538768 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80550148 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804994507 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80476203 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807543219 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804596159 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805392194 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808920288 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808501477 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806235981 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808987683 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806831143 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80554496 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805952926 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806089178 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80772257 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80605678 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808015985 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804251509 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80485277 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804587866 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804505279 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807797098 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805306448 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805765052 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807546604 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806602261 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807284475 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807971532 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804970682 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810764039 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807379008 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805196238 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807954822 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808970008 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80579661 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.808021287 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808258087 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809930944 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805736502 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809957033 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806374561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806341573 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806492203 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805671661 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808704004 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810870876 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806603763 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808987297 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81021265 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810121585 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810038462 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807305197 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806008319 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808653883 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808532666 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806497003 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810921665 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80842119 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808363263 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810310342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809446273 seconds)
  done (took 121.014313769 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808602725 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.807524579 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807269048 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808514855 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807968935 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807538053 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807451385 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806695534 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808137867 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807721221 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81188156 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809088837 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80911179 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807603455 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810231205 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807447184 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807728651 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808742261 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807008086 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811583031 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80841067 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809787543 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809482543 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80855263 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808339344 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811432107 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809395303 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808477796 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809439364 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809193759 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808610061 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80972176 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81079648 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.809637924 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811020206 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809387881 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808866286 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810444362 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809114523 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812457129 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809307535 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812980723 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810188642 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81013011 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809741905 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810178644 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810467214 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811015022 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810121971 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812137357 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81035269 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810568371 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811208608 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81189426 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810493307 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810480393 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810662462 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81002642 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810535036 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812182616 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811198636 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810514289 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813369154 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811166381 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810995232 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811487171 seconds)
  done (took 121.186544099 seconds)
done (took 2458.36398242 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.865185108 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.010169131 seconds)
  done (took 15.617626602 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.987073845 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.940040839 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.823548324 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.86717358 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.820972386 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.84842049 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.842531143 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.820184078 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.825816618 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.825017598 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.823516544 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.012319032 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.832162896 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.821788663 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.826261826 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.916549153 seconds)
  done (took 51.592445136 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.829345168 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.830188248 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.839948244 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.833310186 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.827808242 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.848284751 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.861953806 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.830642666 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.886404434 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.841378775 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.952957613 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.836138157 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.829524759 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.878279728 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.841727351 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.844308683 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.915705227 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.902224912 seconds)
  done (took 35.184878605 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.909560343 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.832015055 seconds)
  done (took 10.5053904 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.851748189 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.831989526 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.853780253 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.846984347 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.835717803 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.834563185 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.863061197 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.828496285 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.860599237 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.863647395 seconds)
  done (took 70.229553152 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.834671802 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.829175072 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.830395814 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.828234584 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.821377375 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.822971137 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.828111594 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.825324597 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.52813751 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.863003941 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.83674196 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.835078374 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.825706537 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.831356649 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.827701682 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.853935282 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.967273421 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.828485842 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.826635169 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.834619522 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.829654545 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.882140888 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.842826799 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.831406951 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.859979916 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.523195573 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.836692868 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.836237542 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.939840742 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.82830598 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.829193261 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.831387009 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.832908017 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.227575458 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.182228385 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.830558777 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.83507645 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.838414252 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.828148328 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.956885421 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.830416081 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.838635237 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.824667419 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.163456786 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.915089868 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.873987021 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.209910168 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.835682093 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.832403431 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.863146259 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.835551186 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.833686313 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.845026328 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.350808508 seconds)
  done (took 130.698309052 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.82722949 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.121128921 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.978915595 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.827982052 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100189458 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036145138 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.8233987 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875830144 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.826997373 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.032202291 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.989816818 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.935894515 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.827344932 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.827547865 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.827361059 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.821858074 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.989389576 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.895386465 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.825220977 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.824672036 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853877673 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040776253 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.955318868 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.830636546 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.84592731 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.039697751 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.94935334 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.937891352 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.106316069 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.82444543 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.8898736 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.826357119 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.829487816 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.824021205 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.984628518 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.925966826 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920910821 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.828138995 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.823907558 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.821931095 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.490505996 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.02504917 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.929258212 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.968172434 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.978365881 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.033378086 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.476925687 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.82639585 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.467432066 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.990536406 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.043724443 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.041378938 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.952834254 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.831974739 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.990013408 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.82649739 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.82540425 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065900281 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974341913 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.933120735 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828730178 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.828995928 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.825776109 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.07604091 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.828025579 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.924661457 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.826968328 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.825581524 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.928812911 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.932979607 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.968776573 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.043718673 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.862129146 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.566822236 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.044794764 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.044023363 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.897323476 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065248632 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.828133822 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.825545656 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.917895727 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.575606467 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.986668845 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.081487318 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.05235245 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865848504 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.438055179 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.830201358 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.025962362 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.014542973 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.025190189 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.979884024 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.981304801 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.950030726 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.831300449 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.82933182 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.032651566 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.968104586 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.829247979 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.188951274 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063908666 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.412156244 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.851931093 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.128260081 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962104866 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.229096125 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.456528925 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.829674741 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.999673977 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.873848308 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.833142885 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831494961 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.021813567 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.639197076 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83052587 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.546472423 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.894983638 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.832196857 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033752181 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.833672758 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038755039 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833022841 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072039825 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.951802956 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.868340146 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.005719533 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.980230037 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.62693293 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.081054171 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.073755864 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.950431579 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.101446276 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.565225324 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.83125235 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106329321 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.831390373 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.832345653 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.000041976 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.834823124 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981841027 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.833869812 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.062366353 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857370781 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99275195 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833614108 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.066366487 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.868430959 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888301768 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.833097749 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.955342652 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.837406532 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.714900671 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.990635232 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.838050406 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.831106839 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.229381514 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.835542395 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980012909 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.065494207 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855341008 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.905171866 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.357083423 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.835086163 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921885248 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860606284 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.57779521 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.834123016 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.993543395 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.796938845 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.286650276 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.833324745 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.076117849 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.064515688 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.840857878 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.830264075 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.574120148 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.517370277 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.834312214 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.993334799 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.033004824 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.486894494 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037900679 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831885589 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962147252 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.836292315 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.90787197 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.181697637 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.833437257 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.833872815 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.834298115 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.835039352 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.834613567 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.044416801 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.864410166 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.336698277 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.971884817 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.053826774 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.141616593 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.061614479 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.880778268 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.838050899 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.079929876 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.835866915 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.899147743 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.834935059 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.861350102 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069480303 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.833749425 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.05009384 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.091023526 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.882594744 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.8883581 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.836261558 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.838262391 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.835189433 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.988714099 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922886109 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.836284873 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.835715919 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.948130666 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.95494949 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.028067403 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.443096751 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.911266502 seconds)
  done (took 889.416415768 seconds)
done (took 1204.987748246 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.837452862 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.833797454 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.822214488 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.839064482 seconds)
  done (took 29.102915346 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.844282049 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.841520495 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.840023705 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.840321369 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.843362414 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.842177214 seconds)
  done (took 12.823386318 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.893625494 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.832268421 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.835985892 seconds)
  done (took 21.334118993 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.912491336 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.251730459 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.947037586 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.286784441 seconds)
  done (took 10.170936935 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.845673463 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.845422032 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.844209222 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.847168514 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.848281058 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.850004469 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.845784684 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.845247093 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.849323417 seconds)
  done (took 18.394529735 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.249775597 seconds)
done (took 97.847756557 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.842901114 seconds)
    (2/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.323313293 seconds)
    (3/309) benchmarking ("sort", Float64, false)...
    done (took 5.669425512 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.663569089 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.907280346 seconds)
    (6/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.977977573 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.975900295 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.835055842 seconds)
    (9/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.967396829 seconds)
    (10/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.037556941 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.880351548 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.863177961 seconds)
    (13/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.500087485 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.091854634 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.827634403 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.839232544 seconds)
    (17/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.388604217 seconds)
    (18/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.902904876 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.47463606 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.170185974 seconds)
    (21/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.839110996 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.103801043 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.192962091 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.943254874 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.904787613 seconds)
    (26/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.838255746 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.325169449 seconds)
    (28/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.993793705 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.433133187 seconds)
    (30/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.12040585 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.966411448 seconds)
    (32/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.474059174 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.96157152 seconds)
    (34/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.232768461 seconds)
    (35/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.053549392 seconds)
    (36/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.925038697 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.131727418 seconds)
    (38/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.829096761 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.837551263 seconds)
    (40/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.032743312 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.980079939 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.951439974 seconds)
    (43/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.845933107 seconds)
    (44/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.865640668 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.099375858 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.561203001 seconds)
    (47/309) benchmarking ("sort", BigInt, false)...
    done (took 6.935945521 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.191835075 seconds)
    (49/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.923745553 seconds)
    (50/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.820183495 seconds)
    (51/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.10525295 seconds)
    (52/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.867797068 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.82362587 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.899733349 seconds)
    (55/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.20665523 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.134960579 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.187094969 seconds)
    (58/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.926490953 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.181354025 seconds)
    (60/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.826946046 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.482468669 seconds)
    (62/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.971429727 seconds)
    (63/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.161044507 seconds)
    (64/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.944710635 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.740733463 seconds)
    (66/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.935287435 seconds)
    (67/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.86161034 seconds)
    (68/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.936063697 seconds)
    (69/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.867770254 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.420388039 seconds)
    (71/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.922234413 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.402052714 seconds)
    (73/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.831629477 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 3.584472038 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.912642552 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.148833566 seconds)
    (77/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.956260772 seconds)
    (78/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.981093511 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.550679124 seconds)
    (80/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.239155207 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.015224066 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.245962732 seconds)
    (83/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.941708689 seconds)
    (84/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.737709782 seconds)
    (85/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.395676715 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.153118932 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.489072097 seconds)
    (88/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.947662208 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.843272954 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.917013104 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.913083615 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.959035978 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.843615696 seconds)
    (94/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 3.706304135 seconds)
    (95/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.152175928 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.944887352 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.827441212 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.908749201 seconds)
    (99/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.976783397 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.276777715 seconds)
    (101/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.131642753 seconds)
    (102/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.914684283 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.929661151 seconds)
    (104/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.866720044 seconds)
    (105/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.041175432 seconds)
    (106/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.86700841 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.865028442 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.842320451 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.461836861 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.167523069 seconds)
    (111/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.845403399 seconds)
    (112/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.844391395 seconds)
    (113/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.912644589 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.845844486 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.845251308 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.652931184 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.154344915 seconds)
    (118/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.867263095 seconds)
    (119/309) benchmarking ("sort", Float32, false)...
    done (took 5.611956611 seconds)
    (120/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.959714458 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.01547898 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 2.294661791 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.869387688 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.915741728 seconds)
    (125/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.283759079 seconds)
    (126/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.652092908 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.112934955 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.755830483 seconds)
    (129/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.948602994 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.900002167 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.930071207 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.52683662 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.942452261 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.06085894 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.125684215 seconds)
    (136/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.445397623 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.908567297 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.831015914 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.77286001 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.237335494 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.141900904 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.950790001 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.083245468 seconds)
    (144/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.833407081 seconds)
    (145/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.923004679 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.164920679 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.13461564 seconds)
    (148/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.014252099 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.072187621 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.993790859 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.871753544 seconds)
    (152/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.830368364 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.825339521 seconds)
    (154/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.10580917 seconds)
    (155/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.079301645 seconds)
    (156/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.361658617 seconds)
    (157/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.863712113 seconds)
    (158/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.929230124 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.867987599 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.888608224 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.829418161 seconds)
    (162/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 3.255132992 seconds)
    (163/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.354551858 seconds)
    (164/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.987766351 seconds)
    (165/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.02513815 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.092460506 seconds)
    (167/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.431462473 seconds)
    (168/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.857271858 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.528147721 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.851960757 seconds)
    (171/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.286058154 seconds)
    (172/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.015991743 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.852282903 seconds)
    (174/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.91552955 seconds)
    (175/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.005288483 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.530607026 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.849214135 seconds)
    (178/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.805989366 seconds)
    (179/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.960976666 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.03426181 seconds)
    (181/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.788834001 seconds)
    (182/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.933466814 seconds)
    (183/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.476156369 seconds)
    (184/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.843784805 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 3.511889488 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.651656334 seconds)
    (187/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.146822946 seconds)
    (188/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.053040869 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.875036739 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.232810287 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.835637336 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.474135741 seconds)
    (193/309) benchmarking ("sort", Int8, false)...
    done (took 4.860037223 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.893084984 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.872265574 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.147365849 seconds)
    (197/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.022342274 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.903267714 seconds)
    (199/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.050799344 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.067598813 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.515566794 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.144532724 seconds)
    (203/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.214503768 seconds)
    (204/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.355841442 seconds)
    (205/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.181780657 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.910297593 seconds)
    (207/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.794255267 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.084294343 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.080271994 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.148917624 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.545493715 seconds)
    (212/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.890738882 seconds)
    (213/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.991922229 seconds)
    (214/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.008200206 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.072246576 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.640896711 seconds)
    (217/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.944548628 seconds)
    (218/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.956900561 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.849502381 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.951102001 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.103082802 seconds)
    (222/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.45223948 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.359046818 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.224772425 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.851168968 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.62562471 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.849209862 seconds)
    (228/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.09179237 seconds)
    (229/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.198344641 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.851282055 seconds)
    (231/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.308998241 seconds)
    (232/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.000770823 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.88932664 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.123259305 seconds)
    (235/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.167739248 seconds)
    (236/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.36744947 seconds)
    (237/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.37238004 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.187372376 seconds)
    (239/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.259524497 seconds)
    (240/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.852729568 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.802671616 seconds)
    (242/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.856872091 seconds)
    (243/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.020618183 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.849825636 seconds)
    (245/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.954351006 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.107471751 seconds)
    (247/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.837667405 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.306467124 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.950461286 seconds)
    (250/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.870818029 seconds)
    (251/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.047232765 seconds)
    (252/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.983026976 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.933305694 seconds)
    (254/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.346292386 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.884740408 seconds)
    (256/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.877661894 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.947496174 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.225631107 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.838248965 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.267362423 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.237446054 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.190267669 seconds)
    (263/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.999851657 seconds)
    (264/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.958433641 seconds)
    (265/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.025687509 seconds)
    (266/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.860417351 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.020443528 seconds)
    (268/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.961629477 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.837764461 seconds)
    (270/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.854218007 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.699746396 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.888871918 seconds)
    (273/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.877799833 seconds)
    (274/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.98845241 seconds)
    (275/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.067813156 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.252531275 seconds)
    (277/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.480013394 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.843255008 seconds)
    (279/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.192504357 seconds)
    (280/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.864176404 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.101825332 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.742659407 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.052401998 seconds)
    (284/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.884423999 seconds)
    (285/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.264058094 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.854075939 seconds)
    (287/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.040039813 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.258352093 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.818190177 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.973780147 seconds)
    (291/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.853340583 seconds)
    (292/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.988545979 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.93806117 seconds)
    (294/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.461645315 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.937669163 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.992417306 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.64353027 seconds)
    (298/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.879178333 seconds)
    (299/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.857378949 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.898463031 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.108927025 seconds)
    (302/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.379070403 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.904185546 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.878375502 seconds)
    (305/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.074826258 seconds)
    (306/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.036343191 seconds)
    (307/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.886414977 seconds)
    (308/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.138825808 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.66404244 seconds)
  done (took 1012.599247041 seconds)
done (took 1014.444569521 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.891623726 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888188694 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.868302926 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.890145215 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.987124711 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.897906974 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.880091409 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.870195681 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.916350743 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.917822488 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.874254621 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.893125693 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.87599943 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.875239334 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.868616341 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.888515493 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.180365657 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.898723304 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.889005219 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.87794642 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.891555451 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.875355997 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.917353498 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.89497482 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.874957985 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.869766834 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.877756271 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.895317918 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.985306537 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.876665623 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.873961946 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.888503376 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.17956615 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.892830223 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.864401492 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.893514834 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.885473822 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.880357516 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.875026269 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.908600081 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.323790273 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.879322368 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.878054275 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.872411177 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.871143219 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.872891805 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.877153225 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.878268484 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.890474803 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891233932 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.321061948 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.89736333 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.879742952 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.872266795 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.883476798 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.875961645 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.875752838 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.895166371 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.895683336 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891793391 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.173161149 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.899517164 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.871902987 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.890887876 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.884355057 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.358959126 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.87301336 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.876529612 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.323243173 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.882517417 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.360127851 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.888840174 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.874602242 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.890874769 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.908809873 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.18319365 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.891613195 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.872254481 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.883358709 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.876088662 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.883559219 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889311644 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.878616857 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.875576748 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891625274 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.899353234 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.884364761 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.884176303 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.879967197 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.899949551 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.886710838 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.890865034 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.87977947 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.871391301 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.88520137 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.883227933 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.884886136 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.883517531 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.879571181 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.886990699 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.324377318 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902833524 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.874457959 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.875604997 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.876651655 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.897087414 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.322912281 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.885966631 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.897246654 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.92203702 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.875100261 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.177001645 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.908138245 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.897621738 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.88495056 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.879685995 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.869591985 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.176573241 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.348071413 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.900002601 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.875687469 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.882734932 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.900318918 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.878692602 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.873041092 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.188192751 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.901231005 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894608159 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.002593553 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.887137122 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.91361238 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.878192308 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.879970282 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.901634637 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898092437 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.912070289 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.879999688 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899376478 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.897710955 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.877403123 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.893527024 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.887684126 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.879037831 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.882687629 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.871209226 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.903797304 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892551671 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895969664 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.898674857 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.0046594 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.875394047 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.177209084 seconds)
done (took 294.900293353 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.93940746 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.874464962 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.973000775 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.873498122 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.957088374 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.961081507 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.867418165 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.868548695 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.873247875 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.250675829 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.875591 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.874605328 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.865108596 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.869321712 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.955856919 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.872830473 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.872217206 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.213950089 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.875451488 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.946439627 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.866502398 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.870394535 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.874863925 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.254900568 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.868297591 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.872835846 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.947660191 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.874695541 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.22211818 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.876091006 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.870976019 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.219350859 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.965053305 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.895195621 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.886238343 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.882726916 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.960533348 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.881940785 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.95569647 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.956096459 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.978448066 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.915700078 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.873683834 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.866424664 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.88010165 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.876679636 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.873037647 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.901370773 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.872891385 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.871148906 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.215024665 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.888769866 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.874253343 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.874383071 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.871976397 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.906922791 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.875476812 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.879082712 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.969329034 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.878569765 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.943184293 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.260031312 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.255556956 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.880505014 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.871389255 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.873525769 seconds)
  done (took 184.691007479 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.940082293 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.948357992 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.948806473 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.877186308 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.925968001 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.952211372 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.878657507 seconds)
  done (took 15.277828622 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.885690594 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.879763384 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.931809811 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.930968822 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.878803823 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.028896996 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.876819437 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.888382704 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.313698804 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.932357569 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.882116386 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.881402875 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.885625026 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.877362985 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.927523999 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.889512585 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.995192269 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.881764468 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.879199331 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.035610116 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.87545328 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.887036152 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.934687321 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.890485765 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.879867628 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.886293276 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.464982298 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.879702918 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.877918766 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.879384856 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.875831466 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.92085093 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.877650842 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.874460068 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.876734468 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.995721027 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.878322024 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.877918741 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.879280701 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.874883122 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.878221508 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.878634039 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.882281881 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.879726551 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.881683135 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.903662776 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.880684023 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.880977561 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.882386366 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.881344608 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.929164686 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.880432638 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.880190591 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.879555987 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.93842025 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.886110818 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.882593456 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.875918614 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.881312924 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.877116262 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.038540827 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.930017528 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.879618139 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.928151704 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.879128499 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.883298044 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.8840973 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.8863395 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.937872762 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.880548007 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.931550484 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.878629947 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.043034871 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.907910434 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.884435145 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.885767297 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.888726531 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.88410288 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.886086197 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.88833061 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.877782096 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.882105535 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.891337395 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.880134837 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.879617275 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.995366519 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.991789073 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.880136964 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.896348485 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.891141677 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.879612045 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.936950477 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.884688867 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.879241496 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.93668157 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.999382045 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.939973861 seconds)
  done (took 207.346504995 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.885927929 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.892445181 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.8857463 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.898155739 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.881271117 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.882913363 seconds)
  done (took 13.138393804 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.886751717 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.887276439 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.882852688 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.88249361 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.883483073 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.884297303 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.883846402 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.888275148 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.888004931 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.883131088 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.884032103 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.882618449 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.885633594 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.883177001 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.883277152 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.883375166 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.884376213 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.881507524 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.882348019 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.882559231 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.047018961 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.882531544 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.887114324 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.885094325 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.885711753 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.883869117 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.893670993 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.883311453 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.885034773 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.893315405 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.888018134 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.886387472 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.886754367 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.891077359 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.889467785 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.885402356 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.887053283 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.883958914 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.88308205 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.884148922 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.886030679 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.884683042 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.885027377 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.884670377 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.8862889 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.888774081 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.888547117 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.89269593 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.887116355 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.885959442 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.88432604 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.884935346 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.887067413 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.888092254 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.888507706 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.891573735 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.893219044 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.883852114 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.885537804 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.888053368 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.885043657 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.885763962 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.88650665 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.888272599 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.885982026 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.887650881 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.886792767 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.889787719 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885761246 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.884176186 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.889082886 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.883189216 seconds)
  done (took 138.770740253 seconds)
done (took 561.039311127 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.119920708 seconds)
  done (took 8.931839049 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.021542663 seconds)
  done (took 8.919766713 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.450463339 seconds)
  done (took 10.262473527 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.894120624 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.910468879 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.886827267 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.881503171 seconds)
  done (took 29.39581241 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.266384475 seconds)
  done (took 9.080314871 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.893130532 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.876312175 seconds)
  done (took 15.647450942 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.012121032 seconds)
  done (took 8.825431462 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.990254843 seconds)
  done (took 8.811590885 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.891346374 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.87455919 seconds)
  done (took 15.593343114 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.864906056 seconds)
  done (took 8.678133224 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.529395872 seconds)
  done (took 11.350703078 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.888768854 seconds)
  done (took 8.714123068 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.879401435 seconds)
  done (took 8.693335954 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.058844769 seconds)
  done (took 9.871151795 seconds)
done (took 164.587005291 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.880810138 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.879200435 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.879993861 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.877373534 seconds)
  done (took 29.330503742 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.919892226 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.918271679 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.922033548 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.930804943 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.921723372 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.917884199 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.912437472 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.911642189 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.932999657 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.922826935 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.927408407 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.922488137 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.92056356 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.913330524 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.922404172 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.926192948 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.933374014 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.921532603 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.914245381 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.923942683 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.889519901 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.931850431 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.925027956 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.88626296 seconds)
  done (took 47.883430082 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.084103316 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.959894851 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.040703272 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.939857757 seconds)
  done (took 9.839237638 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.937382607 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.941818036 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.953199326 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.993311089 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.01762786 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.950662759 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.912148802 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.908270596 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.894428901 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.941145145 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.015926652 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.953954998 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.024020074 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.885981718 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.075902126 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.885462574 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.889990865 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.941404668 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.989734108 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.005691166 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.88865627 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.941048915 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.944737732 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.958104711 seconds)
  done (took 48.666251036 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.885249819 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.894208188 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.894083298 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.887606856 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.887886791 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.888554859 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.897311436 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.889088934 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.908713476 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.893205326 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.888755274 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.886787386 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.88912637 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.889115307 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.890505516 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.900785707 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.901810749 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.890788794 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.891245687 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.895281764 seconds)
  done (took 39.666278341 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.884203914 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.827228518 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.238135566 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.136783668 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.887229242 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.881050253 seconds)
  done (took 32.671889864 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.904974956 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.891714263 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.890323458 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.950136833 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.028656577 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.897501634 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.890426742 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.903458358 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.936460317 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.956246105 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.908772859 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.917141259 seconds)
  done (took 24.89414388 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.886632358 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.888012637 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.888792493 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.766214404 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.773094081 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.762524726 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.765958301 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.750597261 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.769537652 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.77438492 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.767180874 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.772804932 seconds)
  done (took 43.388803847 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841696478 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.692390573 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.742430554 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.138044357 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.096478051 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.965136994 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.139263088 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.039442084 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.754033083 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028484768 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.652018202 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8588846 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.010090232 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.144917334 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.786537406 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.186858065 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040785984 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958879053 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785328438 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371311781 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817498167 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.886734037 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.435560197 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.811882808 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.966271821 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.854559896 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.012528651 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.755300258 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887673178 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791892654 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769123291 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.754805263 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032178019 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1231452 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860860429 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765500953 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.159724057 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.462550483 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.809839346 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.371777718 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.347237182 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.868041131 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767020861 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.758765201 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.690888034 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.852437424 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09153794 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.757941444 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.468167261 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.75712856 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.766068753 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851969724 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.759028939 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.534398291 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434913188 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.75521177 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.750415885 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764392385 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32853306 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780887296 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.904555805 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.731780795 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.814495672 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.423466509 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141312912 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.89975034 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.762955113 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758861434 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.694220995 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.367926798 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.810756266 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986837514 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.776146361 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369998773 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061576794 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.737132115 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.701143515 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032693584 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.198925519 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.729465691 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982229342 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.757158792 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.692952549 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.695918053 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.691735377 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0055348 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796286948 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.479883224 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796440876 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.035731358 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.767125358 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773461824 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783238081 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.984047095 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.637997945 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.757870576 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.476354698 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.83697 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777563192 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.042180206 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.693304768 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.759611402 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014594949 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.971908568 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.755577244 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.221964144 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885639334 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.227762879 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.811445932 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.857383254 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.808842065 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.0249914 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818175126 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.781667186 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810617204 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.75937751 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033014795 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.271060898 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.895457419 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.696716507 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884983319 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.048016993 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788136217 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841408061 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.764710599 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.758390868 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.487119651 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305230419 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.755885211 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.763855953 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.74534658 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.806954865 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.757610476 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.69812641 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.381881229 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.688566193 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.772528741 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.975252156 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.234858606 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073650755 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.695635029 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98434831 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.783163484 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.979074625 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.38244463 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.825287288 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012504877 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.752548116 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.795981853 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80701786 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772297848 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853217472 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781892303 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.854778168 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.04814091 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.76988608 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.764229675 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.481448123 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.79282579 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764272952 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.764985343 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.300075149 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027181866 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.766237714 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.768295772 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.601140808 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.777059257 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827551963 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768895718 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.77219569 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.300169164 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.218395695 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.767655478 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.347745992 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985105047 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774440617 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.405292425 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874353382 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.819734144 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025682964 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.822551315 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.697538281 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.473848883 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.455383111 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.765183705 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.69545332 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.760648331 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767007506 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773218799 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.872526823 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.025194683 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802397616 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.372025742 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.80311007 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766555851 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.768965616 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.765265157 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.264067378 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.786079291 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.898828497 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.806570214 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903323109 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.776686152 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.69726121 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.766731714 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772499835 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.762511212 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.764533009 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799897177 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.378494739 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127967469 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016301805 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.171824569 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775306224 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.45099024 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.818384595 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.758112775 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.319630665 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.021038917 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.801509828 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795956392 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.767058475 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.454391077 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343499096 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330689006 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067856787 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056213205 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136124454 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.928533283 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.789565317 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.046871718 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.693356447 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.293847962 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.822098255 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058860106 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.6943168 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822803877 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.387658711 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093948979 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7770912 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984334799 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09109401 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.438559294 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895310248 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972565153 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800720799 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.869824411 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.725753445 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.060761891 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907676465 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.319571931 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955812666 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050769747 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.320664081 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.875669224 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.764831191 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.410512778 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841825036 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.46336221 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.921919187 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.900433246 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.601786042 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226464423 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.764801056 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.985079462 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113448951 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.853833119 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.85839996 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.692665437 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.775513507 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.773592568 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.764393941 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.762524168 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.625727958 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.01836154 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774854079 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696224563 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.794882835 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050656559 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.671140871 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.767885915 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.762269768 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040543623 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.214292927 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926586212 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.788559091 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.277267417 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770521636 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.699478628 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699960487 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.461595886 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.77557665 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724578919 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968480955 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.830245426 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.382448181 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.76599655 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.74971272 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.020692977 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.780315446 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.030252277 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03374503 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.227880199 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786898823 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.867447323 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.327991479 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.85766716 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.764397528 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.999092555 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29590277 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.987037448 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.75988893 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.714530182 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.76231194 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.980943395 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.767054832 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.567910906 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982770286 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.484373759 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.784244857 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073654157 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838471898 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.579342604 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.718599647 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.823190263 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77698918 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847358611 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777797476 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.779466886 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.780878749 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812927234 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.591524794 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880220149 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.784587748 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865106928 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795760905 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.280088584 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.772560457 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030213312 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104976842 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085820555 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.826881089 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.768803065 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.765329738 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701868855 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915330705 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.986469459 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043010412 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.830509312 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.762817477 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788795589 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.306481228 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.891436142 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006226316 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045630626 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.659092987 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.185810407 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.787275612 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.764438376 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780491877 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.9780368 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97705619 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068178375 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.803967765 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.768817735 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.080739585 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.041720074 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.766353759 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.769214031 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317777657 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.781708351 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.425361238 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.812846007 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.55189494 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033010449 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.778154228 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136941114 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.792196192 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.927453658 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.539937096 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.377778768 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.049630447 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.739889713 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.823031442 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03297856 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.102539277 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079518023 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832752805 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781677198 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.865925093 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913151785 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.639149059 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.76281432 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.771385264 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715384443 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.476706445 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.781872822 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036946995 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075430844 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.763548937 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.647023617 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790905873 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.780672494 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.988002679 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012746343 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018476969 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.775615029 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.782849064 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.550751923 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032456305 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.826424379 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701029816 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.769846259 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864386106 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010948305 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.786871624 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.219948643 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.481540362 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041047293 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.702284634 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791941652 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.887037026 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.096889746 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081351847 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.295266327 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972731981 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.326901967 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.249662057 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070960531 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.776631654 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.882559241 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071857439 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.771046518 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.781389451 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808340004 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.024194343 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080952561 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.773331397 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397620443 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.736061905 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.057981389 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066610808 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706873227 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.775074293 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.821066514 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.770696238 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.834514366 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.774068044 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.652759391 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.890656263 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.525837175 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988997563 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.775210327 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.756601197 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.392709189 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.996065855 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797516501 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919289729 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766427459 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.434530618 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.122343347 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.021518143 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.786218399 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.777342389 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.775563896 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767048199 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.710270014 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.932220055 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.877007752 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035370816 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.802445438 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.804676545 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772544008 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.986822703 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983627998 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.564924507 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896250527 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.761010502 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.816256116 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.67459424 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.125256688 seconds)
  done (took 1609.768092099 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.799343722 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.8133511 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.789515319 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.818043289 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.80434898 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.80753898 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.831110745 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.884047048 seconds)
  done (took 56.25602869 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.766447186 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.966842229 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.780165655 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.769730258 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.779238269 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.774136358 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.928541418 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.779367743 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.789932099 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.777763353 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.77354054 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.764235265 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.083075955 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.792018788 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.771074564 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.767993091 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.777678495 seconds)
  done (took 72.564762684 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.775393444 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.074039254 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.789999178 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.785475141 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.384571837 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.782025128 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.093258218 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.822764347 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.77308498 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.217945444 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.398789367 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.782088696 seconds)
  done (took 88.384883135 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.788376868 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.779938773 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.779721848 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.779204145 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.778178073 seconds)
  done (took 10.614861017 seconds)
done (took 2115.767146262 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.029705186 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.980577057 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.002219965 seconds)
  done (took 5.686830328 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.925759866 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.972018138 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.094034594 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.121602901 seconds)
  done (took 9.826578458 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.061054622 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.167749874 seconds)
  done (took 5.940403872 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.176515403 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.780171753 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.157177298 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.778473758 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.77831766 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.784209673 seconds)
  done (took 22.054872553 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.780698035 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.788001138 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.781374987 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.785170003 seconds)
  done (took 8.844561828 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.763314246 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.457069095 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.761099996 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.78234582 seconds)
  done (took 20.477835477 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.522715888 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.544498924 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.524518473 seconds)
  done (took 9.298064185 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.195479387 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.680709552 seconds)
  done (took 8.58881039 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.031097258 seconds)
  done (took 3.738840349 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.910943477 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.084593435 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.315628888 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.272956347 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.372222693 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.456693056 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.097957387 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.022198238 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.178472395 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.217793456 seconds)
  done (took 23.639718032 seconds)
done (took 132.94619785 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.11576783 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.084452819 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.8362734 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.030960054 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.943145636 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.837199774 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.035913263 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.008698629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.60336607 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.603996244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.022714105 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.931417084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.930983118 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.085115374 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.93074336 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.258998388 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.850428389 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.120734242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.562854377 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.658740531 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.036147271 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.729488297 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.86513393 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.741577258 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.852020859 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.784875153 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.20451518 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.263856921 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.721607755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.209789604 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.786349188 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.811914003 seconds)
  done (took 163.171012797 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.64119984 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.77547794 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.778835469 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.773739615 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.102645375 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.774740336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.776577198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.774621506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.985250804 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.97774956 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.775578111 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.108460364 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.781384305 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.772456654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.785065201 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.776615696 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.127068829 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.703988571 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.784754348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.785578883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.788155105 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.009314045 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.788671524 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.047998023 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.140436913 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.792300967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.776782844 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.793624876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.79583828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.787851093 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.790423305 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.775634077 seconds)
  done (took 204.762750861 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.792881036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.777738123 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.773583063 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.775840602 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.796103789 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.77934343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.779755278 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.777544714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.267423342 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.284845199 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.787573806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.784809598 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.779086024 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.783128489 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.78812358 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.77579384 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.787215892 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.788601381 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.782400161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.786758042 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.787546522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.430373358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.789994442 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.455386899 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.793603251 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.790393576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.777471905 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.78376873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.784584771 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.785213923 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.786971226 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.778078335 seconds)
  done (took 217.124590221 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.974732722 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.786932227 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.791592738 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.662634516 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.787661436 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.788033922 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.689631255 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.975533449 seconds)
  done (took 18.183748648 seconds)
done (took 604.963969962 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.201395818 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.046974886 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.957516965 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.807496869 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.038667225 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.838466415 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.808239329 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.873961842 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.524040097 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.866711261 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.419455771 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.821679473 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.511852225 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.829471317 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.934992147 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.866567074 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.360699834 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.444122393 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.974743984 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.851986769 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.971796332 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.744335903 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.878555964 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.547478153 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.524593815 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.785340449 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.956554252 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.364609567 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.815641372 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.967334885 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.500748252 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.157660411 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.811807395 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.804566687 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.857552941 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.837531318 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.123384648 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.810864079 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.93262967 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.549818373 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.862778167 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.404133427 seconds)
  done (took 98.904716841 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.778039274 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.77983446 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.776835758 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.777478861 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.782517775 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.777883347 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.777089117 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.776926176 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.778323699 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.777488523 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.776450506 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.775973908 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.77784241 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.780717189 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.778668332 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.779272259 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.779961839 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.780731043 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.77837397 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.778035807 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.779130906 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.781051458 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.778583006 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.777763881 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.778200296 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.779336593 seconds)
  done (took 47.968081514 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.792170479 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.930460305 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.007456791 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.809479896 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.791155187 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.797421305 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.810443572 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.79622981 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.794324586 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.791255862 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.881291887 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.79507295 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.803520946 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.00708132 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.800226744 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.791055993 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.798433745 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.788403166 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.93427896 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.800295911 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.806384491 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.789426389 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.810905879 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.796175328 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.79098662 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.791195232 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.789656416 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.259075015 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.797820225 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.879882488 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.828699521 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.811133913 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.22751838 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.01530434 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.837753791 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.80154851 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.791939748 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.886398982 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.79012621 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.790705035 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.8033836 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.792682732 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.009292601 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.287231927 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.803898199 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.7893568 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.269790449 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.891066696 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.829516268 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.801610051 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.013123588 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.806505129 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.796246936 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.792608725 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.82869117 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.801401811 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.791675565 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.159861066 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.802360331 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.810996578 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.796221827 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.79451716 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.945277786 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.796804869 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.932700137 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.800779685 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.805814135 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.796242933 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.014745263 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.80456938 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.303346857 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.803132082 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.794179685 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.882028676 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.935589404 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.295624956 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.80428475 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.946854078 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.245341285 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.813536685 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.798137176 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.252275297 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.817202489 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.796666844 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.796378166 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.794928136 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.794565102 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.840694559 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.809770998 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.233709285 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.295811038 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.168800797 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.819327837 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.806170342 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.797428525 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.163005136 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.798094728 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.796729597 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.01085107 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.311071287 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.802659683 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.803666071 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.282484896 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.806619202 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.815693148 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.79758531 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.018888769 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.802459909 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.842558652 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.795685769 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.801274447 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.797474112 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.814288724 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.799495717 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.797136792 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.27045904 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.899101718 seconds)
  done (took 222.778866945 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.791884255 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.79176296 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.787924315 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.784166404 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.788597094 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.798907762 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.790490772 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.790351029 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.798713809 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.787319418 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.788359401 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.78967655 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.78914077 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.795607106 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.226890869 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.796735039 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.387869776 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.791113725 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.792495215 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.787091154 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.44655727 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.798381743 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.789967285 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.797188651 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.791430481 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.7963438 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.794062402 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.830377543 seconds)
  done (took 165.627962229 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.802125439 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.983348699 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.814890903 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.835840044 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.80288074 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.795699163 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.821178446 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.815910166 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.802654504 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.795363551 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.792379001 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.862126244 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.805015826 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.930984514 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.826555209 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.829763096 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.903977101 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.803134605 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.795944523 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.793889802 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.824154975 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.7920819 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.859658649 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.923625917 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.819990484 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.915369644 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.801951955 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.799732091 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.797219927 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.918417153 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.814074626 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.857197185 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.823296825 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.812137059 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.918619185 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.918052525 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.907619503 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.826767527 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.799045252 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.797872367 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.796717635 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.786538194 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.916530077 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.816690425 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.798644203 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.907156292 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.821326603 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.800470898 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.810914931 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.798094232 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.817695911 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.814856084 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.864587777 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.930698193 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.83044104 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.826240307 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.828095152 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.084470534 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.805929398 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.903996883 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.790654352 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.923941263 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.823719708 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.792303612 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.799678126 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.809624175 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.827995079 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.828493358 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.909321646 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.804408612 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.906783662 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.830064498 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.805867648 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.799757465 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.800101534 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.922356898 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.91781006 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.835961921 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.83597025 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.834374449 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.793103495 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.803498795 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.791196453 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.817298545 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.799238722 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.919114548 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.922892092 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.80572575 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.805020075 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.804947819 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.802978199 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.826449465 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.926086788 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.833927234 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.901744492 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.872620904 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.87367146 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.814491827 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.813370155 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.801774331 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.86396798 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.812918329 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.817450528 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.135490558 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.874815185 seconds)
  done (took 195.262604431 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.243248949 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.855095469 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.858660928 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.0885405 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.22780124 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.66106529 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.844423545 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.850288331 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.877402047 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.014206256 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.906254542 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.86608362 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.8458802 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.823434868 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.851871465 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.867891867 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.852751162 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.159826029 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.968694332 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.958339189 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.831340143 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.129859286 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.162565872 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.22889136 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.884712115 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.159034775 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.506920277 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.090742773 seconds)
  done (took 59.355215795 seconds)
done (took 791.611969323 seconds)
SAVING RESULT...
DONE!
