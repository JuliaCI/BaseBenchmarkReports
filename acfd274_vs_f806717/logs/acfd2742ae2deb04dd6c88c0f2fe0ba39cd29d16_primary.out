cset: moving following pidspec: 17476
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341647436 seconds)
loading group "string"... done (took 0.543688618 seconds)
loading group "linalg"... done (took 6.997051332 seconds)
loading group "parallel"... done (took 0.161132003 seconds)
loading group "find"... done (took 1.085847911 seconds)
loading group "tuple"... done (took 1.80593248 seconds)
loading group "dates"... done (took 1.184672976 seconds)
loading group "micro"... done (took 0.213037349 seconds)
loading group "io"... done (took 0.905168844 seconds)
loading group "scalar"... done (took 35.872965128 seconds)
loading group "sparse"... done (took 11.323063052 seconds)
loading group "broadcast"... done (took 0.908406165 seconds)
loading group "union"... done (took 11.856576142 seconds)
loading group "simd"... done (took 4.118637722 seconds)
loading group "random"... done (took 8.463652154 seconds)
loading group "problem"... done (took 1.863602127 seconds)
loading group "array"... done (took 19.702236657 seconds)
loading group "misc"... done (took 1.624202738 seconds)
loading group "sort"... done (took 3.060058841 seconds)
loading group "collection"... done (took 16.338602637 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485306002 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123909859 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114493691 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117923525 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145148351 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114675784 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122528513 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083496367 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.782772122 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147767799 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119172065 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415261929 seconds)
done (took 5.081416557 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173627801 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082404417 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080910916 seconds)
  done (took 1.30901384 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064347391 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120042967 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067035684 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066996181 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067214497 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066039569 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065902132 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065895285 seconds)
  done (took 1.666399517 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072310255 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068108387 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069414493 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068262879 seconds)
  done (took 1.423012302 seconds)
done (took 5.790952308 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763972753 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201779537 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182187215 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397159967 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129107199 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154487326 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646675531 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324619591 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182901578 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081314742 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104235502 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.31793753 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107083558 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639253548 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075488617 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09028131 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135809521 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.42814145 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067222689 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081828762 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088934594 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128367721 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087961738 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074319567 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143052248 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067251218 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133728024 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080217429 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066266251 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206721246 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172426315 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661303324 seconds)
  done (took 10.203879456 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095938392 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097263676 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068429593 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136254887 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098308017 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069154557 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070717577 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06695915 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087013723 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127532123 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089019479 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101039636 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065277792 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068451741 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084031073 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203919962 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081825614 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080612109 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070155243 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074950647 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118625156 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078528539 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077613835 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077567735 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128038625 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179807399 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096305287 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096982386 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066501388 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080282657 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114398067 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127514632 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067344105 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066194113 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123973947 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095092138 seconds)
  done (took 4.609173138 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.297040681 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139833497 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090106976 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13240153 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064681643 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10703831 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065877944 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080972096 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.19991457 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.357322942 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109596179 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.570872735 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110446846 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103756601 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067071559 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068379251 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066784812 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.341280022 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107051947 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103234267 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080759525 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069580155 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068730086 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341178382 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067318091 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063225458 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067506347 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057678151 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123616879 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068236932 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.022914591 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.071385003 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125334668 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066791267 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063987046 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099920351 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.219387138 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142824734 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068639832 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064764494 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150269021 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.06990713 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066199952 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083892201 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103290832 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113951232 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065994211 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067011865 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161687656 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064327392 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078477082 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.978209331 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15248861 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076965825 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064872113 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244787262 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085369725 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069673732 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064672535 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176815204 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134664056 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067779995 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066255802 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067874777 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069432358 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349624882 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065771637 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.718595226 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069049923 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077630864 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068923222 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069098085 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072801482 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074520659 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085357461 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065740286 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07550277 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065649017 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065501651 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066310155 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084891075 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354027267 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066105335 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067907638 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064496801 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085873635 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096627329 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065942852 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065821951 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100142072 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067693009 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.168607882 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064955835 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106938867 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067065911 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08407077 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069882743 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112681559 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06846013 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.087265623 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065687163 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101416342 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069966812 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064389468 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098866068 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08120103 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067677654 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397519007 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064642243 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064387385 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068228622 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065427294 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06712421 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066267142 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078847198 seconds)
  done (took 20.86676785 seconds)
done (took 38.119212332 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.233246097 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075333163 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074968884 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075120425 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074787399 seconds)
  done (took 1.768374124 seconds)
done (took 2.983847918 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119344957 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098862088 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064185559 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095574044 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064217946 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099346194 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098355309 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080899174 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098992192 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063965103 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095382922 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064008009 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064081862 seconds)
  done (took 2.341201873 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081916998 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08306446 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06902341 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08216759 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064086106 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081713648 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080597947 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088236938 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080637462 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071469041 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063478958 seconds)
  done (took 2.060597094 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081127967 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083469641 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068697671 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081402932 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066566474 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080652399 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080442568 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085180477 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081476372 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0728024 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06346848 seconds)
  done (took 2.054697169 seconds)
done (took 7.659829143 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077406523 seconds)
  done (took 1.278925824 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.587320181 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.078776304 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081317239 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111828603 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183276366 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119288847 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27843508 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086599137 seconds)
  done (took 8.908240786 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102115199 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070661018 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069319001 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068019351 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068147237 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069436319 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07072417 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069660828 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070499697 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07157373 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071089996 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068994934 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071650593 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069285801 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068616717 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071536534 seconds)
  done (took 2.424020655 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092637759 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090544097 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074111867 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074867952 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.0718937 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072086796 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074280499 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073711756 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071060504 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071672727 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074623438 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073531802 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071373602 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065337691 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074106825 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075660524 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070535503 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074346881 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074323243 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074655015 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074493037 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064268163 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071312655 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.0736432 seconds)
  done (took 3.086115992 seconds)
done (took 16.906925306 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114839582 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07150569 seconds)
  done (took 1.395159256 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081948487 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083045019 seconds)
  done (took 1.381972636 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084175035 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065777825 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092343889 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078968558 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066338382 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065711016 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089340363 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065767876 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066106153 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065935285 seconds)
  done (took 1.956646886 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068505414 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07879846 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070896682 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081095606 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074158608 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064985937 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073191297 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068116162 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078337567 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062904364 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071691098 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082587508 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071403141 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084223262 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072749293 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068710803 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070933504 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067347678 seconds)
  done (took 2.527204029 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065868137 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067453345 seconds)
  done (took 1.356873917 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06763417 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064063829 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067438123 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066873244 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064009524 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062465729 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06363206 seconds)
  done (took 1.674816162 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.3808119 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10943689 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.29639144 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070399134 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08114407 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248171378 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064915975 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070342779 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069791661 seconds)
  done (took 2.653804716 seconds)
done (took 14.168341574 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077960673 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085218922 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094931512 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.360178519 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091513896 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065540396 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113586473 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18848914 seconds)
done (took 2.311425332 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.222613136 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.610346562 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.385359987 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.19643629 seconds)
  done (took 2.416067071 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325946464 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085849967 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058509057 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066169961 seconds)
  done (took 1.768011438 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065829779 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068846989 seconds)
  done (took 1.364135546 seconds)
done (took 7.001412158 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065682768 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082661095 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065822208 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062814587 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065046816 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065406707 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063080895 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063248644 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065317913 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064527937 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067819743 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.06518601 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065769326 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065265199 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063197919 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062848584 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065837037 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063166691 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062940174 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065412661 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063216689 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065361114 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062933056 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.0631824 seconds)
  done (took 2.828257915 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083624213 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066266091 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071330065 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071000994 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069434214 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07051633 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073569929 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065783177 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070908805 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067914323 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069446257 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069656576 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067389787 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069577561 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067611335 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070133724 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071072955 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066248812 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067734607 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069386843 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070624725 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06601718 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069388832 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070964207 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069492627 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070670889 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067658433 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066574065 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070588013 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069333431 seconds)
  done (took 3.328221006 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069268351 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063517381 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064244016 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07010702 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063746108 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064615963 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062868271 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064095373 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064037655 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063019309 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064261045 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063613374 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06338017 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064096536 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064421062 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067138245 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078280001 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064167174 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062907039 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064050453 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066574101 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063323889 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063366024 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063762484 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063083617 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063054047 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063574883 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063508921 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063666017 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.174966137 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066141977 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066379695 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063091642 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070137799 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066542252 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062730821 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066900981 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062889747 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064125043 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062716967 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063176925 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062901445 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062889385 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069640216 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063015778 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064828935 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06296723 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064094252 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063191896 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065418827 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063061931 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062667815 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064731897 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064246581 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066982348 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062477535 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063487032 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062713246 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063841039 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062574841 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062648319 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062380496 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065419436 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063522346 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077468394 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069704692 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062885521 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065307671 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063838997 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065297779 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064830703 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076120915 seconds)
  done (took 6.025789439 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090104056 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085976105 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065253418 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064746331 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061462525 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063721525 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067050105 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063734212 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064921645 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069234795 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064122636 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064547377 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064790583 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076676163 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063947941 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065292377 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069408092 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061605083 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063279822 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067236328 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06365905 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066839114 seconds)
  done (took 2.738630063 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154059978 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070253819 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105467455 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072834756 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067315091 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072606875 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069922696 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070277605 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069739985 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067874076 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067702639 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069315398 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067294028 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068300434 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067624201 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067785624 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069419151 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067752769 seconds)
  done (took 2.612223021 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076586998 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066095011 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085590839 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06554652 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06617023 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06844144 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070309622 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073605308 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06786863 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065570542 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074164162 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067730502 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067676355 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065654331 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067742871 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065260459 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067883328 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065721298 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073554379 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070172803 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069907742 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073634694 seconds)
  done (took 2.782232742 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078688661 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067636014 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08241188 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068192382 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062018177 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063879309 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069669123 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065354079 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069770065 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066927522 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065995968 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064173739 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069378247 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065502669 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068938507 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06564272 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067351582 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065868664 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067496931 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061534984 seconds)
  done (took 2.605754673 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086548195 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067453207 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068046184 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075827428 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067652319 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067116576 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074882866 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066981756 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066789596 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087118787 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067538515 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066888041 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07473462 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07173097 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067422676 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07468076 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074399089 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074466753 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066842911 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067136517 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086720828 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067481507 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074561247 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067048316 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06669716 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066740792 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066927126 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071957195 seconds)
  done (took 3.253656139 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066576442 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066518919 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062900687 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06336753 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063690673 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063882558 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063430867 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063359485 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065412603 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063084183 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06618604 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06549014 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06527751 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065607199 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065939965 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065496258 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065411822 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063401123 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063057057 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063134603 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065781635 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065929942 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065334491 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063606929 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063601503 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06577159 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062986241 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06305889 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065710702 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063408097 seconds)
  done (took 3.191652464 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074717854 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073115394 seconds)
  done (took 1.403351231 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063036236 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079938768 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06283245 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069069677 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069754561 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066279056 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072916661 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069421234 seconds)
  done (took 1.804953152 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08078093 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077255903 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067391131 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080392693 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075945395 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082113335 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132126756 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066594136 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.0724274 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063795737 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078830355 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06493382 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071770041 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066303636 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071576772 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072146896 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063626603 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071638929 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06808238 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064217673 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067250872 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074329313 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068454824 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06137063 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066989817 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087265696 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076913904 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065669892 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068294782 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073180446 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071713253 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060219371 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065991749 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066604257 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06415658 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075209042 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081015159 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068668364 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074812337 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066952541 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076745383 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061275747 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070179064 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072327142 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075387689 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065958493 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066877386 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060971898 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06344685 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067885712 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060962355 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065731198 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060898723 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074811388 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069386942 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076219178 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064301874 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066973503 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068572612 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06924845 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072013904 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067603292 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067968995 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065761552 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074923313 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070007081 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074478933 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061189617 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060042495 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064256708 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075595577 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088813146 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072081287 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066442197 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066695452 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064031015 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069409038 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066998797 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071613078 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072436949 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066118696 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071475796 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073416213 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066145231 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068370122 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074954487 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064441509 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06931296 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064592863 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082190435 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065114484 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064272191 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064599279 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076597624 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069532008 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065821289 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064237834 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073670327 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060502783 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066746126 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066412118 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065677876 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075066041 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069748228 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069859361 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073250123 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072411263 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065287743 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067857207 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061825958 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066017522 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064002889 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072199464 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059009741 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067892653 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066904455 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065360929 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200924796 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065737537 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067653784 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074280064 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073100229 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065375853 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063473819 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070153744 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067115082 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069960657 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074766473 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064808802 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061372646 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062303917 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070156538 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066809534 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069586887 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071025539 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069146973 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061637063 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065229955 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072158319 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075292839 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066911984 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067822699 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072785135 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067736643 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066450426 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073198972 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068775115 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066066174 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072326357 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067540356 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062178744 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069802815 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069095197 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065112566 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070523644 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069390655 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068361775 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067801342 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065898814 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073301642 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067555216 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065791741 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066778641 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065486907 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076821104 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068151394 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062139337 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063551836 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075625245 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064702968 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066043324 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065221756 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068378566 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066824038 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064704069 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066016069 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068814456 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076265762 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070457407 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067641186 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071277137 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077297974 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066353722 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068728156 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066280818 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0671741 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067141802 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074073 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071549693 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070730321 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068517677 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062854788 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071024226 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073161622 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064983014 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063436904 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065022981 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070223182 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071231001 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07011936 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066756623 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06401377 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06655666 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069574501 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068066562 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065559384 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065148564 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072731739 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064010967 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073202915 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066736989 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075599941 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069046017 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061124856 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068861926 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064225276 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071692785 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061059868 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063887785 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064826464 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066502337 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064148277 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066974492 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059461692 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071191606 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071903232 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064937155 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064114773 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064802994 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071580531 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066395929 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068551709 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068162822 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071153744 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075127667 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064371878 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068518414 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.203918802 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066840238 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060905582 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072015186 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065370962 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065226518 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065267914 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064344195 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069601525 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07650694 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072720641 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061047359 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069269548 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065230879 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066464959 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062457674 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071214334 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06905648 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067392778 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07374163 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067803797 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066723817 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070442978 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06689262 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067836278 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068147947 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069696161 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067949542 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069042227 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066622845 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070274634 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066216652 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063968504 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068736569 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066669473 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06708769 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072828343 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066913694 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067023531 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068927522 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067052453 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067067662 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067318017 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065853141 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068854166 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067711244 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066466605 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068946105 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061828429 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073599206 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066342032 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074204876 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067105117 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063475766 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073949217 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068785795 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072090795 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066953551 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068351675 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.0680439 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066341641 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069057197 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073567871 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064483251 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07697955 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074181138 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06750224 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069466861 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066269398 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068171849 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065718449 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06765779 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06738189 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065902795 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066241178 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070611567 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068342348 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066180665 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067702055 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066597371 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06614829 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066808925 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061068247 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065107111 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065385925 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06611492 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075350594 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06649803 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065726852 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064823901 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067324152 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065374501 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063191319 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074290969 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075629341 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066937587 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073307812 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065049977 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067409049 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076143283 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060647848 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064337033 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.0637954 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064018046 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072902206 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066850143 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075185284 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065997654 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064667879 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062781835 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065988222 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063698938 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059311625 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062828722 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068136039 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063867879 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064670578 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065350174 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067292433 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065602959 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07384882 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064179601 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065892124 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065074401 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.195172036 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065921332 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066355764 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069787646 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068122884 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06457901 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064055553 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066466585 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067453762 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068136673 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.0658822 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068776883 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076223845 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06674735 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069790183 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070314705 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061316206 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06956679 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066478829 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066113353 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065909694 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070249946 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070283063 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068158113 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075811554 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066590456 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067233273 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067023794 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064849671 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066342813 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06609736 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066782464 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066017823 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067941597 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074849948 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06544737 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069600101 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066500802 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066615625 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073417142 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067769998 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069847502 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073169665 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066879151 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068231294 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073799614 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07112659 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070073704 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067641828 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068431556 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072192877 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06586272 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072485282 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066596477 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067251195 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068193979 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064130256 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06636263 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066549841 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065564857 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072893867 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067940294 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065634506 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065611151 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063398587 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067758281 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069747191 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074037449 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069225058 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069018945 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061211953 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063511004 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067577771 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064211895 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068171388 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068504536 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071391954 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068273002 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066625012 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065145479 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074764204 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071555438 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069290648 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063745721 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069412444 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066681387 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068312492 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067561576 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066450768 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067107779 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069530777 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067504208 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065168516 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072963942 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.0694033 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067297478 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068259811 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067040959 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066344571 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061749207 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067095228 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068405073 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071524732 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068547425 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066361412 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076907401 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063865053 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066032428 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06890038 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064832667 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069733974 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06114228 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066880987 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066526093 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06589829 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060486579 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064485843 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062851825 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067053426 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064074228 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060362799 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074944886 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073273884 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068081163 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063746099 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063810668 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060317786 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06025037 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064003578 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065588981 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066916497 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074586459 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064492532 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064156533 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060508111 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065106848 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067865522 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068452037 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06259817 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060245229 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064377562 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068321616 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070135173 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064088846 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06459284 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067858812 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066697639 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063105537 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067728182 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061566827 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068187683 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076774489 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06547299 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065473851 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.070781583 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072137389 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06523491 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060006074 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065221631 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067633644 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.0650991 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065647242 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066068814 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079014378 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068263407 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063866842 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062786181 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066517539 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064524193 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071483811 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064754166 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064777419 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.06792634 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066097469 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072328123 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067022696 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070744237 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06641239 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067131785 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062581605 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064991988 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062159858 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062779374 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064707257 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064519798 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068053275 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070327924 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06349926 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073695991 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07202248 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065828039 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060750454 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063908394 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063265084 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058982996 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064663625 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061939607 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061887394 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061932726 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063279506 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065255046 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069091783 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065622155 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064351986 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064502068 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058377997 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.065711002 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065367598 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064755407 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060291026 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064448855 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063871927 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.067440229 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065983327 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06142406 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066189289 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065716009 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064826973 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058540704 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.069878377 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062651032 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065272317 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062642353 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064099699 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064492834 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.066418284 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067645263 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064787959 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065772321 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067561723 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066045032 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062195514 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061213315 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069161307 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061819417 seconds)
  done (took 42.065750559 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10799122 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065959442 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064899422 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06536688 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076717303 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06629828 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064965195 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065388072 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066238608 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067649263 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064608209 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064601214 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07291911 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079900878 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075651058 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068647413 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06428376 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064983559 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064316294 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064834614 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072655987 seconds)
  done (took 2.972756525 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075747474 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072645458 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074188557 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077668663 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068763522 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072210224 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073937994 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07236861 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077433076 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06862796 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077479705 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072021234 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068580411 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068371483 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068474783 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072297767 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077448317 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068398438 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071694297 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074175876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072158879 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073878704 seconds)
  done (took 2.963389228 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069024735 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067195422 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068865325 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062546138 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067411015 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.071310369 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070297248 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064706699 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070265173 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066101067 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065757009 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065994266 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068553598 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061988948 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067034694 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064684053 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109182254 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070562923 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066288047 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.0680295 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062223943 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068546836 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06306298 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06293792 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065630092 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070307473 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067952247 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064821451 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066436748 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065618192 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066467444 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064809663 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06862856 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06762107 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066175639 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066253253 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066251097 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066612613 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062654848 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06460806 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067364588 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06322853 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067049304 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067904731 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065371735 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064808057 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068002969 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066185384 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062093328 seconds)
  done (took 4.662662235 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080286692 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109249759 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069378635 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08886734 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080583179 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075941067 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070067788 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090150312 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064019395 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064942757 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082509725 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08015423 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06670892 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071136256 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072771993 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066836664 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067337817 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065497842 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070419482 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065780891 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070359778 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073354336 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080512464 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079166716 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070075336 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065454369 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065646431 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070566274 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07898337 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071038241 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071148884 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071799836 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081969265 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072120599 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066231343 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068768694 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082364842 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066623847 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068817066 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064133023 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068796427 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070570316 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072586137 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082351335 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066645653 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071691104 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066406417 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063759275 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080203281 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069210702 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075080711 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081225785 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070285535 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066782946 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07091719 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081899354 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066317883 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064587296 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06921069 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079342214 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064221714 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069751076 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080912688 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068046946 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073606242 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080721913 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071327966 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069959254 seconds)
  done (took 6.464423273 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076097086 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073006132 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081584827 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080760835 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072718838 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072648821 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073452956 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072512793 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072566899 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077885749 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072769913 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093410702 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068632172 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075307746 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072831846 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073013387 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073101017 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073033286 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07303267 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0733405 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073020803 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080562544 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073064073 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080755174 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09933285 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068259472 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072477212 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072863889 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08097631 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07289659 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079868 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073011866 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07291975 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080623089 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07975381 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072711152 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065678131 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072436083 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072799138 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072659498 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068328318 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080689855 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072426923 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068279965 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072500246 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072244741 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080517114 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080268753 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075518037 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077110686 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072841751 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080590905 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072627624 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072901914 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080343317 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105624891 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080703181 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08058872 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072596963 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080280075 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080392182 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086558373 seconds)
  done (took 6.121197541 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083803793 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075227468 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077395616 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062157046 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064590345 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070502476 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064467921 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064601185 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074923259 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074884993 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077783934 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070301181 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072846048 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077336521 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070317538 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073543047 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070676936 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070147229 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075014064 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070409223 seconds)
  done (took 2.8335187 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074740688 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083823016 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067747079 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072322368 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069739857 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072049142 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068864712 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06960829 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067448436 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069694791 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076402934 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076700009 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067348486 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072372183 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076426924 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072232054 seconds)
  done (took 2.541330948 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076257392 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072647622 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080694926 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066773923 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065095638 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063335085 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066744431 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062252042 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062898648 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078271974 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066503432 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068688211 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06673486 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064815343 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063184739 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069115397 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063135818 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063784842 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066588527 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079004824 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077111964 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065199666 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067821571 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066356343 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066591401 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071545206 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065969501 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.0642119 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063896727 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06666892 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067079768 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070201539 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063795984 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064277556 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065436111 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064081875 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066134082 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066502651 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.0686839 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066059239 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064079853 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066022393 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066145737 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066996909 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062430644 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066517109 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063145451 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068189043 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064403983 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066290043 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065810488 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068419877 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066790101 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07272394 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068900057 seconds)
  done (took 5.086971101 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078921321 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070166737 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062211833 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064842123 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069473702 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068017991 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070040194 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068171148 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068362514 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064467628 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068320142 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069288122 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068605109 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06993892 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068533828 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069863755 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062640741 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068435883 seconds)
  done (took 2.627047225 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072879996 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06731067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07354698 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066970751 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066179639 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06906177 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062424887 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065102709 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06544941 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066533309 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066459346 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068660315 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064922123 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068771513 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06665768 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066268896 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068719166 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065080125 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066703532 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062337654 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068351551 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064873505 seconds)
  done (took 2.86346378 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093255691 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081825952 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139812002 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079956209 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083811557 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072151573 seconds)
  done (took 1.942769082 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090782932 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079429207 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067472235 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089406385 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073962801 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068294066 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068098101 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068240694 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076356168 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076459843 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068074489 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076109299 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076054459 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075523501 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074070321 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073101769 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067715201 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067376952 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066470799 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084655885 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067171464 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075697051 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067655151 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066879959 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067249618 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075047929 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07591282 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07577216 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067111459 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075651777 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072642778 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067367458 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076448167 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076073955 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069123676 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076067602 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067676456 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084224937 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073547704 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075429571 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069004417 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073562173 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076461573 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072056056 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076438678 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068080403 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071868419 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067322549 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067399117 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086089798 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073151605 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075268903 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073225171 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076041462 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075994655 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086134325 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076281514 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075584136 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073396988 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078500341 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075751739 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072804505 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075044717 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076235023 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073522683 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07589081 seconds)
  done (took 6.277057996 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082773536 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086165931 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068384885 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076399811 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075268689 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067425422 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068033247 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067439468 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067865613 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067430506 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107684921 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067851458 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075364851 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075575854 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067977883 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067467515 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068207143 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075596907 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067350234 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086340664 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067487792 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075272733 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075349285 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075319434 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076564823 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073132218 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067842767 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067816688 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067574166 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06754315 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072468397 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067791927 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075613234 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067369322 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075633957 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067929944 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06757861 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072541406 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067819621 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073266854 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075513627 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084098563 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067637225 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067604874 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076199534 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067959849 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067918895 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067835706 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067567636 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067665149 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076548125 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075946494 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076178391 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075376461 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067523499 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067744427 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067439052 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06751863 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067889129 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07298817 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075218291 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066959344 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085988719 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067626248 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067322825 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075466593 seconds)
  done (took 6.184210973 seconds)
done (took 129.407168699 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185057672 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165864444 seconds)
  done (took 1.740410433 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069746166 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097376466 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07785714 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129004778 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066611579 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100311986 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09929257 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07766337 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066245821 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06641063 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066082553 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068574282 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131600748 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066191971 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066121923 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068937249 seconds)
  done (took 2.719531365 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097807172 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157883042 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099997875 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065187396 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097376334 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073068851 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064722514 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074922408 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071070903 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064886215 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072752306 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070887532 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065251636 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070287471 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071068205 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072852126 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065030824 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072876263 seconds)
  done (took 2.829970297 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101180841 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091863104 seconds)
  done (took 1.598909189 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159629561 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106732598 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151532626 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346946432 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167106506 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230780112 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128705847 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130392153 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.123159351 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.125027443 seconds)
  done (took 3.072436116 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098612259 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152784827 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255407644 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114955589 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072355088 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094852195 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116216149 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078102872 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080991368 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080385968 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080573388 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076265773 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098609766 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073812347 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073724335 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07623054 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102447111 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07247744 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074218821 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076558545 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09883872 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065486164 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073648188 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072172964 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077271526 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077803349 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065550041 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065173848 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076639277 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073894178 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076654701 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094155987 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077169429 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107533817 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070183032 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107665225 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076374936 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073583487 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074291577 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07350089 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078788856 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07859064 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071994977 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075742945 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065001208 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076057382 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065576934 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065431161 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077720565 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067092553 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078096101 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076716444 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106682415 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067176458 seconds)
  done (took 6.007250349 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101670341 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104170883 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071614103 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112343015 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099953703 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072334191 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101388167 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093939099 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102737848 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070131986 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068288393 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070505727 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082992805 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08367304 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113179097 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104901029 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074264219 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071236713 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104056767 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103356964 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068604858 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095145138 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089576528 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101934901 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067575762 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070971169 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067982571 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070659678 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076888608 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078923424 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070599244 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081440181 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085226978 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078745486 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067402517 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06774849 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068188463 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080277 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079919732 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078913647 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078083848 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06765551 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069488783 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069750722 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070422666 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067827443 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079207579 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080816254 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079064024 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06946924 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069894996 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067912123 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069301141 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080436356 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077863697 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08136577 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080309467 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068282202 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068223233 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072431654 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08058984 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079148268 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079866234 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069509091 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078948139 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068703272 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080037694 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085071899 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068356145 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070235947 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068277358 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069850609 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069984515 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078058127 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078438148 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069291312 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069844293 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068702589 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080349779 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07922244 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068274782 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07690115 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066838927 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068558763 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069816523 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070063438 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077923725 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080024346 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069595574 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068005002 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069630255 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068895756 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067176426 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07772281 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080572982 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078904538 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078695192 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069373726 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078717795 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078818414 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069800909 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079548455 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067985907 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.198857023 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071068738 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080167252 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079400358 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080702848 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070241422 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069055107 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079894659 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081300075 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069132493 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079084343 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081472996 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081017496 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068560286 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082272368 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069031295 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081454459 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070365669 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080604782 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069889996 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081439601 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068852977 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068622457 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069038053 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081201657 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070747465 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068819806 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070002063 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070139694 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081248323 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082508656 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071006699 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082271849 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079676401 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071147698 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079702898 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068869389 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080435618 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069724094 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070308737 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068468668 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082359702 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068578524 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069147101 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069688722 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081619526 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069403294 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080258744 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078462904 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068692316 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082139148 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.0813102 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078180437 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080380397 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0709704 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06938264 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068023098 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069938416 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077999372 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08056919 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071209025 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069459224 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078495087 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080241362 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067831072 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079513382 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078499231 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078878681 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068506254 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070038974 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080957736 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080935634 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078809474 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078225289 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078399699 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068586414 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077836768 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078425633 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068181949 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084938137 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06818678 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083528229 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07943192 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076733331 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079107956 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080890267 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080725736 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080534474 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083597067 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067936107 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067880359 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080488596 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068602838 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069617228 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079103971 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069802021 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069454132 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082920977 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06849128 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079288588 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067188826 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078497886 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067113173 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069651914 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083598563 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.200406009 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071072422 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081785051 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070964551 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078453158 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081569151 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079840308 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068545878 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070811423 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08016566 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079614852 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068768568 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068488857 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071119451 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078940227 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078578009 seconds)
  done (took 18.784514993 seconds)
done (took 38.165761334 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209600016 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151044381 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199207236 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118992055 seconds)
  done (took 2.18106294 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121270741 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100815365 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095268317 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064624313 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101775838 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064743037 seconds)
  done (took 1.990642204 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313088693 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212667796 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183309313 seconds)
  done (took 2.1510397 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206537019 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187670209 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393387989 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252586216 seconds)
  done (took 2.591131707 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142529838 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089682217 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066818756 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083338307 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.1349848 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161308017 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101480424 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126830238 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078154594 seconds)
  done (took 2.478723251 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147461738 seconds)
done (took 12.978331603 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.246811407 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.198956124 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108856749 seconds)
    (4/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.176573654 seconds)
    (5/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.192683508 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.100764826 seconds)
    (7/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109106783 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077593208 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.1006206 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072890281 seconds)
    (11/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.166843039 seconds)
    (12/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170511643 seconds)
    (13/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.213017669 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089449947 seconds)
    (15/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091209225 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193834087 seconds)
    (17/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.111728772 seconds)
    (18/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07672233 seconds)
    (19/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073003022 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.092161949 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100864147 seconds)
    (22/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076133264 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089367778 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150337486 seconds)
    (25/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076640006 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.143406117 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171142163 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073863919 seconds)
    (29/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062857368 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11184774 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071345126 seconds)
    (32/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073504805 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07481032 seconds)
    (34/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.144327971 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.086265784 seconds)
    (36/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071187087 seconds)
    (37/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072382312 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.110306603 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.171517264 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065939315 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064989036 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07206881 seconds)
    (43/309) benchmarking ("sort", Float32, false)...
    done (took 0.126687236 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071760107 seconds)
    (45/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.155525438 seconds)
    (46/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.153462804 seconds)
    (47/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071378388 seconds)
    (48/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.153751838 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051698641 seconds)
    (50/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.073002809 seconds)
    (51/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072334598 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089502828 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067249327 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.146725112 seconds)
    (55/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.180294873 seconds)
    (56/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089051513 seconds)
    (57/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10861011 seconds)
    (58/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073430633 seconds)
    (59/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.174602508 seconds)
    (60/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.150162521 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.216359721 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072095917 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111343706 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071460681 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071582793 seconds)
    (66/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078477911 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.062268493 seconds)
    (68/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088134936 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108166004 seconds)
    (70/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.206259459 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120365596 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07595194 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.17494704 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17284233 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.065751662 seconds)
    (76/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051359186 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.172228597 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163911883 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.093410078 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060358774 seconds)
    (81/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.192162277 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119601493 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.213863405 seconds)
    (84/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09883646 seconds)
    (85/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088776348 seconds)
    (86/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074844393 seconds)
    (87/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077406549 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065851314 seconds)
    (89/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.062102517 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065294158 seconds)
    (91/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.185655328 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.35642386 seconds)
    (93/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067687179 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.186906004 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051645316 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.159174922 seconds)
    (97/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100582362 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067490022 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07254569 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089899567 seconds)
    (101/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.150521143 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151215959 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18581699 seconds)
    (104/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079697899 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051602307 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072354553 seconds)
    (107/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060832193 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136214695 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051691325 seconds)
    (110/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051277906 seconds)
    (111/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.150989865 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135559781 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065933388 seconds)
    (114/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06770084 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.138117831 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087184051 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087349307 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075254436 seconds)
    (119/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.174712416 seconds)
    (120/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076661268 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132586836 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151185016 seconds)
    (123/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074943969 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.133928975 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166043077 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.0738875 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065375978 seconds)
    (128/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051059381 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07205703 seconds)
    (130/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054784403 seconds)
    (131/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074804235 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071109761 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.061886078 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072026126 seconds)
    (135/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052417987 seconds)
    (136/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051653493 seconds)
    (137/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.149296334 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.07222361 seconds)
    (139/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072231935 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126435528 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07125454 seconds)
    (142/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066148174 seconds)
    (143/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054422792 seconds)
    (144/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072970476 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066732153 seconds)
    (146/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073047835 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091348627 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092228881 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.139762457 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064466389 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064959834 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072463127 seconds)
    (153/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070003514 seconds)
    (154/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052312825 seconds)
    (155/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109124696 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072861385 seconds)
    (157/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068966807 seconds)
    (158/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069979326 seconds)
    (159/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052241671 seconds)
    (160/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082094141 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05121601 seconds)
    (162/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.158025753 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087406744 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091836201 seconds)
    (165/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.150906876 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093150779 seconds)
    (167/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071495986 seconds)
    (168/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052079477 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114485106 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077964224 seconds)
    (171/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05238571 seconds)
    (172/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052084548 seconds)
    (173/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066484856 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118818499 seconds)
    (175/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051109109 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073951634 seconds)
    (177/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099901417 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051535638 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089554089 seconds)
    (180/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052238852 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07132549 seconds)
    (182/309) benchmarking ("sort", Float64, false)...
    done (took 0.124562798 seconds)
    (183/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051494368 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05203744 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051006807 seconds)
    (186/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060161439 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072707313 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165718412 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064633906 seconds)
    (190/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098091162 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070412566 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089027276 seconds)
    (193/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066550554 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050742178 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.296397572 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088015786 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065918043 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070268809 seconds)
    (199/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053076029 seconds)
    (200/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061769981 seconds)
    (201/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088001708 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113192119 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065010113 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090085523 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09297295 seconds)
    (206/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069779357 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074509412 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088157324 seconds)
    (209/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159157533 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051479453 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065296658 seconds)
    (212/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066949913 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074523695 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073192866 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174073765 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071164473 seconds)
    (217/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078584762 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066108404 seconds)
    (219/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.0902456 seconds)
    (220/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072979631 seconds)
    (221/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076154162 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068049446 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067036603 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053368824 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071830785 seconds)
    (226/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118733976 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.196930446 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.0640482 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072036999 seconds)
    (230/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078413397 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080323369 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131810064 seconds)
    (233/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073483818 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.0907994 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09242377 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114817039 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094470761 seconds)
    (238/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073320734 seconds)
    (239/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067055954 seconds)
    (240/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184896406 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090424443 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051417137 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.149519586 seconds)
    (244/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072863741 seconds)
    (245/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06255345 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068339485 seconds)
    (247/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065057245 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065657745 seconds)
    (249/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051614778 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065302833 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052297664 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064906468 seconds)
    (253/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079451477 seconds)
    (254/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052182654 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065337227 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071597493 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053587928 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051401485 seconds)
    (259/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05125979 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072947718 seconds)
    (261/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051743515 seconds)
    (262/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051614292 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064139641 seconds)
    (264/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07090224 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064762658 seconds)
    (266/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06662786 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068910146 seconds)
    (268/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065174682 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05232292 seconds)
    (270/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071784286 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052457505 seconds)
    (272/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065480068 seconds)
    (273/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051151323 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078273624 seconds)
    (275/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067456075 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072639629 seconds)
    (277/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.097109484 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064943384 seconds)
    (279/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062087437 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063952911 seconds)
    (281/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053514136 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 0.13846981 seconds)
    (283/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065168447 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06382007 seconds)
    (285/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051231576 seconds)
    (286/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086736641 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072166216 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086678962 seconds)
    (289/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052127397 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125234587 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065131241 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094459065 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051455757 seconds)
    (294/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052254138 seconds)
    (295/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05115668 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070511545 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173600904 seconds)
    (298/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053687077 seconds)
    (299/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052855825 seconds)
    (300/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060616989 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065355357 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05269585 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065490338 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07088663 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070196683 seconds)
    (306/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064284159 seconds)
    (307/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061598273 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077918579 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065104831 seconds)
  done (took 30.456480838 seconds)
done (took 31.909470967 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083085123 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092054749 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073362231 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091306909 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079631723 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075799857 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071596656 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077601423 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078996868 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080409964 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077810742 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054455576 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073703762 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073660443 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073773813 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090488012 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077365958 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072439385 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072532448 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064627015 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072619521 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065684441 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067130911 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054624774 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077433059 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071831769 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072473512 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073787238 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065516158 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065577037 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069480703 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073362497 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065145982 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077602163 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071934302 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072657054 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074039653 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076141934 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067449592 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065455064 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07367902 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065172981 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072331066 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072961266 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072154825 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070579681 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072359951 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077801737 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090512607 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067449958 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073805211 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075217285 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075745581 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072025296 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069343667 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072283549 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070253998 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090335598 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07267689 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06783521 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073172325 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073750088 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070542141 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072268354 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072435107 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074522144 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074726504 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070278514 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073702849 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070606699 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065023016 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072258965 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068197114 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065087827 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075030482 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075800669 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064150512 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070771749 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07188272 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070749422 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064178464 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067235774 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06688288 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07113321 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067113058 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054214763 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068687573 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071067184 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064157132 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072611107 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070880522 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071712524 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066483443 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074679863 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064660993 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06963957 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064918247 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065177808 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066395116 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069187741 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064801934 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067806805 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074056989 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066343036 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071443682 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078115559 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064613175 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071028412 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063983304 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064426764 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078497093 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07387134 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065367669 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067437041 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063995284 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072092121 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064033348 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06467153 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064698907 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06518539 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070828196 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065447606 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066993732 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071801055 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077105902 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06490913 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068002704 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06665444 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064859183 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069894279 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064726049 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.199331894 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068331329 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062147905 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067603058 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065505364 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072968973 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068589791 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072841899 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066787592 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073520634 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070233569 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071747275 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071276779 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064697444 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059042532 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067694391 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067921479 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.0672251 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06584223 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06736316 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065947011 seconds)
done (took 12.433262736 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067565631 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141684701 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099095441 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095167137 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085592142 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066764891 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07618867 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102321926 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067505349 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102431483 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087013163 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08494029 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112234642 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064705248 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065954203 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069790553 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06787836 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081618123 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101142518 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08621797 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115506548 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065398834 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094665278 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090290231 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086971574 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091988557 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06711963 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069421008 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069182241 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100208852 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086049179 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069285255 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066272206 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100631878 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092076946 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083561197 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066402653 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08170765 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066505147 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065524392 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067520804 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097639379 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079332817 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079810423 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069695668 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068670703 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066900014 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083526226 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088590803 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078396113 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086364658 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102192197 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068282702 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065412868 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064277787 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085174462 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064977765 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068600684 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066172201 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067857858 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065982562 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068633287 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08030074 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081598598 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069332112 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080009182 seconds)
  done (took 6.834581336 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082643474 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089560328 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082933884 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082990601 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065941197 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066235556 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066912386 seconds)
  done (took 2.088264418 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066990793 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087270604 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088977699 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089113488 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084376722 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087420332 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07544242 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066243004 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080270675 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067308897 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087050716 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102321072 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066982955 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072807374 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090098971 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066360772 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089855824 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066071623 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069510201 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089753877 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068421936 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081756767 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069804539 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066768077 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080829744 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067094903 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112979963 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07074688 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067751105 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069562811 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064875898 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106539408 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080119526 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075289154 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066374238 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080627366 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080918656 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06481035 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083162665 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071348877 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080061512 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066667462 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066809164 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064069484 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070402405 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07666437 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067343791 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066755668 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068483339 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085992246 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066639042 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079961428 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069438599 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068742267 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067710196 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070166142 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076017438 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066796599 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085478098 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06743435 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082928951 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082215995 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079510927 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082160452 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068263964 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079920272 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080415263 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069039549 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068107085 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069810889 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082623116 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06515971 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067684497 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077375501 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068338368 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089170533 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089263721 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068281987 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075509507 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067257385 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067020303 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066492536 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088856413 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06946761 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066567492 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070628593 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069606382 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065202058 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065712711 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07020197 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06461064 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068106677 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069341557 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069631135 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069250729 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083382862 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069020545 seconds)
  done (took 8.800925527 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069049262 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067927946 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069817799 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067827419 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067434151 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068459857 seconds)
  done (took 1.981743058 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093722397 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070027496 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080585177 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072638591 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104040056 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086983124 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08694005 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078899767 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083918409 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078737915 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086988335 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089330535 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092640911 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073097426 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086644187 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071952399 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086909039 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07577012 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078355683 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072922772 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086254579 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072803758 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072998857 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081952989 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075831954 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072135256 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067208439 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078505643 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078478539 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07860319 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072702184 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075662924 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070241694 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078358847 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086879473 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07075816 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07174266 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077292683 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072196082 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075193744 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088017899 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073316119 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074521677 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077615481 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078392446 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070576273 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076916845 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07576429 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085852717 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076933677 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07718292 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071839697 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075108577 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076733364 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070871275 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078631734 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077629152 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086790232 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072395212 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070581549 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068556781 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075251509 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077443295 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074999316 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078607331 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076926014 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070355537 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072118181 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072448144 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071353537 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076762879 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06863096 seconds)
  done (took 7.135913341 seconds)
done (took 28.377280392 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536704562 seconds)
  done (took 2.075989193 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.602172639 seconds)
  done (took 2.162226004 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.595450296 seconds)
  done (took 8.157256517 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.392660632 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.475623488 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.68923883 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130539937 seconds)
  done (took 3.296038708 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673312772 seconds)
  done (took 2.243900122 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208133321 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195672012 seconds)
  done (took 1.986678086 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376290215 seconds)
  done (took 1.94056354 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.113064604 seconds)
  done (took 2.684895129 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26329504 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162994582 seconds)
  done (took 1.99535295 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.458929297 seconds)
  done (took 2.025600005 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.842861855 seconds)
  done (took 6.409949615 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205718687 seconds)
  done (took 1.815121973 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238692951 seconds)
  done (took 1.807213489 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.701928784 seconds)
  done (took 3.268875995 seconds)
done (took 43.436388185 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079508183 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080513776 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080923534 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077556349 seconds)
  done (took 1.875044353 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076874953 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071898241 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076211354 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071794498 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075869328 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072574183 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073800369 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076082041 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071954611 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072500664 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071684081 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071966529 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07442462 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.0738516 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070471238 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074542797 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075838233 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072113845 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075114633 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072393837 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070332022 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074144987 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074718119 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071336937 seconds)
  done (took 3.331864278 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077684925 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072467032 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07418613 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071406193 seconds)
  done (took 1.872311759 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076667484 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091387813 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089304648 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077176531 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092236194 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086147007 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068505022 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068414798 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072511451 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076344488 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067210774 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.0949766 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087081533 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07608934 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078611932 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065736101 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068053857 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086533443 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.0767026 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077312936 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069483627 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076427184 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067163738 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087535873 seconds)
  done (took 3.453413413 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076635452 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103246026 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076601173 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086660487 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090296822 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064576387 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073998602 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089148196 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121851508 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065157073 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069421172 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065268877 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072467058 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064614486 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075979544 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103725364 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10748234 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068366246 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095167714 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064881338 seconds)
  done (took 3.222278497 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072837208 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069172791 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065285719 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068077916 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076547098 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072042387 seconds)
  done (took 2.014805214 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067777827 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067055805 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067167703 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066631362 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071334848 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066783507 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065284527 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067017214 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066890104 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066545932 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065705344 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065434864 seconds)
  done (took 2.388107661 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.169662821 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069061855 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068654904 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065876408 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070072893 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065936096 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079258644 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067024668 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089669516 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06574346 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066338902 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067988695 seconds)
  done (took 2.531746175 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204572271 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075674411 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236566964 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136583905 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111342199 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115261665 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103052483 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113104396 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142882685 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101645479 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167726071 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164864692 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106465001 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136592828 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088571853 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096956848 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155442963 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161826384 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103168834 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165427463 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143305501 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123760156 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146885803 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100798984 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105529438 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121745226 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071130292 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079474438 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169476219 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131132498 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146377316 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110658248 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092928909 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176228241 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170638296 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142031043 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133371883 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083132051 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100830919 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133085879 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19843726 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088082935 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161798208 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245802724 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080524662 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133677278 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120429382 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120261943 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107087064 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09014738 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145934487 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182513862 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13887771 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087488063 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112050359 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115434585 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116053336 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102890121 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182401101 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160776115 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126662639 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07105926 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098540461 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154450011 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131145069 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108743545 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126194138 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092231501 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133277872 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153440493 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117911591 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142306983 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128611163 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087912738 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11858987 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138946482 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127585281 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16944316 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124030566 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072478872 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124679868 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103294342 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081597204 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140890933 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075326738 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174097406 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098109662 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105744648 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112269532 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10845157 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108934661 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160664429 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2846923 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104416204 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065146053 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103493723 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120698431 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14771266 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086666357 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108317111 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115973528 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078365853 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138991086 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075567084 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12408337 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074720092 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125678993 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131720197 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075530818 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121172104 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101083999 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099759347 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134400163 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160030865 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08924538 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081672604 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166011387 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122637088 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103823944 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144183199 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154892813 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098742233 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101676009 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148937561 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17971225 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089344576 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162219295 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107130076 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083201674 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086908771 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123237222 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112313936 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122331179 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081729838 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118148428 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167691832 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074747942 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0949067 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133162503 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078530253 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08036151 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102245405 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100149984 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094191058 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099508163 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103540829 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13670687 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122950194 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103854178 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12438135 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09744717 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165544129 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086685185 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.097938258 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101465101 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067910657 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.132118083 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152211473 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077396143 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158298534 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119881448 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101970422 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115788225 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080383672 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136066462 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07639315 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068131229 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138279157 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106941364 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10657219 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.145991368 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101355797 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.122191116 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.114830328 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130124352 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127302332 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12513644 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102441101 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085435215 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108038414 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121857525 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071087478 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088232802 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07745199 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100782125 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092306237 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080903954 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137093001 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12033501 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096769605 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108671559 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092878073 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142249126 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073874007 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124159457 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115793929 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08976866 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.142470938 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143325035 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124066356 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095017271 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134956418 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067483721 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.328264965 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090833897 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126227964 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085087824 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084811565 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119353241 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148905948 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130174384 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140111336 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112644024 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121911946 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155196388 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070332793 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117103035 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149257918 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121679723 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102252235 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090714985 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099964716 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144317363 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109910303 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184222408 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114761866 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126777246 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153531199 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099355974 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079940488 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102974126 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135132779 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104737148 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144331836 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099367657 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088354179 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109897769 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074084229 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099959404 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127609556 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119877296 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135731892 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.119781276 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132447197 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076978772 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117639829 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12110393 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123271774 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064148245 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119874165 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160015705 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092921426 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118058425 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152730721 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079177927 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123819091 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.325971584 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146083519 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084899679 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109896971 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118271077 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128252173 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120124984 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141347671 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10846995 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134961413 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109552304 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084885567 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08693621 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096774286 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104448387 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094196515 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10836217 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114602493 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094135407 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131056901 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101997215 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108404298 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117274787 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096074479 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089251861 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096118742 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173452498 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11867525 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170551614 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098262318 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144731035 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164034801 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074466081 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078929599 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077622525 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139140696 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083394832 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130463931 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097015607 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104864814 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123863566 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141517609 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094838481 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067994592 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10794649 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134125585 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111556757 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098151286 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102804774 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161759293 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099368745 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078786644 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112994403 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103884132 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102028713 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319299236 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061375509 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097474989 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075616501 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080209481 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127747026 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153712254 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080544191 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100471206 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118586533 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11017884 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127070504 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10152944 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098463133 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114090639 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149268311 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128985028 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089841485 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112257703 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129225817 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156352208 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107612452 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095237276 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170934601 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151889503 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160338504 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088133837 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114307234 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113485529 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108122057 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139421355 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082947291 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163910996 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081692966 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135882278 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104073125 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090409486 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129740276 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115244166 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087479654 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147868221 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117622771 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082605943 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077414258 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117711541 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120104116 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106035495 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075491304 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138013742 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072584637 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13157371 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168186434 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226467176 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105940416 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09719151 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079845533 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108539246 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102715514 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088862413 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096741844 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173045716 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087928641 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14937222 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141278833 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113293358 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136448365 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099612789 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635475861 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07735723 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151322232 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116184057 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172941431 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097160346 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117297791 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109092298 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123167666 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143698748 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105092603 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17484998 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131545001 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116325774 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079679361 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101927545 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102863725 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088921183 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104652173 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113222009 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115778147 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093208203 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116195046 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122901744 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08191918 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094960224 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155477779 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117263954 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144553494 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140006024 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084894008 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117684006 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137125433 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079234183 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121655955 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151592105 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105896118 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243027295 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081921192 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102967022 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17072547 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07339243 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163516542 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120335012 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108802152 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113387994 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114351585 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131994869 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108054231 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121236944 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093859273 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110059345 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112297248 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081588683 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076448258 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103636173 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111438981 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096516394 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09763045 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095542998 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15088643 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070637179 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095545942 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10299766 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145246458 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174023286 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087726976 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082545215 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118749358 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112574997 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113110105 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12057209 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079243236 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082300733 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081631525 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076798572 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10841324 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112075734 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103862615 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111492932 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164600028 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082660674 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220834824 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095029394 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105372757 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069220979 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078524941 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095173238 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097105782 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107937437 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100276356 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167845239 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093730426 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089515508 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091970327 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.2179456 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082729207 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128482252 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110857268 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118913516 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097849274 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061797588 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109798253 seconds)
  done (took 58.587075252 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108203513 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08169938 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096427598 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149105483 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121686091 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212009584 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157259485 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198884744 seconds)
  done (took 2.83242962 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068531375 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093575249 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099005327 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082348727 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066822752 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06751022 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224595697 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079937883 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065857794 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087926939 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078258815 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067984519 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.417478322 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065408162 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066743105 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062243448 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067119784 seconds)
  done (took 3.462620348 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.365829656 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.60219001 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372441818 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072636223 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.860842449 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090007457 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.049596677 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128245941 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072885134 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525644728 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.69893494 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123717164 seconds)
  done (took 18.669905148 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075892225 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06911428 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083713774 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083544646 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072207163 seconds)
  done (took 2.091159143 seconds)
done (took 107.937707448 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079269182 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.388607492 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053228747 seconds)
  done (took 2.177325557 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082493081 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084110625 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083952698 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082510856 seconds)
  done (took 2.048763378 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074106791 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075719858 seconds)
  done (took 1.86104451 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223120126 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.15674925 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086005974 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082251643 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077957438 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077646237 seconds)
  done (took 1.962230083 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072374949 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074507928 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071918102 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076014969 seconds)
  done (took 2.012389019 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075821442 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052334415 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05458606 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055393829 seconds)
  done (took 1.953161826 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.0854602 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079255167 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078593961 seconds)
  done (took 1.959382227 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100174143 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083895454 seconds)
  done (took 1.906929545 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081811795 seconds)
  done (took 1.803553688 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098254645 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112948007 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130012305 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10933046 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136951211 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108593006 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084878024 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085981996 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076581793 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087014875 seconds)
  done (took 2.755527595 seconds)
done (took 22.692178945 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077233273 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.3671267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360301849 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089138134 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667336141 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355460027 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.021947409 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091316553 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112902051 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067742761 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08335007 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647890715 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.973980893 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319140721 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961916404 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.41847058 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648098218 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067973498 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067030547 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067183038 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.004278085 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066690247 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067159522 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067753432 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648766596 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371024625 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067851645 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.412499086 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067641175 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069185848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354675857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067576172 seconds)
  done (took 16.432173305 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070174205 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11674242 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072969515 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083627997 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070980365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069695571 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070679265 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068671931 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118792869 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067646291 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083744204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067135671 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071404879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068100073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086367164 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068236007 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068281588 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068095629 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068215727 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068111964 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.0859948 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067138817 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068094954 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06826247 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06789109 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07889186 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067851761 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067696855 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067989466 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069442711 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070653249 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068776031 seconds)
  done (took 4.111178324 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114830846 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124729592 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074237082 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102549894 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111853072 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069519426 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142342649 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091931036 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126673073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067715122 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083688607 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067238987 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100829019 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068677501 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086849425 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068036376 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068901029 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068981227 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067876057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068073365 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087103965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067748238 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068262786 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068640762 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068251108 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080992921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067984603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067972369 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068623794 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069883005 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07157896 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068192807 seconds)
  done (took 4.364667475 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072373433 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074753109 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082243471 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082985691 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069039392 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071477462 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072396011 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069177101 seconds)
  done (took 2.333959342 seconds)
done (took 28.969926984 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07846819 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068044875 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072438662 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080730961 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072919155 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077730144 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066627423 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074065828 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071765623 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072113993 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074532295 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067290435 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070381189 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067077931 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073081591 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067326466 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078712444 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071316366 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078271292 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07943937 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069579463 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072601852 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073730994 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078909708 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07861874 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078444967 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077394387 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072161939 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068729737 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07021979 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076510407 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083721329 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068563165 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078698802 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067577227 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067525842 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071109171 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067837385 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079177803 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076048601 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069103584 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075509079 seconds)
  done (took 4.805048906 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086942655 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090957195 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083752216 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061005297 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067107215 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064771438 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087850274 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059313576 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059268349 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087257744 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055300495 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059003491 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06253687 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053643332 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059262737 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.0565547 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060912291 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055674046 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059154073 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059169513 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057888575 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053938766 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059606307 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062574993 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058570463 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061624817 seconds)
  done (took 3.431495337 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073692973 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08451561 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087146489 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12537984 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102345532 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076012823 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077338607 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091742732 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08499224 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066403876 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070478302 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093152318 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087742486 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073282697 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067298094 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08397238 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081663877 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068312858 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073245793 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090158829 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083892231 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083356051 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092081317 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080335615 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066202834 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069014051 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070531269 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08022505 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071820878 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07555048 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07083596 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071107392 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069158303 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078516669 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07078622 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068777069 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089855039 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076461727 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077562075 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067821695 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070280445 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068620462 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100391297 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121814979 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067024071 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074009632 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074426438 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076640579 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067030502 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08519672 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078239842 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066610434 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070546676 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066460415 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06727038 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079956495 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069649329 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069417428 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075899061 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070344152 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085477362 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070845295 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082625762 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066808782 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074348968 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066314104 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067878225 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065749511 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091935284 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068446763 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107234114 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068473763 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068021015 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075646183 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074816346 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072859663 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067424843 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081841061 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076896296 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070883866 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075084966 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070353551 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069652336 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086900264 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069548198 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068282322 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067868292 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073199219 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070201741 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068647217 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079697411 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06706798 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070146319 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083391911 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066583833 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068617773 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073306514 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071780942 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066705925 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077861829 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071875902 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06781994 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076255459 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067094038 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069867541 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077456903 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073068138 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066167957 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072143394 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07322549 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067989155 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068772182 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070176 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069358195 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075082155 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073229569 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07160445 seconds)
  done (took 10.604268177 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161772593 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15247143 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07022613 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144120679 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075560264 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078182793 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146330317 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093502717 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067316341 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067925829 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068500961 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109069869 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105056571 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115081922 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077935488 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067549972 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083083697 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113341439 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148628235 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142301781 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083126073 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076526897 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069971841 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069100843 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070549646 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077895696 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085059355 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076188367 seconds)
  done (took 4.475863119 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081084883 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096359069 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074534801 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089316476 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090980331 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068210801 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069960889 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069337125 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080202787 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078703322 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067731659 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072949778 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074307261 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070801617 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068533791 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074987687 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074661095 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069115437 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071477502 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07281066 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077236254 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080328706 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071310193 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066967402 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074536545 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066866677 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064067997 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08460068 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06795952 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089868587 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066248575 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074651171 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080968972 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068464628 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06779438 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067518581 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067273539 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068268698 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069793707 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066212698 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066493434 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057546581 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066931194 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079564649 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073612964 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056836005 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072331817 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072377811 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072452269 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065362412 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070301941 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070571523 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070870813 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074992627 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072370508 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072614594 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068786072 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073648686 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075138211 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06794926 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064710537 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066254231 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072717553 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066146137 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076041078 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072325906 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066121475 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067073173 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069480539 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074010672 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067359327 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.0707168 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065208289 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069509387 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072586789 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069080436 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068616149 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066125069 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067241037 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067571196 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055468312 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067315847 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053809312 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070017828 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066019538 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066033788 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067509807 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072374988 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079959497 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068448619 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073566894 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068360692 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066438912 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070705984 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060146666 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070001959 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082934652 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082758767 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067323298 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065739185 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081383376 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07209766 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066311138 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056090895 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074640823 seconds)
  done (took 9.23108984 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088831509 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069812336 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083204015 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090243543 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085770691 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074037638 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076357773 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068528614 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081801419 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073382695 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07671161 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067841279 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076953602 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076405321 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06946853 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076811302 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071735287 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082555073 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081566294 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067965899 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076048477 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079584154 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088993732 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080360277 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078167994 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080356791 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088543891 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072000735 seconds)
  done (took 3.969677907 seconds)
done (took 38.252959039 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.8331764 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.074281402 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.806429502 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.191300059 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.890268413 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.997604755 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.861269049 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.799409332 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.006875198 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.839486733 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.046532775 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.840996701 seconds)
done (took 65.942126513 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.826576194 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.945108496 seconds)
    (2/2) benchmarking "String"...
    done (took 2.070351046 seconds)
  done (took 5.754807385 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.132953989 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.38814935 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.033057669 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.797891714 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.804716983 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.032961068 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.606697045 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.335032719 seconds)
  done (took 30.738410648 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.949646137 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.025286891 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.500354464 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.561133051 seconds)
  done (took 15.826105429 seconds)
done (took 64.096570312 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.838175638 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.850281443 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.83114041 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.784071522 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.858208791 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.809061125 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.931470725 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.805864983 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.798506346 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.785187657 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.800102796 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.234565575 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.809854325 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.978896396 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.801502146 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.810257501 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.864938419 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.230835976 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.957816072 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.816823858 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.823142248 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.835688401 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.801853726 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.807305186 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.836298241 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.800934404 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.237510225 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.803761048 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.616637882 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.806745812 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.846463524 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.163412257 seconds)
  done (took 204.715714135 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.801249174 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.796689842 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.870517381 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.831509514 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.205689017 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.992146012 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.927441471 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.311513839 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.804305931 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.81026191 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.913672739 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.801027364 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.93880934 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.819054461 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.840963944 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.899015636 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.045568157 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.971906903 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.847695486 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.964438564 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.815444738 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.714227446 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.690016839 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.908766609 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.817891598 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.802823134 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.814574051 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.819256831 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.005237915 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.017179628 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.821516966 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.806541528 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.010555303 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.677107722 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.8291517 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.807375119 seconds)
  done (took 170.493851962 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.967188769 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.806428905 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.802937365 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.805331998 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.811141506 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.804886283 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.931948764 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.930559082 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.267639787 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.238093374 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.805279309 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.852999071 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.638039157 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.804217662 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.872439083 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.815648231 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.803308568 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.817727964 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.832345042 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.80602956 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.805699092 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.932776543 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.816723095 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.021285507 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.812988517 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.807877208 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.809690369 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.178204864 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.804760709 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.811104349 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.559133111 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.054588397 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.80456805 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.80578743 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.806816551 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.708418156 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.890156298 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.806230729 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810370289 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.807254966 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.026836577 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.805820474 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.806665864 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.806843017 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.983858736 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.807531324 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.930304008 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.805842914 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.306148071 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.803842569 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.804854909 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.654402277 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.479932878 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.807325353 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.805197719 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.808455559 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.80702041 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.806270979 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.811944261 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.452788838 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.880369974 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.81104352 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.81126674 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812476371 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.808527755 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.871855257 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.809450867 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.241591221 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.869064332 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.028857867 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.928156996 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.807637396 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.874104236 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.900930727 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.807508771 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.807440414 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.807713059 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.806450749 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.889805839 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.806627825 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.933019175 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.818467181 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.807956206 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.857647118 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.879678981 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.808567044 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.697741526 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.809278449 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.80909565 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.136293898 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.87602178 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.808472895 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.807513955 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.806746843 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.808474914 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.933159467 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.932177798 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.581256156 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.812006389 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.415654378 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.809903627 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.942673268 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.807983064 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.807865184 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.99853269 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.810124222 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.893113125 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.813533928 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.812513971 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.810287889 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.841952929 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.809408439 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.867930649 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.809082366 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.180391534 seconds)
  done (took 406.115773852 seconds)
done (took 785.090630406 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.476115237 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.435124759 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.55058119 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.455978897 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.430886144 seconds)
  done (took 14.095057483 seconds)
done (took 15.846277804 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.900496271 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.901494993 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.834885047 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.898996523 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.83009972 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.900907093 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.878844491 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.835739315 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.866720238 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.836093517 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.869478196 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.834579325 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.822417465 seconds)
  done (took 25.958919709 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.049406987 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.04025807 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.881697054 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.036530075 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.858053858 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.041469554 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.96877385 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.959546268 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.958200868 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.828991125 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.827538797 seconds)
  done (took 23.202427604 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.051273927 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.043220611 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.885977296 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.045573623 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.860537054 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.043731284 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.979911168 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.961015398 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.976281217 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.826223612 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.826200433 seconds)
  done (took 23.250016173 seconds)
done (took 74.161130663 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.819677744 seconds)
  done (took 3.567889959 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.84203336 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.981740859 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.828127155 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.824218444 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.822614216 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.82021031 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.823949865 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.822945881 seconds)
  done (took 16.516228061 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.819614089 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.819012968 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.816293953 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.817623871 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.816745253 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.819171348 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.819687999 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.816419077 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.819660529 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.821354166 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.82124389 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.81886794 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.823789519 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.818542207 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.817620395 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.819656642 seconds)
  done (took 30.856682309 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.824783575 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.819488862 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.817721424 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.82022048 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.822266225 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.820825639 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.81955933 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.816945503 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.817994989 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.819574284 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.818319956 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.817171658 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.820087343 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.817318338 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.819250658 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.819449214 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.820291595 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.818283576 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.823786792 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.818957216 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.819325726 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.818974114 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.818318863 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.824079686 seconds)
  done (took 45.427561588 seconds)
done (took 98.11780618 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.693246685 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.426050311 seconds)
  done (took 8.871404662 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.823112443 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.821785496 seconds)
  done (took 5.440018435 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.821300695 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.822903833 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.82332799 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.823374936 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.823375806 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.822103847 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.823262273 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.820983358 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.823581267 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.822258526 seconds)
  done (took 19.979258196 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.823748542 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.823763957 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.819847394 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.821400127 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.822713497 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.821333229 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.821487305 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.82265368 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.822777443 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.8218877 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.823761535 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.820674618 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.822801822 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.823113857 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.825482041 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.821026846 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.820723728 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.82071063 seconds)
  done (took 34.555068455 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.823074159 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.822050293 seconds)
  done (took 5.398456467 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.820509815 seconds)
    (2/7) benchmarking "second"...
    done (took 1.821992154 seconds)
    (3/7) benchmarking "month"...
    done (took 1.822113289 seconds)
    (4/7) benchmarking "year"...
    done (took 1.821757869 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.821095923 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.821256326 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.820442745 seconds)
  done (took 14.503904462 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.823954466 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.987786773 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.061984268 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.477129258 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.827479744 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.826401588 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.770125969 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.828758173 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.830810348 seconds)
  done (took 20.188759043 seconds)
done (took 110.687273044 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.676848567 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.821849274 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.210006207 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.878663158 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.871786677 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.162857421 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.83816597 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.045746912 seconds)
done (took 43.260796482 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.842451752 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.399368444 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.426151321 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.230397891 seconds)
  done (took 12.81262835 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.809731678 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.350188211 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.859544772 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.416019107 seconds)
  done (took 20.21644534 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.191510565 seconds)
    (2/2) benchmarking "read"...
    done (took 2.188189964 seconds)
  done (took 6.144364447 seconds)
done (took 47.776210052 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825856589 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.825009471 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.825308891 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.824483702 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.82968835 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.828238497 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.82475057 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.823280437 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.829474004 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.826215742 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.828309547 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.828607497 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.83079567 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829423749 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825009756 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824124863 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82836808 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.827937489 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826361465 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.827469409 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82700687 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.828202471 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.826323458 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.822596257 seconds)
  done (took 45.601137045 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.827649021 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.826827345 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.826327442 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.826552095 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.828725813 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.827753486 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.829123377 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.824540326 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.828069951 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.82845783 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824530258 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.824895354 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.826912505 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.827648952 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831009443 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.826366418 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.827455306 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827831581 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828016252 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.824560185 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.828440964 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82886861 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.827478547 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828380297 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.828665978 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.824378638 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.827751041 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.826822422 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.828364379 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.826284587 seconds)
  done (took 56.578350206 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.833101093 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.838216573 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.82919921 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.82851647 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.828824443 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.828154236 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.829527172 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.828847968 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.831934373 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.831347009 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.828228326 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.830056233 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.828955349 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.831055435 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.83037049 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.830287538 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.830043796 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.831001961 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.829458328 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.829906239 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.829387422 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.830540739 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.831314162 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.847800895 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.847887134 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.849665147 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.846732464 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.848246423 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.84629969 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.850824868 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.845157824 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.848147626 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.851614074 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.85455572 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.851174318 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.854947789 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.851842859 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.854653258 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.847588361 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.84719669 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.849749287 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.852283683 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.848579166 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.852717069 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.848624418 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.845858099 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.844979827 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.849229395 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.852843623 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.851157971 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.850867684 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.845508274 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.851029337 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.850630426 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.847921022 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.850306862 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.850639347 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.85199173 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.852984184 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.848912298 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.851840403 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.851302145 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.849253247 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.850407315 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.854379835 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.851049293 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.852067776 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.853633548 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.853548351 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.855187324 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.855998381 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.849620928 seconds)
  done (took 134.530790192 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.851621882 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.853139218 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.851640192 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.852584602 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.848655661 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.856294477 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.847237957 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850614444 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850305741 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.850825071 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85211727 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.847947534 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84965721 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.854799684 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.855022748 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.850936942 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.849102434 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.851283647 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.853400816 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.853863091 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.854139986 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.850817494 seconds)
  done (took 42.52562095 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.85459236 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.849535594 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.848817696 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.850907616 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.849294978 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.854434537 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.854631661 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.8520387 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853617433 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.854474574 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851461312 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849038452 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.851813775 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849439804 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849441314 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.849586135 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849411206 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.851220685 seconds)
  done (took 35.110006996 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.851313295 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.852639856 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.851135657 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.852841572 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.849917457 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.851151953 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.856981563 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.855797628 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.856519943 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.855787394 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.857152586 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859099034 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.853697146 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851726112 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853608334 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.853936088 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.857281831 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851293819 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.85532274 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.853985483 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.851426496 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.853431061 seconds)
  done (took 42.565953761 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.856732866 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.857897083 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.850829116 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.847696265 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.854714652 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.851645039 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.850352638 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.853179193 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.857646884 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.857073507 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849513851 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.855751814 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.854828321 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.850764429 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.857615827 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853724041 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.853500403 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.851872222 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.858058319 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.849835946 seconds)
  done (took 38.862538241 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.859058306 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.85932704 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.857728789 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.856874504 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8582851 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.853884853 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.859055237 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.85566614 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855992255 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.854963249 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.85708715 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.85784396 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856423422 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.856743462 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.863072012 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.860787012 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.857679315 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.861044381 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.856343282 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.858514384 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.855754386 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.859156714 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.85957368 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.861863846 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.861395319 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.856048102 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.851746089 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.855742187 seconds)
  done (took 53.808104211 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.853540714 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.852402107 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.850497783 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.85359941 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.853889803 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.855949823 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.851148634 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.852046465 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.85566045 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.853354017 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.859844822 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.854311286 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.860636922 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.858559217 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.852139596 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.853228828 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855106117 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.857133489 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.855623617 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854658195 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.855304542 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.859096598 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.850007904 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.857428333 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850618571 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.858093385 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852723338 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.848235069 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.857924643 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.854433213 seconds)
  done (took 57.432604551 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.877448065 seconds)
    (2/2) benchmarking "in"...
    done (took 1.873698499 seconds)
  done (took 5.543739478 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.851024849 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.860762966 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.854906023 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.849129313 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.852600817 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.861954553 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.855554703 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852446024 seconds)
  done (took 16.630231302 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.862250984 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.862177856 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.856116535 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.862460889 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.865374758 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.854228525 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.863961048 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.859249417 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.859443767 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.852110538 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.867209815 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.863432433 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.856214837 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.855975502 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.855192336 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.852711341 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.855931636 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.857117246 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.856651667 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.853208477 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.854986681 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.858051126 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.862542391 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.850342611 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.852835012 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.87160264 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.857901224 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.857946476 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.857903574 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.854898083 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.85367205 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.848333568 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.851509913 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.850428156 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.854666042 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.854618893 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.857370442 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.858037502 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.859063085 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.857207638 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.85197514 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.854906041 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.852075343 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.851311403 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.853721656 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.849564031 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.850738296 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.847531029 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.851880261 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.857398155 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.854362852 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.852453458 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.854103255 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.851503964 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.857095608 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.856664868 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.847209165 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.854794493 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.862733705 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.867336957 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.865712246 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.862434474 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.855020421 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.849068269 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.863846508 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.876607675 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.857808416 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.850700371 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.852126048 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.849152174 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.863623723 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.867485079 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.86293386 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.852021887 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.850646691 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.853111309 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.85215512 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.858179177 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.85732636 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.85618889 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.848859678 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.855243911 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.860093126 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.873061186 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.850625344 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.853214978 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.851722229 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.853625193 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.854523107 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.863741514 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.853014581 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.848559246 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.85366589 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.853837894 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.850142299 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.856341889 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.852777577 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.852615189 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.849622773 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.860208364 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.855209372 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.861822908 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.863762251 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.853570462 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.850754736 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.861451704 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.861087939 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.852131339 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.870274099 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.855447571 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.853750168 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.852494531 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.860396128 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.849157389 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.857599233 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.865419194 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.855455367 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.858534867 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.856681759 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.859550217 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.866030019 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.892089073 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.859115431 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.850159198 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.861432493 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.868926543 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.853835308 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.852295676 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.852358351 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.853977149 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.850266532 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.855161383 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.857366742 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.856451322 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.856055533 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.859259943 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.849717392 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.855480499 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.850851114 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.857682134 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.858731251 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.854955659 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.85587358 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.859345779 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.857547691 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.852448487 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.858218029 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.858260795 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.857209613 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.855481388 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.850657581 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.854389583 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.858762662 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.855507549 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.854387528 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.854362523 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.852176047 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.862083508 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.859896375 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.854762123 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.860977765 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.862241405 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.861100504 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.858266493 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.856305124 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.855447561 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.858372731 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.860091034 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.854529556 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.858915847 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.857607452 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.860866386 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.868463165 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.873050517 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.855317843 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.856851533 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.860300171 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.858756486 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.856602623 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.853846961 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.859054871 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.863779603 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.861598981 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.862958284 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.859149521 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.854973016 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.858006434 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.857784842 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.857882115 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.867243545 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.861740748 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.868728675 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.872235398 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.868668105 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.862002795 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.861100412 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.855322912 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.866191233 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.860525522 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.855986299 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.855056816 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.856166181 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.859370692 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.863994726 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.860914747 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.857976648 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.860300846 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.857768801 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.860725243 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.859008079 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.853993001 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.85893641 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.860444495 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.855108448 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.864121908 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.861969956 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.859274875 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.86030059 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.856939818 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.85602219 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.858612601 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.872517084 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.862802872 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.858104385 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.862717123 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.862832556 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.857415541 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.864661944 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.859350204 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.862759618 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.861424627 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.864623055 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.861467674 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.857126239 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.863092242 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.858007877 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.861127783 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.865892664 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.859000587 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.860464178 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.864173879 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.870819238 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.863919616 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.863837215 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.862271024 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.861806669 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.864209768 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.870811458 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.858226206 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.861811989 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.865440728 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.862346355 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.859463915 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.868374997 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.860699472 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.860087709 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.860500827 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.860679598 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.861367186 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.865149912 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.866606994 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.870014132 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.865555898 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.867784567 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.866237666 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.868649117 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.867138537 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.86766918 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.867449235 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.865834856 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.862019328 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.864399069 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.863959159 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.875545873 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.874055484 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.873890852 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.868243565 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.865519686 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.867078215 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.869709362 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.870123916 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.865367226 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.864329502 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.864738424 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.861294072 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.863284354 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.862618892 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.870227189 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865783027 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.866947887 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.869543154 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.863101798 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.859508022 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.86926736 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.86095932 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.864835807 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.863096164 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.861502615 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.865180142 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.862880712 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.864817668 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.866853112 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.872991299 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.864450458 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.864687851 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.864723554 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.865090871 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.863153521 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.866011684 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.861197583 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.868531373 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.876074475 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.864463128 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.877126192 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.864832216 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.871784403 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.866534854 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.863146858 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.874005499 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.858321217 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.861783293 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.86324384 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.861706077 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.871155932 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.865224641 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.869402521 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.869389934 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.864365798 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.865540304 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.864019214 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.86459173 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.861491877 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.86609087 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.872287318 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.868915886 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.869599258 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.869510967 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.863765814 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.86176331 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.860942454 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.86485271 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.86793623 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.867770404 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.863474348 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.865727779 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.868182774 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.864024674 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.865455466 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.864755714 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.862247947 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.860393337 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.874050171 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.87050989 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.873606919 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.863340491 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.873755447 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.867678548 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.872386023 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.869588442 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.866641405 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.867522462 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.863651207 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.864383113 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.866742362 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.8695195 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.869243229 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.868830413 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.8725586 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.866746462 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.865674388 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.866774871 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.874684543 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.867666256 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.879989852 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.89796114 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.871836969 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.874823495 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.863562948 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.874693585 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.873081143 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.869598381 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.860271782 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.869379537 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.8771408 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.878323361 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.864357227 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.870895328 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.87467544 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.863153752 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.869166763 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.867571012 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.868577502 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.862840902 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.871385832 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.867850277 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.867548438 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.870269143 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.867930919 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.864851211 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.871209269 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.873063536 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.868217783 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.871465807 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.868450823 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.863170603 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.871534361 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.871085299 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.865862171 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.865421232 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.867859134 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.871313664 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.870708553 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.878403692 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.866525833 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.866071378 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.867267391 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.869472553 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.869313563 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.867176908 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.866065284 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.867907561 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.867863784 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.866965149 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.871454168 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.86690531 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.865089954 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.869171177 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.868576274 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.870581 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.87255768 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.867613427 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.862677911 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.867665664 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.865125255 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.867605884 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.868769564 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.875447959 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.872056137 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.880235121 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.881441747 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.87281495 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.866221016 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.87419556 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.878565965 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.866340607 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.87145733 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.867115128 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.868203253 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.870788762 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.871685711 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87058581 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.873449665 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.867293106 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.871247285 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.87856129 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.872366824 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.868971312 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.866306594 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.870596152 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.87138701 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.865326692 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.870734989 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.870291603 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.878584945 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.870440976 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.870319742 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.872538968 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.869536587 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.872158135 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.877343796 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.868089386 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.869073386 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.869556682 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.871151552 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.872031604 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.867898164 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.866947434 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.871915476 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.865652004 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.871258851 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.876687982 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.866473752 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.871829505 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.870014421 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.86700348 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.872803297 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.87224819 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.87078373 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.871630568 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.873562721 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.869602326 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.869943149 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.874780229 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.871569877 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.86776579 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.874050432 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.870949529 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.876235163 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.890135282 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.880512219 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.867003547 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.871982667 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.873963872 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.872335312 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.869146879 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.875448571 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.870948178 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.871643912 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.870344368 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.870090918 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.870679296 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.873774586 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.894310572 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.87364582 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.874775805 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.873083569 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.876805159 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.870453497 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.869105837 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.869114677 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.870193978 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.875156371 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.877937216 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.873039432 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.877149868 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.870117207 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.870047106 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.878054915 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.875238532 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.885342799 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.877867816 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.873071827 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.873802868 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.878139384 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.891863057 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.877204258 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.885382644 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.906109224 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.875138596 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.873119711 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.874985383 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.86858033 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.874898501 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.878439662 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.878088485 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.875360937 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.872363917 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.877704391 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.87872602 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.879966927 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.877402508 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.877630991 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.872582001 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.874951292 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.87226394 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.871121074 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.880252277 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.874808337 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.876832425 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.877189949 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.881090797 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.877158316 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.888104948 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.891121039 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.884250248 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.873206352 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.871078581 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.878668742 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.875807752 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.882786961 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.883054836 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.876146245 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.880619444 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.877114142 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.876873504 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.872542959 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.87644882 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.877748505 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.876160757 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.873319433 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.886434198 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.887763816 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.878844936 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.878136051 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.873784958 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.876592926 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.878699237 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.876067714 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.874841062 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.884775523 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.878922549 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.879544398 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.873848489 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.870871365 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.879453 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.883350527 seconds)
  done (took 1113.656599477 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.879871627 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.879313634 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.87632262 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.875766064 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.877189255 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.878528922 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.872246068 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.874824151 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.876065256 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.876634335 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.879503694 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.879637826 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.877905631 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.873366255 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.874456789 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.878403081 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.876996532 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.876371576 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.875348998 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.876727001 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.87791627 seconds)
  done (took 41.224920802 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.886373893 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.887077893 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.884452245 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.8890816 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.885292955 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.890863132 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.89002319 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.892763082 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.891916159 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888958191 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.891690942 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8927691 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.889670786 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.888175045 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.891174341 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.891299219 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.890791987 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.885589959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.892555969 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.887880616 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.892488363 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.887400033 seconds)
  done (took 43.388339062 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.89591057 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.890036002 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.890828037 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.87696044 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.874885096 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.871289622 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.876762854 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.875743858 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.874889731 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.871368831 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.869707614 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.871646677 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.877646671 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.87659357 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.871066699 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.870241234 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.014989563 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.871044304 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.869857937 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.870376199 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.866370032 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.873627764 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.866962674 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.865615246 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.870269077 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.869541523 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.868178248 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.86733739 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.866693421 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.872736451 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.869176872 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.867277145 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.865307899 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.86674834 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.864174824 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.869050227 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.871768818 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.865348343 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.862514561 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.86865332 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.87715471 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.890223024 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.868428919 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.872298905 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.865740155 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.865307189 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.870162086 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.875340636 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.863946334 seconds)
  done (took 93.691764869 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.867944532 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.868939462 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.866155277 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.864999905 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.867593458 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.866467844 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.86722036 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.869480851 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.863291797 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.866285217 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.870078148 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.861373254 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.865566032 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.865748081 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.867222932 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.862788789 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.866568313 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.863740733 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.866888224 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.866369392 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.866348512 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.867979887 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.869868899 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.864926557 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.8684939 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.862098016 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.865810968 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.867445205 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.8665686 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.863497142 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.86765621 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.867956146 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.864865416 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.871262525 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.867690764 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.867234283 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.86736016 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.865967243 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.867721843 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.862315104 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.869851627 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.867730932 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.86991744 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.868089695 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.871895396 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.867653319 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.86610423 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.866414901 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.864687586 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.870363703 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.867873895 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.864300002 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.867095804 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.863282843 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.870794678 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.864567881 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.864854563 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.864717512 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.867504838 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.868442885 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.863038637 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.866814524 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.865151085 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.867499387 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.865404958 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.867447429 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.867429551 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.867824399 seconds)
  done (took 128.734727769 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.872145614 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.87090274 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.866734839 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.870130677 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.868609367 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.867612178 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.870141707 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.869762123 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.865309936 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.870578951 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.867469411 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.864760596 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.872437803 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.863442071 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.865785316 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.863233764 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.864839127 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.867280135 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.865852199 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.864142595 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.868777986 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.867973794 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.864326979 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.871702503 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.863605877 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.866457925 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.86262385 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.8678726 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865523276 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.8644467 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.865479672 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.864244944 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.864073312 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.863385464 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.870029287 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.866443968 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.864985497 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.86465931 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.86413105 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.867373495 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.866108889 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.868044029 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.866451153 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.863635011 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.866363199 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.865140302 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.866849042 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.867447623 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.867931677 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.864607907 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.868529997 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.865574414 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.867960941 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.863625223 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.865261735 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.869180234 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.866308817 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.869561418 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.868912435 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.868184698 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.86419212 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.865241645 seconds)
  done (took 117.531903869 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.86609407 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.868244745 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.861707583 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.861330552 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.867326604 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.863126329 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.865717119 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.868231087 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.867686948 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.865736517 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864980041 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.863537024 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.863456395 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864492751 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.866304663 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86657378 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.867353354 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.867124211 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.869475407 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.866401301 seconds)
  done (took 39.110531088 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.864737173 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.867949346 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.861611588 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.866400016 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.866245983 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.866903721 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.866784051 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869534554 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864698285 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869697182 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.868666671 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.867932576 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862855397 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.865326423 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.878173941 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.86497286 seconds)
  done (took 31.667197361 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.865174266 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.866426613 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.870863836 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.863508058 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.865188245 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.865272361 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.869672201 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.864422435 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.868337699 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.867437829 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.865732392 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.864725479 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.864334384 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.871209134 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.862488137 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.866788486 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.863322733 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.863432731 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.866192196 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.864134382 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.864121049 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.856319916 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.863834682 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.866867377 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.85769499 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.857121879 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.86086417 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.853550494 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.855918626 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.860648712 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.858046281 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.859055274 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.857486646 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.860410794 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.8631898 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.858068075 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.858945773 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.863217467 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.858936633 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.859541371 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.861117574 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.858778521 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.861766446 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.858904109 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.854564063 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.86015363 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.857957854 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.856472565 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.857523067 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.85878945 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.860278281 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.863272854 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.858686449 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.860431756 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.856546334 seconds)
  done (took 104.195689342 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.861896515 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.858579578 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.857223338 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.858415179 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.863436247 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.857467192 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.855706352 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.855454031 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.8565802 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.856269362 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.857323574 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.865250996 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.855789372 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.858450954 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.858908692 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.860267991 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.855895739 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.85552465 seconds)
  done (took 35.239621272 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.856951527 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.854414884 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.858345283 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.856578706 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.856072223 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.859206744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.85595736 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.857546289 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.858315259 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.854150342 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855306731 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.854207346 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857988709 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.856908324 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.85510599 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.854280512 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.85349584 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857898971 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.850998048 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.860923568 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.859831731 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.857398895 seconds)
  done (took 42.627000449 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.855238121 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.857335746 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.872711347 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.875259849 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.875003255 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.893550151 seconds)
  done (took 13.017555703 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857287323 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856936192 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.855331208 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854305852 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855515927 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85335436 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849850205 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852435523 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853679101 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851232002 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856649037 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850117906 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853433537 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848437075 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851669406 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850647245 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852812101 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854164278 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852249833 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850912913 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849857596 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856750006 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852187994 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848051054 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848981761 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851850432 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852274356 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858349899 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850174385 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853131491 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852892633 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848771444 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851444023 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849059716 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854051679 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853264727 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849718178 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853265464 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852655505 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851501403 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.850721009 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854042357 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854630861 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853093745 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851474211 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85449897 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849381255 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85238836 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853284789 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853577751 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852770967 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849353079 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852470738 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852445483 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856283126 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852664486 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850056183 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846380842 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852362048 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852413384 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846235141 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849312447 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84837937 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851611286 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851563538 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848044514 seconds)
  done (took 124.025460253 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849642795 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.849755633 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850788449 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853231378 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850128221 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850583298 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849472373 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847605733 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854006763 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850231748 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851654912 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849520027 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847437976 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849359264 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847494917 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843959164 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845720752 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845801089 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843779221 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851141442 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844354942 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845056633 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846368772 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846571374 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844105289 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845659894 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844492747 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843091867 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843536805 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846109964 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846664993 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844288577 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843538505 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.842016744 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841965339 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848625016 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842866779 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84185413 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844863228 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844783674 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844437717 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846386356 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844218646 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848623175 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842605651 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845666425 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845525564 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841573894 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844945755 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845082637 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844856331 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846479201 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849438232 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845252311 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847702775 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849196372 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847294142 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845441247 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846700646 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846453888 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846603631 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846880955 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849264254 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84427369 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846064955 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8481566 seconds)
  done (took 123.652151141 seconds)
done (took 2582.709750496 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.899004219 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.918066439 seconds)
  done (took 15.594832244 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.012400964 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.961820491 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.847269669 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.871683497 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.846158852 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.875199315 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.864009477 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.847506602 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.848051604 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.845336915 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.850758927 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.030337859 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.848032504 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.849832509 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.848094781 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.941953078 seconds)
  done (took 51.972772935 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.850638794 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.85108964 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.863496642 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.854518654 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.851890598 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.861032391 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.883643023 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.859365575 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.883879078 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.865064106 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.917814568 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.860365182 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.850960713 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.902171151 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.863773881 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.865593778 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.940166465 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.926566392 seconds)
  done (took 35.530335679 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.929028662 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.860470911 seconds)
  done (took 10.57764889 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.87766037 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.845571215 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.867346016 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.855641786 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.857970863 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.84533252 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.845492704 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.849431684 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.847902026 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.852536737 seconds)
  done (took 70.329562658 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.859010223 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.855842699 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.853209745 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.853456362 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.846708094 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.848798761 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.847587433 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.846345089 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.544434135 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.887790738 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.858003404 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.862307428 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.855481961 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.856812586 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.851623047 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.882067127 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.973861554 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.850866446 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.852973877 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.856040326 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.853514319 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.939596535 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.870138141 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.853608836 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.880942519 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.537638252 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.861959146 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.861845568 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.978141709 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.850797451 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.853774406 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.855476132 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.859715815 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.244279757 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.179204635 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.85101614 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.862145352 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.860399558 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.851401647 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.997753474 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.853574438 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.858784641 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.789116602 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.171641643 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.94554862 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.896502598 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.214514368 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.857996009 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.857259628 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.880100114 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.855417903 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.855678078 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.864869879 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.358940217 seconds)
  done (took 131.895298035 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.845971877 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.173138575 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99991394 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.845425282 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117708504 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050373472 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.790564661 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89448205 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.845742217 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.049707228 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.071732336 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.955415401 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.844678207 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.847549766 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.849842819 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.842432416 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.007913379 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.91443169 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.847862904 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.84474067 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873852497 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.056854625 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.974158966 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.846496928 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.866782542 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.057700425 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.967722005 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.955927491 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.427729862 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.844208266 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910162327 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.849718544 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.846822561 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.844054497 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.004237713 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.942762978 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.939232381 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.852506116 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84534307 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.846654063 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.509955609 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045094621 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.94609573 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.989020595 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.092568131 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.051810918 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.493617204 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.845824679 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.497077971 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.009531306 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.061266247 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.057789568 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.971253454 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.848103566 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.089339297 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.848830553 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.846840797 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.086888826 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.079707585 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.955092628 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84827161 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.848585655 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847141141 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.094340267 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.849184482 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.950465533 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.849842094 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.846852216 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.949369773 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.954036204 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.080660207 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060687203 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.882110374 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.175621228 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.33105767 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.06572297 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.919384928 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09202304 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.854029841 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.848378455 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935762963 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.610594107 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.052825554 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.097284895 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.071856544 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882702142 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.450325415 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.848864362 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.044108259 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.035161748 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.047325513 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.092138922 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.00808695 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.175623857 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.850142353 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.853516824 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.051363179 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.985965943 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.854694857 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.210897159 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.085800428 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.41811613 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.879184194 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147472896 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983420871 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.168864987 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.478114593 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.852558144 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.018477183 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.89059175 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.852247377 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852403738 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.042856232 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.660612067 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850689388 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.585667482 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.917891534 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.855072968 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053335557 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.856132253 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061457654 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.855663176 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090706003 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.559205021 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.886941197 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.026221976 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.091790179 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.645960642 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.102396112 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.095470721 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.970404541 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.144435666 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.58415324 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.856295829 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.126385814 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.851444723 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.854537056 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.022535388 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.852466706 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.999866003 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.851581419 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.081018805 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.880149843 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01642878 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854697512 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.087755257 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.889603654 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.907829136 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.852816412 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.976044146 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.85586903 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.843619738 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008331792 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.857206341 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.849620263 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.285327237 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.853778491 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.000784783 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.087093224 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879009637 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.923471841 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.377809812 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.853146583 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946063861 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879859055 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.485719981 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.854070915 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.071998017 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.821859723 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.283426223 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.855712857 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.095786957 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.105421166 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.860416573 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.851695444 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.594504539 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.558315585 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852568061 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.017953607 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.289593349 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.501740233 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058835915 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.855669654 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9832177 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.857294647 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.934320615 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.206145142 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852972199 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.859057742 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.853682808 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.853159812 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.854788563 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065233248 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.882501091 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.374786235 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.99176201 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.072598334 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.167480521 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.07528232 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.900414279 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.855758878 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.135892146 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.860237214 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.920729524 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.858013647 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.880757671 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089502611 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.856972305 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065401858 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.111419768 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.778931353 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906153119 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.858865294 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855548321 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.856351273 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.010401682 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953292391 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.858747756 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.85677097 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.968517029 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.987892758 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.049748737 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.453016176 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.939622487 seconds)
  done (took 896.813084535 seconds)
done (took 1214.489922049 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.857008823 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.85543033 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.844688447 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.860326229 seconds)
  done (took 29.209302212 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.878350585 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.863555674 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.864294012 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.863892403 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.863736168 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.864401073 seconds)
  done (took 12.992809124 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.894992428 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.85920781 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.857261966 seconds)
  done (took 21.404580851 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.939772669 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.273864593 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.973628348 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.309846997 seconds)
  done (took 10.288331152 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.867524532 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.866654232 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.866683587 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.868581323 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.877322394 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.883408318 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.868025493 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.865774935 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.877579795 seconds)
  done (took 18.636659264 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.208032768 seconds)
done (took 98.531105292 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.461212018 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.748464015 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.860470702 seconds)
    (4/309) benchmarking ("map", abs, Bool, false)...
    done (took 3.222816702 seconds)
    (5/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.137725039 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.001282097 seconds)
    (7/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.144645998 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.902836337 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.153987086 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.889004174 seconds)
    (11/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.910423938 seconds)
    (12/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.131733114 seconds)
    (13/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.169657873 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.255038729 seconds)
    (15/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.880513596 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.868485993 seconds)
    (17/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.757441025 seconds)
    (18/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.581604095 seconds)
    (19/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.005492434 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.513475663 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.14993124 seconds)
    (22/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.9495384 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.103782892 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.915560833 seconds)
    (25/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.982938285 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.849894817 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.009162801 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.996663024 seconds)
    (29/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.257248836 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.941494127 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.961355317 seconds)
    (32/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.889258694 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.971330026 seconds)
    (34/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.052006239 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.018166734 seconds)
    (36/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.262634009 seconds)
    (37/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.886258859 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.645073614 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.210677524 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.860858252 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.874339786 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.971786842 seconds)
    (43/309) benchmarking ("sort", Float32, false)...
    done (took 5.616785967 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.120388501 seconds)
    (45/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.365831984 seconds)
    (46/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.162927883 seconds)
    (47/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.964186044 seconds)
    (48/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.161854099 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.751017784 seconds)
    (50/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.93940259 seconds)
    (51/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.886249403 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.092089344 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.918191296 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.860063789 seconds)
    (55/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.227173723 seconds)
    (56/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.928621249 seconds)
    (57/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.276240814 seconds)
    (58/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.734697011 seconds)
    (59/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.098700814 seconds)
    (60/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.61480831 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.923110558 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.190495088 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.939311299 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.082700676 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.219224738 seconds)
    (66/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.860120027 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.390498488 seconds)
    (68/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.87935654 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.776919434 seconds)
    (70/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.072809019 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.384182551 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.979482255 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.233404535 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.861154302 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 5.571950742 seconds)
    (76/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.017452986 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.165845306 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.864863077 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.95780872 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.366409195 seconds)
    (81/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.107227289 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.034423425 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.129351895 seconds)
    (84/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.994620306 seconds)
    (85/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.867959651 seconds)
    (86/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.400581144 seconds)
    (87/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.96449687 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.150799925 seconds)
    (89/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.962166142 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.195745783 seconds)
    (91/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.466294486 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.974925241 seconds)
    (93/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.141144855 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.957900323 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.251841656 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.054636792 seconds)
    (97/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.039807834 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.955963543 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.889648962 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.00526929 seconds)
    (101/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.97325091 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.887516297 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.211575294 seconds)
    (104/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.0127058 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.044201809 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.077553628 seconds)
    (107/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.042588384 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.864432488 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.168095766 seconds)
    (110/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.459407353 seconds)
    (111/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.934117935 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.863277927 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.863659125 seconds)
    (114/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.070507446 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.861659034 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.77725368 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.81795874 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.924707471 seconds)
    (119/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.046204339 seconds)
    (120/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.871827798 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.861961444 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.146090257 seconds)
    (123/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.862607261 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 2.372862981 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.996985003 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.888723858 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.109230364 seconds)
    (128/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.23687256 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.142137565 seconds)
    (130/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.850199814 seconds)
    (131/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.343291656 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.0976296 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.076764083 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.150738224 seconds)
    (135/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.458511779 seconds)
    (136/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.851072812 seconds)
    (137/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.092364229 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.069819343 seconds)
    (139/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.351713822 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.065620316 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.993567988 seconds)
    (142/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.817053228 seconds)
    (143/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.939049246 seconds)
    (144/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.266970014 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.862589702 seconds)
    (146/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 3.274212194 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.91594163 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.926477083 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.214051808 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.088665096 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.194359363 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.892955957 seconds)
    (153/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.881299171 seconds)
    (154/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.062696194 seconds)
    (155/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.076908743 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.893825386 seconds)
    (157/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.949337697 seconds)
    (158/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.385790866 seconds)
    (159/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.408149339 seconds)
    (160/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.707363732 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.157653595 seconds)
    (162/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.451068475 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.82877931 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.514678093 seconds)
    (165/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.925074516 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.51030311 seconds)
    (167/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.957239173 seconds)
    (168/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.999952954 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.411501216 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.536724975 seconds)
    (171/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.821039253 seconds)
    (172/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.448462289 seconds)
    (173/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.861796749 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.986254663 seconds)
    (175/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.967936758 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.008386996 seconds)
    (177/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.000363419 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.095078472 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.235447186 seconds)
    (180/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.267219564 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.89687512 seconds)
    (182/309) benchmarking ("sort", Float64, false)...
    done (took 5.662602477 seconds)
    (183/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.179901056 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.523562824 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.224561662 seconds)
    (186/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.040554783 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.913418195 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.865198468 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.251289605 seconds)
    (190/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.012450915 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.954212102 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.658962708 seconds)
    (193/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.971675773 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.251557016 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.865075532 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.780469118 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.195749704 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.933198364 seconds)
    (199/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.856004297 seconds)
    (200/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.958822758 seconds)
    (201/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.882055927 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.965060402 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.924195539 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.128251708 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.931369727 seconds)
    (206/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.93173689 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.894024563 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.779936005 seconds)
    (209/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.061316576 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.972329433 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.247453573 seconds)
    (212/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.95288904 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.670728855 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.072708866 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.86630879 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.962985044 seconds)
    (217/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.955408592 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.867464412 seconds)
    (219/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.948431228 seconds)
    (220/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.892884092 seconds)
    (221/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.867541009 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.946742923 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.950860188 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.911125203 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.893648257 seconds)
    (226/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.867884814 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.85421836 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.222332095 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.895750579 seconds)
    (230/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.380889082 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.438050479 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.899782976 seconds)
    (233/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.884507589 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.262635504 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.898915749 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.859141 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.896266185 seconds)
    (238/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.9197577 seconds)
    (239/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.976295467 seconds)
    (240/309) benchmarking ("sort", BigInt, false)...
    done (took 6.870905194 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.558946633 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.179798676 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.030412617 seconds)
    (244/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.957701898 seconds)
    (245/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.11934282 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.939731869 seconds)
    (247/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.270587415 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.113163512 seconds)
    (249/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.104487025 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.471555096 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.942712545 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.967916865 seconds)
    (253/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.705427899 seconds)
    (254/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.021443131 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.09092088 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.901368065 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.857156571 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.096629273 seconds)
    (259/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.073254934 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.25038632 seconds)
    (261/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.862398825 seconds)
    (262/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.019300925 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.974781191 seconds)
    (264/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.895622353 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.034529545 seconds)
    (266/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.981565315 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.353530728 seconds)
    (268/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.877160565 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.880722784 seconds)
    (270/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.98388032 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.771875719 seconds)
    (272/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.958950831 seconds)
    (273/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.16765208 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.380727968 seconds)
    (275/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.986254991 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.969663821 seconds)
    (277/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.004603832 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.174313326 seconds)
    (279/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.176774065 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.954462925 seconds)
    (281/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.860955481 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 4.917538628 seconds)
    (283/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.875661953 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.0523963 seconds)
    (285/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.058669957 seconds)
    (286/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.960770505 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.667976427 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.835251773 seconds)
    (289/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.223920204 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.99782348 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.462155981 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.222996025 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.292975292 seconds)
    (294/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.369061145 seconds)
    (295/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.98613941 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.919082367 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.87346041 seconds)
    (298/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.867212183 seconds)
    (299/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 4.003248838 seconds)
    (300/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.048804788 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.208158666 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.862901961 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.537713553 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.012674222 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.901456355 seconds)
    (306/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.97734953 seconds)
    (307/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.157679982 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.548065333 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.052216649 seconds)
  done (took 1016.136057861 seconds)
done (took 1017.997097262 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.911439344 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900771052 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.885334352 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.909576622 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.999832063 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.920306922 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.901632649 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.887453725 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.936633917 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.937785725 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.89010313 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.918316483 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.892887012 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.888356288 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.885661895 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.90571892 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.193227492 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.908203241 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.909049952 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.8956118 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.904729979 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.889802852 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.940882216 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.920546349 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.894287529 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.89265145 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.893913816 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.91080369 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.003563929 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.893428402 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.892289042 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.903017862 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.197509983 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.909197453 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.884207798 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.909120199 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.906601039 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.899847809 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.894116921 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.923368158 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.324271922 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.896351668 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.894406404 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.890963751 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.88910347 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.891299988 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.893922943 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.896452794 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.904678778 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.904213088 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.323106757 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.913205592 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.894505248 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.890366179 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.899069935 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.890134984 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.894645719 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.908584111 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.911416449 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90598686 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.182305343 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.919436739 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.891759057 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.9087346 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.899767695 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.362222616 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.887750022 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.898472071 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.328622065 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.898530788 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.357655254 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.906979997 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.893031494 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.907109051 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.923003096 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.193479179 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.908115202 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.891158674 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.901452271 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.891750996 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.901282754 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.907450179 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.895518923 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.895195881 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.906020306 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.92292024 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.903334687 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.894906995 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.90396336 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.910192507 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.900761093 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.901944604 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.891104429 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.885252539 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.902286789 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.895843673 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.894277307 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.899023187 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.89640968 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.902041494 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.321690119 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.912715395 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.888284355 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.887915516 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.891623399 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.906665272 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.322963406 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.896429892 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.912945468 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.940166961 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.896874176 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.181489807 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.917486499 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.908856808 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.899819517 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.896157515 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.887907326 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.185682444 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.343992768 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.910439741 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.893277876 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.891231646 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.909203516 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.892429411 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.88825629 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.195862503 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.914615589 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.905490002 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.015732732 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.904392892 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.923777529 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.890620067 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.896723396 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.922126162 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.910280474 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.926487639 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.898195889 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.910643745 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.913602885 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.890743647 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.906354806 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.902614904 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.894910953 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.89770791 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.887916777 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.925246357 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.906739505 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.909016616 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.914532475 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.014529832 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.890508305 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.190407836 seconds)
done (took 297.184989237 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.957570461 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.887813612 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.986160821 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.889425467 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.975258864 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.981516062 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.886541792 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.888315526 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.882633097 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.267509624 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.884665773 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.886639288 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.882084698 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.887875566 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.970048985 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.886901847 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.886307229 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.229030326 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.889834175 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.959145894 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.886305319 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.887847649 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.888104994 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.269557145 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.880802998 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.883017261 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.969793823 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.887604174 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.234610014 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.886706848 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.884349603 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.233805955 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.98531471 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.907118949 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.898217398 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.894851865 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.978258665 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.893339818 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.979354686 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.97245923 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.989547791 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.931860212 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.890660143 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.883850373 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.892677763 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.892402433 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.88453633 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.919796445 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.882616318 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.887539896 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.229754988 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.903300597 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.898358069 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.886628108 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.88753549 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.913064059 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.88929901 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.893206404 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.981702569 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.892522585 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.958259167 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.270788278 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.269739212 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.892665805 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.890645752 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.891086894 seconds)
  done (took 185.685752752 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.956092406 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.966512321 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.958606287 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.890855334 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.942123652 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.963477672 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.892671675 seconds)
  done (took 15.389350745 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.898204821 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.892025124 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.941058497 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.940660271 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.891919604 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.041161371 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.892287121 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.901622682 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.299630282 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.947418626 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.894545419 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.892101364 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.902271326 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.885025161 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.939246501 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.903276873 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.011427757 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.891724634 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.892820759 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.043727407 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.890060953 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.901275667 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.944908318 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.905411224 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.894783638 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.899874247 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.486569799 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.894638633 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.892081791 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.892421043 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.889096812 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.937798648 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.892757015 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.886842598 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.892231657 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.01247965 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.895978226 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.88896867 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.892061425 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.88840259 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.892636658 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.892192993 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.893510027 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.892608076 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.893089433 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.917352565 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.892066652 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.893507095 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.892605563 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.89237985 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.942872571 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.893863553 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.892043979 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.889160657 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.952827744 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.900700247 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.894778311 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.894053266 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.893716465 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.889634302 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.044644625 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.942892402 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.892832109 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.940406427 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.894002334 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894674174 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.893713733 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.893351082 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.990422038 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.898169967 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.945119216 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.893925654 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.06598421 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.919964074 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894924526 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.896014276 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.896865626 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.897645218 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.88638874 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.90323203 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.893147659 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.899039153 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.900551386 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.903654413 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892358972 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.006468428 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.006445046 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.894595933 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.911319667 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.904408204 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.891572267 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.952077886 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.894488246 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.894139152 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.961126348 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.013870959 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.952800608 seconds)
  done (took 208.658095225 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.901464403 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.903217968 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.898500361 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.912631746 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.896158787 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.895479076 seconds)
  done (took 13.23334808 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.898541956 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.898473406 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.897249678 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.900393744 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.896107118 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.900405577 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.900733835 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.900961714 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.905057314 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.895914758 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.901188276 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.899859294 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.898032878 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.89722717 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.898249692 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.897403204 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.89717549 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.895324423 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.895887383 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.901891844 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.044268747 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.896932243 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899116742 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.90011972 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.904735981 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.896716254 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.908548199 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.896077526 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.896799058 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.901908139 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.906360611 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.898173536 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.899939743 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.903908148 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.903325957 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.896059858 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907375729 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.899131942 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.89539654 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.899991065 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.901125826 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.905847107 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.897656395 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.899093443 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.897995825 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.900396829 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.90928781 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.906268401 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.899992963 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.902957259 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.898651368 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.901537258 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.900002622 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.900880761 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.90225198 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.904279599 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.903331858 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.900183579 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.899776378 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.90197684 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.900889499 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.89999739 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.90420787 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.902524658 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.909008597 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.898910793 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.899921822 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.907615108 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.899947616 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.897874999 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.902113596 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.895843717 seconds)
  done (took 139.808808968 seconds)
done (took 564.605868589 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.155932456 seconds)
  done (took 8.981967166 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.957398984 seconds)
  done (took 8.89042034 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.32130954 seconds)
  done (took 10.146470314 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.900785149 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.8952091 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.899802038 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.895996261 seconds)
  done (took 29.425463873 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.056596095 seconds)
  done (took 8.880586754 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.908068573 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.887704285 seconds)
  done (took 15.655068739 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.074800644 seconds)
  done (took 8.900727917 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.052948445 seconds)
  done (took 8.883488707 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.909233178 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.907957868 seconds)
  done (took 15.655498271 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.87996952 seconds)
  done (took 8.704012935 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.610073754 seconds)
  done (took 11.444305339 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.895929374 seconds)
  done (took 8.733938409 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.893216425 seconds)
  done (took 8.719722157 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.979912591 seconds)
  done (took 9.804251111 seconds)
done (took 164.653732686 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.894523905 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.889774494 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.887816597 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.89066256 seconds)
  done (took 29.38726326 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.931302242 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.931872367 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.939740949 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.942786023 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.93367744 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.932488317 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.924638917 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.923454012 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.942405703 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.93448155 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.932253206 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.934876218 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.93505976 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.923638717 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.932620012 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.933338111 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.944767606 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.935391729 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.925458074 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.936008781 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.898905233 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.943095242 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.937759245 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.9014152 seconds)
  done (took 48.177948742 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.10068826 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.970836679 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.052829984 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.950971942 seconds)
  done (took 9.901213411 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.952205912 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.952857203 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.963609516 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.003647688 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.029775871 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.96252205 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.926478258 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.920640613 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.912066602 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.952431489 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.028001991 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.968569689 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.038484642 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.903372152 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.08131035 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.901201827 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.900968571 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.95138762 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.007345264 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.017545486 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.901204893 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.951590073 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.957531982 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.970343747 seconds)
  done (took 48.982453393 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.89689947 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.908924877 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.906839045 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.900748098 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.899010661 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.899921598 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.905686651 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.901435546 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.924066542 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.899523991 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.898915698 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.900124752 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.899475921 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.899743687 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.900933875 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.912554742 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.914805946 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.902056358 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.902188664 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.907450868 seconds)
  done (took 39.909415362 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.893442543 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.749864718 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.247544691 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.150404939 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.897102469 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.894104287 seconds)
  done (took 31.659950883 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.912733114 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.905347208 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.906745596 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.954769279 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.034738176 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.906225379 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.902027781 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.911561343 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.945319773 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.963394339 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.91820012 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.92709924 seconds)
  done (took 25.016689119 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.900669739 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.897529677 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.895233932 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.91104683 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.912507852 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.90903 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.910130084 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.896435628 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.913024982 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.919211022 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.910737906 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.913131175 seconds)
  done (took 44.722724922 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986475247 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.940877543 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.950744993 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.58067975 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2757989 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107506226 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.424193566 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.235761658 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.900889493 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172214166 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037190078 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002744531 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.154218796 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.299688754 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.924760701 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.38414405 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204434995 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112655304 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923854858 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.647416461 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960875989 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.982046517 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.699812104 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.956649016 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109730129 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.028593724 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.159341165 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.898528521 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037862912 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936846075 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910912288 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.898601702 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173221744 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277384504 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002248872 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908777072 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.516880003 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.611673923 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.887770106 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.689654593 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.718786598 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.033232846 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911495613 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900727259 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.834873417 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.945976232 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267237725 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.905270237 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.612767115 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.89985242 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910616538 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986826342 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.902312352 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.716380316 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820031506 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.901425019 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.898430195 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906304085 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.469969633 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.088775347 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.984469488 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.867361403 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.994245271 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.650898451 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29506207 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.047146391 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.905090589 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905659004 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834738446 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.646917893 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958947199 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232337168 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.922255487 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.552001789 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208789425 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.093817227 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.841893115 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175087917 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.329014589 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.872340718 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129679333 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90213995 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837835745 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.935033013 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.838836922 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173220276 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937491435 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.671568822 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94130623 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.236980408 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.913344972 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920518392 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924839511 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126137967 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.789447781 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900580784 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.800091193 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.04432905 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922279345 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236044234 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836109516 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.90467338 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159306992 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.114473199 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.863859148 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.417970994 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066366601 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.347874276 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.949742084 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.942520572 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.94258843 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.196054634 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961749878 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.081720944 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958221577 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.903895113 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20335492 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37248116 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.032916593 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.02963665 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027568539 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.237569562 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928427116 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968061274 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.905266933 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.902944034 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.726258131 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.456971613 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.904292937 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.909673897 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.861657882 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.946002427 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.906950528 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851448346 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.520188972 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.045171832 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.917011106 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.128296431 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.35225036 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209373492 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838260165 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234893586 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.960626353 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.126742886 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.574921187 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.98949978 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16718126 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.848132619 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.876758403 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945052332 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924470302 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008909901 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927409368 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.923626803 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.191471997 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.916534132 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.908276914 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.75561416 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.942640376 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91250448 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.912184831 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.657175072 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183296375 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.9295768 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913784494 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.805224807 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.918823946 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972057942 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911657026 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.91782535 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.449126392 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.635182712 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.913021972 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.486544364 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13047825 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916248778 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.657644017 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021910927 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.988024899 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181667237 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96580921 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.841952994 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.621173032 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.599695496 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9059549 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846483104 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.907357573 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916586702 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921652494 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.105862785 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.19720087 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950677942 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.658635372 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.949339248 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920179501 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.913958244 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908971367 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.417206897 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.092157927 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.962050081 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.956230002 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053290567 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.921776213 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843486514 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.915546006 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912881036 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.908178111 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.909611802 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938674316 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.662229852 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293625469 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174851186 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.520462198 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927116497 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.689347432 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.967134112 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.971469439 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.890468317 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.928952377 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.088950775 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921821272 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.920126093 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.655064393 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.615286873 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.474365588 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229574891 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214880241 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355061065 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.982562194 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.93210184 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.251037113 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850583581 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.469881221 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.968243732 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253237933 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85657254 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996859377 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.566671527 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.267198916 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925438438 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137511802 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302951794 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.729667101 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065136178 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123691459 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944670858 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.911409056 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.868957087 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.43650491 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052261069 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.709310978 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121561667 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241964049 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.674152991 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.0471414 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.909968627 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.604255231 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996457922 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.622948461 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.08115033 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.960196306 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.93509608 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393211229 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.923515397 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.14112628 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26697353 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.92807206 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.028604332 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849555646 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.92367205 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.924796275 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.919456545 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.908188486 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.796863923 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.16808137 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925180686 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850768985 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.884614565 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223502618 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.830693865 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.923297815 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918032964 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213189706 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.322492479 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083016302 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.868640374 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.425456836 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927829803 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.84891462 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84609605 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.605799651 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922080011 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.890137106 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125841259 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.015291721 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.830840855 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.851080988 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986484968 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.172099636 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.928064856 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.188343495 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190755926 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.609825107 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938574108 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.01704791 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.684649223 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.036540364 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.914714266 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150886416 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.668066422 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139577765 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.953020848 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.872591524 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.913321435 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127092042 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.915675829 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.925132763 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154386709 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.639641243 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.919477295 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354465264 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988918386 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.922856956 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.969664753 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.007499608 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928585878 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993768536 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926009253 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.925432902 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928602596 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962342928 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.923866385 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.048765445 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.932878795 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008802105 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.105691911 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.448159455 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.924052879 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201198381 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291179851 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257158109 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986457963 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.925027578 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934871264 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85751111 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081047512 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.159142628 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20781673 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.053834861 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.039130996 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958714087 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.695181452 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.00395814 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164821335 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201963407 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.822586257 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.308031396 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.969892508 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.933504637 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939705006 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.143799765 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147045025 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232237114 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071360342 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.858934201 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.283522001 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200618773 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.926432593 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.928373814 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.515729191 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.932102925 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.723986231 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.961719298 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.966053316 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211519135 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938682849 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316871796 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.949046648 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.084491403 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.450804657 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.684305233 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.223339689 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.917014687 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991545889 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212921566 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.311371491 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246293825 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991238222 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93705461 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.040734005 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071314037 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.809993974 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.931106834 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925240496 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.160974656 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.640789543 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938914021 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212521804 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236778775 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.924459508 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.80444899 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962580471 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.941279917 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.154290138 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194742953 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.18156272 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94384282 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.941043104 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.746021889 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.219651345 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993092654 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868480667 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.936312516 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03238688 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.186343406 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956514416 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.386068771 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.646640689 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209312493 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.935636776 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957645213 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.941791187 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30259103 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267136142 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.469115427 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145270477 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.521078984 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.377775371 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233096219 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.936485976 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.942478282 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231035006 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.929588075 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.907555707 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958769219 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.203055204 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244850868 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.938469179 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797659327 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.902681799 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.274021909 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492265989 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869757226 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.943926604 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.994077536 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.932608359 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.059499687 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947545485 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.814680909 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.948384692 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.685935156 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210547724 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.934378664 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.93186022 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.728491437 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.083960568 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962359116 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071861156 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939248992 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.658561218 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.293275351 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.188440363 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.86813041 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.939414571 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.935117427 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926125202 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.919156663 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.130082789 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.128406425 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213780935 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.906597633 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.966800597 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940361291 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.157453592 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14655814 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.929213167 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083058078 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.878861399 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9756402 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.845278202 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.435683522 seconds)
  done (took 1694.460524677 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945281136 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.952789452 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.936203535 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.965802563 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.947331279 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.957146881 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.979040462 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.020239569 seconds)
  done (took 57.577025283 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.925898653 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.119294401 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.934822579 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.923515725 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.935582451 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.925147921 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.086803972 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.93294308 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.935863603 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.934733323 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.926294351 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.9251436 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.23460342 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.946024243 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.925405245 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.914359931 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.934904206 seconds)
  done (took 75.321818411 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.940524359 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.988538472 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.9565675 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.944767785 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.871532509 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.928572917 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.723909216 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.935047996 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.92615274 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.149197599 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.558447525 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.926555665 seconds)
  done (took 90.710480987 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.935805895 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.933343651 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.933629057 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.933291596 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.933560385 seconds)
  done (took 11.532979245 seconds)
done (took 2209.209354643 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.176569573 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.154648219 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.16375833 seconds)
  done (took 6.17742354 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.075455863 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.126389614 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.245407666 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.250746882 seconds)
  done (took 10.561481924 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.216603442 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.309085321 seconds)
  done (took 6.387910909 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.315275287 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.948768821 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.314316255 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.929093501 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.931083892 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.928788608 seconds)
  done (took 22.658065677 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.938708041 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.934272953 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.933555132 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.936230927 seconds)
  done (took 9.604208594 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.915357706 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.619267059 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.916534539 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.927103687 seconds)
  done (took 21.241682035 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.682976461 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.690582818 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.680337342 seconds)
  done (took 9.914800284 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.549797133 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.83404747 seconds)
  done (took 9.246570639 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.189632993 seconds)
  done (took 4.05375611 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.067019118 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.241759457 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.452859163 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.46710001 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.547080149 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.635085583 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.234272764 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.165188514 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.359343867 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.361501464 seconds)
  done (took 25.394283712 seconds)
done (took 140.85508757 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.301491115 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.168725619 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.131898628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.305250091 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.158972305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.134800384 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.354866538 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.287836891 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.769171544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.767915916 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.258584981 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.17835247 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.094231435 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.167570056 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.090519662 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.292294768 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.152956664 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.309387274 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.993822654 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.161347515 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.366020323 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.904371929 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.104231437 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.914274901 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.15359014 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.085464684 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.476886189 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.29578065 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.152176592 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.487355149 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.088526068 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.310142161 seconds)
  done (took 173.281679372 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.68821952 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.932066061 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.933837181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.932760217 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.295520553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.933365236 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.936845853 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.937263335 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.089432447 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.070705447 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.934060733 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.275334675 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.934481712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.932077012 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.934500507 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.933995933 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.258026079 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.709681875 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.931171694 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.934095623 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.937392071 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.126385106 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.938349236 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.151229406 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.249834359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.949737335 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.936573332 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.955692296 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.943818943 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.946974119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.951481695 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.931486486 seconds)
  done (took 209.421514658 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.935227723 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.937874095 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.932854369 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.934400202 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.938208101 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.945714324 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.939784773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.93463147 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.608438188 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.605947707 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.952483141 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.950662191 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.944074751 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.937883987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.948624299 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.936839078 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.944814254 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.945615184 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.946540512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.949358694 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.952787673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.646200242 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.952886939 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.636755806 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.942488399 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.945396203 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.936969514 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.945627343 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.934152161 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.942292587 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.948968775 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.939700986 seconds)
  done (took 222.788173204 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.139582065 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.944947128 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.943266997 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.893448857 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.946734609 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.947773858 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.936885353 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.137243512 seconds)
  done (took 19.777249949 seconds)
done (took 627.140696621 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.401564051 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.233251255 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.115634809 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.965099192 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.225302491 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.991697019 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.964182102 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.023613701 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.684963053 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.026642255 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.618254185 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.97603609 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.702380081 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.981024346 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.091018513 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.013844585 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.53654757 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.633547083 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.13614105 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.038107881 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.133228095 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.915806897 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.033045598 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.70190516 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.715972385 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.955839221 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.126607468 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.545344621 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.968330199 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.129577389 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.687847896 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.32147262 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.968430427 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.960370285 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.016615942 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.993187235 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.286002063 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.965305267 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.083263739 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.724000183 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.035650317 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.56956718 seconds)
  done (took 106.067559476 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.933325599 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.934577239 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.931539126 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.934450586 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.93442766 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.934581277 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.931936963 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.931658483 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.933127459 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.931202244 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.931791906 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.932865518 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.93115222 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.932230044 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.931310885 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.931125664 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.931148868 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.931930692 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.930751064 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.930453454 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.932128344 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.929362674 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.931210536 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.928849979 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.931643905 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.931210994 seconds)
  done (took 52.106441254 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.939617368 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.082098194 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.158913504 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.953794825 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.939286267 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.941877081 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.957072096 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.942627225 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.941294728 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.941817133 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.033494368 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.943921511 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.959747988 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.161700004 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.951848699 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.939773664 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.940693228 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.939404791 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.088007116 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.953628318 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.95920759 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.942945778 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.958941826 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.950422858 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.941317927 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.939614693 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.941183353 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.411359833 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.944610904 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.031172281 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.97766948 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.958477931 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.375193403 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.167450331 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.984431078 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.943954282 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.938231351 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.033722323 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.94052046 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.937736306 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.95706456 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.940679787 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.175352544 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.433565687 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.946826453 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.937199769 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.421327923 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.034647403 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.97526002 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.944820871 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.162053726 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.947095244 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.937223677 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.936563391 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.970337789 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.943171788 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.936192166 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.299174174 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.945305012 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.952241427 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.936816857 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.934842441 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.088534121 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.938955776 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.0781188 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.937957378 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.941481588 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.933568675 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.163376888 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.942884046 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.435376701 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.941457355 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.933046969 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.023679458 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.077367446 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.438054797 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.942736893 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.089525794 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.383596402 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.951965955 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.937095329 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.394066538 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.957858236 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.938848995 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.934683513 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.933424782 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.932099623 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.975134839 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.947470261 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.371182164 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.433354855 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.302975937 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.954746039 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.944884223 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.933178408 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.294188294 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.936050513 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.931381325 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.147598638 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.445469939 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.941344617 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.941002649 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.418835008 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.943585785 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.950455506 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.938887109 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.159085862 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.942219103 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.978447924 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.933756736 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.940476709 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.936128739 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.951376444 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.937945047 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.933260613 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.409352591 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.036770726 seconds)
  done (took 239.709145919 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.92720931 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.926017103 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.927143305 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.925037498 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.925625245 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.932176742 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.926031473 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.925596733 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.93318747 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.925294052 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.924984598 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.926841436 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.928131809 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.932792925 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.484066058 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.958651513 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.562518741 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.94947178 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.951006646 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.951415396 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.630199659 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.957919133 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.951529748 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.949178212 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.950669751 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.95297163 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.962176003 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.982945665 seconds)
  done (took 170.052140631 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.959047749 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.139683383 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.974616793 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.995064194 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.96515389 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.957430579 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.983729172 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.980662872 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.967515949 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.959146229 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.959889631 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.022105809 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.969797591 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.095723773 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.98772703 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.988481017 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.061576529 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.962839658 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.958273901 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.959683682 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.987587983 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.95690881 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.018698514 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.084792697 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.974215415 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.075877308 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.962634024 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.959219751 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.956455812 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.077060239 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.971101376 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.018719572 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.985603254 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.975948173 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.079795469 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.074618008 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.065454403 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.986951618 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.961834267 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.958617466 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.958545002 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.950445223 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.077807313 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.978324458 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.959958669 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.069796982 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.976597751 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.961479345 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.968914791 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.959100835 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.973663322 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.977522914 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.02570349 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.09093138 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.992390245 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.985751305 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.98391566 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.25537892 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.969324679 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.059798494 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.956385821 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.081072618 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.978413862 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.950924249 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.96108113 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.96544466 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.987741415 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.992290054 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.066336056 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.967521859 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.060954485 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.993138646 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.967321012 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.96131522 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.962750391 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.076705571 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.078899294 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.994004095 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.99726127 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.991708369 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.959653917 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.961379804 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.953016388 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.978453244 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.96279766 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.077889032 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.076555827 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.967516239 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.964001591 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.963068587 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.96450911 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.986716879 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.088257227 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.994245752 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.061294642 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.027128589 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.034002583 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.973938403 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.974698569 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.96660167 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.025917125 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.973788577 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.974889004 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.304305613 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.032532802 seconds)
  done (took 212.28134293 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.428023476 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.019693824 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.017790668 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.229693565 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.385869452 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.811696519 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.010910869 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.012670711 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.037118031 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.17532062 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.065950169 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.023466263 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.999046089 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.983591721 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.010143556 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.032208829 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.013743062 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.289946519 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.129221167 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.125500465 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.991854187 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.296145775 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.327645513 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.403462317 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.044572841 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.338228293 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.692848537 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.252005937 seconds)
  done (took 64.042328826 seconds)
done (took 846.131188885 seconds)
SAVING RESULT...
DONE!
