cset: moving following pidspec: 22471
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.277516665 seconds)
loading group "string"... done (took 0.591555262 seconds)
loading group "linalg"... done (took 6.804870414 seconds)
loading group "parallel"... done (took 0.156382367 seconds)
loading group "find"... done (took 1.201637818 seconds)
loading group "tuple"... done (took 1.71790959 seconds)
loading group "dates"... done (took 1.185807366 seconds)
loading group "micro"... done (took 0.222736741 seconds)
loading group "io"... done (took 0.987724606 seconds)
loading group "scalar"... done (took 38.469227657 seconds)
loading group "sparse"... done (took 12.793112488 seconds)
loading group "broadcast"... done (took 0.9529571 seconds)
loading group "union"... done (took 12.855640209 seconds)
loading group "simd"... done (took 4.257026951 seconds)
loading group "random"... done (took 8.773948057 seconds)
loading group "problem"... done (took 2.016927623 seconds)
loading group "array"... done (took 20.802212884 seconds)
loading group "misc"... done (took 1.743741567 seconds)
loading group "sort"... done (took 3.283941913 seconds)
loading group "collection"... done (took 17.113014989 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.510773568 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124754947 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132994035 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.135382317 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.172981159 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144500125 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127831845 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100541497 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.109877304 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160063993 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135093153 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.465674242 seconds)
done (took 5.231762253 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203343882 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083584024 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095788281 seconds)
  done (took 1.020267657 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066246591 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121785488 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065754686 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065284647 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065588796 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065118856 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.085393073 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065841904 seconds)
  done (took 1.383737563 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073510321 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068468731 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085043683 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068002335 seconds)
  done (took 1.145021129 seconds)
done (took 4.673888945 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.838616789 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.240363736 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184073467 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.449299556 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147411782 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182074805 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.655659668 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319402692 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.200113471 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082725824 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.120340867 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.357769363 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123978172 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.659226073 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07834917 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107542067 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.163604661 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.413992443 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082293041 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083057346 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10371882 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12847503 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102353413 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091920881 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.155885674 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082788908 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147463014 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080989677 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083558289 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224927767 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188368283 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.672321171 seconds)
  done (took 10.44111052 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096873627 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113948332 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068835845 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140525123 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098640613 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068838353 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070165317 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066132399 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106760268 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.145640563 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089260045 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.11821484 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066103409 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086068176 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085628979 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.221284315 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082216812 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102490992 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072341488 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093906169 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107814168 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077203355 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077230098 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096014579 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129070737 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19451645 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100387342 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112912942 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068229221 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097957283 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129880116 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127862598 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06621176 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083994284 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124617495 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112587346 seconds)
  done (took 4.561709562 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.05849701 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.155079198 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091531868 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.178659916 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066982056 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125141406 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083183687 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100680739 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.218213037 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.079456413 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.466109192 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12875374 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102093687 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067775004 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083822102 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083429814 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083666745 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.55486045 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108795721 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.146859487 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082480383 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093341997 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085939008 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342651467 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084023507 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066900555 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084453035 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059535836 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130142951 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069294824 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.124757853 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.108925468 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069016986 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120846347 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185172688 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091671407 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.15087657 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084202761 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066322325 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165787301 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09142839 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065661165 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089489554 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084156441 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082864849 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121896036 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12213385 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069139938 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083479808 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.175160502 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067406213 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083514176 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.819085059 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167378098 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079057159 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067504675 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288318238 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084843464 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084994876 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064049914 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.239843126 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.153219451 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068836046 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083302196 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06691499 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067344433 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374296525 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083681526 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.785674601 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070834082 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078700127 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069219755 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.064738751 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092057413 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072625363 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101778642 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066916752 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068026602 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083570241 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06649012 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067635997 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102988346 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205540158 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066394245 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085007064 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06516966 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102886774 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096880066 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087571048 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065505569 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114838986 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069097422 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066923783 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119939298 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064057771 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084506192 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085105685 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086904772 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128905152 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.073994087 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.120204565 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068324744 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114637841 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07182885 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115324374 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078062777 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067242815 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.24039615 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064429034 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064362783 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065453164 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08494949 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067754467 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067492911 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099030759 seconds)
  done (took 20.979872356 seconds)
done (took 37.891546745 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.289105333 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094102997 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075559912 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.095062683 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093373817 seconds)
  done (took 1.572531321 seconds)
done (took 2.469981521 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119092325 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11787907 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063495275 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113836371 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064200445 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119526534 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097172848 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098675937 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118126049 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064276293 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095214863 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081887265 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063910598 seconds)
  done (took 2.141682689 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083084554 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082120322 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086604311 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082218998 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062990661 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099324456 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080255962 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104938442 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080096356 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071240566 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081805656 seconds)
  done (took 1.806913702 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082188842 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082302879 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086471841 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081111327 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06264044 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098853147 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080196645 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102483351 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081281296 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08919287 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064879048 seconds)
  done (took 1.804870952 seconds)
done (took 6.639367128 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077659979 seconds)
  done (took 0.96579303 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.668663176 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.992984689 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080459988 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133442233 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.200528322 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.139025897 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.320924333 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087778718 seconds)
  done (took 9.709864572 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089145687 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.098985445 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072071626 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089822937 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069050095 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067890035 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089639326 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069861766 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086460209 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071259362 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068664398 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089276955 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068674916 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088934489 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068927808 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088492205 seconds)
  done (took 2.230261512 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091909429 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109882918 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073142098 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.094401257 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072267413 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091476218 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073929616 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.093109738 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070328212 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089720828 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074986727 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090492785 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071979762 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082401891 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074219763 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092355111 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071332514 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091162256 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075574994 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091565128 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076338781 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064852811 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.09014739 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074309427 seconds)
  done (took 2.966175885 seconds)
done (took 16.766438195 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112606009 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089435634 seconds)
  done (took 1.096917435 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082362306 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09936211 seconds)
  done (took 1.081185037 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083902035 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081844416 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091396085 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095872644 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065722384 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083974273 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105996307 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067484192 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065802969 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084277295 seconds)
  done (took 1.728629524 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069483847 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093865508 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072012826 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098559582 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075322712 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081804305 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073921254 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084260963 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079853469 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062582413 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06964926 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100170514 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072570752 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102978183 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073158598 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085958197 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071741326 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06670646 seconds)
  done (took 2.332041913 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066485089 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066556459 seconds)
  done (took 1.035843436 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067905814 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063125611 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084178603 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066600832 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080797995 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063463256 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080036413 seconds)
  done (took 1.409227772 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.410435537 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110326014 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.331726751 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070645596 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101435556 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.289424946 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066558794 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070890409 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090827735 seconds)
  done (took 2.484118838 seconds)
done (took 12.069906005 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08091802 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084314807 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112369551 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.395984126 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093600601 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083534143 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.133241854 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.232521888 seconds)
done (took 2.120366719 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126672367 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.620712668 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.410345428 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212964394 seconds)
  done (took 2.152578747 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334982446 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.108692596 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059553159 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084928334 seconds)
  done (took 1.50123078 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067311992 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069184179 seconds)
  done (took 1.046312533 seconds)
done (took 5.735029847 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067201574 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066135597 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063260689 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065317012 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063106617 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083687248 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083905508 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088149558 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068848893 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068081828 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067078137 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.070544987 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067345608 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097873122 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066395589 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065525305 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089414533 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066270344 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065429397 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084664608 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066003742 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067820507 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08474972 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064406247 seconds)
  done (took 2.690618508 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084081145 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083606207 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072773618 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071828516 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090983229 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071491088 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090664803 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066869789 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089344136 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069483636 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087299835 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071368741 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068308053 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.089200987 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068487938 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088574654 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072634349 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084066631 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069640878 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08762417 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073549717 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06625655 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088581689 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070942625 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087519297 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071060789 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086351174 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067412156 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08813581 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071810301 seconds)
  done (took 3.265292217 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070508977 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063845885 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081806721 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071704538 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063673376 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082593954 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064586814 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064716212 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083215116 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064505777 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064359504 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082451036 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064297503 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081934233 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065339603 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067003441 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096880845 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06433193 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063268972 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.083005369 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067544989 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06356261 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.083005773 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063636567 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081675645 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06469964 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063524088 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080625555 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065365788 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063384983 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084532857 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067717526 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063728001 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08909771 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067710679 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063650028 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086791981 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064036677 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06436199 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082002134 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063783777 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062769049 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062603052 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070205338 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083663057 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066448737 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064520084 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083535153 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064931771 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066095849 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082507923 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063621212 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082225177 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066143722 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06804449 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081005842 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065554512 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062956496 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082789527 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06460923 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062447362 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08141688 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066592849 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064325358 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096945006 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070248861 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08163883 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06750809 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06619705 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086412626 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067971614 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077657482 seconds)
  done (took 6.091177805 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091432053 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106029583 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064777768 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084510297 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062735817 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082230047 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069251717 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064105301 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082985652 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070193505 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082155639 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065422045 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065536385 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094181194 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065285691 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082530597 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07153101 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062501558 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082606866 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.179064861 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082025549 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069429399 seconds)
  done (took 2.70063856 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.174485814 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07029267 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.125312459 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091330413 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069227253 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092026379 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071112662 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070741194 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089267905 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06830503 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086887851 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070189184 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086718217 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069486656 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086190205 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069972795 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087126711 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070264679 seconds)
  done (took 2.470942288 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078999783 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066083551 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105453827 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066146203 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085033006 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069467209 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090838713 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075766398 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086182597 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067781143 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074156286 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08815798 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068479125 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084520489 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069579434 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065603792 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087630758 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067081298 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093142011 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071402813 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089237151 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074603168 seconds)
  done (took 2.649099493 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081491244 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068525158 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101388027 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068296428 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08115495 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064871752 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088403027 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067870784 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069774313 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.08804225 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066631347 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064198358 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068629682 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064930399 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09016946 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066838469 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08667854 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06750283 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06771416 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081307078 seconds)
  done (took 2.429406987 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088803539 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085615619 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068789024 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094282907 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068700127 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085600886 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077518384 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085434858 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068803839 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10612044 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068818714 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067639786 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074299151 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091705926 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069050484 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09463936 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076690426 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096504219 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069641941 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08937828 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08986743 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0685746 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075755977 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091255819 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070010198 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08929873 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070976467 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094909209 seconds)
  done (took 3.205431869 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067733669 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065614328 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083109007 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066515648 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065376101 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08417757 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067072159 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065914823 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08751968 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066260329 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067515705 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.087121313 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068552847 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06693578 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087077832 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068405022 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067123261 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.084107929 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065299254 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065283319 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.087157567 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067891896 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067012034 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08493713 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065515772 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.085855063 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066087855 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065481269 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086092575 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066052883 seconds)
  done (took 3.114511455 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076829629 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072268496 seconds)
  done (took 1.079159882 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064747967 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079886346 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083280508 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071106591 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088965661 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067874709 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073635911 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068748617 seconds)
  done (took 1.529384773 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081845814 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077034558 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087063157 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080341606 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095870971 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083135499 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155506703 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086656861 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073427219 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064641198 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099442787 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065545338 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071757912 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065659373 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070743579 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094552044 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065031594 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092270756 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070086639 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064935437 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086778096 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074906003 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08760544 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063772831 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067093207 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108598932 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096240951 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067860021 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069317621 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093039637 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072761912 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078470178 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067683344 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066376922 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083234003 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076752674 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100442733 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07043384 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092680587 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069187489 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095906639 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063470287 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071445599 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091788612 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077048926 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085687926 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068337262 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061514966 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083160146 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070264902 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06172426 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086521833 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061815082 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091751653 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071627612 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079301279 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.0848856 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068478235 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087364918 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070353407 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073172655 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067442748 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0676602 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086088226 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077766002 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070640739 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095521788 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062077004 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080350201 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065394663 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076479473 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108335858 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072806281 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086888173 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067509338 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083569517 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070791468 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067208503 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092131812 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073150033 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085285692 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073101721 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092431038 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06724921 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069342485 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094735998 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065390867 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068803081 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063762722 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103407379 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066158559 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064864221 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084319788 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077372963 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088656124 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067479181 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064613286 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092981738 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060444776 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086055902 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068297663 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066730863 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09640512 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071166958 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09159221 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074732539 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092751275 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066716459 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087680639 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064682219 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068143165 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08395642 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074226635 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060661724 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089102572 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068020015 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085156624 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076506563 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064391506 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086816137 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074106167 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091285331 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065807051 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062933808 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089046048 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066463388 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088842059 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075369151 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.082204973 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063166654 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061872358 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.08801097 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067319717 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070055629 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090943773 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070013751 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079814087 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065403033 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090098349 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076863299 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066777449 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08741227 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073313886 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086720827 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066948682 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072500266 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088754835 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066703055 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090996276 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068662881 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062428842 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089421289 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069180273 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083113619 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071363103 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069025963 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087677561 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067567056 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083773151 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074403714 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086070774 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066949351 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067190038 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084491051 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077350295 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086536648 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063589246 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064163809 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095437145 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064629793 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083697673 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067112499 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06846098 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086003901 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065312341 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065555586 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087719886 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07679748 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090045848 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067502917 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091188628 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078356956 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085338691 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070118806 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067126584 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087314108 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06787025 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094413919 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073540872 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071261768 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089152026 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063966549 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09072041 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074638686 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06524566 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083453887 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066543899 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090290175 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073268982 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08880974 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069181286 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065216226 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066532025 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069800597 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089108755 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067117132 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06602878 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093958552 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065000726 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092730263 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068120804 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094747768 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070798478 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061936243 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089104845 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06497774 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091161603 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063628378 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064507181 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084465671 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068907579 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065704062 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067843318 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060027154 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094059606 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074443824 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066246348 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085644885 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066837237 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092084921 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069214208 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06968736 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089751345 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073049695 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096029239 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06681346 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068845725 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096815647 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066167119 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05985568 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071120797 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064143467 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.088392395 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066206966 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083174163 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070917013 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093712227 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075055854 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060246512 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088642988 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064849352 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065098714 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082062997 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071609793 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088383434 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068534811 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072630639 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087332668 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067253927 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088867181 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067754889 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066849926 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087758595 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06953446 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086866962 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069110604 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065207638 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089147438 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065721972 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083096429 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068724912 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066971912 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086363715 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072379759 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084822643 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067661387 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069086549 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08687551 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067724161 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085382093 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067133843 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070017097 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085864689 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06834629 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068854538 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08117788 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073864894 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08559044 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075610277 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065958442 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083373568 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074151555 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087923339 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073206151 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086197883 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069105824 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067666651 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085790761 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069920816 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092517299 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06576892 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076944499 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093759429 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067658462 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089313884 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068094362 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067380929 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085807146 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068256105 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.0863932 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067578693 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066451307 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090777457 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069818932 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085631472 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069344186 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067100723 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086335903 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068677069 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061479457 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065415445 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065635338 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087395598 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077155548 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066706515 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086568261 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066385026 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088503601 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067471483 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065227957 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.098341036 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077363131 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087679671 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073551245 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085603593 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068476077 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096366806 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062668999 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065368233 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084368509 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065404955 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073152776 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086972718 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075156793 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086523746 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066739589 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063306708 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086812708 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065622023 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079915259 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066171983 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070990903 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085492227 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066798417 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066956578 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089216925 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068052731 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096304637 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066782141 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067340907 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08768441 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063866568 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084958276 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066559443 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069004748 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087730986 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065425592 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063978941 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086367188 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067787353 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086951738 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068001322 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068293272 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092964773 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066511638 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088738146 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070901152 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064227729 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089704611 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066436471 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085596426 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066857478 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070591994 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089778932 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067964544 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094455917 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067397463 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066513825 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086605665 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065243682 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084750127 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067903462 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066159225 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08644451 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068631234 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093370095 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065640876 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069947509 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086524021 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067700681 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091635186 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069464703 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069378372 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093269914 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066968182 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087652489 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075603476 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089543543 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0713518 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067439118 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088293548 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073865915 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084857757 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074630129 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066875432 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087040295 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069667211 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064721932 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086965395 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067737091 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08522117 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073969898 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067000067 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086973639 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066308807 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083594787 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068852978 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069553518 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094367408 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069557308 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089213884 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063232418 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063499703 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087988864 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065963468 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06820826 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08909554 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072351855 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08890803 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068516674 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065281171 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095813665 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072356993 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090751269 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065235725 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089884757 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069009091 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069462878 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066986345 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065928884 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067420254 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069553239 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067357293 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089891928 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075511504 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069547832 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089662171 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067913837 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087853533 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068157675 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06185705 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087535281 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069092712 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092145095 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06939726 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066319849 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097566301 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064776119 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086900139 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071068755 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06535667 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091967087 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062576026 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087678495 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068746866 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06710782 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.08158431 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066004475 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064022685 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08970674 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066352027 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082014936 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078704379 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095108421 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070383517 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065891637 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085452497 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063628414 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062180071 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08654697 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067839753 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087916699 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077622164 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065907481 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086087695 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061966689 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085719322 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070631174 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069339645 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084333262 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062320196 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06499839 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091201335 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07210786 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084996859 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067519935 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069654566 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090229369 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064958058 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068681636 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062786717 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069124871 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101343056 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067169253 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087578876 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073020508 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094405591 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067998341 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062566024 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086793672 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070281991 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086820269 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068598045 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067186114 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08047124 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068479297 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088110994 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066545556 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088713883 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06746208 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074609662 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088713409 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068111432 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090204159 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06976362 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0750913 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06926084 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07374501 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091427817 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070110176 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086098158 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068767141 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064092741 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085645891 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068318644 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067397539 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093137383 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074315033 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086756288 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077572098 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095895429 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069223327 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08271675 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067360147 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066311802 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082626382 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068518108 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065620678 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08483208 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065337233 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065210392 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089152437 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07159929 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087787907 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068329666 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066473021 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081359782 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069673406 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088531379 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068958088 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064141156 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087791557 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067325727 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07062024 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069447437 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063589417 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090689976 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069718488 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067230857 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08380157 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073073565 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085718663 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070017529 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066582488 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087222054 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067940959 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088913291 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073464802 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067617494 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089430196 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070781921 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089368496 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064853173 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064345086 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092439971 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065961717 seconds)
  done (took 46.451172301 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100138638 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08382447 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062876178 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062450445 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095488883 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063303935 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082913156 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063878195 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063026095 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06417086 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060919199 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084107775 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072202488 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099006965 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074880554 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088040857 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062123137 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083557762 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063754163 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062571767 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070278214 seconds)
  done (took 2.540863817 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075918608 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070321052 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070990318 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098120913 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06878949 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091417209 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074099502 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091681649 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076812273 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088524937 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076229584 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091600329 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067390846 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087600075 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067818963 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091757017 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076128083 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088898846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070430823 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094542218 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070889661 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094545745 seconds)
  done (took 2.760704602 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067932661 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065371457 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087160439 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062856287 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065603891 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081228126 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.078725452 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063453745 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067712342 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064054877 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086982024 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066790501 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067694983 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082139344 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06677525 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063260513 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.12957267 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089971034 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066349482 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086673079 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062650349 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068168327 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.082472095 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063396169 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06513261 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090537904 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066383588 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084292155 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067361882 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065592948 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08669499 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065031066 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067083252 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08765513 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066223963 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065419757 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086761653 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066030098 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082142551 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066332769 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066497086 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082491323 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06769251 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067160481 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085793336 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064056657 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.0873118 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066930886 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061346121 seconds)
  done (took 4.593300804 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080782792 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1290486 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.0672894 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086925817 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104779665 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072816404 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092572745 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110421535 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064482873 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064297833 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.103363551 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104285091 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067380496 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092113442 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074171467 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085235037 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069067878 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064483154 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.09121305 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065747196 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091143107 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071845773 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101766092 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.099252587 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071557839 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084619917 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066582644 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069989131 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077000928 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092348679 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07155038 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092566961 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082028664 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.088387975 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066567739 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088330049 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082883435 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08644881 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069622402 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083722238 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070108582 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069908117 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093719729 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102505507 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068170256 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091200961 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068545257 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063625316 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100900357 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068397133 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094450825 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101522088 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070828863 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086432576 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072477979 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101535493 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067055661 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083946749 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071718568 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098466602 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065023984 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069337716 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102185637 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087402896 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075502182 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102020942 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072261718 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090436254 seconds)
  done (took 6.744141522 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077079888 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093285772 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082341805 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10254133 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072575312 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.095568741 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092315005 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074479789 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093435502 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079462419 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093243147 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114636437 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069506411 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095057611 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074145827 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093574106 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074078565 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093207141 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073374691 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09389679 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073465954 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07870045 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071313593 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078467397 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123156226 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068511833 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093254452 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073418274 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102067425 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092929186 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082049883 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092508508 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073308856 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102220969 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079837913 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072162533 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064700958 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095053904 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072585975 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094265206 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068166843 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101970115 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093253179 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069558613 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09340319 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0741379 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079468358 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079352736 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098404925 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09830713 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074307692 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10175371 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071857296 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094465876 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100607557 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106685779 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102139971 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102231784 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073762843 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102503623 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101590128 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088081227 seconds)
  done (took 6.381637033 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084948217 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095974776 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077161333 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083760629 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065550967 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091803106 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065317162 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064738394 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096457745 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074611752 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097537445 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09009512 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074703133 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099194701 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07104763 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094868052 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070476125 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0917517 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074748564 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091761123 seconds)
  done (took 2.647128929 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07576294 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08302544 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089247868 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072004806 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090296373 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072836049 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089576092 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069290029 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086929413 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070687383 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075840978 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09903331 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067556359 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093894494 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096117211 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0738276 seconds)
  done (took 2.296741289 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077164683 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.093398829 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081380962 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086651487 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066172432 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062674135 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087978167 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062056756 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062463038 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.099949586 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065840289 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.09092017 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066990823 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085031318 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064634839 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068751146 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.08473159 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063795578 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086128225 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08009277 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097062027 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066046972 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067163797 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087460411 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06672263 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092987785 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067241291 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.084887355 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065066497 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066880836 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089297898 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070262532 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084471106 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065234044 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064992001 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08580121 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06660659 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087551491 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070681717 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06609238 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086513248 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066605945 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087148662 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068069562 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062295705 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088800302 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063033156 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.08888669 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065556634 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08757959 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067699271 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068249655 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088466277 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073053724 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090166918 seconds)
  done (took 5.195587038 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080927218 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06926813 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083545874 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065306419 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068852262 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066871513 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067955539 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091254259 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069072801 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084583602 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068634257 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068674847 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088953376 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07028203 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088546698 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071570206 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062363344 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088624611 seconds)
  done (took 2.348116663 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07276758 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066258284 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094295151 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067232708 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065529726 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090539339 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062491143 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086069186 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066004324 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065834589 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087166479 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069163785 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084882593 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069494233 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067011384 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086919308 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06942674 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064752015 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088691742 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062780369 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088728718 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066532722 seconds)
  done (took 2.636709587 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073703315 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091620715 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160808889 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.105180472 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082965404 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077702622 seconds)
  done (took 1.590792652 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09186839 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101098736 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067932144 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087206092 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096302939 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067098726 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090430627 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06860768 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098678903 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097103305 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069532283 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097702942 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076928206 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098703376 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094504977 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075445397 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088249419 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069760929 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066678141 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107388474 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088173187 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076519483 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089654494 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068542077 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089354639 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076395482 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097653785 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076777124 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06650451 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098353216 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07522256 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089294803 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077902426 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098430794 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070226659 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097825798 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067899248 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106700357 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094130443 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077453711 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089923815 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074768987 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097817406 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074088284 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098115891 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068383097 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094537652 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067213917 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090239368 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108287901 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074743786 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098244529 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075039389 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098494053 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097405811 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087141685 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09855873 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097142578 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075147233 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097831645 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07613743 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096109805 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097057508 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07818816 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095824003 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079816897 seconds)
  done (took 6.684930433 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083641501 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107025893 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068950725 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075830065 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073792227 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09213348 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068356431 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090449967 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069037658 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089423652 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130914343 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069289169 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098270523 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077344387 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089575944 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06830947 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090096298 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07678943 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090334956 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107588845 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069596392 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097753167 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077369624 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098140612 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098485959 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07534867 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089293989 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069210397 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089762991 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068538276 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094802078 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069654665 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09830498 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068457078 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074991693 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066747931 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091970454 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073003988 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090791191 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073222124 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098321983 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107135015 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06916327 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089858295 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077912238 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067424124 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067264159 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092662546 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069736968 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089674313 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078385222 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098723263 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09800693 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077760478 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089751947 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069770702 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089942983 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069653916 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089437415 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075059241 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09809933 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068805735 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108532163 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068071226 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06687191 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09918864 seconds)
  done (took 6.535304262 seconds)
done (took 131.546014656 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203389728 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.189794203 seconds)
  done (took 1.392393797 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06976771 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096071987 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100275432 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128490781 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088600414 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10123646 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098830552 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.100516958 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067071758 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087787931 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068527673 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068599022 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153624004 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06819111 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066489952 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090406636 seconds)
  done (took 2.461344326 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099142127 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196404199 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098852737 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.08784414 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097659447 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096062653 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064943556 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097106705 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072845962 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065200615 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.095809185 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071668141 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08657139 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071950326 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09221598 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07487559 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065927073 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095910961 seconds)
  done (took 2.640367817 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101988041 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144500232 seconds)
  done (took 1.255125316 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.184718422 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139447131 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207116792 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.409543642 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206664375 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.283299667 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.178311094 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17768384 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.160376283 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174878699 seconds)
  done (took 3.128256214 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100635806 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172341455 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304087532 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116793452 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.096210542 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115547786 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117659232 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100635472 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079175043 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100898349 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.099908882 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078153705 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118614244 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075871311 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095799702 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077649739 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122963369 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074669399 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097810397 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077210664 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118842862 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068001317 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074812208 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097105551 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075260086 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098587336 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067148198 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087591061 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076412844 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095864086 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080510525 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11452004 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07642268 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129136258 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092937635 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130484713 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077503412 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094400185 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074346155 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093960015 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077578146 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099146548 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073110805 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075960566 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065694273 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07592633 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090708891 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067133783 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100982709 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068715087 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10165344 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07921816 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129849065 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088766571 seconds)
  done (took 6.249191213 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.709933202 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.126710207 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070683713 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.132199526 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117716656 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074922462 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.734902377 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113560593 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202023892 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093513251 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109794165 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072405086 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101872047 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085760567 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.130977262 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103657587 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11662318 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0732104 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124355316 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.121657356 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069053858 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114857502 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09053465 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.400999489 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067939728 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09203502 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069385631 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069927825 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.156483489 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080141625 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071498601 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.165807116 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086471103 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.145873135 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090005185 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06957396 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068558226 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.103957056 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.204523436 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.181934427 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.153489368 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068354349 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067978354 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.091343841 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090496408 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090028316 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.134962539 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081717473 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.141898471 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091785213 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071096428 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.0891151 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070941896 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101064495 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078647558 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103256328 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.251710163 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089102897 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070530604 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071700776 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224684474 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080666179 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102348604 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0922875 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.179545411 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069314274 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.741541465 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086971644 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068578908 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093214719 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068461979 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092120231 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070937658 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142435157 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.380114075 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071582741 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071504735 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09131088 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.17385854 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078317765 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090971495 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136436059 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068490574 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091734335 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071403617 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069520926 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.161907514 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082351134 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069381638 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091063218 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070647261 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090145585 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069186247 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.187326039 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.102253438 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081956933 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.183737028 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091207947 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.135613914 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080674987 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092119425 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081708007 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089919826 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072332665 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069516603 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.101198897 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.118226629 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080627972 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091896599 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069206088 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.122677495 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080578671 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090562593 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079466927 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.422540483 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.102897541 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067790597 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10347188 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069117959 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.137161895 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092066325 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.206432825 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069105849 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102810902 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068445513 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08981134 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068561001 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.135133046 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09202881 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069435505 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068805715 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092564323 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080401013 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.180526495 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071215964 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.183931699 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.157264783 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.091991661 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.143312301 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069348453 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141821802 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091806538 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071585524 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070993108 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733161581 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069555389 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06906332 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093250048 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161683796 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070250102 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101848086 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080279728 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067321673 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770954934 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079905164 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099649441 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07996313 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093492578 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069451761 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.090556942 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070856064 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133939213 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.190824653 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071830309 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068110213 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100410935 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.135508802 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.0677666 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10128225 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078247662 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101722879 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068763973 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091988342 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081935013 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141559369 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.101525847 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.16129203 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.553456102 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069416359 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099155539 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.170912421 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089373676 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087088829 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068911543 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.105772136 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136722998 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099681427 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.252037707 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.137861951 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.162193835 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080177584 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105910445 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067255855 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090372728 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081148221 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090213499 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070572455 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.101339425 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071783995 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069961024 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.107334901 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06924448 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199555956 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090188664 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080250507 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090406965 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071355287 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106309337 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069134636 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070265613 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103444821 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070318709 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100939596 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.813967899 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077952223 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067628952 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092107685 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.164276017 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.138326566 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068091703 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091478189 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071186979 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.133656154 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.181262263 seconds)
  done (took 30.994807382 seconds)
done (took 49.127091245 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258590566 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176551314 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.250960006 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118395876 seconds)
  done (took 1.912368981 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145365669 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101507825 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118326571 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064482141 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.12653819 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08714506 seconds)
  done (took 1.681144776 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.390195904 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.238575071 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231877055 seconds)
  done (took 1.894169254 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.223329214 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235858154 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.417888247 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.274076107 seconds)
  done (took 2.29261156 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.16878241 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115555792 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067778363 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107013457 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.166078893 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210261403 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12564534 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.172710936 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079173971 seconds)
  done (took 2.298770865 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.167850241 seconds)
done (took 11.275572237 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094880642 seconds)
    (2/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163383716 seconds)
    (3/309) benchmarking ("sort", Float64, false)...
    done (took 0.125502428 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.12119379 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.128528306 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.094508644 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074690571 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.082226084 seconds)
    (9/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.174667826 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.181780822 seconds)
    (11/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.21955063 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.138996555 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078593046 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.211956741 seconds)
    (15/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.113153723 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074408845 seconds)
    (17/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.100594063 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.19640713 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192662539 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.133935571 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.247306013 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.236041499 seconds)
    (23/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.202713341 seconds)
    (24/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135180713 seconds)
    (25/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073760099 seconds)
    (26/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.196988239 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.114876199 seconds)
    (28/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.151961364 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.12083655 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071299698 seconds)
    (31/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095723548 seconds)
    (32/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123331728 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06585752 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072208775 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085452698 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.148187 seconds)
    (37/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.2212285 seconds)
    (38/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.192506271 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065274486 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089618041 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087713918 seconds)
    (42/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.231735437 seconds)
    (43/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095098592 seconds)
    (44/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077439418 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.136599616 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097472062 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096215824 seconds)
    (48/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077675961 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098140449 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089140214 seconds)
    (51/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.223774 seconds)
    (52/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.098295916 seconds)
    (53/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073811856 seconds)
    (54/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072385002 seconds)
    (55/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.099383427 seconds)
    (56/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06970659 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.089765512 seconds)
    (58/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110753206 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.184302119 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.172558526 seconds)
    (61/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.137391958 seconds)
    (62/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.187263473 seconds)
    (63/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15656018 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.118557144 seconds)
    (65/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.110765008 seconds)
    (66/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.101838203 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194761213 seconds)
    (68/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.15656588 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093338224 seconds)
    (70/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.103101024 seconds)
    (71/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.087320859 seconds)
    (72/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080373801 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.212583114 seconds)
    (74/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.169741689 seconds)
    (75/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.174004953 seconds)
    (76/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.099109022 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08950726 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.178080035 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081812567 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115369304 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.068318039 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200957754 seconds)
    (83/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067789493 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065942972 seconds)
    (85/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076825606 seconds)
    (86/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096795262 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.163354191 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137802594 seconds)
    (89/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.158765176 seconds)
    (90/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.178864074 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051761781 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.116729106 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069352342 seconds)
    (94/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051551378 seconds)
    (95/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.075897091 seconds)
    (96/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052358469 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073170191 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.168769575 seconds)
    (99/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.118754692 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.095552287 seconds)
    (101/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090048658 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101203237 seconds)
    (103/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.147398416 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097309619 seconds)
    (105/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.153721758 seconds)
    (106/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097150734 seconds)
    (107/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05422292 seconds)
    (108/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051194938 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.118579933 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093578144 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194473935 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.165612445 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089628686 seconds)
    (114/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.110748382 seconds)
    (115/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108597139 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09341512 seconds)
    (117/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110913483 seconds)
    (118/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052475448 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.188306881 seconds)
    (120/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052563175 seconds)
    (121/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092583291 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.158497538 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075451975 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.07699913 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.090352503 seconds)
    (126/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.270206727 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.117841827 seconds)
    (128/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062142338 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077110974 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096839221 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066505017 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095194087 seconds)
    (133/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068131576 seconds)
    (134/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070002372 seconds)
    (135/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.07408662 seconds)
    (136/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.115474123 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074135992 seconds)
    (138/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.101923159 seconds)
    (139/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077407087 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096097568 seconds)
    (141/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.138079114 seconds)
    (142/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07481247 seconds)
    (143/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083184142 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065924554 seconds)
    (145/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104035613 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06640536 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072600071 seconds)
    (148/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.194702657 seconds)
    (149/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075641587 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07534859 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052335625 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.098597923 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.105226867 seconds)
    (154/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072654323 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097571144 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108450085 seconds)
    (157/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077482455 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135563821 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077896759 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06672634 seconds)
    (161/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070025663 seconds)
    (162/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078064242 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072433644 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072034623 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098571623 seconds)
    (166/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053019695 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096662825 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.114027819 seconds)
    (169/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.197158928 seconds)
    (170/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063360009 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186916479 seconds)
    (172/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076733893 seconds)
    (173/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060302795 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103382765 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080613036 seconds)
    (176/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.130644218 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079054034 seconds)
    (178/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052306124 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.091108681 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146052981 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.138686239 seconds)
    (182/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051937706 seconds)
    (183/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.085980298 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077091688 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108279084 seconds)
    (186/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079906412 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08952643 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065783222 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05200351 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050524871 seconds)
    (191/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087500475 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073130353 seconds)
    (193/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052147932 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.177907655 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067861977 seconds)
    (196/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.08189988 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068091347 seconds)
    (198/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.163661371 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065388758 seconds)
    (200/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102898539 seconds)
    (201/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097592932 seconds)
    (202/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06548881 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.135184324 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05150579 seconds)
    (205/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060615374 seconds)
    (206/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.077521134 seconds)
    (207/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065387123 seconds)
    (208/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065536115 seconds)
    (209/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210671888 seconds)
    (210/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.076015465 seconds)
    (211/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115724593 seconds)
    (212/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07634859 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069216003 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.0724035 seconds)
    (215/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077282621 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076119679 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082727035 seconds)
    (218/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.132485255 seconds)
    (219/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052167235 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051391427 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120758483 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089771655 seconds)
    (223/309) benchmarking ("sort", Float32, false)...
    done (took 0.125937 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070464868 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093484431 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067142004 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067139261 seconds)
    (228/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.092065119 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052077827 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064422312 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093366826 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091194178 seconds)
    (233/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052580783 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.096126973 seconds)
    (235/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051735773 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162409385 seconds)
    (237/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052155382 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.167055356 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073239936 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070771732 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090964754 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051886231 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05165334 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114459209 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066406438 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169188322 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067420483 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164708811 seconds)
    (249/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07143032 seconds)
    (250/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072060549 seconds)
    (251/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.076647223 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051737269 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050817892 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089273429 seconds)
    (255/309) benchmarking ("sort", Int8, false)...
    done (took 0.164897708 seconds)
    (256/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054815885 seconds)
    (257/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051099109 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089359016 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112686783 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093176308 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090599104 seconds)
    (262/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071968333 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.098945855 seconds)
    (264/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079735755 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083593503 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096987903 seconds)
    (267/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073594682 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06610418 seconds)
    (269/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075732361 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074634946 seconds)
    (271/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052488927 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.150976027 seconds)
    (273/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071367317 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.075323571 seconds)
    (275/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.0689273 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066467907 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.158656665 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118564639 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090644707 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052312369 seconds)
    (281/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067676737 seconds)
    (282/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202588971 seconds)
    (283/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052741138 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.07768728 seconds)
    (285/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05290732 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073241243 seconds)
    (287/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.100885369 seconds)
    (288/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.137230106 seconds)
    (289/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.106939897 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065250212 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.092495559 seconds)
    (292/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066880662 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064905787 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.07895421 seconds)
    (295/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053563431 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087784168 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097640719 seconds)
    (298/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054239085 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066564762 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096068463 seconds)
    (301/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089196654 seconds)
    (302/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073789963 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070396386 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065385132 seconds)
    (305/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.0776472 seconds)
    (306/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06969628 seconds)
    (307/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087590412 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.077045771 seconds)
    (309/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064327254 seconds)
  done (took 32.986780768 seconds)
done (took 34.02565656 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082257879 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114656512 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076257409 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092411263 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105582732 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07676793 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.097469494 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079043372 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103932738 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082088046 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103115267 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055520174 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073812115 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099742625 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074419821 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115803107 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078184454 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095985335 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074591404 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065420259 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071894329 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065018201 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066391634 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.081765782 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078693414 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071436458 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071184389 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073471026 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.091734397 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066866334 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06870654 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.097784249 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067042909 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077387685 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096167589 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073700971 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098567938 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077707248 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067116047 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089791969 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075035142 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065981932 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096882969 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074733806 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071180105 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095592998 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073552856 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102609584 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092320204 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0928474 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07565023 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075708354 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.101222448 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072568693 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093409829 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074719835 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070553744 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116160793 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073650252 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092277138 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075731453 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074403523 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096050357 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074659169 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072634007 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074611249 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074418137 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.097581719 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075419761 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071203752 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.091440225 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073505546 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092343514 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067270024 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075799428 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.09995079 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066025651 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071162838 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.097025018 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072615835 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065434464 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092999413 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069110472 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071506431 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092808799 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055644905 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069210402 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096555286 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065468097 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096838575 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073732103 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072770278 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091313254 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077986018 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.0648249 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095837304 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06722196 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.0657761 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092057148 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070678498 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.0654796 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092262675 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07517553 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067283797 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096704314 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078870423 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090187323 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072615227 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065059562 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.089807286 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081327997 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098431241 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066795299 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068723033 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089787095 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074694574 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064391881 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064705312 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065240696 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065093971 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.098112497 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066381919 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067980248 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097743403 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078602744 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08931579 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071018138 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068338491 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.090041218 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072480822 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065985984 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090036297 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069050082 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062204129 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092375058 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067572086 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072812575 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092510201 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074404747 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067107735 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098407384 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070799911 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071258468 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070200052 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064273482 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.084610326 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07007664 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068409042 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.092000422 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067460629 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067710943 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089496464 seconds)
done (took 13.231172241 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06810128 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169620819 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.123058033 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098009539 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11110575 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066893807 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076184733 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127700906 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091822153 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104287208 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.1115681 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085723139 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.138867738 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065041019 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.091034151 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07099387 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06737254 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113998989 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125668598 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088208008 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.135767247 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066048975 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119595676 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09055577 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11293281 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.117344236 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06818652 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07024956 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093843039 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101929158 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110777231 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070995957 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066140998 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124283443 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118018592 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084776911 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089742595 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085173995 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066022345 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.091070624 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.087414415 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123673333 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079181526 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079589055 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097969686 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070724101 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067993827 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083650632 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088186474 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.106523434 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111271346 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.107035857 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.094248121 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082278352 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.089618927 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087384151 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106039284 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069324905 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066513218 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.094105151 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066556975 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069653496 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112227261 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114558408 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071103629 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105875664 seconds)
  done (took 7.301592281 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085022711 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090185641 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.109471442 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083697184 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.092062249 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066576254 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066670279 seconds)
  done (took 1.697565733 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068720928 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089102115 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114310216 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089214354 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110210008 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087673839 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101369466 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068379172 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106982673 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069885375 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087950633 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12836883 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068960353 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098786753 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091982081 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090783163 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092726226 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066513252 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095228085 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090728954 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093982881 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087220946 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069153472 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066379294 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079512168 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.093486385 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115724502 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096846777 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069532068 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070344672 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090443355 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10881683 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106270546 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074726863 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066428105 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080408412 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08077133 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092931205 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084212163 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097756777 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082665096 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067828711 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093407056 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066070515 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.0715423 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103073069 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06860112 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092136862 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071122887 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086700634 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067309347 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079100619 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06625692 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099126857 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069343796 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096684668 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078103584 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068250876 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112934105 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068889828 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108091881 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084879652 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104382521 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084729173 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070017994 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10622087 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080873267 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.094509498 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069550825 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071126766 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109342835 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066397527 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068118834 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104274973 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069896268 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114588713 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090511591 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093022072 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079364298 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067153486 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093662879 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068445141 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088964821 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069935831 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066522393 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098045421 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072043296 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065593922 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.092751414 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072639404 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065383571 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.094654775 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070993348 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066629091 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095273097 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084133821 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.093238891 seconds)
  done (took 9.361164792 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070091682 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068850938 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094063596 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069286669 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067748704 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093140133 seconds)
  done (took 1.579214571 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095995272 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093636459 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083142298 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073098612 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.130080721 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081945429 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108208054 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103524702 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085773949 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079174945 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107764434 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.082410005 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.113394744 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073265659 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.1072097 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07308368 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.106827894 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077479766 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.10332822 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074833802 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.112487303 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074529111 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073399573 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107469137 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071866877 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099040996 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077738804 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104607208 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080154135 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.10464632 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074437996 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071107799 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096672978 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079843506 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107552421 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.0709191 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097579531 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073308418 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101583918 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071937116 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.082042962 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072684762 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074026862 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100088701 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079905247 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.09760324 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072800627 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101731125 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08241864 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095832793 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073841011 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073228811 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09677998 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072691328 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095409711 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080604472 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096173138 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083382163 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073122682 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097219899 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07010843 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095763857 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079730546 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096438511 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08145757 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096334411 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073033979 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074097628 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09965306 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073402222 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096336459 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071279768 seconds)
  done (took 7.431890164 seconds)
done (took 28.466442081 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.673934138 seconds)
  done (took 1.788561965 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.733823049 seconds)
  done (took 1.849907205 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.734894938 seconds)
  done (took 16.849913103 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.600949631 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.754549767 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.845687644 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.15709731 seconds)
  done (took 3.473855928 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.913280617 seconds)
  done (took 2.046979163 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239062088 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225330251 seconds)
  done (took 1.582405853 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.77670713 seconds)
  done (took 1.905519663 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.251908133 seconds)
  done (took 2.371776388 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.293600739 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180294881 seconds)
  done (took 1.605360801 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.48800039 seconds)
  done (took 1.617935843 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.854631043 seconds)
  done (took 7.989352516 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206300974 seconds)
  done (took 1.35147985 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.266971487 seconds)
  done (took 1.406914448 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.335228531 seconds)
  done (took 4.468891412 seconds)
done (took 51.436200815 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079685639 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081542498 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106372792 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079103934 seconds)
  done (took 1.475256309 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078486293 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073344964 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103421487 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073143799 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102300683 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07362363 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074016966 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075679979 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072021581 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.101362207 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074102731 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07276983 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.10146353 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074599019 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096315434 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076487087 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100717363 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074919063 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076788153 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098188504 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071828042 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074370681 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102024866 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072087725 seconds)
  done (took 3.134692781 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078841832 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072148684 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098982552 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072890698 seconds)
  done (took 1.465904678 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079037786 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09185158 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115112445 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077519261 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118408879 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112650005 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070138883 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069268018 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096619764 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078466034 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068331462 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.123893065 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112731529 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077886897 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078796716 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.09246631 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068996618 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113038444 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07767574 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076922642 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099574194 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077340516 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092990121 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08970243 seconds)
  done (took 3.302975171 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078699883 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102203031 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104234346 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086197171 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116955139 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066178948 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101091897 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089626731 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149392005 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065883143 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095547668 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067577404 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07316211 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.090952034 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077385344 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.130300324 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110376089 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068156193 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.122328313 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065669228 seconds)
  done (took 3.007467185 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074399729 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070360607 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090120996 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07024165 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076981905 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097843915 seconds)
  done (took 1.62890089 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070087726 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067650788 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09231729 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067893876 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07180965 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092398964 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06716233 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067042912 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066688661 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066067248 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065890181 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09380189 seconds)
  done (took 2.032374907 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.397875371 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096659528 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069681658 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091432642 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072032517 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091310349 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082478275 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068284651 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116829084 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067865764 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066783411 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.096188519 seconds)
  done (took 2.462112712 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262203353 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07764069 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294097921 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164233982 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140753703 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144756876 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131647403 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140653397 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.17390332 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130588853 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223742752 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198139727 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106357673 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166673205 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116581154 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099797415 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213298253 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191489801 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102422939 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222572948 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17398066 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153100934 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176382331 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129139619 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133701203 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150886534 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071503021 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107293918 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228331125 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160275242 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175653296 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139052423 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121701725 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203944968 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229793775 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170682339 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163022872 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084509847 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156435097 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162381914 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257625585 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116285517 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195883741 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135343661 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106858931 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169625537 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148482863 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147890867 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134793733 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089688244 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201954212 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211864206 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194139337 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087497308 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138706948 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142354979 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143300985 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130255315 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238527259 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189990239 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154165791 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097836114 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098937444 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208478353 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158830872 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.136260784 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155230993 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119187568 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161357365 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183428963 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146736377 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198458666 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.159295869 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113301205 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120230705 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194737284 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157635726 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199140482 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151677393 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099590907 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152255081 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13105932 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081546403 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168477587 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075696409 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229775674 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124877173 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106418631 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140185751 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135937353 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136925434 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218541205 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173966243 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129720477 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066197209 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13087886 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.147450733 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177908652 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086318955 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133814508 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145706642 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079034183 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166913006 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101362834 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150731944 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076040461 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151871706 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157967721 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074806235 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152052421 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101687976 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128376809 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161467863 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217018606 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088677743 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109710325 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195840106 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150989284 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132688327 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19978177 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18675401 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125900873 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129494162 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182135497 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238185493 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089251598 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219863554 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134980438 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083792862 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115407728 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124367271 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142351585 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150065618 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082970185 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.14804542 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22621789 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074998893 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123559729 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161981875 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105621833 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080893806 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131564993 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128749245 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.121611793 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102353062 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133282902 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169627321 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177076919 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108782539 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123835776 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129402901 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228009602 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116416749 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10176133 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10366547 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069589578 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195490768 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156606763 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108125655 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1957781 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.151626238 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134503763 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147759534 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0825809 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167949775 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080349778 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071050915 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203700157 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138717008 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13790388 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18210704 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132568758 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156005161 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148625518 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164774881 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1617195 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.157257755 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134418152 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114749649 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113724519 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181927373 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074203385 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119951867 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081067093 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131849787 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123635028 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083443994 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199709805 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15394567 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127633555 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113326372 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125778607 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174677935 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104333801 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158791369 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146149697 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121731466 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182430023 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180759836 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186586653 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101540508 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203770191 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070985965 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100762512 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091962715 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151220556 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111233354 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084564105 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115243821 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205028974 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158110411 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1675856 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139514818 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150271384 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183256797 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068490222 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113130361 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175928198 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148935584 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.130088167 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09216533 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097556008 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200917181 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110496912 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240015355 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141160449 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152409423 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212252489 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.125756711 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082174651 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134513977 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166067412 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133849608 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174638772 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127722536 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115994538 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139033564 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075414232 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129694816 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157420598 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149170345 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163914218 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112600577 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192617608 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078414561 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150412067 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149443436 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151266657 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.090896795 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149962585 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192426035 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121963795 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147454466 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210412816 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081828154 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152888111 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204689675 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140952918 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116257657 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140023462 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146237465 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157145556 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148849806 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169779594 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139427729 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164477301 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110149595 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084026292 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116638956 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098176569 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134757687 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.124047392 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138713298 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14330781 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094803947 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160952598 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104293302 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108107019 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148506558 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125428396 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089801001 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126279868 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231475885 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12184628 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200971049 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129071582 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.174827047 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223357624 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100880297 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08081571 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104976998 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169860905 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085393172 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16156594 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.127451809 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13344093 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154196389 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171817891 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122690984 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069727065 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137337883 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164376615 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140459227 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1253601 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13245079 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194529383 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128037245 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081103518 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143229292 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133199213 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103379383 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231399659 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.088916665 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099499577 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103133523 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082239529 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157020215 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211198029 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081510982 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152915368 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149313362 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139602368 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157744171 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130445927 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10068519 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142197606 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208524221 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159955939 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090202369 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141518518 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185416248 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187796965 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134011631 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123392978 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203008067 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209334106 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19146221 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11738512 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114809218 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144003414 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109192529 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201039557 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109649152 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196647436 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11000479 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166537438 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132815723 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136081861 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160691667 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098082394 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086063909 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208162912 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147437937 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084125257 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10545409 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148424489 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150514669 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135323642 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077370403 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168916953 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100878578 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162184607 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227151823 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083626043 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132838049 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095928912 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078782868 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138903661 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131947186 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087285304 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.148086957 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233439171 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089331717 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209117542 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17112658 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143153437 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194831045 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100448287 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664408371 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107221413 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150429783 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151539773 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233832824 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126241928 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14732732 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137274885 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154162352 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175935212 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104674513 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203843998 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163458439 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.146158615 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080309048 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133009391 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131759096 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116257809 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10748598 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14272897 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145781395 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.122654393 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.145093883 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152776238 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109659641 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097111817 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214198122 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147668638 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175582943 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16936879 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113921029 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147949626 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170229698 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108463901 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.152984507 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182426802 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136756825 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127840418 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.107109054 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104201091 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228899052 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073576443 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221937836 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149755446 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1381122 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141967115 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144481396 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160556648 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137165624 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151314705 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121847586 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.138880938 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141377982 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083333566 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105382125 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105074287 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14156906 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126538856 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127491614 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122888637 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207607657 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072587022 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126135353 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131281976 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177103379 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235182111 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087878541 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111708344 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150144513 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14325661 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143188905 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152067864 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080724203 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110904278 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082171297 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131018975 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110488073 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140674364 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134479608 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140082489 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22299841 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084267435 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251375618 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095941032 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133441816 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.096600527 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081755318 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124571295 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125196365 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110336068 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129520576 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228502349 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095949709 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119141104 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093338634 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07309508 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112022215 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157954116 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139621081 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14763599 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099341772 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.091050626 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138068316 seconds)
  done (took 69.68953145 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.135020224 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108923249 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.124384876 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176315828 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151093067 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241961423 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.185097536 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228048726 seconds)
  done (took 2.569039565 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071126372 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121530811 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100857882 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.109992375 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068296284 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.096225874 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.251868785 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079178387 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.096598779 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089657834 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.108318397 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095889679 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.490899339 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066739573 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093737454 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064005986 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094740111 seconds)
  done (took 3.314932974 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.436272902 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.66131403 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.424365298 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074653018 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.005986996 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111885278 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.537637808 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.169014259 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095350029 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.447801401 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.724464582 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158934343 seconds)
  done (took 18.067363371 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075579615 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069349932 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111838584 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084472455 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071366189 seconds)
  done (took 1.637120274 seconds)
done (took 114.922410955 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081044701 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.359411808 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054009919 seconds)
  done (took 1.67337503 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08476373 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084792389 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113231484 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082722641 seconds)
  done (took 1.600210721 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075207336 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076412408 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112765325 seconds)
  done (took 1.496627274 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.283924674 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140070652 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085379455 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083618635 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077926322 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105551147 seconds)
  done (took 1.505416556 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073852743 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074777992 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100548675 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076810377 seconds)
  done (took 1.555868015 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077390748 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052312941 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054655403 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08390071 seconds)
  done (took 1.504609722 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087794721 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078175884 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10625224 seconds)
  done (took 1.499893329 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107893396 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113244655 seconds)
  done (took 1.450968006 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082474423 seconds)
  done (took 1.311026145 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100843771 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141830923 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157142642 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138659747 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167138897 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136990571 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085605106 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116461897 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105087556 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088429033 seconds)
  done (took 2.47317 seconds)
done (took 17.891691949 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07975655 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.386766665 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36257663 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090066229 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.69823709 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356091123 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.00815179 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092052472 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150079002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095180367 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085165159 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646397902 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.964897785 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32234304 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.986424946 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323875197 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648030776 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06702544 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066451153 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097469075 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965206099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067255023 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095837072 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068761537 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677420247 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372788365 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067085417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.351441671 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068515591 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095402654 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356361525 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068177598 seconds)
  done (took 16.004545928 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072126827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143728538 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075195663 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083623784 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099029505 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06967867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.09925341 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070630722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152262728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068442156 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111816626 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069349953 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.0718979 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096783081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088022482 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067144949 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067439233 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067358453 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097726154 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06999119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086198646 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09629418 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068233442 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095169611 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06964885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079384226 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096513062 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069082563 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067971275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098544191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071052282 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09559009 seconds)
  done (took 3.976576877 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11663626 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15413083 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07457956 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13090029 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1126575 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09884927 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169893575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095654781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15566044 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068164784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112705095 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069058216 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128338488 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070667202 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.0873671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09736281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069190154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095476752 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069214619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068851328 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115356865 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067929233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095611828 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070508107 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069129668 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110075914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069129293 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.095345605 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070651101 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070118208 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09865285 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069496417 seconds)
  done (took 4.283231011 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07391112 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075321274 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110894888 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084090124 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068938868 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100240261 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072860775 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096353014 seconds)
  done (took 1.927780333 seconds)
done (took 27.428149424 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080071907 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069701021 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.09961194 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081782655 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072501883 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.106769451 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067600732 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102081395 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074100977 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07345524 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102955488 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068613714 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070514438 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09607977 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074805675 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067401851 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.107970922 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071567293 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.106350441 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079793146 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069611675 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.10262571 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074429424 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.10723703 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079644964 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.106116483 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079067962 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071829659 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.097968896 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071001106 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076227653 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112154365 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068830841 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107412372 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069283933 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066999946 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099945471 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068567641 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.106196479 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078445242 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070293746 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104839102 seconds)
  done (took 4.795001573 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088635291 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090642559 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113314661 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061770762 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066202694 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.094483591 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089093229 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087673754 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060643591 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08736099 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.083776733 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060830703 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063227955 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05407976 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.08877463 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057360387 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061395337 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.083854219 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060558687 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060519074 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057662383 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053465642 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059172334 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061543822 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.086904437 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063478021 seconds)
  done (took 3.139970828 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07614558 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084796413 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116564126 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126233214 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133109626 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076999243 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107121816 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08777702 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113713291 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069311719 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07166657 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.123149952 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08862848 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10164232 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069328499 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086373427 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.111618841 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069383705 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100828331 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092016512 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084608508 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.106326924 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093690841 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.109534919 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068284304 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069812926 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100693278 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081839746 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099924608 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078186045 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071162203 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.100087427 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070305704 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078051464 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070324191 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068551754 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.120474134 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077938821 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.106705113 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070524949 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07165209 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.097176525 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090735618 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.150907051 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068126575 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074192513 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10468346 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077272516 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.095948149 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087446144 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078595309 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095840311 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071249938 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066679495 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096309 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081458473 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097632436 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07174256 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076757314 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099737029 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081052497 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071244578 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111879727 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067245055 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103933753 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067692091 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067840227 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095322425 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093603183 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096860639 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110279686 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068523362 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.098340981 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077767299 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104129183 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074760933 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067834258 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112101087 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077809507 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09845396 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077586587 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071323328 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099397138 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088725192 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069675532 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.098247379 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069444349 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100889053 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07212202 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068966565 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109145024 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068240739 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070171117 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113419851 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067096027 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.096603296 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074843047 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071816749 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096620664 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07950174 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10062575 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069690887 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075874795 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096355621 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071204397 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077083006 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.103028469 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066361202 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.099680125 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074114513 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067941012 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098189626 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071618578 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069133915 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10618684 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074267569 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10078407 seconds)
  done (took 11.476600941 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.187043112 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154337687 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.100819274 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.174552917 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077343918 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079107358 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.176826937 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124388417 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068513442 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068179141 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.09927574 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115466536 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.137545538 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.150881256 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079336511 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.097659422 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082895228 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.146119634 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.177804103 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141966923 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114082993 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076558678 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.099538973 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070189476 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074107427 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.11199373 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090097741 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105094033 seconds)
  done (took 4.44080072 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.0827871 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128123061 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074954729 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088209429 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12073045 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067398221 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.099647327 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070560532 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079949514 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.108904461 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067323002 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.102029326 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074579142 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.101664222 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069530659 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074029374 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.104185441 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069840114 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069779948 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102147563 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077140707 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.109267012 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07268707 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067288335 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104075066 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067021061 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.093951135 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085841256 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.097136519 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090814901 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065299237 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105442901 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081758552 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098362886 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070116936 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068070578 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.096343379 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068864839 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070177147 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095849871 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067731642 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057735457 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096504162 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080277672 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10297448 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057892497 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073515245 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102083149 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073565384 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065692751 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069717527 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069479875 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069974282 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106485084 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07274047 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100848243 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070674629 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066060266 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103870779 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069440196 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064334724 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094492714 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073978328 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065591266 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105253166 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07195566 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094210646 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068902947 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069501479 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102102461 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068845402 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070617243 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06483624 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068617682 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071223383 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.101720273 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070074297 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06606746 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.097466728 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06836266 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055206681 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09734691 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054982079 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.06953933 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095711732 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066278603 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.0948197 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074662516 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080080488 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068143427 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072949899 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098894556 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068571724 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070886567 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.089723861 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071848363 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082636984 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113808457 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068207153 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.095799333 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082776575 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.101175879 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068793467 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057377837 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074620569 seconds)
  done (took 9.82248035 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.0951664 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087670378 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099643967 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084438438 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.119267726 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088965714 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074386957 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.10731403 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069552171 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.110862173 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075176772 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076707792 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09724405 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077682865 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093853167 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.107130676 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070436856 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.105444771 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073055318 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100174151 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112089266 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081546465 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.103652811 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069283722 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075374729 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078728695 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08854447 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.111124562 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079283458 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075175071 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109887936 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090995603 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.103290231 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073156403 seconds)
  done (took 4.341596821 seconds)
done (took 39.255371084 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.356418339 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.555009363 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.318459323 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.293671189 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.376080609 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.336613126 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.33176085 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.32615414 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.808839774 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.321577503 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.58056246 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.074177727 seconds)
done (took 60.94596479 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.37506113 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.461833864 seconds)
    (2/2) benchmarking "String"...
    done (took 1.594151681 seconds)
  done (took 4.31966876 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.724034125 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.250319796 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.583817452 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.321821192 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.321863217 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.642790257 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.067281193 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.217128201 seconds)
  done (took 28.66647418 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.326961819 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.710067774 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.986068198 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.914028796 seconds)
  done (took 19.200009206 seconds)
done (took 62.545500594 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.322965928 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.364927276 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.331315241 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.307649047 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.435378964 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.357743575 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.566028173 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.528743771 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.325655821 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.31339894 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.323547808 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.32204927 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.333070839 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.566094996 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.338346469 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.323289748 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.39240277 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.772069074 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.721721316 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.329687934 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.35393399 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.396287258 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.341904817 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.325991127 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.355293421 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.325699351 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.324477047 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.331320874 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.746919719 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.329289285 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.431469696 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.749423647 seconds)
  done (took 195.550898402 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.324325226 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.200903078 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.301480967 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.34751044 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.771056518 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.523401705 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.460706518 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.87167142 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.341573661 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.32658738 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.528443769 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.324436293 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.584466526 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.29283774 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.333989214 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.410365205 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.534112097 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.60527112 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.339788268 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.598522811 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.349288177 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.357954296 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.283119857 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.50618569 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.368990483 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.364317119 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.33245914 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.346029182 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.51810269 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.465000757 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.35679658 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.340725679 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.937560562 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.184151709 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.351348499 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.358176062 seconds)
  done (took 153.704554661 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.873583829 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.324877182 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.327929384 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.328531278 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.359877144 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.326062602 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.880627608 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.875483223 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.8213799 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.723516373 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.389923942 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.539294157 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.326589153 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.420232362 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.340108638 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.326503844 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.328175645 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.340976826 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.351374848 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.327174501 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.327383039 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.877822684 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.338797761 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.366280605 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.336258073 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.327720405 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.35887408 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.719988289 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.327514269 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.359331926 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.648686137 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.375152324 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.328086365 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.64844488 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.951275871 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.43898568 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.328397 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.359811325 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.327203001 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.598819198 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.329221339 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.328085536 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.327568747 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.328872217 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.331220427 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.937114118 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.329747794 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.88129526 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.328258511 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.258942667 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.330419041 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.328843951 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.787187375 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.863514168 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.330601662 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.328483236 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.330765753 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.328271537 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.32859403 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.361027729 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.769560172 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.427872213 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.329368121 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.332297996 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.360782327 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.328977923 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.331421857 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.332144345 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.907428553 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.38447579 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.443291625 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.881880719 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.329809441 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.42354646 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.448228789 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.329349991 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.328899938 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.329713584 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.329480549 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.437262739 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.330730159 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.736192555 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.335876826 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.330698401 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.391272899 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.424201601 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.330866093 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.68007807 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.332716268 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.328988188 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.032794734 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.423442672 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.330463696 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.329746439 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.330920363 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.330981057 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.740989313 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.882717198 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.512529001 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.33345326 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.787433173 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.334615626 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.752046842 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.869952306 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.972939356 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.334175512 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.438859938 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.335169501 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.333346276 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.32998475 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.361015906 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.331897616 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.388246584 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.333521307 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.729697081 seconds)
  done (took 360.860893978 seconds)
done (took 713.251476536 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.003831855 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.000137349 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.109884515 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.989368882 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.954446342 seconds)
  done (took 11.327433952 seconds)
done (took 12.59666792 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527135102 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.52741905 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.394081871 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529260414 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.362845246 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546769755 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.507276574 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.351046815 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.437715994 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.416732255 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.437974366 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.388238567 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.360734453 seconds)
  done (took 20.058802888 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.662997114 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.652717292 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.396823957 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.658536483 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.371258145 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.667547347 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.530357903 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.546026498 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.527815789 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.34672649 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.34726318 seconds)
  done (took 17.980658452 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.667183836 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.660090982 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.39804884 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.665443039 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.374398243 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.668610351 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.5383776 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.546787398 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.529814111 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.345867669 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.346518919 seconds)
  done (took 18.01369743 seconds)
done (took 57.3239004 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.341949916 seconds)
  done (took 2.614165015 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.374028041 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.540945684 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.358859906 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.351532157 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.34256066 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.342717926 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.352914694 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.343721391 seconds)
  done (took 12.282113446 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.339391361 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.342288164 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.343408361 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.342103389 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.339393099 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.339257889 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.342226217 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.339750527 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.339691232 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.342148952 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.340252457 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.342314385 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.33910285 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.342603345 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.339782421 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.342898026 seconds)
  done (took 22.731126874 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.342273718 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.340834649 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.339848663 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.34054248 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.340220556 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.340945788 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.342027336 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.339919472 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.339652506 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.340554193 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.341301861 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.340287653 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.341234415 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.340262293 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.340163407 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.342173215 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.340767267 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.341514046 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.345000702 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.341067142 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.340572827 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.339849162 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.341111103 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.340458002 seconds)
  done (took 33.45994957 seconds)
done (took 72.359468318 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.434509793 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.01475367 seconds)
  done (took 9.723498127 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.344659633 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.3433057 seconds)
  done (took 3.964115059 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.344828693 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.343599753 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.343831507 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.34486872 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.344250535 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.343294269 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.34358462 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.34364358 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.345042563 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.34319101 seconds)
  done (took 14.715831137 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.345788123 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.344047869 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.342156002 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.344440798 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.345852855 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.342146108 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.344763448 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.343754839 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.344649129 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.342380083 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.344467983 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.342825127 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.344690652 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.342008001 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.344929014 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.342453889 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.342983442 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.342815895 seconds)
  done (took 25.463776224 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.345556064 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.345869865 seconds)
  done (took 3.967657965 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.343716969 seconds)
    (2/7) benchmarking "second"...
    done (took 1.342840442 seconds)
    (3/7) benchmarking "month"...
    done (took 1.342466609 seconds)
    (4/7) benchmarking "year"...
    done (took 1.343171449 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.342820936 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.342467509 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.343367389 seconds)
  done (took 10.677813168 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.346716702 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.524591304 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.612031897 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.037454625 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.347845592 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.349017411 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.299215331 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.349123766 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.351716751 seconds)
  done (took 15.49486951 seconds)
done (took 85.281956068 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.341218552 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.336489772 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.271622874 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.340445374 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.353364487 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.680328649 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.377756678 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.601136231 seconds)
done (took 39.578931413 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.352371822 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.066121897 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.106031988 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.339525442 seconds)
  done (took 11.789919486 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.328274685 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.310800011 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.330911998 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.414661194 seconds)
  done (took 18.66333874 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.979425719 seconds)
    (2/2) benchmarking "read"...
    done (took 1.673197439 seconds)
  done (took 4.930213463 seconds)
done (took 43.01259728 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.346327854 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.346406303 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.34362817 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.346448023 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.344602524 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.343366155 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.344172398 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.347775834 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.347123464 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.346749282 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.347395991 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.347581687 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346625147 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.348574657 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.345669765 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344224077 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347482405 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.345742079 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343961421 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.344778924 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.345130363 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347222439 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.345573278 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.345303372 seconds)
  done (took 33.580063409 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.348807947 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.345638477 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.347804519 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.347791347 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.346132485 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.347455665 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.348125379 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.345187 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.34915583 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.348577421 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.345910071 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.345196893 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.348223714 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.346437812 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347908918 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.346613678 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.348696471 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346323742 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348897925 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.345846908 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.348570303 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347650453 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.346997581 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.349166399 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.346683311 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.346487037 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.349088902 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.34738411 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.349042139 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.346714447 seconds)
  done (took 41.701934186 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.354574077 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.356116039 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.349287937 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.350490836 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.349700292 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.34991341 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.349634042 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.349463607 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.349143735 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.350257134 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.350093163 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.350041486 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.350279309 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.349461771 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.348808366 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.349429915 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.349995015 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.349720604 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.349949266 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.350990195 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.350929868 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.350027694 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.350448842 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.350371256 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.350605632 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.35051112 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.349770557 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.351572732 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.3511923 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.349491138 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.350413938 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.350360767 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.35033647 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.351637829 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.351512346 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.349923448 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.35600419 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.356889549 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.350886659 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.351038612 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.351563323 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.35037758 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.351473501 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.350873926 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.350837093 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.350790827 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.352942007 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.351224502 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.352203534 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.351584063 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.350893186 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.351414586 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.35191511 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.351574732 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.352318537 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.352368127 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.351167353 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.351980714 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.351928405 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.352703454 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.352413498 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.351926192 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.351550882 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.352343276 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.35182142 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.352804549 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.352898881 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.352928456 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.352493727 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.351861946 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.352700385 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.353459594 seconds)
  done (took 98.57599483 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.353230877 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.350413692 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.350088725 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.350490489 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.351554809 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.353316278 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.350732506 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353714705 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351231473 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.352667398 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353505352 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.350811964 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350405771 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.353085055 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.353673399 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.350296062 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.352916398 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.351437657 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.352900814 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.354041248 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.353123554 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.351571526 seconds)
  done (took 31.029185483 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353478369 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.353722959 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.351320602 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.353584375 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.350992156 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.354310588 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.354823256 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.354822213 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354569242 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351848788 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351305802 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354507953 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.35153959 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352098795 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.352009255 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.353461333 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.35511201 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.351260722 seconds)
  done (took 25.640560422 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.352846259 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.352848878 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.354845269 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.35199486 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.352118159 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.354691961 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.352487607 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.355688871 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.355786969 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.352535052 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.355555086 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355442466 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.355662852 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353255406 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355721245 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.352941813 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.355917181 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353553429 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356583363 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.353700804 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.354137194 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35560067 seconds)
  done (took 31.080384923 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.358904359 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.35603551 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.353507175 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.354645475 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.353069434 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.35628551 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.357127128 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.354093507 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.356110719 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.357906722 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.354122157 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.356223318 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.353666035 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.355269108 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.354618423 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354637162 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.356620926 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.355324572 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356867129 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.354420461 seconds)
  done (took 28.396796849 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.356281058 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.356989137 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.356109825 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35684623 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.357094903 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.356940999 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357233292 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.358581569 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.357719994 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.357506475 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.357728363 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.357883834 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.35783979 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.358324262 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.357877966 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.358134255 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.358111875 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.358867693 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.35824819 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.358000769 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.358731698 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.358389376 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.358726427 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.35892188 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.358430424 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.357986331 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.358738325 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.359169654 seconds)
  done (took 39.310339344 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.359280047 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.35807266 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.355785528 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.356618272 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.355873346 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.355913695 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.356918846 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.355828198 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.358751687 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.356277946 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.359372085 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.358977412 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.358426254 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.359740134 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.359435053 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.359015753 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358920807 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.357175371 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.357160089 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356442741 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.36022813 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35928531 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.359856127 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.357724846 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356763938 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.360221338 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.357712531 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.357657879 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.360699255 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.357717723 seconds)
  done (took 42.032641651 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.379057329 seconds)
    (2/2) benchmarking "in"...
    done (took 1.37819869 seconds)
  done (took 4.048651502 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.357244441 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359542887 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.359914496 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.356477683 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.357482625 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.359706554 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.361057919 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.357143454 seconds)
  done (took 12.159629895 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.361817725 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.361284083 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.360467328 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.360794374 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.360051965 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.362448896 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.370654798 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.378106897 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.363860218 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.362925862 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.368526934 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.370032202 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.365812914 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.362703953 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.36237958 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.363609776 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.361488853 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.360992312 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.361160411 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.361737598 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.360950839 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.364758486 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364925523 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.360050996 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.363740173 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.375662272 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.369165634 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.36331308 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.3638863 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.36829402 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.363484085 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.360024363 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.361783144 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.363079772 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.362451054 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.363322412 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.373707616 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.385067643 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.37192359 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.362362025 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.363347752 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.359861725 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.364435759 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.366957487 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365647574 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.363537163 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.363543838 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.361012688 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.363906396 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.366620669 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.368215048 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.364280589 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.361633358 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.370879867 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.366678805 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.372303559 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.380517564 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.369143451 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.372736515 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.37690089 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.380432666 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.372698422 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.367204122 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.364003789 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.375593659 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.388186023 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.374060465 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.379907693 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.36313866 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.36499426 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.374561837 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.380057254 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.375940519 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.36502953 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.363459891 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.36516285 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.365617489 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.365505836 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.37463925 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.385951752 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.365109533 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.364687987 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.375484736 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.386709942 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.365007541 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.365018608 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.365509032 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.365299312 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.367098891 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.377242387 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.382833256 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.365963259 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.366818663 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.366122884 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.370842343 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.365343323 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.365850352 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.368400062 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.363955013 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.366756562 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.365943735 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.369818885 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.375121137 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365955067 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.364792932 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.376424403 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.366593289 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.366328362 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.378789985 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.366543832 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.36629642 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.368555156 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.375834553 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.363979164 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.370793456 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.375127145 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.366262323 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.369494779 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.366271272 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.3676653 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.377697912 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.393699164 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.367633881 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.367643779 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.373695492 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.37844616 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366818389 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.3734673 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.368127829 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.366054005 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.365891805 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.369801549 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.369344821 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.369480962 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.36863409 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.371760372 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.366281532 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.368422321 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.3676874 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.370344572 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.371168708 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.371014965 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.370433234 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.372470712 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.367944186 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.370993571 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.378102468 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.370655509 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.370199674 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.369995155 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.366554014 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.369526955 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.372270822 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.368995281 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.371117024 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.368490609 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.369476498 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.368386004 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.370731075 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.37002178 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.369305827 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.369607101 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.373520889 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.368895734 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.375823197 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.369450635 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.367446066 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.369744486 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.37078165 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.370709954 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.370890937 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.368341395 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.372659451 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.375822148 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.371612934 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.369104845 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.375961595 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.369435634 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.37067464 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.36967926 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.37424414 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.378830415 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.370087421 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.379693407 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.370257402 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.370349646 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.371799802 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.371679927 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.371502029 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.37115984 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.37482039 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.378699559 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.386008862 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.381929827 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.372217183 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.374655619 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.372978116 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.375468541 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.378069711 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.371216133 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.373190268 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.370997027 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.371764289 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.37172838 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.374742309 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.371238055 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.372033248 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.372044085 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.372429764 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.371847091 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372759429 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.37379661 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.375870472 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.369522852 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.372551039 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.371729173 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.373039797 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.36986998 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.371406825 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.372972112 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.37355599 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.372772917 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.383472209 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.369927871 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.374298071 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.374522408 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.373732296 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.372327149 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.373958755 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.375406968 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.373646223 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.381943393 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.392540781 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.374973512 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.38177734 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.392471666 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.373985544 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.376751509 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.373726648 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.37181597 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.378153839 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.382107075 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.374073335 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.372771233 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.37356478 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.374242776 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.374763868 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.382316456 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.37147121 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.374224443 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.374355387 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.377656063 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.372342995 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.375241854 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.375479478 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.376642002 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.376785449 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.375425036 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.375697687 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.376505069 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.373722124 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.374726544 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.373327145 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.378366534 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.382628053 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.382133759 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.37632582 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.379163307 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.37681411 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.3795139 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.377104874 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.373881519 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.375543863 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.390971234 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.384125242 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.384654357 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.379205887 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.376689984 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.38440597 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.377965207 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.381780345 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.377220325 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.377452847 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.376303514 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.375410993 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.373433334 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.378692425 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.376410269 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.377721305 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.378374384 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.381321182 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.376777261 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.375852483 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.375219404 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.37540622 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.37622414 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.377013295 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.377436775 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.380920868 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.37886154 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.377058816 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.377498498 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.385387612 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.395568884 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.379891066 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.376919329 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.378458417 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.376850617 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.378723606 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.377191327 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.380477411 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.383688168 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.381424363 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.387867401 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.378885201 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.389720902 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.375756754 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.381140889 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.384759331 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.376139128 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.376542913 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.378693719 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.377434387 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.387692794 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.395198316 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.380398017 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.380886595 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.376988548 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.376895044 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.378683424 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.377358422 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.379294637 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.378072936 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.389437629 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.401498933 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.383206747 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.381620238 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.376823656 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.3781151 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.378724202 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.378095493 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.386123799 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.378735494 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.380016782 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.378774694 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.381139793 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.379365442 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.377919012 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.380484466 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.377147633 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.379225836 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.387600228 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.398141782 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.383040607 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.38110382 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.392086749 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.379993333 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.389118814 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.397378148 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.380263443 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.378929015 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.379660006 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.383315382 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.380818876 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.383449208 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.379546025 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.381595056 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.384491321 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.379521804 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.384399881 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.380956117 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.379853575 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.380700878 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.391101347 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.402766098 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.381809602 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.385179093 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.379222238 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.382110849 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.385003666 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.380974531 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.379860311 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.384048145 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.391806654 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.388455506 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.381752952 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.380792267 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.383168265 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38083049 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.380966377 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.382168145 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.380916265 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.381995243 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.384699777 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.380577527 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.388274928 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.381666014 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.382335825 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.383763176 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.383722757 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.394406658 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.381278181 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.3840454 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.382032411 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.382230455 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.383607077 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.383585102 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.381953533 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.384771538 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.383131396 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.384848637 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.390457318 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.389208304 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.387152036 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.382895368 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.382020774 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.386304385 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.386518759 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.383036347 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.38246989 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.383088093 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.384819319 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.38317059 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.386117453 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.382924916 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.383857808 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.384886396 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.384392538 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.387173162 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.391573163 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.384374239 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.38181129 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.384530483 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.384322414 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.383292505 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.385751591 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.396497112 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.38727589 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.39470655 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.393413932 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.38826522 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.385927613 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.387319952 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.392670964 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.3828645 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.386137205 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.383460159 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.388522666 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.386410563 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.388684504 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38393462 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.394756254 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.386510164 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.385357801 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.395907677 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.408255141 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.384185351 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.387136619 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.389859693 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.386095853 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.382836218 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.384894241 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.38442321 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.395085286 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.407089765 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.384098754 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.38804311 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.38352328 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.38679534 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.389836862 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386587397 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.387171543 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.383257587 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.386005425 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.38505738 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.386576281 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.38378801 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.38643282 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.386305793 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.389207385 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.393543627 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.384481263 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.389092256 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.386246941 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.387897149 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.386425514 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386651664 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.38400792 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.385069798 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.386936343 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.3861945 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.389031401 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.390708627 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.387760822 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.387805526 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.388781148 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.386882595 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.391867099 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.397608103 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.395727277 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.384593537 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.387920517 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.388396804 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.391847853 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.38713118 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.38597711 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.388228234 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.390816587 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.389630129 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.387831061 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.388093931 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.391192274 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.40670194 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.410047506 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.388923131 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.388474895 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.394355235 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.388046853 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.385383836 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.388239069 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.391432444 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.391399891 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.394732141 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.387995734 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.396056046 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.406284562 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.389242314 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.393280971 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.391261973 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.397609575 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.391783104 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.387649933 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.388352505 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.395419267 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.407799499 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.388868416 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.399691961 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.420745429 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.407896925 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.390914749 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.388932697 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.389346292 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.3879951 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.392994702 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.388646788 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.389759 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.38950602 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.38895694 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.391029351 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.395766069 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.392383994 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.389738221 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.390385658 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.39102508 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.393167708 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.387365583 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.389531839 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.391276079 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.389664635 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.390464832 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.390710598 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.39190253 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.404535824 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.405292783 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.390713733 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.389087966 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.387768048 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.39610921 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.393513298 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.401746447 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.398457155 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.389795633 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.389630514 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.393712955 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.390276864 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.387925177 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.392896247 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.391745225 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.390758089 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.388024285 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.406570131 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.398763007 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.39866673 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.393449259 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.391433495 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.392115713 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.394847494 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.391124634 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.391072645 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.394573538 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.393456292 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.394573134 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.391686372 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.391953127 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.395714479 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.398595712 seconds)
  done (took 823.5314261 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.39024871 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.38937237 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.389464741 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.389216716 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.388796715 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.389711868 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.390900517 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.389819547 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.389807791 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.389830842 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.390073104 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.389827387 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.389910516 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.391183417 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.390755572 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.389994573 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.390386458 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.390578322 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.391229246 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.390986978 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.390404241 seconds)
  done (took 30.51526772 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.393385772 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.390911659 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.390441509 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.392892075 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.391004707 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.393184161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.390507566 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.392423471 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.392987287 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.391016562 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.393370127 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.393870343 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.391569847 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.391461295 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390994549 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.394854196 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.39444242 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.391758817 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.394195113 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.3915972 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.394526572 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.392261798 seconds)
  done (took 31.958809691 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.394038258 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.393630168 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.394155055 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.392291137 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.395030867 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.392033333 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.394128577 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.396191026 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.394673467 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.39634174 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.395313038 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.396351519 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.401765395 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.399526717 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.398536095 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.395488616 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.538685981 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.394870789 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.394100128 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.39456604 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.393034474 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.402799849 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.393239248 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.393097783 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.395127983 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.394409534 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.396046022 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.396063217 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.394240505 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.396692072 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.398171901 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.396251242 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.395035695 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.398142455 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.395580015 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.397185541 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.399509071 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.394848753 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.393648338 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.3965433 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.406605941 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.416283409 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.395133657 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.405273383 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.396236718 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.396360276 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.400082959 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.402444762 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.39441871 seconds)
  done (took 69.910561331 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.396859656 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.397129657 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.39518488 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.396334631 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.39628748 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.396686294 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.39721619 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.397016393 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.394486046 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.394193414 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.396697583 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.394982318 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.39537252 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.397109421 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.398283573 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.395738952 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.394493239 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.395425148 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.39536296 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.395624731 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.395227706 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.398911895 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.398075808 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.396588002 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.398064354 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.39547374 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.395278867 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.39892276 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.396745299 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.39570703 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.39917551 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.398206744 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.398437554 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.396518705 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.39630909 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.397787531 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.399763493 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.396648755 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.398889655 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.39583264 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.399211361 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.398516046 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.398577004 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.399217979 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.396786597 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.397160794 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.397311262 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.396589252 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.397529397 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.399170915 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.399421005 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.396918919 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.399498639 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.396908225 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.399534668 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.399341726 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.397512936 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.39715491 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.4006227 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.397937934 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.398594348 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.400386719 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.397649975 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.400368321 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.400169146 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.398065657 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.39887754 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.401007009 seconds)
  done (took 96.356528351 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.399213896 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.400177482 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.39912249 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.400404753 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.40040995 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.398485081 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.399466035 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.400032128 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.399951741 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.401764269 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.399514714 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.399942498 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.399786016 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.399543422 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.398854078 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.400106611 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.400552836 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.399563841 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.399740209 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.399292025 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.399714437 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.399742311 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.399110399 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.399545979 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.400663994 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.398489163 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.39990234 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.400164089 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.399565698 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.400557833 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.399739173 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.400589477 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.399615864 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.400124328 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.400085406 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.400248074 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.400137276 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.400684441 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.400945195 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.400425871 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.400414794 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.400517859 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.400207342 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.400372477 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.398858528 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.401088276 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.400012188 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.400866593 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.401913089 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.399889797 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.400842046 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.400598305 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.400129708 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.400090232 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.400985199 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.401216306 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.399841224 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.400755292 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.400667217 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.40145575 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.401420288 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.402202372 seconds)
  done (took 88.142970033 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.401078659 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.401828756 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.39878896 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.399788036 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.400685335 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.397713678 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.400364795 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.399926533 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.400159289 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.400048804 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400984901 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.398204069 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395683033 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398515239 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.396697362 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396452988 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.39672359 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.39671195 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.399244503 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.396451791 seconds)
  done (took 29.309058637 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.3975927 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.398133913 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.396105988 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.396061098 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.398378214 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.394728862 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.396517827 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.396746982 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.393496013 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.395889529 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.396195466 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.397348136 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.392335022 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.39311561 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.395766706 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.393317633 seconds)
  done (took 23.660391921 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.394091825 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.396515485 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.393494624 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.394642295 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.392878439 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.392748381 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.394751815 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.393217273 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.392898589 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.395753198 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.39496075 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.39317888 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.394864283 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.394175137 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.392863982 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.394579123 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.392690707 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.392463293 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.395058301 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.394120609 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.39362337 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.392118869 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.396198331 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.396016371 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.392333213 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.393414224 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.392872361 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.392948511 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.393225208 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.39579111 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.393119678 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.393561164 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.393034682 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.393038681 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.394390332 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.393731304 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.394852008 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.396218866 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.395954798 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.39620013 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.395909371 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.393551458 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.39521892 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.395599563 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.392561162 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.396894719 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.393345299 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.394649892 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.393459039 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.394183606 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.396465831 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.395121934 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.396881614 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.396531532 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.396317495 seconds)
  done (took 78.016906333 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.396594861 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.396519362 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.394892201 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.396808934 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.396173241 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.394357879 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.397619772 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.394416776 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.394615937 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.398422125 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.395554749 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.397478464 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.395241121 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.397578282 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.396283598 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.397355856 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.394608601 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.395081082 seconds)
  done (took 26.456203227 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.395474006 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.394896937 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.398731954 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.395410794 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.396336515 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.400076032 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.395220006 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.397837648 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.398101149 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.394884169 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394547115 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.397586713 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398185763 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.398238406 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.395553828 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395221141 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.397839181 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.39750562 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.39526149 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.395751898 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.399288368 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.399100965 seconds)
  done (took 32.057972353 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.397923044 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.397510388 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.416676624 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.442534612 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.42788495 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.397477305 seconds)
  done (took 9.807596065 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397579826 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398648898 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.396518535 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399112136 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399774308 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396404728 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39637983 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397024564 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398418213 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396926103 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396007379 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398923417 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397973685 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396550181 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399070235 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399185104 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397309152 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397130606 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39821371 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399445369 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3962039 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399721196 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397133252 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39649453 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396582028 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397657583 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399174412 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396974769 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397096937 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399501697 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399467656 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396372115 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399383051 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399880974 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401033122 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399513945 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398466962 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400048631 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400200916 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397963671 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.401708414 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399342934 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399529759 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396620317 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399654109 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397201188 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398800221 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39768519 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396846031 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399731667 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399979391 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398086005 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398910352 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400409225 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399188389 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400188843 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397008405 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396360534 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399764605 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397164032 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396746969 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400319436 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396408671 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397663863 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399058524 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396890024 seconds)
  done (took 93.616828609 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397923536 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.398571209 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396158785 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399097875 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397557262 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398084788 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397612731 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396714823 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397392485 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398354206 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400685343 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398044112 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39721773 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397792458 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397846896 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397192365 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397960812 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397396074 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397159857 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400377671 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397145713 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398035118 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397748022 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397908231 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397859603 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40019813 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397339033 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397883134 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397028262 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3981713 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397860216 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399293722 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397941897 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.399200167 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398635271 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397976841 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399112551 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399381545 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398027734 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401002796 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398652428 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401309446 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399468262 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398815684 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39931397 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398735761 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398981789 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399726187 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399101587 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399075399 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399657751 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400079133 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3998422 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399003826 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398901186 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398988865 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3994435 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399041581 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398597616 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402828446 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399016323 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398693377 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40227744 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399447327 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39869806 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399524657 seconds)
  done (took 93.645493603 seconds)
done (took 1915.82004294 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.417300722 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.423589573 seconds)
  done (took 14.1715026 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.565372312 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.51667112 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.402284901 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.451210464 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.401227961 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.425502626 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.418203128 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.401594255 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.401046197 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.401546507 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.401165388 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.586680402 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.396236581 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.400304118 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.399907402 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.494470621 seconds)
  done (took 44.397786371 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.402376114 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.403100927 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.437779527 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.403505721 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.402851266 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.443436823 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.469994212 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.40383705 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.574232034 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.450335733 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.794227256 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.404304496 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.403481544 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.681048769 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.437072963 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.444903072 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.67118254 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.793618755 seconds)
  done (took 28.353181875 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.841045811 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.423401126 seconds)
  done (took 9.595205685 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.415015995 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.398766982 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.401024459 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.409164179 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.410516196 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.418482615 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.405152686 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.408494857 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.431404389 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.398828184 seconds)
  done (took 65.428577986 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.42136991 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.403671534 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.400783366 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.399941202 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.398723606 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.392637289 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.400183674 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.403135672 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.884467211 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.524280793 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.420412809 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.406027375 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.401444514 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.401406506 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.396333117 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.434834093 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.530050792 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.39650061 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.396684026 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.404457879 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.399306902 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.501265134 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.439822814 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.397665247 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.521047874 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.861939488 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.404936199 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.405596015 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.535120612 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.397764471 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.400212065 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.399031401 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.401648482 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.980770804 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.934030274 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.41780084 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.423177162 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.409107033 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.396204483 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.532727647 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.401875076 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.405290423 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.391702788 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.893919505 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.547761954 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.509766437 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.565984043 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.403759706 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.401373603 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.464450609 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.400732264 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.399519755 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.427027853 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.159909143 seconds)
  done (took 114.681022238 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.430194046 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.881239735 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560874983 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.409141249 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.902116952 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.843850933 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.389795083 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.660884 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.412770177 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.859726259 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.669345182 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.737965458 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.394441246 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.39010984 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.393190725 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.394956332 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.647007128 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.685931544 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.391610138 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.393126332 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.440298999 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.888930752 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.618928309 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.562332466 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.429328264 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.829290031 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.617918754 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.738972225 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.397795551 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.39133082 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.676439016 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.399153885 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.39103867 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.392333003 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.655343624 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.722577341 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.699041008 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.390877428 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.411628828 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.389687971 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.41220177 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830996397 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.713218955 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.630102411 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.753613364 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845880038 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.391763332 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.392871952 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.395548293 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.601176823 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.635538565 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.883676921 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.623046607 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.404284043 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.731629147 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.391805481 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.482512595 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.857376628 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.725210624 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.727618819 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.395972413 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.39023207 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.390456076 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.922580334 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.395507424 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.713152449 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.505399249 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.396538025 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.716749393 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.715081992 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.724296896 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.856642086 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.435177343 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.420051036 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.465162529 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.889246194 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.670544728 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.853048295 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.420600157 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.38863123 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.699639254 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.392764103 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.672742136 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.93857094 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.877512518 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.44794725 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.411871636 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.393370939 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.859444584 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.860896896 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.641815948 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.761375425 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.675651798 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.407244729 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.393635275 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.393684095 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.411268274 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.628952616 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.407523676 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.75677947 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.857220294 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.166189353 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.438982008 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.928422329 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.633927037 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.407873309 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.396477139 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.393227565 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.614869601 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.466720769 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.416155555 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.393048998 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.861139129 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.262694448 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.531720462 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.098732138 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.673432547 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.397019079 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.870850224 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.398167041 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.853892088 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.415211124 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.921038711 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.845678466 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.447930753 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.617481009 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.762739229 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.404877274 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.873639113 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.921679204 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.622596991 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.868555743 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.140223281 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.39171405 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.899075372 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.403174921 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.414594464 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.572175369 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.417484352 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.657895363 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.406957457 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.87695561 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.430311267 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.665227972 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.425784919 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.888221477 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.450721201 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.673489986 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.406516114 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522390864 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.408751287 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.392862421 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.590265098 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.781336457 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.391378588 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.95107822 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.392831371 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553189002 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.92527738 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.43078387 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.679357069 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.39455568 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.398574969 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.703375515 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.433580505 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.148280326 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.396837936 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.667090532 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.362991173 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.854549305 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.392687886 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.924123604 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.617473289 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.413114551 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.394084661 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.192838679 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.394079287 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.456398431 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.565356867 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.807778674 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.396884743 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827536616 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.398198832 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.630402123 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.405554151 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.394930183 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.747973549 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.47509369 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.393102066 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.392368872 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.394731939 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.394791348 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84292446 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.433681139 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.113536443 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.547985594 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.876953495 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.70692899 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.880003552 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.456506204 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.413129419 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.918574963 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.439650231 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.677937239 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.398103507 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.434821685 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.858348005 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.394019441 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.840638212 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.908506503 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.449227561 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.657382689 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.397238842 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.734395449 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.39310291 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.640971124 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.72674687 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.399220804 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.399413368 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.618004217 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.635290601 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.615013018 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.41526014 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.438150494 seconds)
  done (took 863.890605376 seconds)
done (took 1141.849816568 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.399305873 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.394114666 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.380210614 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.388765194 seconds)
  done (took 26.895357514 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.3939731 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.389479219 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.390352408 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.391275031 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.394456366 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.392274326 seconds)
  done (took 9.675841108 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.413886628 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.387847312 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.382707879 seconds)
  done (took 19.509379275 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.595258429 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.590886965 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.735386439 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.419899768 seconds)
  done (took 10.662927611 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.380916404 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.380164578 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.38005352 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.382812382 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.389092404 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.384057393 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.38327067 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.37953574 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.381126282 seconds)
  done (took 13.755417983 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.990663858 seconds)
done (took 86.819787544 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.456217087 seconds)
    (2/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.371699512 seconds)
    (3/309) benchmarking ("sort", Float64, false)...
    done (took 5.628453698 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.703926418 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.381221854 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.60048183 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.406031707 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.081573233 seconds)
    (9/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.909143397 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.163504624 seconds)
    (11/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.345736646 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.377574604 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.400526153 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.358898702 seconds)
    (15/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.424679936 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.381599898 seconds)
    (17/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.380508113 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.140347062 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.435922833 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.851315071 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.353156851 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.891554652 seconds)
    (23/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.882460403 seconds)
    (24/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.433485131 seconds)
    (25/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.376543127 seconds)
    (26/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.646487848 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.694729134 seconds)
    (28/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.54623341 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.698370436 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.393125408 seconds)
    (31/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.377708104 seconds)
    (32/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.628909798 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.052447007 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.453653397 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.729938315 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.903804399 seconds)
    (37/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.366939519 seconds)
    (38/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.551152213 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.773544087 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.764433662 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.383448553 seconds)
    (42/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.707275771 seconds)
    (43/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.386819103 seconds)
    (44/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.360447208 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.423241034 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.968709264 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.463743033 seconds)
    (48/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.357299397 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.372761045 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.615148441 seconds)
    (51/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.336215548 seconds)
    (52/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.450781681 seconds)
    (53/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.46901371 seconds)
    (54/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.378727739 seconds)
    (55/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.4785715 seconds)
    (56/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.416365614 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.410433446 seconds)
    (58/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.686471814 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.993929888 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.752290519 seconds)
    (61/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.964170646 seconds)
    (62/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.525240185 seconds)
    (63/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.550829311 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.177116923 seconds)
    (65/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.122978806 seconds)
    (66/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.469088134 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.352607851 seconds)
    (68/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.826313329 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.416544173 seconds)
    (70/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.752457218 seconds)
    (71/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.176327358 seconds)
    (72/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.418138743 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.353547638 seconds)
    (74/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.342632187 seconds)
    (75/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.413747743 seconds)
    (76/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.37019355 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.65689723 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.372818657 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.9633791 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.55256918 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.49397276 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.355132325 seconds)
    (83/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.441471651 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.21306183 seconds)
    (85/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.352220623 seconds)
    (86/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.537439112 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.068739648 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.462328376 seconds)
    (89/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.780891568 seconds)
    (90/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.847937993 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.616868099 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.758473936 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.3593405 seconds)
    (94/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.705323814 seconds)
    (95/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.387593618 seconds)
    (96/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.555668253 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.354124434 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.176757925 seconds)
    (99/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.535003172 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.354826837 seconds)
    (101/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.392029847 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.438669862 seconds)
    (103/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.704688136 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.580869052 seconds)
    (105/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.967735364 seconds)
    (106/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.473989387 seconds)
    (107/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.640277307 seconds)
    (108/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.888455403 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.1825145 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.667583238 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.355196046 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.366185917 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.543262973 seconds)
    (114/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.063035024 seconds)
    (115/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.068017225 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.358759177 seconds)
    (117/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.541000604 seconds)
    (118/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.365159809 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.597341575 seconds)
    (120/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.668751016 seconds)
    (121/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.42032984 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 1.856784851 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.379784809 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.748173605 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.649117848 seconds)
    (126/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.937255853 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.675919266 seconds)
    (128/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.690287012 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.358230917 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.074439433 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.696980138 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.649996694 seconds)
    (133/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.36169492 seconds)
    (134/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.484378582 seconds)
    (135/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.794026145 seconds)
    (136/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.621691445 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.36958413 seconds)
    (138/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.3722113 seconds)
    (139/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.382115096 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.459069547 seconds)
    (141/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.66994569 seconds)
    (142/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.149866752 seconds)
    (143/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.055490175 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.908873758 seconds)
    (145/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.430824522 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.080593653 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.383259048 seconds)
    (148/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.16399202 seconds)
    (149/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.441879274 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.820636688 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.976832097 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.379777343 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.430522996 seconds)
    (154/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.367065617 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.379959917 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.349887174 seconds)
    (157/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.341964112 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.379647478 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.341802484 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.970163653 seconds)
    (161/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.442666312 seconds)
    (162/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.341426476 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.105070241 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.660800991 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.382591147 seconds)
    (166/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.864389715 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.408275077 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.160413582 seconds)
    (169/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.35898398 seconds)
    (170/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.564182628 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.62698374 seconds)
    (172/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.41695062 seconds)
    (173/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.694462944 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.049696092 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.498323533 seconds)
    (176/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.568458762 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.371966809 seconds)
    (178/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.351902268 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.460002007 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.359834982 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.459947362 seconds)
    (182/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.941320307 seconds)
    (183/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.701152084 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.387818536 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.382742677 seconds)
    (186/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.853925485 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.668774462 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.760354632 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.203827253 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.639685211 seconds)
    (191/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.400046721 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.397555532 seconds)
    (193/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.006993124 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.354020335 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.420102668 seconds)
    (196/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.861473105 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.354272556 seconds)
    (198/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.546772795 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.409622743 seconds)
    (200/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.340637006 seconds)
    (201/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.396315378 seconds)
    (202/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.433545242 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.366307213 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.788459504 seconds)
    (205/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.701227105 seconds)
    (206/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.713340154 seconds)
    (207/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.433160851 seconds)
    (208/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.350445406 seconds)
    (209/309) benchmarking ("sort", BigInt, false)...
    done (took 6.348303511 seconds)
    (210/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.641731766 seconds)
    (211/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.342352555 seconds)
    (212/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.20186859 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.346184624 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.587737693 seconds)
    (215/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.927615479 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.972447305 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.576162637 seconds)
    (218/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.700307671 seconds)
    (219/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.317591655 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.137415415 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.130619625 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.387243951 seconds)
    (223/309) benchmarking ("sort", Float32, false)...
    done (took 5.324014018 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.366887907 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.372474695 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.926095983 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.442186455 seconds)
    (228/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.340219251 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.640046963 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.384086014 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.485763897 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.133058755 seconds)
    (233/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.840604971 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.761209942 seconds)
    (235/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.507559656 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.342120402 seconds)
    (237/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.606762532 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.456163525 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.034188331 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.362062649 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.336909084 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.803233471 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.85919126 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.354290618 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.231771272 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.342042821 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.338721403 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.350805214 seconds)
    (249/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.355268489 seconds)
    (250/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.364120417 seconds)
    (251/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.544117384 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.945762696 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.468660535 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.787776293 seconds)
    (255/309) benchmarking ("sort", Int8, false)...
    done (took 4.354642528 seconds)
    (256/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.323195599 seconds)
    (257/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.641045316 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.918770951 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.414067369 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.385667441 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.537808915 seconds)
    (262/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.584867798 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.237457828 seconds)
    (264/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.445579625 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.567676651 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.366511449 seconds)
    (267/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.36622725 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.112703234 seconds)
    (269/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.614822267 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.727154802 seconds)
    (271/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.342498045 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.447759791 seconds)
    (273/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.423746886 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.49466607 seconds)
    (275/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.424327428 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.214841367 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.344927288 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.363705602 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.121656737 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.740179887 seconds)
    (281/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.454581234 seconds)
    (282/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.338835463 seconds)
    (283/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.323920025 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.324157951 seconds)
    (285/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.386433204 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.441052662 seconds)
    (287/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.34970423 seconds)
    (288/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.608951447 seconds)
    (289/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.04217719 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.439890345 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.431036465 seconds)
    (292/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.669395756 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.461986558 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.536958467 seconds)
    (295/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.903815886 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.678587898 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.484430412 seconds)
    (298/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.319923054 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.160779135 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.386272851 seconds)
    (301/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.344313972 seconds)
    (302/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.349213 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.367687936 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.542445656 seconds)
    (305/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.703360107 seconds)
    (306/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.467851773 seconds)
    (307/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.344476686 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.072712067 seconds)
    (309/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.357552386 seconds)
  done (took 924.870545229 seconds)
done (took 926.184554766 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.39340793 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37475576 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.358188485 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.380861047 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.471497934 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.387470823 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.369039525 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.361024477 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.405938231 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.408203842 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.356454203 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.386090505 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.359643529 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.361137909 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.358146764 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373961615 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.298922311 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.360745435 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.375748711 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.36808521 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.373980848 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.357609559 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.408003742 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.386335252 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.362025401 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.360264608 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.363639919 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.379596054 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.471476837 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.364056396 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.360965049 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.370849917 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.298854613 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.358305368 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.354795584 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.378841613 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.370154039 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.369417698 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.363523861 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.392615138 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.669883667 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.360686418 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.362186098 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.361593691 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.361547785 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.364202171 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.361927412 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.365854346 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375003382 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374050932 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.673466303 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.375166007 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.366169757 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.36161393 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.371741128 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.36262191 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.363261368 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377265529 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.381135392 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378184673 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.295105769 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.366612362 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.363776076 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.379074073 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.368758705 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.716852762 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.358182167 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.365534568 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.67245383 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.368384022 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.71618356 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.369626729 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.363556755 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.376662817 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.394165855 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.306328905 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.358206574 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.36183595 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.369458395 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.36103163 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.372459311 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376463375 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.366051753 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.363344338 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377221866 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.392803646 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.372623032 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.364234268 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.371871329 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.38280259 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.370244948 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.374843438 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.366465851 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.358685224 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.373226511 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.368199913 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.367132316 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.366224952 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.367925315 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.374711625 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.671855125 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380727185 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.360139455 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.361250288 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.363533433 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.3784859 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.672702211 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.36574717 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.386025645 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.411854766 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.366037422 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.298966105 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.36788867 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380278137 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.373581527 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.367391343 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.361148647 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.300798226 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.679237223 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.380805445 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.367298228 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.363852068 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380795294 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.366128107 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.363195275 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.311083831 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.366858244 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380747427 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.486350415 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.375838368 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.396407791 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.364828084 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.369380473 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.393745507 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380731557 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.396491087 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.367515391 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381414755 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.380217837 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.363291073 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.376645419 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.375594696 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.367125552 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.372042179 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.360003925 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.3932652 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3787016 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379039551 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.386882327 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.486595012 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.363774909 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.301555034 seconds)
done (took 228.206853858 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.428645642 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.361668253 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.460257612 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.362620819 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.461215398 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.461354563 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.361666484 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.363303321 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.36016935 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.746099128 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.363137506 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.363040153 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.364417779 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.36334518 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.447704944 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.363868146 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.360946878 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.706177722 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.362509938 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.435603386 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.364821004 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.362241395 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.363815411 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.749965358 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.36110631 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.360535214 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.440063653 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.363896057 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.712792688 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.363489682 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.361821748 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.712813022 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.46380957 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.385202553 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.376274106 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.37328069 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.465595718 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.380943263 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.448356612 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.448775388 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.470888668 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.403990509 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.36763403 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.366294163 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.368235444 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.36692298 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.365504765 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.393793514 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.363488452 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.365786077 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.708370399 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.37617557 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.374268073 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.365538401 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.365165357 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.384718051 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.364787495 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.365705655 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.457067745 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.367689455 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.437648328 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.777840402 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.748288797 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.36954925 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.364886228 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.366135751 seconds)
  done (took 150.678992576 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.43337667 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.441092071 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.476794502 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.369040454 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.416743226 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.480332436 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.368909793 seconds)
  done (took 11.282315861 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.373901575 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.367750124 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.416708349 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.417304887 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.368067936 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.518204243 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364342692 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.379237904 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.366189691 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.420772214 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.369003407 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.367975929 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.375436268 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.367627813 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.416284158 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.378320052 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.482799656 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.369676358 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.367447607 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.525802685 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368445933 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.376700258 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.421905221 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.380603504 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.369170531 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.373973834 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.950669679 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366264575 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362220723 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.368250299 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36591989 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.406786112 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.36951508 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.360442669 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366428308 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.485110403 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.366230062 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365653665 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.368677468 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.368464487 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.371004352 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.369026213 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.369292109 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.363561598 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.369425211 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.392837119 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.368969231 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.36704785 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.370833535 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.370566235 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.420858399 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370053039 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.367297406 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.365989122 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.426067885 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376932859 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.365683751 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.366289387 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.369793612 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367905372 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.525827123 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.417631419 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.367089482 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.417970435 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369958434 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.369519263 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.369931965 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.366593904 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.424401967 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.370721319 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.418058172 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.365013482 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.527585455 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393630314 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.372369079 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.373156729 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.375218919 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369800556 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.365691509 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.379081852 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.370797257 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.372629164 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.376687466 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369431204 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370369692 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.479088598 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479584638 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.37027938 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.385440269 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.380262673 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.370992455 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.425460318 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.371770817 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.369903096 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.425822349 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.487310039 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.427903041 seconds)
  done (took 156.757043737 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.37349042 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.379701353 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.372289362 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.383386948 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.371835811 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.371401289 seconds)
  done (took 9.553502153 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.376765035 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.374437658 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.372118423 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.372499464 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.370174127 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.370029116 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.369338206 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374550857 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.37415226 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.372078047 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.37333106 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.370246935 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.373084303 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.368487174 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.371432149 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.372965754 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.373322796 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369776035 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.373710287 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36679532 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.46720133 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.370275147 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370953408 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.373572336 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.374424868 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.369418492 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382120038 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.369727804 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.372713665 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379925429 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.373857502 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.373645893 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.374233486 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.377836034 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.371457847 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.373268523 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373816311 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.371178134 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.790179602 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.371104595 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.375845997 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371981597 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.374256347 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.372322887 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.376648065 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.373971568 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.379272514 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.37864933 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.368300802 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.374552281 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.374376873 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.372257043 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.37446494 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.3753101 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.376327144 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374114724 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.377009211 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.372906533 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.368351357 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.375577659 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.374754233 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.374552272 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371751305 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.37443438 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.380314486 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.374731121 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.374104298 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.37146512 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371569522 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.369882875 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.372220924 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.370344633 seconds)
  done (took 101.690673148 seconds)
done (took 431.255710455 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.844437991 seconds)
  done (took 8.146175731 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.470753288 seconds)
  done (took 7.774006627 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.922523087 seconds)
  done (took 20.234513846 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.442629602 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.401797767 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.366660556 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.364255088 seconds)
  done (took 26.878628968 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.559383845 seconds)
  done (took 7.862274128 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.368322514 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.375509103 seconds)
  done (took 14.048673657 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.383331694 seconds)
  done (took 7.686785891 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.441910646 seconds)
  done (took 7.754833831 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.386615823 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.366774314 seconds)
  done (took 14.312881397 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.352869403 seconds)
  done (took 7.656375501 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.090578299 seconds)
  done (took 8.394301096 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.379689526 seconds)
  done (took 7.684160161 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.379587079 seconds)
  done (took 7.68039746 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.741325939 seconds)
  done (took 9.045142979 seconds)
done (took 156.461135993 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.368676004 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.369665919 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.370563057 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.369257985 seconds)
  done (took 26.781740593 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.410038262 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.409372558 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.409410136 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.419825506 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.411629761 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.408870124 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.400409959 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.401349007 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.418343148 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.41237209 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.407720198 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.412875834 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.409553024 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.40286024 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.411246425 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.40985263 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.42034493 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.411178438 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.401730545 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.413236828 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.377346895 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.419924184 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.412793216 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.373689583 seconds)
  done (took 35.090567146 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.578139829 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.448590891 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.526837959 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.427372925 seconds)
  done (took 7.287090753 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.428534837 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.426357371 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.439380651 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.479647727 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.512524712 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.438091315 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.401279068 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.398250675 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.384255749 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.429760749 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.504957027 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.446667369 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.551964993 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.377902224 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.56077281 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.37671768 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.374755802 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.429578326 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.481612966 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.495610581 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.37823299 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.428359513 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.433660024 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.443273848 seconds)
  done (took 35.927120082 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.377584 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.386518318 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.383133839 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.373922715 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.377706003 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.379012616 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.379844751 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.375185487 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.395653655 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.375505082 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.376587544 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.376656522 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.37325774 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.375083176 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.37693192 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.386178824 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.387888582 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.374077114 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.377201218 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.380991474 seconds)
  done (took 28.896487641 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.369020064 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.223023135 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.720122985 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.624054434 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.37028578 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.368344006 seconds)
  done (took 27.982143212 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.442834943 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.55760147 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.378373932 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.703915947 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.780570426 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.376808064 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.378567458 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.592451866 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.872505498 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.881745464 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.426221541 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.425884336 seconds)
  done (took 20.126060797 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.374140757 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.369875237 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.379351312 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.386830256 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.426088171 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.380824037 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.386217066 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.370011184 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.430465402 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.433109921 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.384610038 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.427333392 seconds)
  done (took 38.058799326 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460814476 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416374502 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.23516704 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.167083482 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.750522503 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579909224 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.14187587 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.832308174 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.373142771 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647420799 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37652251 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462701315 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632161281 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381591462 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372311386 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.370061854 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597314595 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846828405 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371387773 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.206914605 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401421579 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375477636 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.398841307 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.395636597 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586419115 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.506981736 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.636818641 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372530982 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638834598 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387190115 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384805653 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375810312 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645879704 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013640261 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467504375 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385762366 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.14534568 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.085077697 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.374772519 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.281058931 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.145709049 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375742546 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38673846 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375011653 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.309956493 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378979767 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839009255 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.377955619 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.087348207 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373888542 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385961862 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469927618 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.377522072 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.19307232 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.46558452 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373492128 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.373023427 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381338095 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944345176 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.699506471 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385621618 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.312218896 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483095149 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.233024397 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014053888 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.479577749 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.377349979 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380462808 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310550492 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.262253359 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397336951 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705143582 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.39564583 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02800707 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082244045 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.37938095 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306950244 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906851577 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382725488 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.310296476 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602569587 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376462957 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3126053 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.321161974 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.309093354 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04786845 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37942323 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.72757791 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377707047 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.836037606 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.383859211 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395590293 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398982978 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598273533 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.259240659 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375379049 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.206407561 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525617618 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393253403 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.835053421 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306613567 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.376500873 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632833316 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.586836313 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381048404 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.382555683 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586713549 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385897233 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.394837106 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380419206 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.389679879 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.970458312 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385736045 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.700873336 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39635375 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375745433 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083622693 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372941368 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.478563786 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382345837 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610393672 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.109258244 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376955279 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458233262 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383741972 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380348206 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.312393982 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.897102953 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380639798 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.376544965 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380619695 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.40432026 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.379343415 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330428683 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.372439857 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406101126 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.380672887 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600347738 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38038539 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666964401 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313839771 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707664851 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.467308164 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.598189682 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.546189447 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.376509579 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641951153 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390575773 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383463762 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391494011 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398470499 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475939593 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399736335 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.392209939 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.638749902 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.38146954 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.382600354 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.309279783 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383879886 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386931558 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.383948292 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28341094 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970816373 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366559244 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383828996 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273554625 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.391657692 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443465312 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385710444 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.388470255 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.082771605 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.257535752 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.387988834 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.379334606 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605514925 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389916901 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.254619515 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459788034 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.591223347 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974625229 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392872499 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.31639057 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.09128604 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.073444492 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378138851 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.314934528 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379372836 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38939542 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390556345 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.605410529 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.981102607 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380015931 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.239968433 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.38449081 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390774112 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.385024012 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380029033 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.058829145 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.725378975 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385802616 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.394070205 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522987197 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.397466826 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.314748567 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.384001012 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386641828 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380574154 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.380648561 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413064673 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.264789553 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871048667 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639439299 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.146342453 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39289944 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.337024128 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.410654693 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.382787132 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.216502281 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403159763 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.388144517 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388599833 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.392291831 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.328483731 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.054232893 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951043633 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112907404 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922483964 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350392176 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.380476613 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387642676 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.847569969 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313506866 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.94732828 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558231515 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.848744411 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323656959 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591430033 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.541434511 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102220224 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39374559 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611655694 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36768332 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.215167606 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415365693 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595367754 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419223481 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.380869296 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.313505479 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.664930978 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658199112 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.190007621 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458593936 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846806127 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.246866552 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401535935 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.382194589 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.681373684 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551896467 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.099139847 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.559467517 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379169331 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386676599 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871935033 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388256681 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.608221832 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018489671 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387574487 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.598746633 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316049923 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.393910792 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.394668689 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.38173522 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.574879314 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.393001754 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.636773155 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395585596 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318648624 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384861866 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928232922 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.237352637 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.393850319 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384602315 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092672461 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383723297 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661563898 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.392366046 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.049678913 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390912565 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.31997842 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319196635 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.078368552 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393162829 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361698889 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860938073 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.470106568 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.458869927 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418889814 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435947956 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643217034 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.399591444 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.983513263 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613549918 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.24784679 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408324832 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.486787789 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296313879 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.388759844 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384510913 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.621474217 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290431284 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607278465 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.269940651 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.287951812 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.385350038 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597583534 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385369549 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398230796 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619444062 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.097785137 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.391518568 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102669598 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409293219 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385633767 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.300999605 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491116601 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399007599 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466618921 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397469873 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.399053237 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.397596515 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556635092 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388921395 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386893054 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.401934025 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481554487 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.797015891 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.056965403 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.392050051 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991588308 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125087975 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.988355691 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402578107 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387440925 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391092059 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323990112 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5325458 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.614358847 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661374661 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518488036 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.528149951 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41015231 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303035352 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409275561 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601733997 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662318272 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.283539803 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387931619 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404745217 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.388575962 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398618463 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.600175971 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872776416 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930390407 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494598214 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391567715 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.849322684 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659216789 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389512992 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39060006 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.982181202 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.404346371 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.691551499 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.392413608 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389862058 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535141209 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399984871 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036172759 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.39851727 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.548813456 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.164035496 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.374304718 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644146571 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.814991418 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.40079751 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993393932 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.12384955 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653989906 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457445397 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399492803 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.495456436 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537812832 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.388111887 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38853755 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390413561 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608610147 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.100241722 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.398282868 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995011871 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654395311 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.387474932 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.388198273 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411063167 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.399490756 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614680343 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069579802 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611294393 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399754244 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39838289 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.210887243 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995646458 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401869448 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326392983 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.391829012 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636607889 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.627780719 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412393022 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.845202516 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.102155367 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932269359 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.359014101 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414122318 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396857915 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.130006157 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996108149 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.088470878 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870039949 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.955869592 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401702987 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667900469 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.395776431 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.391918817 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683263762 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.394940204 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392340508 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40403007 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.995557183 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128066006 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.40540095 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.293033394 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.329707011 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.73678172 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.106292201 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329899421 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389299853 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.576769295 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392193971 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521802782 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400971669 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.391618986 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393975063 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.126705885 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669593273 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.397585662 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.385475004 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.303360679 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401753425 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399880098 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663827623 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397696644 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.067793201 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.744503975 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650057623 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403140658 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.376826358 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.397359857 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395697422 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.380508169 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.588508255 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.616876412 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941817928 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.400809512 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.406014602 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397560275 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.611082391 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606095558 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393433219 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407392571 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407652151 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410580986 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.299822978 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.895873916 seconds)
  done (took 1613.520480602 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.400647058 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.443416999 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.40629533 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.414537514 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.435989934 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.517938597 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.409999462 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.527621162 seconds)
  done (took 52.88620437 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.404701173 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.6262434 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.424647624 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.405933609 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.40443969 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.406030335 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.818304512 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.397787153 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.405990313 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.403122123 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.395745096 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.402231732 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.008374459 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.405508268 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.398661318 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.389063493 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.404350002 seconds)
  done (took 66.443273941 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.396200288 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.767565358 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.480544147 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.413368673 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.229975137 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.407672889 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.854858477 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.416492151 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.392956384 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.574540623 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.040639692 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.43454483 seconds)
  done (took 84.742633743 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.402739626 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.401539692 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.40251765 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.402108819 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.40247118 seconds)
  done (took 8.345262089 seconds)
done (took 2047.392630596 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.817169265 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.064785042 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.016121576 seconds)
  done (took 5.41521247 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.545996717 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.592837591 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.71332616 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.719732821 seconds)
  done (took 7.906104405 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.681577428 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.78266401 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.602353693 seconds)
  done (took 6.401368788 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.714625083 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.407776813 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.487739563 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.397244745 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.397026723 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.395954106 seconds)
  done (took 20.526423415 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.40117731 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.404523176 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.401497849 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.40319866 seconds)
  done (took 6.94571195 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.380566571 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.134129474 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.380978024 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.395830795 seconds)
  done (took 18.626614896 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.158068579 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.163331782 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.143635388 seconds)
  done (took 7.80048844 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.41211952 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.240323708 seconds)
  done (took 9.987931809 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.716554131 seconds)
  done (took 3.051887039 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.533039939 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.66234177 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.474884263 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.336500758 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.498320557 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.958025266 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.912272479 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.529296077 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.325103194 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.402041419 seconds)
  done (took 27.96826992 seconds)
done (took 128.392356553 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.025233476 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.39959381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.600932987 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.99242613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.624884671 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.601475943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.60578727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.965467225 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.544171662 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.494132359 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.993874896 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.625028005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.554179938 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.40170636 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.554354579 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.404234872 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.632043287 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.072593527 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.676848029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.875674819 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.609047971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.632545219 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.824198124 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.652348562 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.624946753 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.551108148 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.217360095 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.403231051 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.858994784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.291115862 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.551080074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.055556147 seconds)
  done (took 188.251466417 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.402886841 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.396693694 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.396516474 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.401941316 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.397259086 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.401483647 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.398393204 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.409895968 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.407853986 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.410838732 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.406668772 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.405365595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.399188134 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.410683252 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.412789825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.396224593 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.397220534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.410774223 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.397524438 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.398235436 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.39979188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.398699356 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.410622558 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.397065995 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.397342572 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.400385439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.412551439 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.407664242 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.397990032 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.41432848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.39735696 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.398563185 seconds)
  done (took 206.226748361 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.405253471 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.397958358 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.424725722 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.404417424 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.399415106 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.419918516 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.398739584 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.398487426 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.39767317 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.399845619 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.398587641 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.406172295 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.401310054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.399198424 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.412006075 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.398938888 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.398696603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.407342841 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.402639153 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.399963799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.398812653 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.399170503 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.416760126 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.39999503 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.398933443 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.399853112 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.408543114 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.400895965 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.40081431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.399517698 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.413608883 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.399263158 seconds)
  done (took 206.24543522 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.596112824 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.4084261 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.410726134 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.346851976 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.410134638 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.409152448 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.40293537 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.605774635 seconds)
  done (took 14.927766945 seconds)
done (took 616.98821493 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.621103158 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.34350463 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.602914114 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.430165584 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.129844724 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.433114101 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.429767053 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.594210491 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.914023738 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.57952463 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.593477751 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.425341863 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.747642756 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.428510618 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.665781179 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.525782702 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.268953634 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.386908833 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.729257791 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.905664403 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.676002419 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.940048939 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.5932288 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.944780925 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.754010207 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.943360506 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.138030688 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.274735314 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.425943784 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.72715449 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.008641302 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.343645262 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.485711654 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.467940607 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.524412888 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.502393047 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.364171847 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.465281703 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.606474836 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.683476025 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.916205667 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.697139476 seconds)
  done (took 95.580330831 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.396165451 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.395384312 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.395575325 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.393379485 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.396135222 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.394384174 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.397917306 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.393561467 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.397003989 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.397604505 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.396130307 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.3980808 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.395633561 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.397985812 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.393145132 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.396544387 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.397867127 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.397654679 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.392820209 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.393686936 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.397761696 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.39750221 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.396074675 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.397731364 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.396476168 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.399701453 seconds)
  done (took 37.643213716 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.414086869 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.637384883 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.808706459 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.414823645 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.411197244 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.415220742 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.483523022 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.412767783 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.41075306 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.414638092 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.558308376 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.410448279 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441051823 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.818572588 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.417135887 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.411162275 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.414928519 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.41153827 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.644372907 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.422084247 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.50270219 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.415484069 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.485832084 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.424171143 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.432558786 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.413185843 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.417096091 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.959748965 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.417410801 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.562223448 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.155957513 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.484649702 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.913820189 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.822860617 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.156303747 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.416323939 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.414466834 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.567464506 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.41812579 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.415213978 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.486401621 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.417701854 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.823470683 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.023199966 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.432223566 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.416334073 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.980403396 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.56587001 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.643981344 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.423435628 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.842677652 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.41817811 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.41342886 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.415442482 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.641209834 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.423377551 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.41323003 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.837231064 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.417558629 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.486391749 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.417165805 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.415830005 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.652155191 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.416395919 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.64416719 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.418888613 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.424466893 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.416654595 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.822458896 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.416761986 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.03690186 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.432854238 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.416305547 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.560121413 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.644708703 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.013509983 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.421879699 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.656992648 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.925261312 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.484658344 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.421895537 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.950455521 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.490962552 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.420197324 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.416315544 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.416094296 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.417132148 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.460981986 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.486555486 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.971302734 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.031973401 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.85445279 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.487220216 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.433127608 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.413617683 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.838999111 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.416139171 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.416349679 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.817332224 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.042721914 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.434076557 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.423502755 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.021018845 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.432806772 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.486217721 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.423619575 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.827643233 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.419516638 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.460661773 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.415892222 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.423223867 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.423184751 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.488608456 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.421824356 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.417930076 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.012157376 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.586184554 seconds)
  done (took 184.399094169 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.411187867 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.408961968 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.412629719 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.426712185 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.411059439 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.417407544 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.411329397 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.411561895 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.418045872 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.41141241 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.412722604 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.412724772 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.414618725 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.43627954 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.419623709 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.418259743 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.022382629 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.415828995 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.412303846 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.410298374 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.197525941 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.417046217 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.413463886 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.410266702 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.41811251 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.414112666 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.432864964 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.409437498 seconds)
  done (took 154.378890626 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.420189403 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.951660764 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.419406715 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.541155071 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.439712207 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.417561123 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.537474301 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.475102767 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.418247257 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.41790518 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.419686416 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.705112274 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.422532246 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.900142298 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.593274421 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.543312356 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.899933554 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.419450851 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.418032643 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.419194052 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.543617233 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.425810344 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.701905753 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.947295386 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.419888939 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.949570743 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.40879571 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.419318892 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.418896016 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.951163056 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.418464481 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.704781263 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.491059106 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.47702682 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.948934326 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.900838026 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.908239236 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.559518354 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.41948462 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.419469853 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.418804294 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.405853435 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.950478041 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.421573969 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.422074989 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.945188141 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.436152298 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.421845092 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.431141898 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.42171163 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.476245533 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.477847271 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.706461691 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.956301172 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.491898021 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.442438846 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.546687749 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.7769146 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.422313962 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.90315005 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.405945399 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.960788464 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.426047497 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.408125334 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.42162592 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.426857743 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.561551334 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.547693156 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.908961639 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.423905561 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.910858141 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.563682887 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.423785453 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.420676007 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.424063919 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.959082382 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.912585579 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.564873185 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.548880439 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.604039967 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.412240276 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.423062524 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.410939697 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.494173086 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.422364543 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.962913682 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.914543009 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.425945795 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.425504278 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.425649992 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.425618626 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.586762979 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.965667946 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.495983092 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.904656317 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.72744113 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.713958302 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.426530645 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.481274611 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.423972907 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.715253049 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.425875409 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.477937969 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.840323709 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.714079162 seconds)
  done (took 167.509893634 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.651522555 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.546061976 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.509922381 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.530395191 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.946940511 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.002352547 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.456733656 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.490794715 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.513085241 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.538045259 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.065377403 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.514590907 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.60166773 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.496662608 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.096454672 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.485991003 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.512473799 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.533517285 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.527085118 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.400134514 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.013484162 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.69866406 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.567167342 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.271998298 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.47846768 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.141417991 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.161207028 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.926948213 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.584151136 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.511213866 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.928133077 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.548776877 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.122207128 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.035385206 seconds)
  done (took 65.766566621 seconds)
done (took 706.616269687 seconds)
SAVING RESULT...
DONE!
