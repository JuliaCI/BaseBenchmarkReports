cset: moving following pidspec: 4833
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.796788275 seconds)
loading group "shootout"... done (took 1.127112523 seconds)
loading group "string"... done (took 0.417311173 seconds)
loading group "linalg"... done (took 8.029865558 seconds)
loading group "parallel"... done (took 0.163019658 seconds)
loading group "find"... done (took 1.326958312 seconds)
loading group "tuple"... done (took 2.032838581 seconds)
loading group "union"... done (took 12.825455886 seconds)
loading group "dates"... done (took 1.331407015 seconds)
loading group "micro"... done (took 0.199204297 seconds)
loading group "simd"... done (took 4.441425815 seconds)
loading group "io"... done (took 1.051213754 seconds)
loading group "random"... done (took 8.909369108 seconds)
loading group "problem"... done (took 1.606570313 seconds)
loading group "array"... done (took 19.754506371 seconds)
loading group "misc"... done (took 1.589839795 seconds)
loading group "scalar"... done (took 40.1270526 seconds)
loading group "sort"... done (took 3.075162625 seconds)
loading group "sparse"... done (took 11.972598092 seconds)
loading group "collection"... done (took 17.547498369 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.510033202 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126252313 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131052685 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120515314 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149720899 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123515717 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129469777 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087012343 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.920440047 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144073785 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113833174 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.436232958 seconds)
done (took 5.366030831 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.164916037 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088457055 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078120623 seconds)
  done (took 1.318134128 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065707197 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.135959167 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065236035 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066038364 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066772156 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066558318 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066270179 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066415681 seconds)
  done (took 1.686561222 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072540309 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066990786 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065620893 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067741544 seconds)
  done (took 1.430783247 seconds)
done (took 5.838530761 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.24268843 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.104375707 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.291171617 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.39688122 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.46158786 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091921759 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074597365 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069996696 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.129633292 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317703137 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104034599 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.183884381 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089490274 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.178958737 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.007271866 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.119796629 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084372805 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.122614413 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091923223 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130374955 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.415140683 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.077648191 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.072981664 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069239322 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06781754 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.638640712 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663501664 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129060559 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081845128 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.101005626 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115579253 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.635083799 seconds)
  done (took 10.549231506 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.093625769 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.091272983 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068563829 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125492498 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092096573 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068947489 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075080469 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067404667 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092793814 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126089062 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089395725 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.0995065 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06653872 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068651814 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.075816435 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.199460657 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079008235 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079975133 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067060084 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081111103 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107604171 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078450975 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079983298 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079533232 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130055651 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170421411 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095127292 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096456804 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064934851 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080208567 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115109845 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125594378 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065037481 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068393579 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120297384 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093747013 seconds)
  done (took 4.583025678 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.968409992 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.09304597 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.103532283 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.625408453 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065665181 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.155126956 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245095336 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073397015 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.423171626 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.147742467 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.143164217 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.1486961 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.117935406 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069535389 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.235533244 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.118113097 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.414524906 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06829975 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066838964 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06605703 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068756982 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068165042 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063155733 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.070098193 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09478993 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088172323 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.170439513 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.953545727 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.248396915 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067898651 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.0869515 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.085933121 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.357956762 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070045728 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161221404 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082014084 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.406466469 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122430787 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064039788 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167809882 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.115688622 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063197968 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.116774293 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077287611 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068042803 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06320917 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068607586 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071070894 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072051037 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079412213 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101780245 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066424174 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063651518 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16348606 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063527113 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065176725 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067417754 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149207509 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063061414 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.140335061 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062975413 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06817538 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.100424061 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06718827 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.090197874 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.100240223 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.3307806 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.031847772 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066955698 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.921350001 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078601661 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066126954 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07107449 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066484547 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.06784121 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067894116 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.074235837 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070335406 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069451822 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109064192 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064824623 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068357447 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065157541 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070713436 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097901062 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066670445 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.476139983 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097849479 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06481084 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075229648 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104519018 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065775424 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.070840762 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065860298 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065958378 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064841535 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066767569 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070043891 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.208504944 seconds)
    (99/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070235761 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112970431 seconds)
    (101/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.035741032 seconds)
    (102/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066892895 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062859313 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065377995 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071572692 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070324785 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064204595 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069044122 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067225876 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070099327 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06772045 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063965129 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.10958136 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065626016 seconds)
  done (took 21.616420873 seconds)
done (took 38.873541678 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.256063344 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080065017 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080309506 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080096119 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080702583 seconds)
  done (took 1.828583911 seconds)
done (took 3.069633292 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.108871005 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062364617 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.100177264 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.099676763 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.066605938 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063744107 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098456131 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063723887 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.099099481 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100253803 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.10063816 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.099986151 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062557911 seconds)
  done (took 2.37386311 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069410423 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080051023 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083145013 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062032694 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072589611 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081784643 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062007304 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.08099932 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.087681493 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081610379 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.084828023 seconds)
  done (took 2.08075414 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06921017 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081351582 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083647957 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062329587 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073041992 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081699848 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061762282 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081415143 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084648195 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081594235 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081791158 seconds)
  done (took 2.068686501 seconds)
done (took 7.751737023 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.066981237 seconds)
  done (took 1.276610982 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.529855703 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.603736233 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.067901112 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.087948329 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191595843 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.099277289 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.22589997 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.072713864 seconds)
  done (took 8.276091775 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102408775 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067722694 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069969847 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.0684153 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068492405 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.069315843 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069368957 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069020927 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07034564 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068758915 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068945201 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.068085748 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068984155 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068344472 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068083646 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069742477 seconds)
  done (took 2.455371159 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097997555 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096839199 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072515311 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074031702 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071782215 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071662801 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073907145 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073101045 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070174307 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071943297 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074086162 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072404492 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071770915 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063105931 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072997953 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074265968 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069909018 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073094169 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073897003 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074730092 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073946692 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06334825 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071877873 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073247405 seconds)
  done (took 3.116128553 seconds)
done (took 16.352737983 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115296356 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076366169 seconds)
  done (took 1.40982717 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.069411521 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071024599 seconds)
  done (took 1.376257307 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076725452 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060824146 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084159919 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073276954 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06193868 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061586614 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081210451 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061921194 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061645359 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061861436 seconds)
  done (took 1.922040184 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064038501 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.071120901 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068912984 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.070789821 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.06900725 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062857682 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.066280779 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063187867 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.071054572 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062237679 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.067292749 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083549073 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06677911 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084561667 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.066684291 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067209845 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069329115 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066421021 seconds)
  done (took 2.480042994 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061996367 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.062957482 seconds)
  done (took 1.368220652 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06565741 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062720901 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065974884 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065942138 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062343213 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061636543 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062156993 seconds)
  done (took 1.678959976 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.42534485 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123172604 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.349253532 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069383024 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079312986 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255080162 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06319502 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068393101 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068588538 seconds)
  done (took 2.783551697 seconds)
done (took 14.268787995 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080835958 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083654291 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.090373366 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.429419294 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093041253 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066914033 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112851909 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176118902 seconds)
done (took 2.395609038 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.222494625 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.399987953 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.960100376 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066759941 seconds)
  done (took 3.672582509 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336663173 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085843581 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077905783 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067831534 seconds)
  done (took 1.826236862 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065679873 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072049549 seconds)
  done (took 1.389769445 seconds)
done (took 8.370330609 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064700327 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064207139 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064636456 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063641999 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063780087 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064121872 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090972529 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063365683 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063102619 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063195283 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063200854 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.063268829 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.063066249 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063297198 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063743384 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06366648 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063482822 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063840202 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063953398 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063698065 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06318109 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063826352 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063909249 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.063434796 seconds)
  done (took 2.833787763 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08098939 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066324329 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067377609 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067419243 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068579309 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067607057 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067525595 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065914876 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.067330387 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065429162 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06774876 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068068265 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065740597 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067935972 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065669272 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067952976 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067441326 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065948854 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065886313 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067862229 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.067309957 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06582392 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067921184 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067274303 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067746605 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067574338 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066021542 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06613794 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067682301 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068718138 seconds)
  done (took 3.293585129 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065039073 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060221112 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061467336 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069668875 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060202282 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.061078044 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061233412 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060247927 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060590432 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.06178976 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061063352 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060249801 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061432433 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059999549 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059801509 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061019397 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06422273 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078827113 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060691761 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060195018 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064128106 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.060356634 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060157057 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061290819 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060554344 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060034464 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059677514 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060787543 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.06040342 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060834261 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.060233245 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072848791 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065351565 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.060160045 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069929476 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065485378 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060359458 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063973145 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061953702 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060086962 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060294969 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060004525 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059858811 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060336033 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069779276 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.06039931 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061181919 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.06071844 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060106757 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059985962 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059850106 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.062287596 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065879213 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.062021729 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.05969812 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061211446 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059990274 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06076191 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059807928 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059658818 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060093275 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06333602 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061929164 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060828057 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07864883 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.062214681 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069537228 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060151692 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063998019 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063168791 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.06087974 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076720407 seconds)
  done (took 5.765897378 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086155029 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086945689 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064669147 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065427384 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06083102 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061258458 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068803584 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060884533 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065264399 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080598367 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061044432 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06505928 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06521236 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064868915 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061141353 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065317621 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069277377 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061314044 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060701113 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06458236 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06112986 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068666231 seconds)
  done (took 2.748957254 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.141044709 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065402383 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104732415 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077236903 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069542484 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07753046 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066528981 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06697446 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066823502 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067041826 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067453352 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066923501 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069653531 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066970883 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067148702 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067215191 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066499469 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066899117 seconds)
  done (took 2.612848689 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077076369 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064984551 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088773578 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0658117 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066455513 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06601546 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070636075 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071826375 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06583247 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066443291 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07136899 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065829829 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065605537 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066077483 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065538403 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066382248 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065615782 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066161314 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071020074 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070326653 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07041703 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071050611 seconds)
  done (took 2.790358838 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075550356 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06515939 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078969657 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06679512 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060810951 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060550946 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066095442 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065025419 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06614053 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064633175 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065220637 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060774033 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06696435 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065400034 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067455402 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065508657 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065190374 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065428721 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065300098 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060771537 seconds)
  done (took 2.590957133 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086949849 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063558619 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063574444 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082148593 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063434657 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063392672 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082576434 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063478312 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063656973 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085411533 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064349738 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063429443 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08209018 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08207455 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063717847 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082611286 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082991697 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083104833 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063793896 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063613984 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085779875 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063703134 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082532715 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063978504 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064010763 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064024013 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063881673 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082603053 seconds)
  done (took 3.296281896 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064620526 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062824427 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063394852 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063571023 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064036612 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063704553 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063872174 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064105485 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063561702 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063999911 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06347854 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063502048 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063361846 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063062036 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063760796 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063512027 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063572651 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063946357 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063468033 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063702222 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063856599 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063450095 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063360251 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06370981 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063936322 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063560361 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063852716 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063649892 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063176439 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063997595 seconds)
  done (took 3.187615725 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073980821 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071702591 seconds)
  done (took 1.422436014 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063258609 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077225063 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060231753 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071513466 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07000512 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064121196 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070767 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069588817 seconds)
  done (took 1.817662095 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.067801488 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.089657094 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062526178 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063330004 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.066685871 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122127953 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.077509697 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.073025003 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.078341536 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064271975 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.063075755 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.075297362 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.062169341 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075122322 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064077047 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070558929 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068693595 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073737024 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074700291 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060683584 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073927667 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063541121 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061156785 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06318145 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062837013 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06835029 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077378401 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073792149 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070365109 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060179721 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.081180965 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06123742 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062837435 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070310468 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.066248168 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.061235829 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097882838 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.062031976 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.0675515 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061150032 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073136258 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081265024 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075007832 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.079020178 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063121567 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063491027 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060802437 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.06333439 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064277428 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069988218 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060867519 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068162602 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060591039 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.063253356 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071618361 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061500269 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.067638291 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07043121 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073516074 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071335103 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069594552 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075671884 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069251044 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.070536986 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062041495 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079748123 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062864981 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072855844 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075365778 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.062105404 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075321367 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060355135 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059390198 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060720039 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093747173 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062942386 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062259968 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.06149967 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060904344 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062646126 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070569877 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06763235 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068021287 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065159796 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076720489 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070048863 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.061421205 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069152178 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.079532417 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064234643 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061115769 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.077674967 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064217165 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060975353 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079096251 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070299508 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.063575185 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062335126 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064255791 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074710093 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062863992 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059869254 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069094748 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.063258323 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.06438259 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.066363248 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068462246 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060913199 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070922807 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.066693529 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.062555899 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059565658 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064754596 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.06169974 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059545524 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069337745 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.060127906 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07503066 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066388144 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.074411698 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074285778 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070531272 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075870226 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059627088 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058657439 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.077497512 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.206252953 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.064328888 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080788356 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062193419 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072997017 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061662422 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.063837664 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070928117 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060601606 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064080411 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061870886 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.068003628 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.063465723 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063960027 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065529827 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069624723 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073559369 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062947182 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070112012 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061536541 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076828547 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070989001 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065547455 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066767121 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.062153115 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073783478 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068411626 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070745139 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061005241 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.062536706 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061685471 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072003962 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070734405 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064049355 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070153822 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066067951 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.062099383 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062061614 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062941983 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064917722 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066285368 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062789598 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068668966 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070384612 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.07591058 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073761807 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070361891 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06013787 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061136583 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.063484558 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061159512 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065388472 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070247678 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076220822 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073284113 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081927768 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.062071766 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070305994 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063140761 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078561607 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073977524 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.062219242 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06676964 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06034576 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063620422 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070208549 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072881607 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.075336988 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075741015 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065411794 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065328488 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061230747 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075430184 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061609138 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06931024 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070449729 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066867827 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061212491 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063478569 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070122067 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06563953 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061349741 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076555623 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068773348 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060967423 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074723006 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061439666 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.071809899 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061108717 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.0644037 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065976937 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06358439 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070102893 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076314765 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059922821 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061435326 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076305803 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063486643 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063052648 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068551543 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.07516573 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065145199 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068156605 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0714382 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070299669 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065393603 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069914746 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061722965 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069975501 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.064551861 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07209292 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060934271 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078323294 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059576126 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.07522919 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.061542603 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.071635031 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060968469 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069708019 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061669876 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.07769796 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062679322 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061491104 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072159624 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059025022 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069203022 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059790512 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064718591 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066284979 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068868306 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061717706 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.209422055 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064783837 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071081956 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067272604 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070265026 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.071047456 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065989171 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061361787 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069788451 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072503585 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069845094 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.063295097 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.0634111 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062729886 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070754795 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063196457 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062917695 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069577078 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065835444 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067062415 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064124 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.064191409 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.063545799 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0699757 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070939222 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079456948 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069970948 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068254783 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070635701 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061086667 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076912824 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061313426 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068421219 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060691786 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068582059 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070274665 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061598094 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080526538 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.063505507 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069129114 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074537161 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070077189 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064698576 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079862055 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.065888745 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069260756 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068801181 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065528052 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067699845 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063452994 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069021007 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070416537 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07172403 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062029374 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06786826 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069517615 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063117342 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.071025298 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063372256 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068877645 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.063351326 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060318022 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065264308 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072974739 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066012642 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.0664714 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062329653 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060158883 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062029718 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.069917568 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065625632 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069765042 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076635352 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060434958 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.062516991 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061553099 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067114478 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079322439 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070836366 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068346178 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065350415 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060173161 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063020388 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.063225655 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061300867 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.065364741 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060309261 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060887178 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071409644 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.063216191 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065522443 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061543477 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062642132 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069941849 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.067054407 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061923316 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067662814 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060921113 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065724098 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060648649 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.063352931 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065641587 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060636935 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06443647 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.071137492 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.0774198 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067415013 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069432737 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.062108882 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068489906 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075770197 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.069512281 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061945662 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069917872 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060069802 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.079264405 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069488224 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068508347 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070405304 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061475893 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077086754 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064754645 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070270098 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075890839 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061681022 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.068153674 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060134287 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075751403 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06454421 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059785516 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067813316 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06720752 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.210007393 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074676978 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.064062315 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070188121 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068182259 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065446165 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.064019785 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.063418284 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070362434 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077586553 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.062594587 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066924155 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068836453 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070560308 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065430772 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073213954 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069463345 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062983136 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063896849 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06469277 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062468969 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073716236 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06215656 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065449816 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065359083 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061077789 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06772553 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077424385 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070922109 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07078373 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060787914 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060834702 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.079341881 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06464891 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.065634837 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069735364 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070717905 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074411501 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070232268 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077973803 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062330752 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066934638 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074024191 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062616241 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061492701 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064994276 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063328446 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070255261 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071589383 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068439644 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063878646 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067728299 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074170845 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.06277976 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065763204 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.067047685 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.06222196 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071396121 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069027098 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069456493 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063245201 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061112141 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063976305 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069875197 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068498118 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06981899 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06237234 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.069727244 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.075770013 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067987374 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065799675 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06116063 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065420376 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.0699808 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.067034475 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061329573 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065647202 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064450601 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.069994575 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070365397 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065809103 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060852009 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078200102 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069239958 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.07014079 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.063753566 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.06388083 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061950791 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061008848 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072679646 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060993874 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.063416698 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06586169 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063204044 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078463149 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069107641 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076935779 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06242674 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065677284 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060998878 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071143007 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066372987 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061662654 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.0712168 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060559399 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076364254 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.073207081 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.070730982 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060922965 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065887685 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068890726 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075184866 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070496177 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069655751 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.06499648 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070706131 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062815213 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.071348241 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060567468 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059689104 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070652776 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068893294 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073362122 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06063567 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070499417 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062504262 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067988406 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068399954 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062591404 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062329152 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062006077 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.211384648 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067390882 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072093676 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066415748 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078963731 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.063596107 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072867136 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070329179 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.072605929 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075024368 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074729569 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069708725 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06210443 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069155176 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069213886 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062747452 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066226997 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.065486377 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.083524983 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063993208 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06359181 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.076299112 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.069256919 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061652673 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069837343 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065996003 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.071377757 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062271162 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070988193 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066414817 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.06260818 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065772745 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065896592 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060583935 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061371792 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061594175 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071495042 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065554551 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061460542 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08047714 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063434567 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069540319 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072466532 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067470317 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063851487 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06009311 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062614665 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073467954 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076441083 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064022274 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069129211 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063117092 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070510687 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060270669 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069790836 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086739926 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069556852 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060912493 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061722129 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075635024 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075994709 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065575884 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070387709 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069940724 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063141352 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083121289 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069794385 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06445221 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.072217826 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064180092 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060757087 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06031174 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.063647419 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072855135 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061103717 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.064280156 seconds)
  done (took 42.139411378 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099772033 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062386382 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061658633 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061574342 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073201583 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062249653 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061134592 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062196871 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062540283 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064342244 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061433177 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061161027 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073467183 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076316177 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072967705 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065907248 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061469616 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062115126 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061074661 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062091118 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072546349 seconds)
  done (took 2.787241407 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069278324 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077814509 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073963524 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078961067 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070343554 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066500692 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073831327 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066385285 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074444365 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071704572 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074496177 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066409218 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07185009 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071560022 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072062607 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066594067 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074649267 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070105948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066265314 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073998769 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06668443 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073717965 seconds)
  done (took 2.931239772 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063267654 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061929467 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069376606 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060543044 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.060496043 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064415968 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060409261 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064515147 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.064814403 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064913258 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069000783 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061523479 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060273623 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065644451 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.06003125 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061892688 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105086327 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061884411 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061716262 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060490814 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.066959199 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069534384 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060434213 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060711077 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065023451 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064265451 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060272194 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.063612609 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061733053 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064517773 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061488969 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060532522 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068983236 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068420686 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064757445 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064844096 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062732639 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061837327 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060617355 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060532505 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069283715 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.062788253 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060832552 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062675415 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069577942 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060631471 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060429378 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06938839 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060260674 seconds)
  done (took 4.515244149 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073546486 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112338588 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067359507 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092926114 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.075605942 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.068784163 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066590845 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09329045 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06197045 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063018262 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.076959568 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077245262 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064430676 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066048421 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068541206 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06448517 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065319737 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063705423 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06753415 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063807105 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067690896 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068592541 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075059384 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075849126 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065505781 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063484783 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063789305 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065968465 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075459328 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068614063 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066365839 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067013243 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.075805776 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06927084 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063748117 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064047555 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077152238 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064969459 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064324448 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064222391 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063753742 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066574062 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068438897 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.076988809 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064800302 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069422328 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064597008 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061891032 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076285866 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064476076 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069405525 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077814719 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065939337 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065425641 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066398385 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076091714 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064831285 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062824469 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064991408 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075888141 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06233725 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065197381 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076894502 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064005529 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069360402 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076698965 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069005445 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065981025 seconds)
  done (took 6.244211916 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072144207 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092338817 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073594672 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073872273 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073183805 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072748775 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072846343 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072633858 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072294808 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073022973 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072860343 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112597081 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067973845 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078382116 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072195541 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072467179 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072366461 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072605868 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072797083 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072345294 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072578843 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073053599 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072878904 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072832599 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075519205 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067701866 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071950351 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072409926 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073069237 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072519762 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076039553 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072542093 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072209419 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073169314 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076219491 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072820734 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062226561 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072362616 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072532104 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072678822 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067951729 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073331193 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072148318 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068192874 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072371384 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072244201 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073186414 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.0756883 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081569845 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073501725 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072550352 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073219362 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072743226 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07257854 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073290924 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082137387 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073678019 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073208965 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072649179 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073404854 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073526385 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081749562 seconds)
  done (took 5.990247089 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077546491 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068456753 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082088456 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063833048 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060964645 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071614913 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061588258 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061047227 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069895835 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069619566 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071422538 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071737762 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074122682 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071299319 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07137372 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073703682 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07141266 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071494634 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069794604 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071110349 seconds)
  done (took 2.799565759 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073850027 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079320332 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067231508 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071568615 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066695633 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070979522 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065832493 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066856165 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067123965 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066872571 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072985118 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072770948 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067178605 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071269833 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072261332 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071206098 seconds)
  done (took 2.50709682 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.067771242 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070125362 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.069864949 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062540961 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065962659 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061839541 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061985308 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060974502 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061096789 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075597597 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062110073 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074268738 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062455162 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060940756 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06164014 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067882987 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06127296 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062541594 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062041725 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.067794502 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069450655 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063369963 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065853272 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062484319 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067452863 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070216563 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063823171 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065696876 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062273356 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062766758 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068070329 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069261783 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062095738 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063264596 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061184677 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062436479 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062029915 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063801083 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068276194 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062318581 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060539134 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066921091 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062469557 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063559626 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061793195 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062639371 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061438557 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069037578 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062832015 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067970118 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06231718 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064370549 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062976633 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069959278 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065129236 seconds)
  done (took 4.944599363 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076591447 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066659885 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06114869 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061122838 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066644749 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066777078 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066403576 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066487532 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067377256 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061084839 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067199178 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065703928 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066722631 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066235633 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066765868 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066205319 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060493132 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066341696 seconds)
  done (took 2.585226092 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07290312 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066458844 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07124696 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066037551 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065550039 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065451006 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061129297 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061094069 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061130299 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065644983 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065864644 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064986504 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061055672 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065351793 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065772808 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065752556 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065402159 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061028673 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065873755 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061230778 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065283038 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061078008 seconds)
  done (took 2.816650832 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.090432385 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085346498 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.125782027 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079887852 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08840722 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072484814 seconds)
  done (took 1.934546654 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09169058 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104886673 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066027899 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066625565 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076611127 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07007493 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069810597 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069855647 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076936961 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074597704 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07011971 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076848557 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076739311 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072059288 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076938736 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079904517 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069903137 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069847193 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066209207 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080050451 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069905545 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077038882 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06997414 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069679675 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070100586 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072171849 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079895931 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074694655 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072304509 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076633568 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079801349 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070019405 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077254772 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074705554 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066565084 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076738385 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070163159 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079937624 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076828931 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072151651 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065915408 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077113637 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077076295 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072515617 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080109214 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070401477 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07210398 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070502891 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070281465 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082829338 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077153104 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072621283 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077432159 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080075574 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080276428 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082957103 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075041162 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072038621 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077039914 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075159677 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072296296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0768899 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072085072 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074827703 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079892804 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072029504 seconds)
  done (took 6.33233006 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098986722 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066918325 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070459156 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075497119 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072297533 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070162016 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070261841 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070134576 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070006612 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066958424 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105749192 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070834832 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072392745 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072597444 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070322431 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070013138 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069927929 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072573346 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066953547 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083113317 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07035256 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072925433 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072484607 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072122866 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074878602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079989212 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069896295 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070060856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070001886 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069778889 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072247547 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070033371 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072056457 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066233992 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072222156 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070157893 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069924666 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072172998 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07011025 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076644688 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072153079 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079798601 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069922924 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070164622 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075172257 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069968133 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069975277 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066428808 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070004409 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066295517 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07502324 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075188504 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075111507 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072465258 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070664142 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070428817 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07016631 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070119912 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070065437 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080443694 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072148964 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070095765 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082530551 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070191845 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069980278 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071928532 seconds)
  done (took 6.214109537 seconds)
done (took 128.359111269 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211587584 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183245922 seconds)
  done (took 1.769238339 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074197189 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098215386 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076059883 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13480814 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070120661 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106171397 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103143059 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074064494 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071572486 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071129003 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071211721 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073905214 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137090486 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069787206 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07084181 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074037438 seconds)
  done (took 2.773605731 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106437616 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.187797628 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112705402 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069634055 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107400231 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077299834 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069258387 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081088161 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073284353 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072202616 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077035341 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075175083 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072301402 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07525633 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07305303 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076716522 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071951324 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076903029 seconds)
  done (took 2.959441607 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.095171612 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.087104166 seconds)
  done (took 1.589468518 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159458929 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103965438 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145020452 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.326499213 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.137576517 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.287420476 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.132172275 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127228202 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112822705 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123768559 seconds)
  done (took 3.052948505 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104535265 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169282107 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310193339 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121543666 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076024594 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.08754432 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12341494 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081621784 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081085143 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080095 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080872758 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080129786 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098665554 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076827598 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076388312 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07758679 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102510191 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.0755435 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076118583 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076347405 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102254005 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070001061 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077110347 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075878098 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078340681 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078556231 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071096922 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069922324 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077180799 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075639558 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079076379 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.084585139 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078468406 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104022913 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074385271 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105520659 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075494637 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074175122 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075701586 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074498308 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077752035 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077781543 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07902947 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077298118 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070895482 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074904683 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070974371 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069430441 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079467814 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070675889 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079725569 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079011621 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104156735 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071301771 seconds)
  done (took 6.166538452 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111536263 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108610382 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070703602 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116007092 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106769621 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070720668 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106963606 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100642843 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10951031 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070240574 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068868729 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069798499 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078686244 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081985322 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116444444 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10791637 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070352272 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069820369 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109409979 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110019699 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069126742 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102552323 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099497564 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109281708 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068175013 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069944644 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068143857 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069324513 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075652847 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07742088 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069400293 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078254364 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085629908 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07481775 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066747017 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068560935 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068182027 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077467797 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078301737 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078081503 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076802652 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068103456 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068483079 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069438391 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069420178 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06769246 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076297601 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077791399 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076577135 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068612494 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069105137 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06827536 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068862678 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077342887 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076218846 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078689378 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078459408 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068597929 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068754867 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071372132 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079119444 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078568961 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078278501 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069766269 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078525601 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068470097 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079917497 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083904484 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068922171 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069259315 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068677549 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06839384 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068770935 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075729274 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076199282 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069406252 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068449917 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068305048 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078864874 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076648579 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068309058 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075584442 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067892236 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068629009 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069036232 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068836696 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075432947 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078015979 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069774907 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068270946 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068075304 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068398466 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067518786 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076043123 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077440205 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077179657 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076226875 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068685062 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076510221 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076225668 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068722468 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075649341 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068023233 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068525541 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068547836 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075418562 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074759546 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076643343 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067515806 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067226867 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074994005 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.2151106 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070585336 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076956721 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080413272 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077866587 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068993184 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083395439 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070166968 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079926818 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067953083 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079569654 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069831679 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077458105 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069485933 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068202821 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068958039 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077054672 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069437182 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068850289 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069103442 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069003129 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078004862 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08138963 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069831744 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077139178 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077066396 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069730963 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076857697 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068958232 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077723388 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069157165 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069674843 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068308806 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080312395 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068946113 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068865572 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068767748 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079471441 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067666454 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078836443 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076459079 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068113942 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082788865 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078861528 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076486665 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079171656 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070098788 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069273033 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068823297 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06903925 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075936443 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078104994 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069722758 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068671261 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076202055 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079697868 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06845776 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076332532 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076511316 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076793899 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069595549 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069345452 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079868881 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079754172 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076871829 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076651312 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077902284 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069032283 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076551392 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076991851 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069023777 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08277805 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069812082 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081089196 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077464428 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075952095 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077466289 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078981683 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079243747 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079560481 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082372021 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068859816 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068823148 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076863151 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069172757 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069018437 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076766679 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069626035 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0695095 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08252602 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067526514 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077642123 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068553483 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077748384 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068667557 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069579431 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081356423 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069538624 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06883946 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076318107 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069007065 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076022479 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079528015 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076200884 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068671745 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069038271 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076445034 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076807792 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068517239 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068508503 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068864599 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074716682 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074679786 seconds)
  done (took 18.481592206 seconds)
done (took 38.212447963 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215098382 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.1648361 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200945364 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118845588 seconds)
  done (took 2.203106004 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.098377625 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100384561 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.079965747 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065811635 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.084609997 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065607877 seconds)
  done (took 1.951069127 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282490539 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197789269 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17792726 seconds)
  done (took 2.107206239 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.223946258 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.203042584 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.486261296 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300626604 seconds)
  done (took 2.763388843 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.13614908 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082329818 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064395366 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.075292417 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.114325399 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.146937062 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.091602936 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.115015265 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076015809 seconds)
  done (took 2.409123751 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.136665538 seconds)
done (took 13.042837302 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.102017964 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.212943178 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.0729094 seconds)
    (4/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.125980267 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068275154 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.23253443 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.129416128 seconds)
    (8/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.250903963 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.077712685 seconds)
    (10/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078326386 seconds)
    (11/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070457209 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076830676 seconds)
    (13/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.198480526 seconds)
    (14/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.206287723 seconds)
    (15/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139638589 seconds)
    (16/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079446084 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.254044524 seconds)
    (18/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.24786754 seconds)
    (19/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082410633 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.381095401 seconds)
    (21/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065765352 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.146457015 seconds)
    (23/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.165727032 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074303804 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07797858 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076806262 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074256614 seconds)
    (28/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.187807228 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09493329 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07768933 seconds)
    (31/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074997949 seconds)
    (32/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.172197769 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.082946828 seconds)
    (34/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065218212 seconds)
    (35/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.212517389 seconds)
    (36/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066613284 seconds)
    (37/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.077248341 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.084481968 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089387588 seconds)
    (40/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072186122 seconds)
    (41/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.077580433 seconds)
    (42/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170212457 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.152430317 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073036168 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073582452 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06414913 seconds)
    (47/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.173278651 seconds)
    (48/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.110622719 seconds)
    (49/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074958708 seconds)
    (50/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.159639476 seconds)
    (51/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.065832749 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.079399302 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.153262451 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.243733606 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073793799 seconds)
    (56/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068265659 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.146688193 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 0.066571492 seconds)
    (59/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.19253425 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.176040561 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.078822331 seconds)
    (62/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.245202854 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.230557237 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065614512 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074851467 seconds)
    (66/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.171469787 seconds)
    (67/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.07693061 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065163982 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063741538 seconds)
    (70/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.181051712 seconds)
    (71/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.064979526 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126552352 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077239338 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.081095299 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128819913 seconds)
    (76/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.150776841 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081177765 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089479297 seconds)
    (79/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.148570895 seconds)
    (80/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065625875 seconds)
    (81/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.14456218 seconds)
    (82/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.064748778 seconds)
    (83/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065892345 seconds)
    (84/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.143756699 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.243823122 seconds)
    (86/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.08203082 seconds)
    (87/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068397639 seconds)
    (88/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.168715628 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071026698 seconds)
    (90/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076069758 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081383523 seconds)
    (92/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07775961 seconds)
    (93/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067822645 seconds)
    (94/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076715471 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067238692 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073464919 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066233781 seconds)
    (98/309) benchmarking ("sort", Float64, false)...
    done (took 0.136743018 seconds)
    (99/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07152778 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069771278 seconds)
    (101/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.199930172 seconds)
    (102/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075451972 seconds)
    (103/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.074204063 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120765556 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07480853 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066582292 seconds)
    (107/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066417496 seconds)
    (108/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075780603 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141159946 seconds)
    (110/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065926761 seconds)
    (111/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.086230213 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13412193 seconds)
    (113/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067280421 seconds)
    (114/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.147771383 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.139644548 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.079429176 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12313626 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075239908 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.23150163 seconds)
    (120/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065341557 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094423084 seconds)
    (122/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.213699287 seconds)
    (123/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079722664 seconds)
    (124/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066977991 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12498457 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.064724118 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086987254 seconds)
    (128/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.1869123 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087484569 seconds)
    (130/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.065351246 seconds)
    (131/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.166242394 seconds)
    (132/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.149575416 seconds)
    (133/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.078640184 seconds)
    (134/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.256457004 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076438495 seconds)
    (136/309) benchmarking ("sort", BigInt, false)...
    done (took 0.255610753 seconds)
    (137/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065108698 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06611906 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066068364 seconds)
    (140/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073982038 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077212104 seconds)
    (142/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075227631 seconds)
    (143/309) benchmarking ("sort", Float32, false)...
    done (took 0.136745722 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132597431 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065390775 seconds)
    (146/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06694644 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065558538 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076842914 seconds)
    (149/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072803385 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152635212 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112906535 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156308044 seconds)
    (153/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.146625978 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151128571 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074325366 seconds)
    (156/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.144709882 seconds)
    (157/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.189908454 seconds)
    (158/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.066799997 seconds)
    (159/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070127835 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063860508 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066074792 seconds)
    (162/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.065282403 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067135025 seconds)
    (164/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.066816089 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116318219 seconds)
    (166/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.15099898 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.176332591 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067284352 seconds)
    (169/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069185406 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066173281 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.150328567 seconds)
    (172/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.197786878 seconds)
    (173/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.16595033 seconds)
    (174/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.068105667 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.191579802 seconds)
    (176/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067099253 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066961976 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087011069 seconds)
    (179/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.084073525 seconds)
    (180/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.215374837 seconds)
    (181/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.150910073 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.080417343 seconds)
    (183/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.066279204 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168607337 seconds)
    (185/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.063684073 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085796703 seconds)
    (187/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094118694 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065092696 seconds)
    (189/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066886694 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.230210248 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06898756 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094689254 seconds)
    (193/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.153753539 seconds)
    (194/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069094973 seconds)
    (195/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.068829715 seconds)
    (196/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.160527879 seconds)
    (197/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06955297 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066941073 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066033975 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066952656 seconds)
    (201/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073122603 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182335925 seconds)
    (203/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068140473 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.218976076 seconds)
    (205/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067639678 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131016522 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123332416 seconds)
    (208/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07539562 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073703035 seconds)
    (210/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065394488 seconds)
    (211/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092249489 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068981579 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09116346 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073432752 seconds)
    (215/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.084858459 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065692084 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073631707 seconds)
    (218/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068965322 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17164413 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077393403 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078406674 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065661621 seconds)
    (223/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065260307 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146762721 seconds)
    (225/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.075012811 seconds)
    (226/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08183096 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089529731 seconds)
    (228/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074762249 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067038969 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074164447 seconds)
    (231/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06684317 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.065019578 seconds)
    (233/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078299152 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14622997 seconds)
    (235/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092754367 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067487022 seconds)
    (237/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065660627 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171779719 seconds)
    (239/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078897231 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073667904 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073774548 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067086225 seconds)
    (243/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067193417 seconds)
    (244/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181065465 seconds)
    (245/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.066258135 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064973916 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089610516 seconds)
    (248/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065850224 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066252916 seconds)
    (250/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.215012769 seconds)
    (251/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065240732 seconds)
    (252/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065550396 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066877421 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067409957 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073585525 seconds)
    (256/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065319204 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065978831 seconds)
    (258/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066785126 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067158423 seconds)
    (260/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066917703 seconds)
    (261/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079668334 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065456854 seconds)
    (263/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072679429 seconds)
    (264/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072704008 seconds)
    (265/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088794639 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074355308 seconds)
    (267/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.065191966 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065227462 seconds)
    (269/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068022045 seconds)
    (270/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066233192 seconds)
    (271/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06487546 seconds)
    (272/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065181632 seconds)
    (273/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.07027753 seconds)
    (274/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066919811 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06654177 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092030987 seconds)
    (277/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067857258 seconds)
    (278/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064654993 seconds)
    (279/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077718134 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065253956 seconds)
    (281/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.07378005 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066346652 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066947715 seconds)
    (284/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.065680602 seconds)
    (285/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.06964839 seconds)
    (286/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.066482766 seconds)
    (287/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073525545 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066586958 seconds)
    (289/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066181905 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145624035 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065681347 seconds)
    (292/309) benchmarking ("sort", Int8, false)...
    done (took 0.172194717 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178046831 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077135864 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092320161 seconds)
    (296/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066647882 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065407148 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065639843 seconds)
    (299/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065936027 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072900661 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.064915465 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.090666836 seconds)
    (303/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.066711677 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092082391 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.064849962 seconds)
    (306/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.093909751 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086748691 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065106584 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065503197 seconds)
  done (took 33.542446628 seconds)
done (took 35.006609429 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086006768 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092058079 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074398808 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.087392872 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082644186 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097919663 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074430362 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079447715 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081842854 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08040082 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080207843 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072840762 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075787362 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076056304 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073786454 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090680649 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081383612 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075091255 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075117638 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06534298 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074519704 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066348738 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065519103 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072854016 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078012871 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07319152 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076109278 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07574681 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066146225 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066466592 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070971615 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074930332 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06869956 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078580821 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074237406 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075056858 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076249354 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079560263 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065426042 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066931564 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077198438 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06630816 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074638336 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072903133 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071549394 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073567019 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074869955 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078459111 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091108375 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070909317 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077122 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078336774 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078416782 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071861455 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071613027 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075030531 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072731215 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089837538 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075018528 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07096005 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076519704 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076259481 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072981536 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074559522 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074736905 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077445004 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078659206 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073178599 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077204989 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073822555 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066054578 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07443706 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070785846 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065755663 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077771166 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080779128 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064683994 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070485804 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074793776 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075194587 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065244087 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070839847 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064851534 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070758098 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070303517 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072976507 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07125225 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073811854 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064780247 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074908924 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073514913 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074311602 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065140985 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079131488 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065386745 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072407008 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066332018 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066086298 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065095142 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07104426 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065747941 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070345524 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073822415 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064964197 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070850697 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079974324 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065754853 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074132661 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065255822 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065411256 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077429047 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077337959 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066016572 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070717796 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065043996 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071429205 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065157224 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065385358 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065599876 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065694293 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070414005 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065890969 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070472196 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071485073 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078149862 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065506976 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070277701 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070468014 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065658488 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072799544 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065967071 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065640669 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064588858 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080012848 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06972244 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065789656 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071226013 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069596956 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073369332 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064480504 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073591919 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071429009 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.215143763 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073921594 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066049314 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078731817 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07167038 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070989532 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.0652712 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066218273 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064986846 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066024705 seconds)
done (took 12.797889309 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067851515 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.097053371 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.075650963 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.08375943 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.079726564 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06750446 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.071300401 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.085288208 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069254784 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.087437072 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088322905 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087806023 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.095245362 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065145931 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066483593 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067340887 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065158283 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.073632239 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.08276431 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089529637 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.097638797 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066058764 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.076090909 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.082675167 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077745136 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.086335433 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067705646 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067469251 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069478789 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08361933 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092016155 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.066683109 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067684413 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.081790976 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.081385315 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.074594037 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067273103 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.070782174 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067538361 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066731807 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068340827 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.082002042 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.071211453 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076221611 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067122417 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067758529 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067114679 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.07049907 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.078212076 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.070858875 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.074993082 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.079459206 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068755438 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.067077728 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064742609 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.071124505 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066546273 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067195722 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067038586 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066181876 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06669725 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068861102 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.067675215 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.06731793 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070220594 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.069598037 seconds)
  done (took 6.413366523 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085144674 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096745288 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084684797 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084563365 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066292542 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067087481 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066963635 seconds)
  done (took 2.123612704 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068032546 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.080462083 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084372569 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084069862 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.076591051 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085578645 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067414654 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097820639 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066199566 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079532547 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.115245007 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085367892 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070322754 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078865194 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066954539 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.074957632 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066972997 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075070588 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.076068532 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083960877 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071274057 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095608756 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081249936 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06750172 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.088512514 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.071560694 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.066015785 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067343158 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06803407 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067725363 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067672341 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107167947 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.071725313 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081435685 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068357619 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.066471074 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.073100633 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070240429 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.070120865 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07391518 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.072566685 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068375117 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065758483 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068189554 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069383656 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.071293428 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065824789 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068260117 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067669446 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.079259443 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06607556 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.071262083 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070620797 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072339917 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073410095 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071546689 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075593987 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068147058 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.079383302 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.075016017 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068275683 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076497171 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110952842 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.072631586 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.076071182 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.072034357 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.071654273 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.073200875 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067830485 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.069522376 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06823729 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075829683 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.066594758 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.069510211 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070421985 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068970786 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.071169259 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.085129621 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.084469311 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080530204 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068925231 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067973476 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07125202 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.084289223 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071833265 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067768782 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070153858 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066605146 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071686301 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068136377 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073325172 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068013489 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074983589 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.06955146 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070442346 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076264937 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066637412 seconds)
  done (took 8.760497569 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070109873 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068548185 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070007351 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068641635 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068528225 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069114296 seconds)
  done (took 2.015147259 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091214472 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067081596 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081839853 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067623473 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104237793 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.075184427 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.075915657 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077745635 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08156128 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080807659 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.075518959 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.078322765 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.074579683 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069868563 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.074969043 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068857591 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.075436089 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071352659 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080001121 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070253238 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08171208 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069177274 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069265201 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08003902 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070766992 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.06849672 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068180303 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08025847 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079926876 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080189376 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069394592 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070784946 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075653857 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076950541 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.075499215 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075598086 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067275998 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073671638 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070026991 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070844199 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.077913093 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069729152 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070037372 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07342077 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077157597 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075692095 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07350703 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071802172 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.074565569 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073504858 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073382168 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068364633 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070398845 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073753704 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075824524 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076736328 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073368433 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.075353924 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069630584 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076174914 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067352813 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071130677 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076685847 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070663189 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.071731768 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07377564 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075838098 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0693452 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069685639 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067447007 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073681179 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067416542 seconds)
  done (took 6.903708766 seconds)
done (took 27.7701055 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.99156644 seconds)
  done (took 2.53377371 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.571631718 seconds)
  done (took 2.154242152 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.142594319 seconds)
  done (took 8.720298769 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.302752219 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.342786739 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.747042658 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13396838 seconds)
  done (took 3.141090766 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.736508486 seconds)
  done (took 2.3211354 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241026015 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230740905 seconds)
  done (took 2.065765044 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.355430931 seconds)
  done (took 1.933625194 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.16874202 seconds)
  done (took 2.747484147 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.235365194 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163961099 seconds)
  done (took 1.988663639 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.483791374 seconds)
  done (took 2.065756764 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.502497119 seconds)
  done (took 6.091166689 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.243429836 seconds)
  done (took 1.872940446 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237299449 seconds)
  done (took 1.82668626 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.744820847 seconds)
  done (took 3.328155269 seconds)
done (took 44.385985717 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084152629 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086874207 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087113682 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083123304 seconds)
  done (took 1.89442855 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.075947018 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070799025 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.074712814 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.075039102 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073152856 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073994479 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.073502646 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070736775 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072042405 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.070417737 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069309837 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.070531889 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.073461998 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.070799475 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.073237757 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.075163742 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.070768351 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.070465533 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073366124 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.070350335 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.073859191 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.070182095 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.06893669 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070010514 seconds)
  done (took 3.314156076 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079333447 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07364462 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076263764 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072672955 seconds)
  done (took 1.894048762 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.076891331 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.087055743 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.08882499 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.095363169 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077462818 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.077576987 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.085579952 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.086484397 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065893044 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.089843691 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.068941088 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.067196381 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066662598 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.08930239 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.08577283 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063733164 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065374143 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.077973494 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.076797765 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.079187001 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068220518 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.065887352 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077233955 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.077171404 seconds)
  done (took 3.449537082 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080275784 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066054913 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080960442 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093173488 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095740655 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065802735 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.081822215 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095222653 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.143309945 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066054967 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071853335 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066230494 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.108742319 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066329223 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082988128 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113684176 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117615324 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070095195 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100241805 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066284797 seconds)
  done (took 3.327682074 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077419399 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068461069 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070616353 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066163744 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078456634 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074334789 seconds)
  done (took 2.039561145 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069678663 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068555941 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068187123 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067898891 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073238209 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06795393 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066584739 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068284807 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068543574 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068073424 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068056807 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067175494 seconds)
  done (took 2.41739879 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.167081583 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071310576 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072387494 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070944727 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072855199 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06719677 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083622259 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069549367 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087322107 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067709997 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067992399 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069879708 seconds)
  done (took 2.565582562 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102792058 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133620729 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098973606 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07426698 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17573227 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096551425 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.093449059 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.126594927 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095276842 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.071423894 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095140773 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139491276 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097970163 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.100647406 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083971785 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128160318 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113054051 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089925878 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116452096 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083628218 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.072420899 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135917172 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071657634 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094160033 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103661772 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.100266752 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11305407 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136463846 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086196279 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.09230893 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085230249 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076048709 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10865177 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.087479689 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.100730743 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095790733 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100751431 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086770708 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08824443 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124198498 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158097442 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103456574 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102515876 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138255403 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080343159 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111348689 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083025515 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100399522 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106918574 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094915417 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077116343 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094731942 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.109262938 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104669921 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.084034114 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083622483 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120225966 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.101028671 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098071725 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081805979 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110568574 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.088574255 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111001412 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274727712 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144679899 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106207593 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140698259 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128918948 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098195953 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.09336573 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.094288751 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07809126 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114426232 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100703444 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139937113 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112480219 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102373069 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.100472126 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085393066 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11135373 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118562738 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095921512 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096472728 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155872744 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111960864 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092841118 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093145243 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.147612602 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073460795 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15151752 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09199821 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126516236 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09882618 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142277296 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094557388 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.086195429 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110764674 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106011292 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092419373 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105417588 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08733412 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116966896 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094657329 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103768699 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084284998 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093363711 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089464247 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.101057034 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077226706 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107099183 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119038089 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116803502 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077184973 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111287189 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089112329 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.079746645 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094956006 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143947325 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086426903 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077992182 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15643734 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.095875249 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.12072814 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112077018 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.086023946 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272901797 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142282594 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094763577 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092358284 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079655634 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161382558 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078785807 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123627142 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084095064 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106606087 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110335643 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135553639 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143581633 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097956824 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081045035 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095122119 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.108292965 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090084559 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088349715 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079364586 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11136566 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129255385 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.104580063 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084189125 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.096063684 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.071331734 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117575169 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079164017 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087774893 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099363256 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.090491328 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.09331716 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147089778 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.086863391 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111596395 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101286333 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.070882623 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094242507 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157363049 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085799891 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.114989913 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121239009 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086805102 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070293834 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.099240069 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075562818 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111430055 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.096130556 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111685436 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080721739 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109940936 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070449385 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076291101 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132681764 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105289527 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092121146 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.136765956 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109502172 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.0919108 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.105703021 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.099175681 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097156253 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104744488 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.108155346 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267741025 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.077413246 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134625714 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094405869 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080504596 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089505929 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082615418 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.080962564 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103989472 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118065419 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09334118 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105594349 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106739178 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093044691 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.114376815 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092527651 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081740688 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135709355 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078604844 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077306648 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090843544 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.10970118 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091251276 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.138184708 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.082752024 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140403549 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095583534 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084152631 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117040637 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070504901 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071894418 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.083751785 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09545139 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119682503 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081498366 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081131725 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122082958 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136811729 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100732098 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10583684 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070753484 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093347404 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139834373 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.118950966 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084137794 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113696956 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087788416 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13393968 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099337167 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125363928 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109987245 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114773395 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.095039776 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.084046792 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075850815 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09102069 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114897696 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089561814 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084807482 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.070374564 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077308278 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096359975 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092915448 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115083186 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090208402 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139747947 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075640511 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10216947 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107560617 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268519721 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095099869 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100949003 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.095841698 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095080546 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09596235 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095889144 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076386458 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130832586 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106501272 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080896711 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093354332 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098881773 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111185608 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113403088 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114026598 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097721328 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110952543 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128684038 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102290052 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08562163 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086894315 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.095821034 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.088683795 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084052573 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.107192182 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115858115 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102450764 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113200523 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.099085025 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.095385628 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110414991 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09648903 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091702937 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.123522395 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159352114 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.106542987 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109240774 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088396259 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110746091 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10905946 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117731549 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.114884888 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112917108 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073400874 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077776079 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.072978383 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109941084 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081825073 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121072051 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079251608 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111084128 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100751845 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082847166 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068925259 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105479404 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096588675 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.085925148 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127210679 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.118654507 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075537175 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094309814 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11196062 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086655339 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128473984 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.105274695 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104981444 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07409136 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09361643 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075668066 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.268874933 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105425248 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080483736 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.07951225 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.073047551 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111164009 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087359703 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114072291 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092657278 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109837559 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126001866 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134050452 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087854717 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097588754 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118802893 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115093079 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.084178579 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117047153 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140593105 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.124095423 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083789628 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.086630227 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110543481 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109818843 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105967165 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078918348 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081989368 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112292515 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115731749 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069402512 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087895639 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072899933 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.087331768 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116618618 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098475978 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085772961 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122209497 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078357646 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111660691 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098937668 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126160398 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126471969 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150803033 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100604063 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089199167 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079346547 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128841432 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.073335385 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121438755 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115542635 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090620619 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.070827594 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087771674 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099271713 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.628731677 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113017011 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079193576 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140850303 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09080974 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120840173 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088342046 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.122663733 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091953351 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105318364 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092545478 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288189832 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084756515 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113550006 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.179507123 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114414419 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.111078854 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077189229 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.08996346 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077293151 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.081636502 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.083928089 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090376425 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113769388 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087372 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109448751 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.082616632 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109892659 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094100287 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092007137 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.10324951 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083018111 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143711041 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09093058 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126917646 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110032284 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081256375 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077555807 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.090213168 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10583474 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085108413 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09792968 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08185353 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.07922043 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157960251 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104972188 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088758448 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106348475 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.095745012 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.089896866 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095411919 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121773961 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1142482 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07634251 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.091616776 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107801752 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082339573 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078332229 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101188416 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.072155345 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091369441 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101687977 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100606119 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09289436 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.105883633 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080737658 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090939467 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114318888 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089110831 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079985887 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079554505 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079495984 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.07891196 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107443729 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113492627 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11840883 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112429597 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09495507 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096320898 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.081648077 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.229209134 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082255757 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259089436 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.109094423 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078875833 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.137384889 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09130924 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091956957 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100431046 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105351784 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154419743 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075622737 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110086025 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095284997 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110613507 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088180942 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108454353 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09712902 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094710507 seconds)
  done (took 52.176098027 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.09449659 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.149403929 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.159348164 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.080858292 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094962111 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119554547 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209706207 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192450118 seconds)
  done (took 2.8201235 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067776377 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081430582 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105752627 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083406688 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06570241 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06708952 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.210219813 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083906102 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067027739 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105885228 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07776797 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069397614 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.405848019 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066713791 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06757881 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076865349 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068051917 seconds)
  done (took 3.46853537 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.377151146 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602044193 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.344722131 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074017923 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.001593028 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091407283 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.273658891 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138717686 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080263736 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.558456252 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368928052 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131343815 seconds)
  done (took 18.748273033 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076612028 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075524072 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.080457277 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.080091405 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075366868 seconds)
  done (took 2.093509216 seconds)
done (took 101.808783893 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082504909 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.174699969 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069167294 seconds)
  done (took 1.988555448 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.084890603 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083378635 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08316484 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.081244953 seconds)
  done (took 2.045463278 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074803605 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077820317 seconds)
  done (took 1.858017412 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.251285781 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169567376 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095191338 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083707894 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081908401 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082436431 seconds)
  done (took 1.96666662 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071966032 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072982696 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07359582 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073773581 seconds)
  done (took 1.99825956 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068263151 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067356368 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069305633 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073085481 seconds)
  done (took 1.987604242 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083049047 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085198049 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079789603 seconds)
  done (took 1.953889957 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.096432012 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097353567 seconds)
  done (took 1.899959635 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080137938 seconds)
  done (took 1.784854532 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.08953594 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09823402 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155261065 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114409392 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.155132588 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137035511 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.077205677 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.078769231 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07369008 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071808439 seconds)
  done (took 2.754317578 seconds)
done (took 22.544611777 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078915876 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372584181 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361544606 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089372705 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673756553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357791266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990808672 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093453714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1027575 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06993505 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087237807 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648564115 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981244631 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33217522 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968441452 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325984573 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651928943 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069602799 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068535066 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070084771 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974172678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069069481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069864256 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069534025 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65116064 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375268421 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070634391 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329705389 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069739679 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072347745 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358192501 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071422462 seconds)
  done (took 16.254003123 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070944406 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122070065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074633577 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085621956 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072378298 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070842742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072516298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07045945 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112367299 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069924234 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088083143 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069307609 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074290765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072301292 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09146341 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070705043 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072399361 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070736493 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070365584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07415121 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089288886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070468725 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071037321 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071159534 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071223499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083950053 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072148351 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069943835 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070447363 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072704081 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073761511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0720653 seconds)
  done (took 4.188612137 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123696725 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13144352 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075030459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111413373 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123640657 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071714839 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.155313418 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094623754 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118126314 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070613584 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087877712 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070438082 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106981822 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072289149 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091594362 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071188209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072600751 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071240302 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070355277 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071450619 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090023276 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070060446 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071103752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071028184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071270813 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08596066 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071583631 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070175483 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07054365 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072783117 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074436866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072392803 seconds)
  done (took 4.476302788 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070313342 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073275397 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081268734 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083086831 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067903905 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070160667 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071900231 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068015966 seconds)
  done (took 2.311932868 seconds)
done (took 28.952748635 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079534473 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069147188 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07223099 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089785117 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075606576 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07202417 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065590593 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075629979 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072794425 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072637909 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074276578 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067780237 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071246615 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066283468 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073791951 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068164376 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.075013733 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072641357 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.073136069 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.074690059 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070893704 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073954396 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07598824 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.072918976 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.073239921 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.073033223 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077639084 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073606269 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069021228 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.0710105 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070151717 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079350579 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.075508203 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.075533703 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067868237 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067963771 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072251876 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070590558 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07485415 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077946033 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069517661 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07736804 seconds)
  done (took 4.759367909 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085448382 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091221547 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084322876 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08354536 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.103044849 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084790347 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.0884485 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080495135 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079221484 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087523697 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075456502 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082899769 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080526477 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073302418 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079111335 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076257357 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08111033 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075612246 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080296209 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080042351 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088897772 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073647882 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081079272 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.08185392 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075875517 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082365873 seconds)
  done (took 3.874075714 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073723898 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088329766 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095055795 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153337243 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115054106 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082910501 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083193051 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097573134 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.102332232 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069511457 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073495296 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095532641 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097179585 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075994128 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.110293799 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084914654 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082511319 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069111633 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073547361 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100068889 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088484464 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085663139 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09746128 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086034733 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065978191 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069399593 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075261767 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083224056 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075796536 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080665933 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072958383 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071818596 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068927952 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08015737 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072998629 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067102755 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093002605 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080815534 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08267566 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.113267953 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078250693 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069841739 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098059218 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133653606 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068189966 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071525848 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071913688 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080759148 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069789048 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09906122 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083697822 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068037173 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068689749 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069768773 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06956187 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084711553 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07059032 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070610805 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080439563 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075052491 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091471469 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074163138 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088744829 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06855248 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080120838 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06976836 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069803218 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066967012 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.10254517 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075414805 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.120527847 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069305429 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066582523 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080976242 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079303835 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074489043 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068012386 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086875646 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079812454 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072116136 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080492243 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071442393 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072137718 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102851248 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068361391 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067254991 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066482908 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071198402 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071678691 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068778678 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08230497 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067837881 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071389139 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083656597 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068131348 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068834306 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071138812 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069900747 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067798083 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081389093 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07235342 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069499881 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080202844 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069182118 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071839179 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082791743 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076431706 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067673347 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069976736 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071162484 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069830835 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072659733 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071779117 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070763986 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074795143 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076295216 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074350098 seconds)
  done (took 11.060147105 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167811395 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158971707 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071120259 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152540786 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077007497 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.074148534 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152182487 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.089363517 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069175556 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070157588 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068560214 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.098499324 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.095033743 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.108123009 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.074517687 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069390556 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093376951 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.102827767 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155452731 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150298764 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093874368 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076370628 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071727871 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071003968 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070662458 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077654179 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08768142 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078442505 seconds)
  done (took 4.494577182 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077251064 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.095597446 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072967267 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.081408204 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088955872 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069684648 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071483996 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071231684 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084433924 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077852631 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069338076 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073726238 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072233837 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071802802 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069582178 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075585025 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076184589 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067856602 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072751427 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074269199 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079707429 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095679726 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073473781 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068827874 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071064294 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068618767 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077918415 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081079299 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069188072 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.084656924 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066088198 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073647786 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084138766 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069753784 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068448798 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069064517 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068894714 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068913798 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069540604 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06703311 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067058376 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074475078 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067797533 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076749028 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08332385 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076259033 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070550593 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07110775 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071685653 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065933318 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072116414 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07185097 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071830263 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076777802 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072851699 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071810048 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073414248 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095240912 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075063531 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068568457 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068395358 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067660432 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07117193 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079495774 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085951155 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071007067 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067415282 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068900046 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074940344 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083197406 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068561712 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074206584 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066312016 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06887227 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071175496 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071501433 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069793446 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067314358 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06824113 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068874642 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069283016 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068446245 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068755047 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071602282 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066399021 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06755398 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069336757 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07040253 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.0777064 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067945646 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072432234 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070111731 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067786403 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071667824 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074567216 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07183024 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08311841 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079652968 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069544594 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067068759 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082853456 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071303834 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068246502 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075766716 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073181387 seconds)
  done (took 9.463925843 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092487018 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069853298 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088381121 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095165712 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079748731 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074583385 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081375203 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070150171 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086375037 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068131124 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077802566 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067629932 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081101305 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079998766 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070784739 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080275356 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071834871 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088395717 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084442527 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067823134 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078359145 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081845184 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081594351 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085794288 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085417063 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08633109 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081734747 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071815736 seconds)
  done (took 4.006872914 seconds)
done (took 39.379881941 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.804921962 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.982816767 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.799541316 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.98217964 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.89079721 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.920288424 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.912749158 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.79863351 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.969911281 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.851625681 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.1062158 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.313408747 seconds)
done (took 66.127562599 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.88070392 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.96915509 seconds)
    (2/2) benchmarking "String"...
    done (took 2.055551048 seconds)
  done (took 5.758033011 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.062304056 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.62545975 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.064670865 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.793445792 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.802939763 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.239367893 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.610720796 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.261102743 seconds)
  done (took 31.128907087 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.932513635 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.034726464 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.525969642 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.517840064 seconds)
  done (took 15.789349275 seconds)
done (took 64.445323894 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.847980106 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.795502488 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.873978771 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.823538227 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.800702021 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.796585215 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.797325078 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.797155249 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.829116886 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.901502186 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.796725918 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.801743539 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.794238413 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.811708301 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.455668088 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.858061034 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.815035149 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.814882458 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.814407363 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.822660328 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.796747334 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.795091036 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.272087874 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.982164647 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.403671802 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.085552147 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.289532678 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.219979865 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.80807365 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.797451848 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.844692412 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.085747881 seconds)
  done (took 205.157818009 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.797785818 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.845160646 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.96136884 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.806090535 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.334643952 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.976091987 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.899128236 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.377888077 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.800489183 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.81122316 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.947694037 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.796850752 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.97888536 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.747140752 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.83947377 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.885771034 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.051189617 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.988277955 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.832067094 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.946473261 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.808120733 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.803645562 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.767744419 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.942996159 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.836147683 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.882070053 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.805987951 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.800719052 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.984013191 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.02301796 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.826395439 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.82231866 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.957763812 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.666148715 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.822160762 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.80320161 seconds)
  done (took 170.906546875 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.987657776 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.804703002 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.798450136 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.859908187 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.923914674 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.798045002 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.447714516 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.805258111 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.906885524 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.800978188 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.801244642 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.801493466 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.802989132 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.814597236 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.884357745 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.79883412 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.816003312 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.804079654 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.824063919 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.798775963 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.799734495 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.801436193 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.799578993 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.803260695 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.79860816 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.802049869 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.276496644 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.037292919 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.79937076 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.800075745 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.79936866 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.811129447 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.829252604 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.801327736 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.504379228 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.888037212 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.856521786 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.914427465 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.795678795 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.015948025 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.877782299 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.795192941 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.80047394 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.864668435 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.805984009 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.79410008 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.79883527 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.800455458 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.806273208 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.859107077 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.037489704 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.796868648 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.918688407 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.281544021 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.796240961 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.800218907 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.80057768 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.376488991 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.796575961 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.801427184 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.808847915 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.802862347 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.799229909 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.801358201 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.188033399 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.869243394 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.876762529 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.154080404 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.795938489 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.122797028 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.993915961 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.800149941 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.799853671 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.802204408 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.800547343 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.804382686 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.804010428 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.922406407 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.808381638 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.904144067 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.879044619 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.926978728 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.797560985 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.811203862 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.644726886 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.866908693 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.833770168 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.622494616 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.798945022 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.17793836 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.562433004 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.798854008 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.801919261 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.813467768 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.801410999 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.801975348 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.804562797 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.879567182 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.805922259 seconds)
    (99/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.929736427 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.525572323 seconds)
    (101/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.166331595 seconds)
    (102/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.985414744 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.800565563 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.80248449 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.808885932 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.89256115 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.801970765 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.964683394 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.797364446 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.868569857 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.801611176 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.80310504 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.945991021 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.797254452 seconds)
  done (took 403.367876912 seconds)
done (took 783.214794163 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.398399625 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.371033374 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.483317978 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.393439225 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.361687845 seconds)
  done (took 13.74014581 seconds)
done (took 15.471765916 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.817759305 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.808740673 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.865173629 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.887977371 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.817791833 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.823620421 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.888384918 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.822893312 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.856313322 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.856663662 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.887810554 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.889081395 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.829237242 seconds)
  done (took 25.78431651 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.811667654 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.954711557 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.034102158 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.847493158 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.812557025 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.03141898 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.878379919 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.950692564 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.957736889 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.045184807 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.050047485 seconds)
  done (took 23.113652187 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.814969313 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.95764529 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.035848178 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.849121076 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.814398635 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.042279191 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.879443386 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.952126551 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.959151606 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.045629776 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.042917634 seconds)
  done (took 23.140882664 seconds)
done (took 73.772515625 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.805792513 seconds)
  done (took 3.541665738 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.824726963 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.971619946 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.806965045 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.804353431 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.80689864 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.807952891 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.804165804 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.807095083 seconds)
  done (took 16.369085737 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.810151193 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.808446744 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.806354934 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.806879956 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.807664636 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.807312533 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.807911109 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.806983343 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.810433238 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.808887031 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.807196468 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.806713968 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.807078541 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.808338604 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.810987033 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.807748383 seconds)
  done (took 30.664099771 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.809700141 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.811316793 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.807400344 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.806940799 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.808078877 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.807886014 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.810232231 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.809934035 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.808263316 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.807050791 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.807595982 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.805688125 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.807208624 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.808705526 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.809336846 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.809896709 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.806936549 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.807796693 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.811628202 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.807624596 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.80902016 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.808865023 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.807020624 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.807496202 seconds)
  done (took 45.142489516 seconds)
done (took 97.462037817 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.610461034 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.556960852 seconds)
  done (took 9.905115244 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.808769407 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.810282308 seconds)
  done (took 5.361965348 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.808031956 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.811432685 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.811383633 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.809321769 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.811204905 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.811569345 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.809418588 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.81029645 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.811764287 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.810648172 seconds)
  done (took 19.8422517 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.81215252 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.812249063 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.809227623 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.811532423 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.810386472 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.809020797 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.810326922 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.810157221 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.809923122 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.809610609 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.809456827 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.810252114 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.809732187 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.810689769 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.809424423 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.810370923 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.810653501 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.809753291 seconds)
  done (took 34.324144978 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.810463137 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.811368591 seconds)
  done (took 5.361286921 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.810594074 seconds)
    (2/7) benchmarking "second"...
    done (took 1.81054268 seconds)
    (3/7) benchmarking "month"...
    done (took 1.809663921 seconds)
    (4/7) benchmarking "year"...
    done (took 1.811584172 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.811295222 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.810241744 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.810082255 seconds)
  done (took 14.413221961 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.812211757 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.969776166 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.023044671 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.676112764 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.811908158 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.81517578 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.14915884 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.815925323 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.816903817 seconds)
  done (took 20.62955119 seconds)
done (took 111.574513952 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.626018973 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.808800566 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.091238849 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.8728912 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.831433789 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.105567172 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.826149202 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.452524001 seconds)
done (took 42.359259264 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.882174663 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.80978802 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.840341183 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.83820965 seconds)
  done (took 22.229279028 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.813199793 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.153033189 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.842827412 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.706270766 seconds)
  done (took 22.274234037 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.193941156 seconds)
    (2/2) benchmarking "read"...
    done (took 2.159838403 seconds)
  done (took 6.10307826 seconds)
done (took 59.232066839 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812744256 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.8130652 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.812702858 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.81085702 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.812732412 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.811582534 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.811516143 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.811054646 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.812462127 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.810161766 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.814297827 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.81246324 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.814790196 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811879533 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.814005841 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812644979 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813271163 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.815469429 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812987472 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813436253 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813343552 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.81203456 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.812091997 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.8113617 seconds)
  done (took 45.243558599 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.812567296 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.813045321 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.812957765 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.811602687 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.812227787 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.813775538 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.815064917 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.811195277 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.813628709 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.813459057 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.812618273 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.814414602 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.812576018 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.813135252 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813904604 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.814110789 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.813252356 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814755403 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813539835 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.813512711 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.813434991 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813174905 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.813434379 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813609929 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.814184126 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.815210464 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.816476129 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.814428961 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.81642502 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.816492826 seconds)
  done (took 56.156020293 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.81562184 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.816882201 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.813795556 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.81669129 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.816461834 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.815008709 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.816590505 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.818286286 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.81570534 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.817588076 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.81730195 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.816817208 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.817704914 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.818391999 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.817216939 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.817684996 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.818179708 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.817904865 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.817045877 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.817919148 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.818274535 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.817789514 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.815833938 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.81672456 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.81721236 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.817954062 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.817440784 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.817154773 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.816775208 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.816285832 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.816458694 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.81974118 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.816941551 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.817056416 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.816999412 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.820846184 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.818142536 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.817561501 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.818374867 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.817226946 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.818892389 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.819098095 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.820886422 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.81874686 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.819514498 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.816779049 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.817114624 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.819598753 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.818149556 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.818271768 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.819072191 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.817051613 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.818393009 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.817965531 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.818127487 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.818016596 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.81840431 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.818304414 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.818811858 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.818774785 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.821244952 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.817310117 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.820210504 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.820699657 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.81757287 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.819442305 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.819303649 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.819731912 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.819782615 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.818615721 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.818847645 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.818865417 seconds)
  done (took 132.63670202 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.821129572 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.82139287 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.819658932 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.8201535 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.821194137 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.822321408 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.820830333 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820400819 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820567634 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.821110837 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820581438 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.821210548 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819557065 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.821559952 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820229109 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.821001367 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.820508885 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.819639769 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.820178804 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81979861 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819770145 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.82066159 seconds)
  done (took 41.802314912 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.820586364 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.821166112 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.820057687 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.821345758 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.821227911 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.821802869 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.821939878 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.821197316 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821820993 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821523775 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820504917 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82096515 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.821870821 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819377792 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821506075 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.821628321 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822901765 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.821400427 seconds)
  done (took 34.531039611 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.820956127 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.82187456 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.821868266 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.821078027 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.821286059 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.821979505 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.821834395 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.822055875 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.821383015 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.821548075 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.821344898 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821446577 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.822563313 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821541686 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822837024 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.823340193 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.820926725 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823840518 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.821875754 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.82220387 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.825482484 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.822605558 seconds)
  done (took 41.835684066 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.823078523 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.823649639 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.825183526 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.823275651 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.823904677 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.823917099 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.825152296 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.82567487 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.823708233 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.822736416 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.823227309 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.822632847 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.823216333 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.823060659 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.824202284 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.822653993 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822274763 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.8229383 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.827118748 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.827630081 seconds)
  done (took 38.230748615 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.824529044 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.82302464 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.823922547 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825080127 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825739066 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.824114847 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825063218 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.824548052 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824885915 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.82674365 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.826457306 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.824814426 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826014825 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.825493406 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.823893189 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824666503 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.825310179 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.824223211 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.82488101 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824867753 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.823543438 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.82518765 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.825288505 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.827495288 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.827130184 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826696924 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826694806 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826323126 seconds)
  done (took 52.858751053 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.827835776 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.825886742 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.825652108 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.82590715 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.82748121 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.826283685 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.826295666 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.8272925 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.825808844 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.825519184 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.826063549 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.82702302 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.826301967 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.826792952 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.827327818 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.826865771 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824681884 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.826276498 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.827189702 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826849073 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.829557975 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826889248 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.828960584 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.827547767 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82752448 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.826677977 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.826738629 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.82706426 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.826896457 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.827811348 seconds)
  done (took 56.558845238 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.847568516 seconds)
    (2/2) benchmarking "in"...
    done (took 1.84965949 seconds)
  done (took 5.450996067 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.829568217 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.826728869 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.827873315 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.828245487 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.829514077 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.830281366 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.830521063 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.828634191 seconds)
  done (took 16.386074892 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.828465421 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.831281683 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.828605978 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.829250927 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.828826808 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.836750119 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.832233243 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.830165268 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.831360942 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.830832485 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.833941903 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.834049132 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.841364886 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.834966862 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.829952651 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.831685279 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.830588676 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.832989923 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.830224276 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.828665679 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.832557153 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.830721201 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.8290931 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.829971714 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.830161782 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.833100902 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.841386418 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.832235969 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.83151926 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.830768585 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.839502057 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.830497301 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.829218159 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.832505883 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.831567702 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.830983682 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.837328669 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.831894734 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.829543912 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.831543606 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.833023043 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.833539243 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.836349667 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.838371321 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.830830465 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.833047216 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.833514171 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.834350308 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.83291187 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.836948293 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.841072433 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.833504966 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.8327011 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.832425643 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.835245955 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.833713749 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.832415991 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.837400937 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.840125126 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.842150689 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.837172894 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.852971733 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.8452429 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.832285632 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.833185801 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.841566794 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.858430221 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.834260152 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.835535416 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.833604211 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.841156757 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.83622683 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.83381625 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.832707007 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.84713884 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.843397574 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.834835065 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.834162523 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.832978056 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.836667031 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.83343183 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.834743107 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.834811217 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.836622126 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.844205096 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.864959335 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.836943451 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.835049126 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.836477383 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.835408151 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.839463023 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.836618979 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.834645988 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.833245578 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.835057514 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.83707841 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.833065506 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.834852426 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.834548565 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.84571606 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.835166278 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.834246132 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.836488649 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.841942813 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.834453738 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.833222872 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.835551093 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.832840245 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.844093861 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.834363946 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.833673823 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.836171758 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.837284276 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.84039786 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.835496413 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.839332787 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.845029677 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.844025265 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.839266226 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.838063017 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.839198644 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.840232646 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.848272742 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.860056833 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.834451628 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.838837427 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.843997187 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.852276752 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.840510531 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.839590653 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.83912643 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.838153578 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.837834699 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.837557764 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.835765556 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.839828987 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.837652337 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.836164062 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.835947419 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.836066249 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.840433688 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.839454358 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.840288599 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.838727394 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.841967949 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.836292293 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.838930243 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.844727375 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.838319191 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.838630016 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.840358892 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.838732604 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.842075542 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.838440334 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.836010962 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.836480935 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.836413556 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.837959787 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.839365647 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.837575037 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.83647964 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.840744282 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.844402528 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.838589695 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.838831408 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.838487683 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.838805197 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.839695924 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.838681264 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.838808088 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.841461867 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.839624457 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.842604629 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.838478721 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.839552729 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.839407354 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.837248606 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.836248616 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.842623972 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.853807583 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.841398468 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.848815403 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.840057591 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.846373557 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.838600132 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.840675286 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.840071471 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.840049356 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.837761106 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.838814049 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.8385103 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.842130232 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.860395397 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.849883193 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.841009989 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.841428826 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.845562481 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.844141938 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.844809002 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.839625227 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839496157 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.841340141 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.840820327 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.842174213 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.839402698 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.845365855 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.840188082 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.840763272 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.84304106 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.839228905 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.839588741 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.839452514 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.841101979 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.84241794 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.842325608 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.839930102 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.839857876 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.840811418 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.848910891 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.843354808 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.839793493 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.840931196 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.844472928 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.839836486 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.840364473 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.840918854 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.845219722 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.841480412 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.842653736 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.849620615 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.843143493 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.84051976 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.841759785 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.84229628 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.843303745 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.841474112 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.844316775 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.852726882 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.844406002 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.84175369 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.847708159 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.843168918 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.844136726 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.840897955 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.841985901 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.8435409 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.845423179 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.843360569 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.84319382 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.849647487 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.841606711 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.842840638 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.841910766 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.844863231 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.84334843 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.844405988 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.843180357 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.844955351 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.850391825 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.848162964 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.843167384 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.845424498 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.844748786 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.844508584 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.84684966 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.845066667 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.855432963 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.85426363 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.842320222 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.842250893 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.843152121 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.84503697 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.843563371 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.842167795 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.850752234 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.845093404 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.845371006 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.84813398 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.84397211 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.84228172 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.851100849 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.845821566 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.849336967 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.84528445 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.847279283 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.845251504 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.843992846 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.846608472 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.844646879 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.846664204 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.847909191 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.840626295 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.845469914 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.842181418 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.853588688 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.847058799 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.843582516 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.852317973 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.846853821 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.844661201 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.845245955 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.844979285 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.84628595 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.847465549 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.845750293 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.848323746 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.845126589 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.848545165 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.857377928 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.849510818 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.856152863 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.850271264 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.857823959 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.845577853 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.845642667 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.845403349 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.850161177 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.856331382 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.84676829 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.846051504 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.855385918 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.849423176 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.848976678 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.850228742 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.84599274 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.844365995 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.846102155 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.847884926 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.854016239 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.850424116 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.846177982 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.845064116 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.845271604 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.846021014 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.851286931 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.850210249 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.850364787 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.847664896 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.846875555 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.847760166 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.848035968 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.846713938 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.846847084 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.84843368 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.848243706 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.856222901 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.84944495 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.848522881 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.851719336 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.847354174 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.856714246 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.848660389 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.84907049 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.851119001 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.848740655 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.852419129 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.848191255 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.8478277 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.849661108 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.84749323 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.849399628 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.860529725 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.857739954 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.853988511 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.855198252 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.84961238 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.849977819 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.860226363 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.875769972 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.849623635 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.855366782 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.855542599 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.859392583 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.851603747 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.857659779 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.854184624 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.861881414 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.852640009 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.849136784 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.852505063 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.864625529 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.853616204 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.849480181 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.849929202 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.854407424 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.854267013 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.850626059 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.850003841 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.853932819 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.853227555 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.864699584 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.852078716 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.853997601 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.853090675 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.853893241 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.850215553 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.853409116 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.854755918 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.854613737 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.852583101 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.851843308 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.855335982 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.856608531 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.85247572 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.856391575 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.862092263 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.851965747 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.849711945 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.853889392 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.852207588 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.851606937 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.850383672 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.850185422 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.855097402 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.853230847 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.856118452 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.856393123 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.861951654 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.854545252 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.854279621 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.8526514 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.85657541 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.855686182 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.854482863 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.856941826 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.860047076 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.854437171 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.864872067 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.865816991 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.852065008 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.855172679 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.862203318 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.863585711 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.854485688 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.854367229 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.856853326 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.857569252 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.855633497 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.856649818 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.853187212 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.855881273 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.861044904 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.857584823 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.858178912 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.857462372 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.85323497 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.856348458 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.856342278 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.861395489 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.856454787 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.854908714 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.857554382 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.855549188 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.858776119 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.858407861 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.858895181 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.859906637 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.859388785 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.855990425 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.862000548 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.858100379 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.855696936 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.855727972 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.857826916 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.856487335 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.856070272 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.856148566 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.864336615 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.863522548 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.869470687 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.862466376 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.861834057 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.864359732 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.866205934 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.865141213 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.860213429 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.8620072 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.862880961 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.871428196 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.865973192 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.861630512 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.859839534 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.862639113 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.867956677 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.865506634 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.866837423 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.864016462 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.86065031 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.864246973 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867050506 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.87409041 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.866458027 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.867762196 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.87141603 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.86803014 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.866307092 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.863291859 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.861240495 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.86476477 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.865233907 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.868077291 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865605151 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.865835371 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.863197162 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.862678815 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.862895786 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.866325532 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.862026059 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.862981483 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.867434569 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.87148835 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.871706144 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.865775555 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.865051534 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.863782713 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.869440141 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.87804366 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.86515833 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.86487133 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.863832214 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.865949337 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.865074251 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.872442826 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.872970884 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.86755809 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.865775722 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.869203527 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.884500564 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.865488248 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.874347298 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.899295739 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.8646692 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.864217897 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.865514287 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.866379904 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.862126295 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.869728476 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.863123132 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.872226456 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.866293349 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.863988631 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.872617981 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.863001974 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.864107629 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.864793131 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.864026833 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.870687876 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.864912984 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.878425331 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.863523824 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.865343853 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.865846937 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.868367279 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.86454096 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.863211367 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.867716979 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.867959635 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.866704599 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.866975253 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.875732283 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.870919771 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.869725797 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.877835135 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.879875296 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.870626113 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.865176025 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.866295098 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.872291136 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.872499042 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.870105887 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.872912424 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.876498425 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.869520063 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.875379363 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.871562271 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.868562488 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.866934706 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.866056789 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.865916582 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.882192058 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.881903273 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.869310062 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.86803002 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.873780466 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.867822899 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.872260685 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.877385002 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.863923758 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.868258489 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.863208639 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.865131762 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.866068587 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.865873688 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.872687507 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.873850618 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.868037265 seconds)
  done (took 1104.202656791 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.866156526 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.865881442 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.867502121 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.86713179 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.866272815 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.865831501 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.867662322 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.866754471 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.866607863 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.86577745 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.86560767 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865261262 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.867052609 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.868531753 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.868321311 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.865922017 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.867297288 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.867532506 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.864688866 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.868723204 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.868311676 seconds)
  done (took 40.99877051 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.868048813 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.869627279 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.866460486 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.871369148 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.865492017 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.863517752 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.869024504 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866899691 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.867858321 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.870207266 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.86814689 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868620919 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.866995093 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.86889871 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868448234 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.867332348 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.865954552 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.870350682 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.868250218 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.868471184 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.867960843 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.866737824 seconds)
  done (took 42.891884632 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.867968078 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.87037214 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.87228482 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.870192955 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.868782277 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.871573163 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.869687406 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.869259116 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.867316181 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.869324084 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.875683951 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.878732366 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.867601241 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.871628481 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.868190974 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.871482118 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.018316749 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.870485746 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.872058175 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.871278461 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.868681793 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.877280504 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.87006352 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.869450598 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.870726151 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.870970823 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.870722987 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.867951105 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.869973086 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.873188285 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.87645098 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.872655532 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.872846126 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.872673429 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.873494661 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.875587974 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.873794769 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.868556175 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.869480582 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.871913592 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.880332278 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.894735647 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.870734829 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.871775351 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.879188832 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.87482081 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.871442207 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.874890421 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.881753748 seconds)
  done (took 93.698319652 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.871726077 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.87311622 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.87104152 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.874841322 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.871954439 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.874785573 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.87216906 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.872033781 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.871518546 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.870633258 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.872568918 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.869789285 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.873639203 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.874767145 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.871901275 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.871799942 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.873392717 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.870702034 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.870673658 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.871726265 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.87118383 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.871377399 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.874549705 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.87223438 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.873096363 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.871794101 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.870463746 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.870424222 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.872196292 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.873808413 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.873115499 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.873695871 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.872381246 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.875107566 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.874126738 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.873195011 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.87323504 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.872509956 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.874383649 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.873593569 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.872446631 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.871056098 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.870608441 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.871481796 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.87240732 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.872678348 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.872104072 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.873825712 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.871409664 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.873118261 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.872816252 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.874055107 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.874939096 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.87287303 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.870169257 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.872357991 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.872381142 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.876210087 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.875156605 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.873843053 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.873564247 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.876595163 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.876218478 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.875416013 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.874924232 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.878074247 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.876713592 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.876785117 seconds)
  done (took 129.167229238 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.875870701 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.873277074 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.873704085 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.87626985 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.876340736 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.872132818 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.877422718 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.873628224 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.877159675 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.8776142 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.873112727 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.87312908 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.878167906 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.878355203 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.876244503 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.874655537 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.876165068 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.876678718 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.877790949 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873990369 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.874824613 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.875522517 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.875402155 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.877209831 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.87730876 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.878149057 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.875165163 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.873108004 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.8772661 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.876451032 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.874552703 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.87663678 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.877658369 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.875393831 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.87611864 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.877569221 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.875113965 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.87566889 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.876122185 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.879174048 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.875049458 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.87758772 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.8753415 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.87774308 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.880002625 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.877252871 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.877231902 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.878108423 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.87866652 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.877482681 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.87524624 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.876800147 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.877155191 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.878065208 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.877402683 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.878218214 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.875555054 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.879548791 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.878034896 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.879421159 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.876830852 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.876884957 seconds)
  done (took 118.146567505 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.877026122 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.87485577 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.878544509 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.87702748 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.877641256 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.879775033 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.880242404 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.880858627 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.881246277 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.876174286 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.877582412 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.879735349 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.878181205 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.880239592 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.8757812 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.878125271 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.880534803 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.878193317 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.879897284 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.877817129 seconds)
  done (took 39.375161812 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.879001779 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.879920889 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.877170125 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.878973974 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.881419918 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.87797463 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.880980654 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.88033314 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.881399818 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.875542021 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.879479069 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.878260438 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.882108715 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.878983937 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.879591405 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.876626996 seconds)
  done (took 31.874773139 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.878317838 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.878597983 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.880688542 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.880657435 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.88128006 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.879988376 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.881193333 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.878433484 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.879644846 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.880596683 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.881490608 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.881675894 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.882575834 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.882098613 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.881265233 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.882695547 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.88417246 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.881632942 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.880318614 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.881899802 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.882198054 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.880157267 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.882515922 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.881619519 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.881464491 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.882378701 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.882702134 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.876165656 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.877497741 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.876684284 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.87730275 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.877785326 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.87790718 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.876800459 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.878755956 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.878167181 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.874784085 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.881125559 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.875687568 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.877468662 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.874845299 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.875541795 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.875262215 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.874498635 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.875216584 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.876002693 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.875028587 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.876116552 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.875739519 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.875104145 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.875714698 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.874872385 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.874299943 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.878205001 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.877523991 seconds)
  done (took 105.142704312 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.874355405 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.876518288 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.875459178 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.875325453 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.875103618 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.872647045 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.873207182 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.875341548 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.87688753 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.875266389 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.874502515 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.875307561 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.873881518 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.880189339 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.869449544 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.869758154 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.869691798 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.870150412 seconds)
  done (took 35.536562253 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.869329759 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.869727347 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.869305863 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.870748036 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.870367829 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.873870237 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.86739357 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.867540067 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867974562 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.870161425 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871000131 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.867821475 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.872142058 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.867669935 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.867932563 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.870347278 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.866979794 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.868850296 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.868048359 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.867422648 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.867697494 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.87031821 seconds)
  done (took 42.919775102 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.86995273 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.869400255 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.885111167 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.894859988 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.891236109 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.911264551 seconds)
  done (took 13.118214558 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868639184 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868320175 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.868916896 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868961255 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871399789 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87112636 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870029871 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871417333 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868615906 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869736586 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869374945 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869871233 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871527345 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868480869 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868483902 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868478943 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868276424 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868124451 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870945349 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867477981 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866436244 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867945375 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868333211 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869302816 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867820314 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866988647 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86930238 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86756553 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867601434 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865471603 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867505476 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867945271 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867546489 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868152331 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86744587 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86632173 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867141145 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866994635 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867168573 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867615914 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.867308052 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867426485 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867441499 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867113678 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867748108 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868216595 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869451656 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868508335 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867793095 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867976677 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867235323 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867459405 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867127089 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868378214 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868612005 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869155816 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86949088 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868575527 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869888961 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868676718 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869632858 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868875357 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868067644 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869767834 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868624763 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868123753 seconds)
  done (took 125.114117752 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868762891 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.868748941 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869349191 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869437105 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869723495 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8696702 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867586314 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868556105 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868144349 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873209113 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867351629 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868168204 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87063247 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870576771 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870024904 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870170572 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868482521 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869025553 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867601218 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868607095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870326585 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869602143 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871180065 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868857892 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869401598 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869760899 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872793695 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869379768 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870859603 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869320794 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869932885 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871666129 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870220166 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.86812683 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869800679 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86958358 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871603256 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867212472 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867677338 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868382748 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868713534 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86674625 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863711627 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862323742 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863683454 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862748303 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86268936 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865517001 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867351557 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864312924 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864400025 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867264792 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866644999 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864435747 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864213173 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863528786 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86397547 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863689845 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864748556 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868123264 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865595922 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864942507 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865595007 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866394475 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86520321 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864713228 seconds)
  done (took 125.068173815 seconds)
done (took 2570.695306216 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.947814631 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.867400625 seconds)
  done (took 15.605273926 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.026435819 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.977281688 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.866391041 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.891687477 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.861301989 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.884221856 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.88415985 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.862947679 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.865577141 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.866031207 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.865006702 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.050730459 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.924950205 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.858722892 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.863110353 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.957580763 seconds)
  done (took 52.298569151 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.86736739 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.869826623 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.878161336 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.870039444 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.865197827 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.878253997 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.896479437 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.874827168 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.901589319 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.882115902 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.93776381 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.87571231 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.87022745 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.917999803 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.879351357 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.880985176 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.965975542 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.944970034 seconds)
  done (took 35.844951922 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.946074182 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.872826599 seconds)
  done (took 10.61265898 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.885337074 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.858978829 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.885419388 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.867983326 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.869400985 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.874293953 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.880093941 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.895143935 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.879995699 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.892013624 seconds)
  done (took 70.579099196 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.866388993 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.859487487 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.862253382 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.861880176 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.855609865 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.860869577 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.858248946 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.856022381 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.554946694 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.894066467 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.868725205 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.866479934 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.855163104 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.861226753 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.857695911 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.884530021 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.966303856 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.857599571 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.854138717 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.864864654 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.859666135 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.909401178 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.873447759 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.858813593 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.888563307 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.546010023 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.867000818 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.863352951 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.963384116 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.857134924 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.857303786 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.040756118 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.864617445 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.332269432 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.176858595 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.858870214 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.863267661 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.860987896 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.855405036 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.966901196 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.860639266 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.861358257 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.772544431 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.149569384 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.952182183 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.903344942 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.19610306 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.859010741 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.857608369 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.891808056 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.855888201 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.859528599 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.876639907 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.372201312 seconds)
  done (took 132.28239855 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.854608173 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.201105361 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.020104598 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.854674591 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.135967099 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05931405 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.853606417 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901276444 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.854645508 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.075852612 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.108748515 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.961891331 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.851861142 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.851576459 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.853335961 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.84770753 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.006421542 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.925158857 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.853412536 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.851445493 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877629411 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.095400104 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.973254543 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.856691501 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.877124856 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.061385792 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.969662295 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.957426735 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.632067407 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.852173331 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.912067066 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.853535856 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.851191836 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.849524317 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.007632991 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.946137152 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932255079 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.851243008 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853080107 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.856989206 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.59990099 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05618478 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.947731027 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.983606838 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.106859337 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.054626781 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.633543427 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.854623933 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.594271632 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.018733547 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.081348727 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.080474029 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.969186972 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.855279269 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.188157972 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.852899925 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.856793871 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.101350821 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.075765863 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.946343572 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.855801483 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.855025506 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.849926485 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.143867642 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.854691073 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.946485111 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.853754766 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.855316757 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.95199061 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.952359023 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.081449747 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064937279 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.883025389 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.188826597 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.355003554 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.100297481 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.918417216 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100994802 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.854165959 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.852830305 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933482619 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.697310104 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.106549355 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.133404541 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.094668049 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884282624 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.569721235 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.852880398 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.08210198 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.074111204 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.112469794 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.10551856 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.093741027 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.180156319 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.858073298 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.85516029 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.219041593 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.976649666 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.858511161 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.202617382 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.087947731 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.417227648 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.881459247 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.161160461 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984074585 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.862561149 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.494774762 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.860352323 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.085265334 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.898230367 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.859534734 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860085331 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.087110112 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.843992402 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86015117 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.850855057 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.917027111 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.86069054 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086731941 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.856946214 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125263688 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.858258136 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.092392618 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.450592925 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.889206615 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.028764359 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.104987776 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.861422799 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.105657074 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.099893339 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.973059868 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.129731369 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.739468401 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.863117896 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.145145608 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.860130182 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.85919376 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.025689102 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.859459244 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.001559661 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.861955484 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.151271421 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877595893 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091715582 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.861116326 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.110935394 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.891003973 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909977773 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.861629154 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.977549648 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860652169 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.684441497 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015093765 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.865140471 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.858766367 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.406192644 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.859827368 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.013556454 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.083596503 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.880444485 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.9305976 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.519482371 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.86141949 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941408368 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879553237 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.250821002 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.863310451 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.114250166 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.868078495 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.863104526 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.861428429 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.146748424 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.089266131 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.860189747 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.858174943 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.765545563 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.867849343 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.862376936 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.041758714 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.15618299 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.860592468 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060497464 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861740699 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985294391 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.868873575 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.936160861 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.194650491 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.859283739 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.861847734 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.860337584 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.861070341 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.861458337 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.067199594 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.885413812 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.392119831 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.996579886 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.134645165 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.166870892 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.100087035 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.900020936 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.864958404 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.108703361 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.858763099 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.923094263 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.85960931 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.882974536 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088311585 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.859749346 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.06730438 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.124953924 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.736383497 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905738218 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.861691604 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.858796949 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.862697877 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.006905259 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944664723 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.862204828 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.861792992 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.973846552 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.981459239 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.06675648 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.862611292 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.886539413 seconds)
  done (took 900.692219151 seconds)
done (took 1219.70943521 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.861764321 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.858429781 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.863252455 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.863076495 seconds)
  done (took 29.236511167 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.863700428 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.8657933 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.862733313 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.862556257 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.864395187 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.86400643 seconds)
  done (took 12.973897304 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.001815928 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.859466615 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.863034494 seconds)
  done (took 21.514008414 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.938602616 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.269042084 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.007041166 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.292541911 seconds)
  done (took 10.299467886 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.866428641 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.863571203 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.864077795 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.864429664 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.868965003 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.866637414 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.864720372 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.866100829 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.867745625 seconds)
  done (took 18.585832612 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.597762699 seconds)
done (took 98.997892485 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.946442059 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.862682546 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.927261895 seconds)
    (4/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.86333375 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.058632612 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.179898744 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.823561101 seconds)
    (8/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.251645281 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.170029342 seconds)
    (10/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.861791985 seconds)
    (11/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.01200552 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.876699048 seconds)
    (13/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.137993768 seconds)
    (14/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.226607416 seconds)
    (15/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.861812062 seconds)
    (16/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.4127155 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.415988618 seconds)
    (18/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.167167156 seconds)
    (19/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.867723131 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.959296814 seconds)
    (21/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.033350733 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.868858744 seconds)
    (23/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.939336452 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.027879904 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.104792727 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.250816583 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.015120645 seconds)
    (28/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.104528546 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.524013566 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.959946148 seconds)
    (31/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.892220548 seconds)
    (32/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.959566759 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.199023928 seconds)
    (34/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.116716704 seconds)
    (35/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.263547902 seconds)
    (36/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.324812523 seconds)
    (37/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.058615629 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.865745319 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.544247767 seconds)
    (40/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.969289944 seconds)
    (41/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.994669061 seconds)
    (42/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.01220926 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.499062847 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.051941488 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.036646345 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.969990104 seconds)
    (47/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.114981406 seconds)
    (48/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.655488659 seconds)
    (49/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.355269106 seconds)
    (50/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.06568213 seconds)
    (51/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.002632182 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.289236692 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.084286563 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.092193945 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.885892346 seconds)
    (56/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.590100715 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.12239375 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 5.514534778 seconds)
    (59/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.042451062 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.34886885 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.116720897 seconds)
    (62/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.193403359 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.868462389 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.017493828 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.887093102 seconds)
    (66/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.063328004 seconds)
    (67/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.252477085 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.019078966 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.955534475 seconds)
    (70/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.348053221 seconds)
    (71/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.376289713 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.987896745 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.883678973 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.102947272 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.002412108 seconds)
    (76/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.04533754 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.691961524 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.838853227 seconds)
    (79/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.976475532 seconds)
    (80/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.974332763 seconds)
    (81/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.941658989 seconds)
    (82/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.623370303 seconds)
    (83/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.090687534 seconds)
    (84/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.37990146 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.175163772 seconds)
    (86/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.868313819 seconds)
    (87/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.038637057 seconds)
    (88/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.127630563 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.926385905 seconds)
    (90/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.961633829 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.524651856 seconds)
    (92/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.884345646 seconds)
    (93/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.187783564 seconds)
    (94/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.890082819 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.17548938 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.888149057 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.257612474 seconds)
    (98/309) benchmarking ("sort", Float64, false)...
    done (took 5.549730507 seconds)
    (99/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.947634306 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.929252118 seconds)
    (101/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.86943807 seconds)
    (102/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 9.097908411 seconds)
    (103/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.041360001 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.992136809 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.893374632 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.433270774 seconds)
    (107/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.976118582 seconds)
    (108/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.964791672 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.867948153 seconds)
    (110/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.054335649 seconds)
    (111/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.354712201 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.974608204 seconds)
    (113/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.179627809 seconds)
    (114/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.873397048 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 4.08042305 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.175548562 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.873345356 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.960615914 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.698365335 seconds)
    (120/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.056881421 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.48089881 seconds)
    (122/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.286219077 seconds)
    (123/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.866937224 seconds)
    (124/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.291051979 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.869682051 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.098268249 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.868843844 seconds)
    (128/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.012418308 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.265832039 seconds)
    (130/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.618343603 seconds)
    (131/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.02325603 seconds)
    (132/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.067726048 seconds)
    (133/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.003245463 seconds)
    (134/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.636935648 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.897861553 seconds)
    (136/309) benchmarking ("sort", BigInt, false)...
    done (took 6.870129218 seconds)
    (137/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.076056308 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.192494772 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.268562207 seconds)
    (140/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.892946572 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.122663652 seconds)
    (142/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.892456464 seconds)
    (143/309) benchmarking ("sort", Float32, false)...
    done (took 5.532663748 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.010258488 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.190582853 seconds)
    (146/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.971794154 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.187068775 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.128075272 seconds)
    (149/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.874686063 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.872135458 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.98869668 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.872164882 seconds)
    (153/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.028675437 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.903805595 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.894421277 seconds)
    (156/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.948758666 seconds)
    (157/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.185638046 seconds)
    (158/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.357717927 seconds)
    (159/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.88628856 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.889659856 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.871555421 seconds)
    (162/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.276605471 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.870132637 seconds)
    (164/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.636324773 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.005746135 seconds)
    (166/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.138835454 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.073639606 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.870820957 seconds)
    (169/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.933676022 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.26649972 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.872715452 seconds)
    (172/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.872596286 seconds)
    (173/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.340551763 seconds)
    (174/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.1615458 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.165201543 seconds)
    (176/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.28205003 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.872452439 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.43966772 seconds)
    (179/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.796160721 seconds)
    (180/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.873046865 seconds)
    (181/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.119170033 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.230234928 seconds)
    (183/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.203643678 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.869086618 seconds)
    (185/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.034958048 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.015636643 seconds)
    (187/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.898657734 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.217414784 seconds)
    (189/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.804273598 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.194754609 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.203859577 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.764431602 seconds)
    (193/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.881088062 seconds)
    (194/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.184221332 seconds)
    (195/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.665700214 seconds)
    (196/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.386668094 seconds)
    (197/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.914695919 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.056156347 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.984503036 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.165977662 seconds)
    (201/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.891116442 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.875512794 seconds)
    (203/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.87321526 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.237825319 seconds)
    (205/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.180730325 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.010171051 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.620052951 seconds)
    (208/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.071827356 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.938579234 seconds)
    (210/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.023017594 seconds)
    (211/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.887352915 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.875449517 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.773527183 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.116236661 seconds)
    (215/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.564358702 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.264572076 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.891199305 seconds)
    (218/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.952933584 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.155176723 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.566547055 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.207070763 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.985471746 seconds)
    (223/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.97435599 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.874501014 seconds)
    (225/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.905041209 seconds)
    (226/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.438520354 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.928696026 seconds)
    (228/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.903623052 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.874274385 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.984639364 seconds)
    (231/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.979567215 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.019196101 seconds)
    (233/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.882224486 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.872709577 seconds)
    (235/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.63127051 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.317227453 seconds)
    (237/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.269801118 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.874089185 seconds)
    (239/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.539600585 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.887091876 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.203365419 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.930455418 seconds)
    (243/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.957079292 seconds)
    (244/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.877804274 seconds)
    (245/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.042144166 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.969041554 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.018911287 seconds)
    (248/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.062336718 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.19224229 seconds)
    (250/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.167977435 seconds)
    (251/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.88394404 seconds)
    (252/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.13795519 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.872525028 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 4.046572302 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.010059316 seconds)
    (256/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.182484457 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.8788315 seconds)
    (258/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.197246481 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.496382529 seconds)
    (260/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.975912267 seconds)
    (261/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.440254265 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.265919954 seconds)
    (263/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.953061145 seconds)
    (264/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.893349926 seconds)
    (265/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.887531954 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.90027942 seconds)
    (267/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.330071977 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.124238595 seconds)
    (269/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.858812986 seconds)
    (270/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.962213936 seconds)
    (271/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.029989107 seconds)
    (272/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.340871867 seconds)
    (273/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.002206249 seconds)
    (274/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.974528757 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.878115044 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.397938161 seconds)
    (277/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.980505603 seconds)
    (278/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.956049255 seconds)
    (279/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.877330253 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.215027796 seconds)
    (281/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.029031743 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.876113149 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.30143648 seconds)
    (284/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.505247758 seconds)
    (285/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.962384296 seconds)
    (286/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.078445365 seconds)
    (287/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.898261223 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.115950978 seconds)
    (289/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.216183602 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.916493579 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.059311004 seconds)
    (292/309) benchmarking ("sort", Int8, false)...
    done (took 4.820560674 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.879464035 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.803857129 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.488873006 seconds)
    (296/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.011060706 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.275974798 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.877007796 seconds)
    (299/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.630356328 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.905125171 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.180865562 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.240981158 seconds)
    (303/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.033329668 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.663103001 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.225852869 seconds)
    (306/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.916746037 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.794020106 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.097720778 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.116629392 seconds)
  done (took 1012.083748747 seconds)
done (took 1013.953122829 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.909152452 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900867908 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.881898219 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.905177269 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.996083188 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.927969705 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.896634634 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.887050945 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.934510666 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.933665061 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.882765114 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.925221732 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.88562809 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.886311432 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.884483116 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.903257057 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.186035997 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.905694399 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.904720984 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.897397602 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.902972773 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.886100623 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.935357416 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.925188608 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.889333829 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.890497071 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.891338443 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.905374842 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.999283551 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.888635811 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.890056393 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.900675108 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.18743261 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.903312924 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.883734279 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.905669572 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.898414823 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.899890412 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.891184655 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.918991078 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.31993289 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.886735813 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.88872964 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.886816777 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.887117681 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.89304101 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.889116167 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.896723437 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.901436753 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.902943085 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.320170126 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.904651337 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.892140604 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.887945057 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.901631846 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.88819222 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.892366533 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.904761564 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.907216712 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905287807 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.176936787 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.912983049 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.892011446 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.906157157 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.897000295 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.355893893 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.887323947 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.894915432 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.31909161 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.897443111 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.355051721 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.899648151 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.891085063 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.903705195 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.921100133 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.189086528 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.904712087 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.889370863 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.898390541 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.88802913 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.901028427 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.905125689 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.892995633 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.890348298 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90824765 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.933590967 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.901171792 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.892142842 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.903602287 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.909289967 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.897563491 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.902301178 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.893311024 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.890958297 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.902504328 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.895539438 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.895135716 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.894522433 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.893514746 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.905198276 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.320252765 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.908466047 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.886798101 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.889288031 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.889796213 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.906003337 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.319353508 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.893510813 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.91284667 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.94032804 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.89161388 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.177684347 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.913627417 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.908127488 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.904848647 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.893723158 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.889601114 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.178475135 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.341869488 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.907014993 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.890869418 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.888240851 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.907005707 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.893676138 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.889442483 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.189696183 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.913394205 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.907761415 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.012050847 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.906458958 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.92396328 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.889797873 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.895274383 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.935991549 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.9108619 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.923748333 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.894391439 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.909114391 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.911232503 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.890250306 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.904992158 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.905605474 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.891869672 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.898846106 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.890674543 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.935696497 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.907668769 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.907420773 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.914195029 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.016118559 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.890058748 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.181754517 seconds)
done (took 296.889033923 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.977282016 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.888142808 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.023685585 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.888715686 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.98565983 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.961248623 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.890047686 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.890114823 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.890056563 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.392163883 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.889509621 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.896804366 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.888223631 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.889431316 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.964752906 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.8885531 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.890054382 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.3356991 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.891283453 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.974860866 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.890701845 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.890299008 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.890643364 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.393952275 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.888921964 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.89061209 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.967353846 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.889246623 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.343542635 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.891657563 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.892046938 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.341806324 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.970169599 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.919349392 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.900698335 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.896071861 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.978171918 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.898676885 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.957629856 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.966518036 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.013541843 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.923481824 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.891539531 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.889385903 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.893553498 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.890612763 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.892175374 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.923633539 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.894234718 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.896485451 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.337975599 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.900687385 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.897988772 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.892944712 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.892448532 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.920436543 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.892262238 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.893876459 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.976852963 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.893363526 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.957976378 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.399679598 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.394436671 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.891992147 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.894612664 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.894320889 seconds)
  done (took 186.807440414 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.96136198 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.968807014 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.956731745 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.897892133 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.945574105 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.960594609 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.898344214 seconds)
  done (took 15.406141389 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.901921225 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.894048878 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.942939952 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.943404778 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.89363929 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.075062847 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.906617972 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.898023247 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.921809805 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.894054131 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.559230141 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.945582175 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.900946565 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.89347065 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.906699659 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.949690332 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.89577667 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.896066037 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.003000665 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.043523431 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.899322194 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.901307822 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.920651662 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.908566199 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.895506461 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.895589677 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.894959005 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.902975426 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.89896761 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.893737969 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.894887751 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.944702991 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.895987213 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.898777145 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.894561333 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.895552006 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.894169705 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.89632809 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.896367345 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.893334241 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.896913456 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.89666459 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.896412185 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.896630365 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.899184381 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.920443527 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.895137097 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.895256856 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.896716905 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.897012805 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.922161726 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.894542151 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.895462856 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.900544298 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.941703071 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.90371369 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.898121273 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.898467948 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.897617746 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.899964119 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.901057675 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.049106643 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.947505193 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.895673094 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.946093688 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.05080302 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.897566248 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.896869299 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.897083417 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.984311395 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.899339941 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.945860419 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.897713523 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.017886545 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.89711536 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.079527994 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.922893398 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.901856195 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.901826492 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.896572394 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.906801975 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.899098572 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.900654159 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.905436287 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.901876766 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.900230863 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.897535645 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.898509206 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.908515645 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.896111929 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.947348205 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.898731342 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.897791766 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.031153073 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.897752245 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.006951553 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.925454026 seconds)
  done (took 208.589730726 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.906069699 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.905777985 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.901301371 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.911215721 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.897840204 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.898222763 seconds)
  done (took 13.240901163 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.899749399 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.901437086 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.89757563 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.8989477 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.90235273 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.897041699 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.899618429 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.900215454 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.903880434 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.90053652 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.89590704 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.896867208 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.899596279 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.89987122 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.899152789 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.90166668 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.900214408 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.899021016 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.897263466 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.899745466 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.117106006 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.900521079 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.900884393 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.903725704 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.905850288 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.899863327 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.914348738 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.898969536 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.899388717 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.90656937 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.907523743 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.900065265 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.902626282 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.905939527 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.902060609 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.904860857 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.904205993 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.901253409 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.901899893 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.900028364 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.901510567 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.903341003 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.901606724 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.901464909 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.902366651 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.908756436 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.906583422 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.915124471 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.900593681 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.90291981 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.901904551 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.901701886 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.902731833 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.902971788 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.908173501 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.906781762 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.904712307 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.903033977 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.902137124 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.90573929 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.904875181 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.903531294 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.905392134 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.905022444 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.908350761 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.90317968 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.905152019 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.906908387 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903281658 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.902574621 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.903294846 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.902433649 seconds)
  done (took 140.031908421 seconds)
done (took 565.902811566 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.112545588 seconds)
  done (took 8.937763808 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.062906934 seconds)
  done (took 8.986172227 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.436197974 seconds)
  done (took 10.26715416 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.914002987 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.900753243 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.911802238 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.903022716 seconds)
  done (took 29.467254041 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.234592863 seconds)
  done (took 9.063650844 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.917563714 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.900568347 seconds)
  done (took 15.721156097 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.964968159 seconds)
  done (took 8.791627705 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.105479464 seconds)
  done (took 8.945110098 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.922412091 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.933548039 seconds)
  done (took 15.706722141 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.90946699 seconds)
  done (took 8.737829147 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.392557659 seconds)
  done (took 10.309405172 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.921370727 seconds)
  done (took 8.796297014 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.946220391 seconds)
  done (took 8.776803175 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.073183595 seconds)
  done (took 9.903911955 seconds)
done (took 164.23896478 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.910543926 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.907160446 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.905010758 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.906988285 seconds)
  done (took 29.458216567 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.942538084 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.941833835 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.951127183 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.944296578 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.932813643 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.930949934 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.945471885 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.940431364 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.932803227 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.940804774 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.943861653 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.939432479 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.944288878 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.951816117 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.951839874 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.95965119 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.943582217 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.943449709 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.933970208 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.952209753 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.943831225 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.942739433 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.908831052 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.909091059 seconds)
  done (took 48.401742895 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.099120209 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.976894808 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.06242082 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.961993294 seconds)
  done (took 9.931043961 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.907799639 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.970923072 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.960310799 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.959263946 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.959348905 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.011020572 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.961713655 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.046514472 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.037918475 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.035428196 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.917385647 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.929800219 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.93553526 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.962794407 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.01310706 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.909431506 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.909300204 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.046638108 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.970723176 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.095903406 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.908319368 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.963223555 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.959124518 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.962758314 seconds)
  done (took 49.165784034 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.910265923 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.917786982 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.917339374 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.912740353 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.911630899 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.912923338 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.916952621 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.912460648 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.93500134 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.913279167 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.910982151 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.912441192 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.917884341 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.912718064 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.913233308 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.923883486 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.926255174 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.911671518 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.91697267 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.919498807 seconds)
  done (took 40.157180928 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.908739153 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.755542591 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.255530335 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.161934168 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.909154808 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.906612953 seconds)
  done (took 31.729462919 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.921415192 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.916493916 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.910394833 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.964424792 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.047303108 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.914289248 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.911711103 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.920325826 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.952156713 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.973394029 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.930711946 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.936635465 seconds)
  done (took 25.133406766 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.910698198 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.910130638 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.910731442 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.921889599 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.920837478 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.917379361 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.918396295 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.911510916 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.922869611 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.929502044 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.917400968 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.921042147 seconds)
  done (took 44.849919094 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.617031425 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981741734 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.912047768 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.786571463 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377348869 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45965127 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.802078538 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.672929089 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.375845371 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.837938907 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116408381 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.91165785 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.994513256 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.911768964 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182761233 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.2876933 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099392735 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.15418342 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.545631308 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.942700012 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.113816137 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138423309 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.20042597 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913305817 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914729984 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.059406204 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327268289 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.713647071 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.942969214 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.201959506 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1511652 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.86002338 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969906048 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.915086575 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.92628817 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913334916 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91699389 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183618843 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.065334156 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059240171 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987390222 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154901128 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91688598 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.333340437 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.6172969 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.225721671 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.022287385 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914882637 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914214396 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911765794 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.842097621 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998518752 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.915230628 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918933388 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.612212068 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913355701 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988484087 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.913053555 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117280508 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.720019317 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.604714543 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.913708598 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917081189 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472441438 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.011433116 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.022913962 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.681017083 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299980511 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.331440452 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.00984723 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.916314383 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916089968 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.035782265 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877070178 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.681146265 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95014177 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.053560341 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.928314959 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.555343146 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213678789 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.349497033 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.467691644 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.834829289 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193950285 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.597808829 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.899183465 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129012974 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.800589174 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843283246 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141170996 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946779938 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918671391 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.179571747 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.695421948 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.02437047 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.925987909 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351398739 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928030175 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.922108208 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917403941 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.12971752 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.487609339 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944071434 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.033672925 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929814131 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.000123011 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842315244 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.927310211 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.918332278 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.82050234 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917795621 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829135156 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.960966377 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.566889123 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954101038 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.85599394 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918995905 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.025677644 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951967356 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.86575749 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187532579 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.220822371 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.585176727 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862816524 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.045923985 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.30482739 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136019447 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.921335771 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.132378083 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44476975 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.35014971 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.956405536 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211471026 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.977743957 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216761916 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35620223 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994565206 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.703600339 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.537694154 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.136121655 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9319575 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.919325274 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922821384 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925703724 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852370627 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.554335673 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.306539267 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.078210413 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.133168008 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.219503284 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.89777423 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.843098582 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224104408 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.055504249 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.902652771 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.5760527 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.322957655 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.729590704 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.941429922 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.040057936 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.088079903 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.878240394 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935157659 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997589587 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937254495 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.927824121 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.31246894 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274437452 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.921091128 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.922907721 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.869944215 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9220065 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.922681756 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.453801041 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.891766964 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.926779003 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.932074618 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.796939613 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995192243 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923773351 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.925491764 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.459379518 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.424553065 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.9263978 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.596359194 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.920542467 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120206479 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198760052 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.310211495 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042472335 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.621523297 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.358168882 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.02920525 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.622047703 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.849257658 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.922361059 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.862918961 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926650684 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.929485518 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927085745 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.111459279 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.201603344 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22061398 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.382482147 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.988666095 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125360456 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.650968079 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874278417 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.924856652 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93461722 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.928398364 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926449757 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.436373707 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.163738852 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.033531449 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950707082 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.931770088 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055362024 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.936988238 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852487366 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.928002018 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927928832 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340457864 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.950819689 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.876164939 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.260441103 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.771163916 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0471465 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970733156 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.937508407 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931775586 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.65412604 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.966725417 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853338567 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343622622 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957788097 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.703226364 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41076927 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.48796313 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238854827 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.249603119 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.260735667 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.99619481 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.140736546 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.013336909 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.982353636 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014490744 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863897031 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.849747895 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.58846201 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254160798 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193113292 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93573616 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141452001 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71193968 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.154884359 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954781844 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.579986972 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232515517 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.902248555 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943425202 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.234347154 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030330866 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008511553 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930535866 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.880900957 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.270766583 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967087792 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.628846165 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942649857 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.280432899 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356521244 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.993922471 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.329341947 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136587986 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.93372332 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283019879 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.117401647 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.964444899 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.934317683 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.91658009 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.142016256 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507274641 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.763826957 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93411305 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.060174866 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222354258 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.833546863 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.933214624 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.068942721 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185410946 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930039437 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.31991946 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30218931 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.033463121 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988287259 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156092094 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.580113285 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237528261 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.483236529 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.415923202 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931350974 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.85808587 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.632813157 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.133927265 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.934239522 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898261519 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15937934 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165131668 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.610327995 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143311651 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.176938187 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.942767392 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.20999945 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003797677 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.027318127 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.281566537 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.358788421 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.175825163 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157898393 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472179054 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144393074 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.41760562 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.095182231 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.933720774 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137815623 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146505409 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.147438184 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.337032844 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098102448 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.641780068 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.93822869 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.140248516 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240874339 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992424284 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.333933899 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.095143973 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.012234236 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93842358 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99565234 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.938530609 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942890274 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.333256157 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.457959435 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.948874572 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012213215 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.054027532 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.436517028 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.93391103 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.939159264 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211829591 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29404209 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265936765 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.915635421 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.92999347 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943549561 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061150761 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.860082672 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938865884 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204892972 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.936702823 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332751565 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.076501322 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945767049 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.283960443 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31403398 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.577039245 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.894537356 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939613587 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171600007 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259313712 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.096065849 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047222316 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204908737 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275240442 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.968081052 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.340368398 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169020722 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937888436 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.807677947 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.935663013 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064799458 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.139138654 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.218176484 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.505741545 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.668414944 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.195438483 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.783718277 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.939423545 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.662272521 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197106856 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.215897495 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.987241515 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998139002 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941551702 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355568299 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.655079416 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067880611 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.828564208 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860023179 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.944677166 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.259519156 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.174918541 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.644956084 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938489195 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215149825 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230623344 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208770681 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.986361354 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.80798903 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147629239 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938017923 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.939073048 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195127204 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1668176 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180612975 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938927978 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.936307116 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.744302071 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864376293 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.935173495 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990476072 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16402247 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95799504 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.45335271 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.637189336 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224115231 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982565313 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941328673 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.213778691 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.453628325 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.491497608 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939610531 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158306409 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.907090727 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236189273 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.939777415 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396863671 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236657204 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.941761516 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.453743429 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.179673563 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201391953 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868399974 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944410626 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15229189 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.786696684 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.935063379 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.934737861 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360070901 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167448722 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.673952995 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494363818 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.936810452 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.939182133 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404894165 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967030023 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.535543287 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967687329 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95576853 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.455476156 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.630218549 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.22390413 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179894031 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.450629843 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.569173757 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.939710437 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.938359108 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94063017 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857170192 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.118024342 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.124625016 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237301056 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969884831 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401004756 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967862169 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.336313454 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385182329 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.595699161 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001183186 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.475958764 seconds)
  done (took 1687.247525183 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.964704764 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.958918459 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.98580453 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.956763232 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.963305229 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.974381946 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.009263623 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.974498296 seconds)
  done (took 57.664975366 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.955873061 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.970783881 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.959339634 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.955640851 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.959543548 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.967027228 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.117992197 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.965780756 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.955199343 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.959395773 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.953554406 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.953450414 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.222309238 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.975190433 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.951010934 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.953058015 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.954024217 seconds)
  done (took 75.610717782 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.953362315 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.283183527 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.012247293 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.948914013 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.859485845 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.956975886 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.878709986 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.005638809 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.958232149 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.150178369 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.247472565 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.954188932 seconds)
  done (took 91.086073054 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.955307994 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.950705938 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.949969013 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.950357544 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.951207688 seconds)
  done (took 11.639542045 seconds)
done (took 2203.941478747 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.191964914 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.006752575 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.053263052 seconds)
  done (took 5.936346349 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.099648973 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.144661215 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.258398044 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.021339645 seconds)
  done (took 10.408941582 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.251891504 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.31710436 seconds)
  done (took 6.443358852 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.349819665 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.96570296 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.366853465 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.953581039 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.956605613 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.956265656 seconds)
  done (took 22.748931132 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.952104106 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.950789107 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.952110682 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.95259599 seconds)
  done (took 9.684477808 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.951762519 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.667141984 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.951549553 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.963203197 seconds)
  done (took 21.411669999 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.099883543 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.067494036 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.095612403 seconds)
  done (took 8.144609719 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.173663908 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.065576128 seconds)
  done (took 7.117683721 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.099581674 seconds)
  done (took 3.976668583 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.982774065 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.223075049 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.450401332 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.493535334 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.606206386 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.745012671 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.284663976 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.206491813 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.374235744 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.407405757 seconds)
  done (took 25.654409154 seconds)
done (took 137.278212179 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.311028907 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.977461017 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.160810409 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.320254524 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.191341071 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.163515789 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.17574608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.310282774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.005333185 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.982424916 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.318749284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.183987101 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.118309227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.978397896 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.125196238 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.979257883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.182784168 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.323232818 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.001470323 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.241575959 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.175501051 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.964061631 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.16239322 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.979680184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.186230417 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.109896967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.508129905 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.979293627 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.151421805 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.519255081 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.12342063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.3896551 seconds)
  done (took 171.179405203 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.952831277 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.951199837 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.951536026 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.95280554 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.242573941 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.952187098 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.95374893 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.952259534 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.165750481 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.160031405 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.953497356 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.233030755 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.952798494 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.952626649 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.954175697 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.95290161 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.333828834 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.951484353 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.951757891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.953236416 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.953446742 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.066764297 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.954479503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.083983739 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.311013619 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.95295808 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.954743373 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.953632043 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.953607849 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.953684746 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.954485745 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.954087933 seconds)
  done (took 210.351490202 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.956744335 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.952579442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.955510608 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.955163878 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.954974381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.957049783 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.956741209 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.954442049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.769553248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.754986212 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.954354852 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.956228966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.957845608 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.956101523 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.955986659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.953667471 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.953214683 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.953665113 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.957231625 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.961307796 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.954149664 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.771927669 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.953244061 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.795244768 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.960837593 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.956666388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.955303696 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.955975078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.960641607 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.959584836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.955617665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.954268974 seconds)
  done (took 223.740562423 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.197227833 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.957208296 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.959384008 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.008515422 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.9597808 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.957546708 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.961147725 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.205156453 seconds)
  done (took 20.091245436 seconds)
done (took 627.2601704 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.328585174 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.163688459 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.140337359 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.984829783 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.235936068 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.026026379 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.977093793 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.041373235 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.820268921 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.05655498 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.616760258 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.001721587 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.711371017 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.006011041 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.103664019 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.034205 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.560008768 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.671942732 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.12041557 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.033021657 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.165819523 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.92957079 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.062420378 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.869829015 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.631363083 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.962592362 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.042784081 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.574837906 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.989590207 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.140757919 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.644374173 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.299450825 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.997786091 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.98174 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.032700358 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.013898685 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.234301459 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.993496638 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.114149897 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.725913244 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.04548819 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.731079406 seconds)
  done (took 106.698264195 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.970634751 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.967482421 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.966717461 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.966372054 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.977306481 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.965723453 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.967367448 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.967556363 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.966760749 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.968378042 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.966232148 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.976183448 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.965747318 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.976341204 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.967433966 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.967481996 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.966554945 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.97732714 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.966383245 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.968197944 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.966095966 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.966787176 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.966364693 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.966925551 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.967426766 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.968124959 seconds)
  done (took 53.083889296 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.962393834 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.136806823 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.208087467 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.981171936 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.961114424 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.965152368 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.979646384 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.968814386 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.965382199 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.964959082 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.068319181 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.970009377 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.979891401 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.204145626 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.978191215 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.961101952 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.96277473 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.963311195 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.143596194 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.982722188 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.982481386 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.968641565 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.981035741 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.978208654 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.963988589 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.964023372 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.968884714 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.417794865 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.974950841 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.071344221 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.023986803 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.984353431 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.362980978 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.217366196 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.018646422 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.970994477 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.96439925 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.075684474 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.973014239 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.965179694 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.982682277 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.971113849 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.205873391 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.478304707 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.978528928 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.962795606 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.428062714 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.090821378 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.007478161 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.974665606 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.211797024 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.981627659 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.965338396 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.966547532 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.001479378 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.974744854 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.967125236 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.277391492 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.982740987 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.982199219 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.974370788 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.968120843 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.153333222 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.977512123 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.137423694 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.978390821 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.971565922 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.965228177 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.21445605 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.983873877 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.49721674 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.980432024 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.964725231 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.07459612 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.149323266 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.458722395 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.982296168 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.15388885 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.386569058 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.991171599 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.978961896 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.409009549 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.996838434 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.975773261 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.966918094 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.966856227 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.965610546 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.009540568 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.982819789 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.409876222 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.490579907 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.297733491 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.994234529 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.980111892 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.967721494 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.277172207 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.978022743 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.968608988 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.203219414 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.502793945 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.982448123 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.973820527 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.472798288 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.981414223 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.985223391 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.978414777 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.218234873 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.982586089 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.00933202 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.96845691 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.976142858 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.969521064 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.986090323 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.978557205 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.966716293 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.463494602 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.093506397 seconds)
  done (took 243.685975486 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.969149165 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.965629653 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.969540573 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.966571527 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.966384476 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.966651964 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.967314017 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.964868651 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.968220951 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.967115442 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.967129515 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.967402489 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.970884741 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.970900594 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.010511246 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.968304806 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.571066258 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.967658049 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.96768339 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.967531184 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.610834201 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.970562622 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.97121514 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.9681384 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.969471696 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.968039548 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.974252039 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.006491501 seconds)
  done (took 170.333669166 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.968389291 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.081886361 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.985869572 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.997065309 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.978238083 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.969521265 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.068040251 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.987361665 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.977891958 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.968892499 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.969385558 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.031021532 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.980666007 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.069256136 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.001419165 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.079261878 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.076601326 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.97861827 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.971625845 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.969974473 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.999335312 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.980342572 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.029311533 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.092141736 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.98767244 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.085009645 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.98820709 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.970637936 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.971704903 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.085373843 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.986417409 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.033091698 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.999056146 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.990527276 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.090714224 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.0857869 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.077785755 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.076800675 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.977430523 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.971864981 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.970580019 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.973169955 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.08446841 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.98966082 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.972353003 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.086612676 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.990056411 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.971546762 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.971365787 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.970975691 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.984386795 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.991389281 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.03751629 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.100957228 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.005457821 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.998654004 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.071012826 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.100251209 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.97551476 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.069261315 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.979661207 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.084974459 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.990392186 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.972066162 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.97400348 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.975617373 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.00123646 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.079042353 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.077471337 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.980293363 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.070404642 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.010439717 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.981608868 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.973488781 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.972448522 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.087711424 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.089562275 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.007876591 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.010053469 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.002885392 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.986449564 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.972241829 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.973858579 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.991073002 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.979373778 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.0877387 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.089843994 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.98027338 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.973481211 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.975225494 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.974792643 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.997548729 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.096430895 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.00912833 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.083404558 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.040376843 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.04625305 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.987729643 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.989592025 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.981263893 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.038657982 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.987813731 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.987739713 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.280835515 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.034422026 seconds)
  done (took 213.667790254 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.377392611 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.023219983 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.031263025 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.305500011 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.334862904 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.974968885 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.023162406 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.026184344 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.062712469 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.24839074 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.110263918 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.041555827 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.013873248 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.002370557 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.026472276 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.063825779 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.032511058 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.36109788 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.250004874 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.529949188 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.014677578 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.322189565 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.383085517 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.606402287 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.073120411 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.423526635 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.642752813 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.185650515 seconds)
  done (took 66.395254307 seconds)
done (took 855.746444288 seconds)
SAVING RESULT...
DONE!
