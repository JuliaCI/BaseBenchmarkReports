cset: moving following pidspec: 1111
cset: moving 1 userspace tasks to /user/child
cset: done
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/parameters.jl:8.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/trials.jl:5.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/trials.jl:89.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/trials.jl:136.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "immutable" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/trials.jl:181.
	From worker 2:	Use "struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "immutable" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/groups.jl:5.
	From worker 2:	Use "struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "immutable" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/groups.jl:141.
	From worker 2:	Use "struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/execution.jl:10.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/serialization.jl:5.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/serialization.jl:16.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	WARNING: importing deprecated binding Compat.UTF8String into BaseBenchmarks.
LOADING SUITE...
loading group "string"...done (took 0.792806438 seconds)
loading group "linalg"...done (took 7.705891529 seconds)
loading group "parallel"...done (took 0.180164631 seconds)
loading group "tuple"...done (took 1.769048788 seconds)
loading group "dates"...done (took 1.270652657 seconds)
loading group "micro"...done (took 0.435261503 seconds)
loading group "io"...done (took 0.391753947 seconds)
loading group "scalar"...done (took 36.248697419 seconds)
loading group "sparse"...done (took 4.705376091 seconds)
loading group "broadcast"...done (took 1.102155493 seconds)
loading group "simd"...done (took 2.221046977 seconds)
loading group "random"...done (took 8.522902023 seconds)
loading group "problem"...done (took 2.455215366 seconds)
loading group "array"...done (took 19.575213015 seconds)
loading group "misc"...done (took 0.913548342 seconds)
loading group "sort"...done (took 3.253396338 seconds)
loading group "nullable"...done (took 5.51205826 seconds)
loading group "shootout"...done (took 0.776774035 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/18) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.548184552 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.148340998 seconds)
    (2/2) benchmarking "String"...
    done (took 0.156839364 seconds)
  done (took 0.893961569 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.115626663 seconds)
    (2/2) benchmarking "String"...
    done (took 0.114933837 seconds)
  done (took 0.803290308 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.108039401 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.141182628 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111382245 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111035281 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110292158 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109296745 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.10737249 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110137857 seconds)
  done (took 1.372253446 seconds)
done (took 4.34720672 seconds)
(2/18) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.442701526 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.909029542 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.527454502 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.155305617 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.292105519 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.241531936 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.251939977 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.236651018 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.120381353 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.093421123 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.194565446 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.443961905 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.326880318 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.839832316 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.104227859 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.125055469 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.145593619 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.856426895 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.106199049 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.140882312 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.427544086 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.150947851 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.144491884 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140341922 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.226763915 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136022822 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.166079419 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111359129 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.764689067 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.149049145 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.2207344 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.112653779 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.164793854 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.164671462 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198990608 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.14255394 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.713492581 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.215585549 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.155020085 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.118470536 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.709829729 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.132608936 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189301755 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.120326318 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.093066231 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181922893 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.109366385 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.115832356 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.134558054 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.112767188 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.189766977 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.492771404 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.134932829 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.178966535 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.134126328 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.741389371 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.132617422 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.282928763 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.157096473 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.136567678 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.112057654 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107710074 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.185662276 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.113358808 seconds)
  done (took 20.797292615 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.170043863 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.158781634 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.107214447 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15978644 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.145363306 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.112854879 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.119486736 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.109867051 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122535584 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.16832379 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.121967918 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.186878032 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.106272271 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.140242862 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.147593113 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233741494 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.137065001 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125611789 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.118099849 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.118407882 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140626086 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116599122 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110917956 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.126459068 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171906527 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.235259264 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.150314255 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.154565462 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.117169033 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110920265 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.156712899 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.164029589 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.120081513 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.114458167 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.161525439 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.135985776 seconds)
  done (took 5.694683187 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194935454 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.135112375 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.187816549 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.177838537 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14002994 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161102343 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.164233573 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.265810092 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.191378901 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.451907284 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181652184 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.159133523 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.150517846 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109902367 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.111578319 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.105588089 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.155779463 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161544512 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.147525425 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.183961948 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109800257 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.113621018 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.404111216 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10842363 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.106059435 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108110591 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.094152369 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.177760532 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123439711 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.739090193 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110215561 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090860288 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171505775 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.225534586 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116454116 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.16181 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109651221 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.187041605 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.108539504 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.108775234 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.129526429 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.869309548 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.109796533 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.129224633 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144163641 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.168987344 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107951148 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.106263684 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.195856431 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.106987813 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102242206 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.868758314 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196858284 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.175289551 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.113872713 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.241656008 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127141509 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109157981 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.122976639 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.217785977 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.108923911 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.108748249 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.106582161 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.111684164 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.108027533 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106866583 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.328414044 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.110682176 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.122948887 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110597994 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110997962 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.72191033 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113767262 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115813066 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.11237029 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.145871071 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.108369149 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10622107 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.107678333 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.110488417 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108882541 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.12555767 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112600401 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.110065534 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167740311 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.107236836 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.128245173 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.146330379 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.110855104 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.10593097 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13846529 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107516105 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.120071103 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168821578 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089887054 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118612724 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12815502 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.157840666 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.108948063 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.195337005 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.111326566 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129009513 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.10840536 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.123571103 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141493468 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.107622807 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107588741 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108977458 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.120936338 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.107067472 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168333282 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.107675695 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.107405601 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.112014534 seconds)
  done (took 24.332265595 seconds)
done (took 51.399626942 seconds)
(3/18) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.947404906 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091474535 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.0978071 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097483936 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.095700324 seconds)
  done (took 1.95323054 seconds)
done (took 2.566088285 seconds)
(4/18) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.461395557 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.63722059 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.16724104 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.184064793 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.242013647 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.189903834 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281671723 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.16988827 seconds)
  done (took 4.057895578 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.185943392 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.121612779 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.125761954 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.121373976 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.122037012 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.140894505 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.121833055 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.125736287 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.12478535 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.12487347 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.131905337 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.12506337 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.121500105 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.138728701 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.124916312 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.124713541 seconds)
  done (took 2.728862633 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.152762208 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.133637684 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.122283246 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.121359576 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.118986047 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.121305599 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.140181511 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.120176023 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.117838967 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.119713443 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.123321841 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.119236249 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.122584541 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.131603438 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.122330762 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.144314425 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.123376578 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.122903052 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.139881524 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.121248186 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.137208456 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.119112756 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.120398214 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.122825607 seconds)
  done (took 3.711834069 seconds)
done (took 11.11778629 seconds)
(5/18) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.140253377 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111172244 seconds)
  done (took 0.865616684 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.162377411 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.160201267 seconds)
  done (took 0.947664803 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.140921137 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.118819756 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.126415872 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.121500885 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.119945005 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.121273962 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.138115481 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.119773625 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.122719207 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.124691814 seconds)
  done (took 1.901532031 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.119752348 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.119945142 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118334737 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.153227324 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116919051 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.116938944 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.136261774 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.117766057 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.118670843 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.114697151 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.116425118 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123301503 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.114502372 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.139138181 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.118592153 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.115480495 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.119082566 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.116713224 seconds)
  done (took 2.829829188 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.116375984 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.123176999 seconds)
  done (took 0.87034061 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.121289779 seconds)
    (2/7) benchmarking "second"...
    done (took 0.119371004 seconds)
    (3/7) benchmarking "month"...
    done (took 0.114823014 seconds)
    (4/7) benchmarking "year"...
    done (took 0.114714181 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.115689673 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.115416385 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.115877884 seconds)
  done (took 1.446606193 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.879283608 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.455172369 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336083442 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.131328081 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118358751 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.325949377 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.115781648 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.115916969 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.143720703 seconds)
  done (took 3.273823785 seconds)
done (took 12.762250865 seconds)
(6/18) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.119639663 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.168524005 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.585655452 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.1545302 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.121827215 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.174929828 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.212537081 seconds)
done (took 2.174261026 seconds)
(7/18) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.288413245 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.15818011 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.153733034 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.160257921 seconds)
  done (took 1.393991906 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.109410521 seconds)
    (2/2) benchmarking "read"...
    done (took 0.122114816 seconds)
  done (took 0.874646849 seconds)
done (took 2.909746546 seconds)
(8/18) benchmarking "scalar"...
  (1/16) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.117741732 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.118383517 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.114862344 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.115296886 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.114201147 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.114762537 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.114464423 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.128721179 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.114495492 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.114984857 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115326278 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.118120081 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.119572651 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.119892399 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117527859 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.130674433 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.115156863 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114982769 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114373183 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.11565633 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.115146019 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114581984 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.132720854 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116472093 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.116190632 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11591542 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.116722948 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.116501814 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116333568 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.116643318 seconds)
  done (took 4.16769466 seconds)
  (2/16) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.122883668 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.115544142 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.119487966 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.133621419 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.121349827 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.117739847 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.113484729 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.133563651 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.118343305 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.115887452 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.120860914 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.118648326 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.114418744 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.117873006 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.133128891 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.119434935 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.123460222 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.115669975 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.115444098 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.115856411 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.116153027 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.115072596 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.130761407 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.119134164 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.121066744 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.119247977 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.117316619 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.114882232 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.115202785 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.131502989 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.118096267 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.119903131 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.118299965 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.122236762 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.117638886 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.117306968 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.118541874 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.129513419 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.117123494 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.11317769 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.113845005 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.116285765 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.11702564 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.118010809 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.133395139 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.121045728 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.123327408 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.119463228 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.116246127 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.117852679 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.115206022 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.115435516 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.132012049 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.11700621 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.118903994 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.113990371 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.116149816 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.11239513 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.115636901 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.11463097 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.130649838 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.113413293 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.116397925 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.115696351 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.120316255 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.118668973 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.120023266 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.137403491 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.11914047 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.115538594 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.119320979 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.120820113 seconds)
  done (took 9.275561455 seconds)
  (3/16) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.18960913 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.118618356 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147822243 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121350583 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.118155753 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.135157599 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.117943194 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119460128 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118202185 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.117772145 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117599012 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118669739 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119182559 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.13424216 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120218907 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.13066103 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122588864 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.119033299 seconds)
  done (took 2.942215838 seconds)
  (4/16) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.126565528 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116957236 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126714065 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.11704176 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.116116914 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.116904584 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.119420642 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.135009084 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.120121885 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.11749872 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.118160704 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.117865512 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.119930703 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.118253659 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.13455204 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120097043 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121014776 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119144495 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.129500244 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.12283807 seconds)
  done (took 3.085528074 seconds)
  (5/16) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178683381 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129047569 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.130076072 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131006883 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131390677 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.147162852 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132589442 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.134299019 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132706793 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131774634 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.131374661 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.148678127 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132954977 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.131341929 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132259792 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132090494 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13048475 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133807068 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.14993651 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.14316432 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136436746 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132208436 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129286736 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129122361 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128323983 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.147382166 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132596091 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131827075 seconds)
  done (took 4.468712685 seconds)
  (6/16) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.123127617 seconds)
    (2/2) benchmarking "in"...
    done (took 0.119824782 seconds)
  done (took 0.896473559 seconds)
  (7/16) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.161474145 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.16418815 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.119005653 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.127856571 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.182718421 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.152941879 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145837932 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.122052486 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.117632194 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.167715103 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.163164118 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.114193758 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.115894475 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109151106 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.130196801 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115454698 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.117630318 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.124720358 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.123449204 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.12159819 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122814955 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.13201649 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112225034 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.121212702 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.109659142 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.119497503 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114705589 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.12129326 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.127577898 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.115615898 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.1128362 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.124028414 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.125870106 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.121057972 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.117262047 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.181405324 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115365556 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110614955 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.119543439 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122242483 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122335748 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.134747502 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114526852 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.113667606 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112482743 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.119894229 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.119310677 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.116973009 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.109317074 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.128292236 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.119693 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110098813 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.121734923 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.118898901 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112442762 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113959664 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.136649678 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.110486977 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.110738429 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.112249843 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.114742528 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.109466545 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112687363 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.136793288 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114362253 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.116321327 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114710091 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.119569524 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.120305266 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.118690822 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.131932446 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.134762764 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114748037 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.13067496 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125787698 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.119378368 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11139588 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120938812 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.131355838 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.114631857 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.121601856 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125279146 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112595539 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110602695 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.111468759 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.141962131 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.122291945 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.120225269 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.109928785 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116213865 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.12059283 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.118526459 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.132712932 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114762638 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.123495844 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.126943835 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.111404785 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113083641 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.115822984 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.118300276 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.134508304 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110422175 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115569362 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120848434 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119683088 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111732355 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.166392393 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111870079 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.1117605 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.118979161 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121800567 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.113352771 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.116884437 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.134828171 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109902963 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.114933565 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.125050216 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113032487 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.117706384 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.118528815 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111003538 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.128383012 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.11822459 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.119207024 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.110747436 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.118416088 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118838383 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111609992 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.132364493 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.117492018 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.118622025 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.111330748 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.119170826 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.115403607 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121581739 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110369211 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.137714767 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.12557016 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.123162936 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111309928 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.111679851 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110047867 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111007601 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.126897624 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.123057799 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112848431 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.112418813 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.111327102 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113354234 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.111238859 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.119798912 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.140200648 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.113741425 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.122952281 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.116795869 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122096267 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.113375285 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.132564449 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.141054528 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.123240988 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119503409 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.108866626 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109237508 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.128292926 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113959515 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.130249567 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.120328062 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.120977058 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.124006547 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.110587423 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.120829275 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.111150018 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.112562239 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.137837068 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.120616234 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.12262773 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.111098415 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.128306499 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.130133874 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.126952066 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.130977125 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114556146 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.119385903 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.112593549 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119686019 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122056529 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.119543229 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.127166233 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.11380387 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121125948 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.111382313 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.121893857 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114560115 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116046097 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.111672957 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.136140982 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.112258931 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.122252788 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114746433 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.133772253 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.1267016 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121807724 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126071479 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120510224 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.111025857 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.119467578 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.112178453 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.119931887 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.121723105 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.119261067 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.136418906 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114797921 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111530803 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.1182683 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121093981 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118957403 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113825777 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.135923839 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.11015523 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.110321384 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.128725487 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.127147943 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.116049223 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.118001115 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114457004 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133021071 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.114281421 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.114875975 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.121761034 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114968148 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.113951678 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115692658 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.133075439 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.115325604 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118652837 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.112328668 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.115463763 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11572359 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.124972572 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.138718404 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.115935909 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.131979641 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.131019993 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.122999481 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.119454687 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1117357 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124348038 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.132462382 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.123207729 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.115155358 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.121780191 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.112848606 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.120739024 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.114098576 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.13050855 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.113595343 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115808614 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122264454 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.124794152 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113064969 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.121519837 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.122706885 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.14975825 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119908866 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.123828767 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.113665156 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.112216899 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.112415744 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.110981758 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.139813026 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.11381445 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.122025702 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.11427099 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114518821 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.121893152 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111107267 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.113693133 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.139180833 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112370251 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.115185717 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.112514339 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113627624 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113444948 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.124315568 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.134078082 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.121648314 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115092751 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.119097025 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112280042 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.11005616 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.120851534 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.121183239 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.127308947 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.121007931 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.119757372 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.120944978 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.112499817 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.122721466 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.112959755 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.131447215 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.124992801 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115896717 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115912262 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114514897 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.124326461 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.118355728 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.113195525 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.12555441 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.111865407 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.122657176 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.113764279 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.123932377 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.115482694 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112881762 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.13056141 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.116106847 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.123753274 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.113567812 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.124024449 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.121266707 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.111586469 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.113986599 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.139561873 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115996018 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.122687944 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.126982654 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.126762223 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122593213 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.119704982 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.134649331 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.122658411 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124416257 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.119177378 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112975947 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.109390588 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112986824 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.13426405 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.12010923 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.121990398 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.120720008 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.11181154 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115044001 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.123924375 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.116887928 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.130629935 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.112953618 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.131971201 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.127850049 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.122427063 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.120079123 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.118679343 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.133797163 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.118372799 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122197543 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.12267607 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.115548014 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123063087 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116040223 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.123992599 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.131662241 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.124475041 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.123403961 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.11290337 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.11440709 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.11333002 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.122988372 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.128886469 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.136041913 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.128509931 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.114111821 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112620454 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.124017888 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.114428667 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117913432 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.139704108 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.116184901 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123634311 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.120895731 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.114896709 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.122747904 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.122161596 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.129089047 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.115462913 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115017934 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124777231 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115054833 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.12270197 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114257919 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.136315495 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.141696399 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.124501673 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.123259827 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.123174635 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.112200459 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.126178319 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116656773 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.13874885 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.114691472 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114461719 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.113922138 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115586661 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.123366179 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113715324 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.126366751 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.142642008 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.116023885 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114621246 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.124220543 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.175857665 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.134028131 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.120898455 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.132685409 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.11268501 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116277911 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.115053097 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.125467365 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.114236605 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.113234297 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124778958 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.141074696 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123943604 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.116757672 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.123130065 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.113060457 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.112598466 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.123690261 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.131588168 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124407843 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118036609 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.11535666 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.126327702 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.125955838 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.123180759 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120298107 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.127244486 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.113331855 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.118120225 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116879643 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.114296283 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.114411673 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.123899789 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.132234458 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117493089 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115776746 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.113294749 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.116156904 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.127175964 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.115836504 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.114440694 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.132627123 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.128044808 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.128170912 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.120010733 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.114087008 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115389227 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.113872919 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.137511638 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.116557572 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.113301128 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.113825304 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.119842317 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.12293194 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114182675 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.135380393 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.116188701 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.126320845 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117344883 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.117718007 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.11484154 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12475951 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123652721 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.134516239 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.135371682 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.121654904 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124454025 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122457802 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.120733473 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.113716531 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.128385415 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11397691 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.113045814 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.122935164 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11736779 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116023124 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.115857774 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125365367 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.141562458 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.124052667 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.125491382 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.114548006 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125188742 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.115965569 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117112354 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.142667497 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.119469884 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.123904179 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1235249 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114393131 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117087096 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.120974796 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.120238309 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.129646784 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.113659721 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116840049 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124648526 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.125085662 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115536165 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114617805 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.140907796 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.128253646 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.123667915 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11723389 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119399498 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.124489186 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.127279173 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.120510465 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.135138252 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.121970448 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.120881533 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.126392378 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.115625215 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.115268741 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.12497234 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.142031092 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120341507 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115748805 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.114325743 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.123742748 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.116207321 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.11277992 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.119939262 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.141805623 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.124976039 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.1175236 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.117409933 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.13639958 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12248757 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117660733 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.129763748 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.112017554 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.124000763 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113041001 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.121789798 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113013159 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.125271283 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.14223351 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124177192 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.12946547 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.114120176 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117720753 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119318366 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.128238151 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.12159816 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.132640488 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.114986817 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.123273329 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.137683726 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.133083151 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.123645688 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.122994437 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.143083535 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.120129735 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118984172 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.116103354 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.124948278 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.126708916 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.122701276 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117536277 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.134522763 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116840293 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.123073216 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.127439782 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.125984824 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116838 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12612216 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.141857512 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.118087746 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.128990527 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12187361 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.123321144 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.116271947 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.12218287 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.116409563 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.129439706 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124153381 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.122902162 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113653545 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12561159 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.12109582 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.113819652 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.132386639 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122101094 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.128384962 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.121384055 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.114446668 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.120467394 seconds)
  done (took 73.258343877 seconds)
  (8/16) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142533247 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12150893 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130735974 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129298234 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123891477 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120722127 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120327259 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.139413585 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.1213951 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.120886721 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.120825043 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121297702 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120452447 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120815318 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138506504 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121594638 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12267722 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122883882 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121343489 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119517808 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121259397 seconds)
  done (took 3.330630312 seconds)
  (9/16) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.123393763 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.123061476 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.120092072 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.129790081 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.126359564 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.12171314 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124451002 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.137949233 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.12445967 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.113600709 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.113259705 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.115757583 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.11484511 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.124275835 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.11612636 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.140163399 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.1250016 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.125870273 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.123387724 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.121943894 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.113022816 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.121706703 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.14024873 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.121927895 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.13079858 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.126207493 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.121169892 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.124394912 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.11174207 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.121879338 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.121409525 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.115597492 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.115413229 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.115479544 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.116136423 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.124164387 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.125930456 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.141721129 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.126464787 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.114323109 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.123753827 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.125942875 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115233886 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.123371901 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.135833628 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.139754467 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.12656398 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.121093229 seconds)
  done (took 6.659133029 seconds)
  (10/16) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.137425437 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.136303907 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.12112613 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136176631 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12082863 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.120623675 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.141239153 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137198725 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.120995116 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121130434 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120869275 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123277288 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12078717 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.120963823 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.139854981 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121859922 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.121458172 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.126855945 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130235844 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.124532789 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.121671134 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.143499809 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122216364 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121272298 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121891651 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.12344461 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12351827 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.123926936 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12451154 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.142607412 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.124539127 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12547267 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121789177 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.123328308 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12273369 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123849148 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.142659274 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124220028 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13307851 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.129916553 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.125128241 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120889499 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.123149239 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121302733 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.140140961 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.124352205 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125943009 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.125232058 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125102537 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.125936589 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.12504831 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.1253413 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.146798443 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.125309494 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125281169 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12496742 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.125439972 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124385541 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.124069193 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.15504417 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.131317513 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126230427 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121857039 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.124491833 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.122324757 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122128328 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.121454748 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.139093858 seconds)
  done (took 9.440431897 seconds)
  (11/16) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.152615479 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.140240405 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.141071287 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.140508898 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139401123 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.14240165 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.159018582 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.140914668 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.140369263 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.139787076 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.139007523 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.222560873 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.145850087 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.151710132 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.143641093 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.139748636 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.141002413 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.159954682 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.140394225 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.142242385 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.143576003 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.143439664 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.143254801 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.163798399 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14344129 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.143467936 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.144671723 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.142609279 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.142702445 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.144063244 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.163346773 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.145755087 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.144725575 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.157387652 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.148103115 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.143331967 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159137517 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.140914659 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.14137799 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.139927119 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.140758824 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.14082544 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.16010874 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.142121981 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.140638172 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.141047763 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.140038439 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.142324347 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.143680316 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.158310274 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.141650959 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.140077552 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.139767256 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.140264839 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.146512701 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.169690009 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.145468567 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.143184321 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140355087 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.140717648 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.140598286 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.161254161 seconds)
  done (took 9.830381743 seconds)
  (12/16) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.135246386 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.135972314 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.174785533 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.125719613 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122492042 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.146140519 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.125291542 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.122510561 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.122758364 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.131451605 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.122515232 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.122792593 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.152381434 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.133300195 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.133445477 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.126743803 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.125020779 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.123454638 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.122864413 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.192703236 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.122881675 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.124748233 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.12305638 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.124592993 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.122857847 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.122774399 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.141156855 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.125092153 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125109282 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123874318 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.121967625 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.122022699 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.122045527 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.121727802 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.150539682 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.133931087 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.127726459 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.124590307 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.122585087 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.122959576 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.125399755 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.144894712 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.126095335 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.12729379 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.125171973 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.125858808 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.125203159 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128961954 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.126758285 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.145272883 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.126685732 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129370169 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.125740906 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.126493031 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.123156809 seconds)
  done (took 7.886028327 seconds)
  (13/16) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140134646 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.132541633 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13761496 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.1247954 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123201359 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.123021096 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123770896 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.143723451 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.124038785 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124930598 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.123374543 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.124358678 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12273935 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.124468968 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.14272646 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124458425 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.123865248 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.123725237 seconds)
  done (took 3.038929991 seconds)
  (14/16) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.13185842 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.177922743 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.124399684 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.186233914 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.142264545 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.118865235 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.126418978 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.114774623 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.127112253 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.11576569 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.117525296 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.137462416 seconds)
  done (took 2.352747744 seconds)
  (15/16) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147999711 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152547826 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.140015305 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143322969 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146527353 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.159027484 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142315007 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141967537 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144392685 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140239212 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140086351 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.161978821 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152248694 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149093546 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148421787 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146349296 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140366409 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140846341 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.158047627 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145191309 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140809747 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145545323 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140404453 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141210691 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.158729908 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143935292 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145310723 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140356389 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140163774 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143661767 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.161278829 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141987627 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145263611 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14718205 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154532479 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150130763 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.158409121 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145786658 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147240682 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142615819 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.145078933 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144595392 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.161581345 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141781975 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145834868 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140829517 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143365872 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141241715 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141800074 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163243276 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14561417 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14087131 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144490083 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144807473 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151156487 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171873913 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147236338 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141507852 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1451892 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140810616 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140389742 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163130589 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141951579 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141809268 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145434012 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141342577 seconds)
  done (took 10.439493513 seconds)
  (16/16) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149779826 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.143151888 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141133651 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141950956 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141653013 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141188632 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.160082125 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141638454 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140646735 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148058686 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16191464 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147000963 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.159798345 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142409081 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141807899 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141863899 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139771124 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141343723 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.159350434 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145598492 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141846217 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141797118 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142998865 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141063442 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.160033556 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147639204 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141557572 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141797985 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141265868 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141121736 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147929868 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167880524 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148542787 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.14189278 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141001159 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140938357 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140362133 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.158500928 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142197212 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145527722 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1416467 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145406505 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143773567 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.159676986 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143507372 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143126278 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142388894 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141770057 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140859375 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141430362 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158822902 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149932012 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151921541 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148161168 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141305064 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141375224 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.158498101 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141761942 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141906763 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145384359 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143119211 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141491463 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164117923 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144903526 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141605267 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142036552 seconds)
  done (took 10.398726184 seconds)
done (took 162.114280351 seconds)
(9/18) benchmarking "sparse"...
  (1/4) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.177094935 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.194282981 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.240580489 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177459941 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.170830951 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.150606192 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.153237569 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.127045846 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.120938441 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115170603 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.182211724 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.11652447 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183301882 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.116590728 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.260358271 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.115981508 seconds)
  done (took 3.338279433 seconds)
  (2/4) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.205273648 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.291510861 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.13034159 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117073426 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.139416809 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.116608989 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.116055903 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118543336 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.118283485 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.115895827 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.115371651 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.141163886 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126888992 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.12142497 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.118934041 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.115874522 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.116338948 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.115941838 seconds)
  done (took 3.189687483 seconds)
  (3/4) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.132553263 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155041727 seconds)
  done (took 1.034849627 seconds)
  (4/4) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.146925262 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163372487 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314682506 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155894775 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.153711174 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.120488867 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151179325 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128800511 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.189249198 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.11655385 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.134796586 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120079967 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143681573 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.127090204 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.136438064 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118558094 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.138318542 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.150427348 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.130996717 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117340487 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138282197 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117229122 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115807543 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.129770856 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.201663846 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118044721 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.117670531 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117083032 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116512994 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.130973888 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115431488 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134335253 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117124072 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.123820908 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.132167494 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.121687043 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119079947 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115577391 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.150399118 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.117016258 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117366704 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116413158 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.12150391 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118935621 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.116350441 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121220544 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.135424203 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.118674118 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11788625 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120680405 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116110989 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115830139 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.115868735 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.138700226 seconds)
  done (took 7.950676522 seconds)
done (took 16.252807095 seconds)
(10/18) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.195342107 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16511595 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.21689808 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.161447681 seconds)
  done (took 1.521873976 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.212018241 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.136497545 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.185729904 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.134672362 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.19531045 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.117716275 seconds)
  done (took 1.731373499 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.156190316 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.137217379 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.138371424 seconds)
  done (took 1.186592621 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.178693933 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.178311312 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.517944283 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.35410529 seconds)
  done (took 2.028023677 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209871444 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132080885 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127537129 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.202187102 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.193170828 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153692197 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136479786 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.139265497 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.152528768 seconds)
  done (took 2.224096681 seconds)
done (took 9.439300378 seconds)
(11/18) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.196857233 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.123810961 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.127192865 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127049595 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.202404597 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.134182553 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.140259994 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.126795465 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.134662403 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.124631296 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.116356685 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.157103451 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.125077415 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.182480737 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.128509085 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11575451 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.124292959 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.163468216 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.143623156 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.139667093 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.179700077 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119975805 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.133815219 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.138370859 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.18133372 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12032523 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.124123624 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12904769 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.137835767 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.144498701 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.129021338 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117030292 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.140420232 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.139234251 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120015341 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.124861059 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.138305475 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.113326193 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.13551306 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.129928048 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.137985486 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.124911712 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.123153078 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.116124951 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.147059833 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.126065059 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119120491 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128172307 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.11602906 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.129369006 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119804288 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.156918235 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.126311682 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117251801 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.116703577 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.119234411 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.134076873 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11893938 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.144728336 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147764508 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.121234738 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119554909 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.12537072 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11882898 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.124567692 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119059066 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.143692405 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.126889105 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.125171872 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121048416 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118329875 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.125127066 seconds)
done (took 10.363321655 seconds)
(12/18) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.126291536 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.15106463 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.172989282 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.176082968 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.142482825 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.118694791 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.126788341 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.139669919 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.134858426 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125174621 seconds)
    (11/66) benchmarking ("rand!", "RandomDevice", "large IntSet")...
    done (took 0.130530265 seconds)
    (12/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.204150349 seconds)
    (13/66) benchmarking ("rand!", "ImplicitRNG", "large IntSet")...
    done (took 0.127670367 seconds)
    (14/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117333243 seconds)
    (15/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.127905309 seconds)
    (16/66) benchmarking ("rand!", "MersenneTwister", "large IntSet")...
    done (took 0.118739167 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.125702645 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.119993762 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.202132082 seconds)
    (20/66) benchmarking ("rand", "ImplicitRNG", "small IntSet")...
    done (took 0.125412995 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.128244078 seconds)
    (22/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.132229788 seconds)
    (23/66) benchmarking ("rand!", "ImplicitRNG", "small IntSet")...
    done (took 0.118740555 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120545035 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.142824532 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.124517151 seconds)
    (27/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.125555684 seconds)
    (28/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.119647681 seconds)
    (29/66) benchmarking ("rand", "MersenneTwister", "small IntSet")...
    done (took 0.131971241 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.132895676 seconds)
    (31/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.123579372 seconds)
    (32/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.145431867 seconds)
    (33/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.133686182 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large IntSet")...
    done (took 0.126309596 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.129355009 seconds)
    (36/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119794792 seconds)
    (37/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12490485 seconds)
    (38/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.116257468 seconds)
    (39/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.116726022 seconds)
    (40/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137753284 seconds)
    (41/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126744268 seconds)
    (42/66) benchmarking ("rand!", "RandomDevice", "small IntSet")...
    done (took 0.129266608 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117031051 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118603516 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.124110942 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.128191545 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.1435595 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12737528 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120465191 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.134386029 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13012395 seconds)
    (52/66) benchmarking ("rand", "MersenneTwister", "large IntSet")...
    done (took 0.129953408 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132811931 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125560185 seconds)
    (55/66) benchmarking ("rand", "RandomDevice", "small IntSet")...
    done (took 0.144458448 seconds)
    (56/66) benchmarking ("rand!", "MersenneTwister", "small IntSet")...
    done (took 0.120578671 seconds)
    (57/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.129235236 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125764879 seconds)
    (59/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.126843783 seconds)
    (60/66) benchmarking ("rand", "ImplicitRNG", "large IntSet")...
    done (took 0.125428301 seconds)
    (61/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.127275469 seconds)
    (62/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.116843131 seconds)
    (63/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.1401869 seconds)
    (64/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.121137134 seconds)
    (65/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.127387963 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.126271159 seconds)
  done (took 9.454090767 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129503848 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140687583 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.127272504 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.127783952 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.12449284 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127435745 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.121519947 seconds)
  done (took 1.671725621 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.11813206 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188337392 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.181692876 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.204570607 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.182004854 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.189636265 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.167137113 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.127339881 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.176126142 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.119338404 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185640107 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.218814996 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.129399502 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120541984 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184940909 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.116985417 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.204808733 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.172390843 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.133502871 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.18958145 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146102335 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.166563558 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.119522446 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115914904 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.185012581 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116464986 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.233395297 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128962913 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.127531527 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.177982362 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145513482 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.158698869 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.180996449 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118624136 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126453066 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.202168916 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.178055068 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123893588 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.185705549 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.14760339 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.195168347 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.129847964 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125054123 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12972711 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.128544347 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.197832692 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.127205875 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.129487766 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.124936304 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.189051045 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.13858759 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183553111 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.128993353 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.105364335 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.119442696 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.106307645 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.1356889 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.146734223 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.192764153 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128495042 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187504422 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.209621418 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.189310792 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.178580176 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130751936 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.204172792 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.177262993 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125525681 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.194757443 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125493699 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.179289556 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.126104394 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.119320277 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.197859535 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125231098 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.184667359 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.186903093 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14623239 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123786093 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.116952931 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.125058972 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.131230009 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.194504477 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.129825661 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129678529 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120999386 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120539868 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.134584702 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.17325293 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.142901273 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.126256783 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11912013 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.124774307 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.129108955 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118780035 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.202061298 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11899514 seconds)
  done (took 15.651613733 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.119000919 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117117472 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.119519949 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116503338 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.116580037 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.124720183 seconds)
  done (took 1.518501046 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.150500634 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.132298752 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.141626137 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124947928 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.134042267 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.206557135 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.191801016 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117320376 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.133679674 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136272391 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.210926748 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.19000699 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.192644098 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12535359 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.213970792 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.138565062 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.190670075 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124669304 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.155741456 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126799496 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.131468754 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.136590396 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129804063 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.176478811 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.147011157 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.136459458 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118503585 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.135271128 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.136274116 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.115848202 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124635028 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.12716451 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.137629274 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.116912754 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.19307674 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.115708506 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12715859 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.126055241 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.146270473 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.1276602 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.194040912 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.133349297 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.146817647 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.137500816 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.137978348 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.117132592 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.129050237 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115907928 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.19277643 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.125888457 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.152856078 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12424489 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.128519698 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.131889557 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11646797 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116461461 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.13205727 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.2163521 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.125932357 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.116230742 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124787131 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.126679044 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124183545 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.160338158 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.131668304 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.132080229 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.115899147 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127198935 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124830345 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.124298753 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126406097 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.146592972 seconds)
  done (took 11.01843766 seconds)
done (took 40.076203007 seconds)
(13/18) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.723861179 seconds)
  done (took 2.521872035 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.717362751 seconds)
  done (took 1.517044587 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.946441514 seconds)
  done (took 7.768595791 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390214886 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.336680752 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.984807928 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158469244 seconds)
  done (took 2.668546904 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.070575645 seconds)
  done (took 1.882324809 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.299211063 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.242178409 seconds)
  done (took 1.343363899 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.66294085 seconds)
  done (took 1.478754474 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.538269649 seconds)
  done (took 2.346244526 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.231732204 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.196676248 seconds)
  done (took 1.245182891 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.512562615 seconds)
  done (took 1.328857812 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.202575991 seconds)
  done (took 8.020622871 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.255825848 seconds)
  done (took 1.07352008 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.266573472 seconds)
  done (took 1.087723138 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.943535231 seconds)
  done (took 2.762851481 seconds)
done (took 37.856273747 seconds)
(14/18) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.128173758 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131395244 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.130872037 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128272259 seconds)
  done (took 1.328558628 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.12813441 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.118757173 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.128373507 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.132333634 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.125301857 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116628719 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.116231064 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.137887009 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.118774656 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116507677 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.119988869 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116020457 seconds)
  done (took 2.301963829 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175716052 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.167683301 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.189293303 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.253294708 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.284032186 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.309847216 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.277377707 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.283667896 seconds)
  done (took 2.765379597 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118570279 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.132934278 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.153185269 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.125500871 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.130824944 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.355999997 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.134353297 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.117320853 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.183214687 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.118472144 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136788834 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.402289275 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118943425 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.137792813 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.103817043 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.116718863 seconds)
  done (took 3.416033564 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.283011411 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.403261808 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.731600391 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.188578268 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.171965551 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.14065588 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.562044745 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.124556567 seconds)
  done (took 9.431377514 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.210079711 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.146561651 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.15381144 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.152404054 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.151658647 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.171043198 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.170312486 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.126532244 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.138020532 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.135071907 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.129439239 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.125722057 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.191173662 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.13554479 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.13263366 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.126444451 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130716884 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.13680593 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.19319535 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.130822556 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135501301 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.145150767 seconds)
  done (took 4.102200353 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.140613806 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.127274556 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.124478781 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122728402 seconds)
  done (took 1.343666485 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.189542159 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12076897 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.119063608 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116483756 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.126663452 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.14486937 seconds)
  done (took 1.647775933 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179800382 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133596471 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205988873 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.346757026 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143246306 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156993026 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284043856 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153436424 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.155086713 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140802655 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173315576 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191865434 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157669974 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172890603 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140061033 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.154768746 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178741946 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178210342 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145436335 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180593579 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153178556 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189549533 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170879545 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146644285 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138543667 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142991137 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.154707981 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134213384 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155910342 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152912712 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150236069 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156675031 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170024559 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173428792 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150600774 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150416899 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250518743 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135934199 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176577234 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191757514 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181430063 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139290626 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163724861 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145748406 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159639387 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171961079 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140984793 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.156863891 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138134173 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164212884 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155899734 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172999752 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164336691 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149038141 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301557286 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135478537 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14071369 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162653777 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198876009 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170195057 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158838716 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.13183753 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190507648 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166320589 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166202114 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142396999 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.169586708 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12781876 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158404589 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173704038 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160382909 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176131244 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.164865308 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14407027 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16471939 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159558773 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167514989 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164427589 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153746426 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.129552258 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146414311 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133904985 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154062684 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194374242 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130609151 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176570564 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135683797 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.166225039 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190508225 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149371988 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147973597 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151242744 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155273559 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167609592 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.125107222 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1540737 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158214429 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148930889 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131847721 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166264776 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142526888 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129702836 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145236065 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.131911414 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153709569 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.158022615 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148044616 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158360951 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.138801967 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16301651 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165118663 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.155229116 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1494365 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168075919 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135004821 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142592005 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210487224 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16534955 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140520175 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158878748 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167173781 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.163461976 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135619151 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147853991 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202318043 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142047209 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17050043 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138377262 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136652701 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136965245 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181318107 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145368705 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.14441956 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133240849 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.150366571 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183964691 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.141425279 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152366067 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166745196 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132600867 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131843126 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158547663 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136795769 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142210219 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150579284 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13753691 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145375173 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180866781 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157308908 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141800824 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13667094 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149228314 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135480057 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.180402014 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14642487 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.129704973 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.152439602 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177980644 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.266312779 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197957116 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.147709729 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175606553 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178510533 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134548037 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174035245 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155892081 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.133858875 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144809749 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150514528 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14645656 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.161413866 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194359927 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.146562726 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151215523 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164531723 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14876348 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16796373 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148877578 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.145590309 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167613554 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182919654 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.131542551 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.128895194 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13227946 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138503235 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132681177 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142315112 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17386212 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147387696 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170801918 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178293677 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138879635 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168798795 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131677172 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146633619 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.160343553 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163618936 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.16529175 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167186742 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170013077 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148418022 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170883645 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.131804815 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131751374 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.137247734 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148364315 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139193885 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135493829 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159355387 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170016277 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150431376 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14211316 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198232061 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148866301 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17759665 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.130048974 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166811385 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172876789 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157605452 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.176665097 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145364257 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.160325256 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172341972 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159907331 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180164698 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154668708 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155831841 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163146391 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.181221338 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133046912 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139477725 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152594538 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135413311 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151302892 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159670898 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133274772 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137992574 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137735691 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127295796 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151680533 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161053549 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156170856 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157582855 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153479393 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133959853 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136112976 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182475219 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13951864 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.120229229 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147921367 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155551187 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142891023 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161622828 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156626307 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132972412 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30328821 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161420898 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152355484 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158983704 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135558173 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1615374 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147822052 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150229407 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207282272 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142190401 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164991178 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181266719 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138626053 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134496014 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144326429 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143785558 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131566925 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.12765707 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176764771 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141608045 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15469756 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138151955 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159193052 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177415468 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151002587 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.1505754 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139277402 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184764886 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163124635 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191460678 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164456427 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.151221463 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170476697 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132367398 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152914854 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13232217 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173673118 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160310459 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15553236 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.170422495 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197645785 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160730295 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15535065 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139349472 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.154582919 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155345219 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144850328 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174586868 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158401946 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.144870949 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174502455 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138021361 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134374776 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151899324 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291511856 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143507288 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151184297 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.121354474 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285560035 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134421948 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135452643 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149385133 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152738791 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.153837523 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176361811 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155984038 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140391335 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151425986 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135647606 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192512007 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180393678 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159356464 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154465808 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.158831536 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145474721 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141190647 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152522371 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145265726 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143484326 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17419097 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166090048 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159943409 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133599906 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153895862 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154505308 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177484682 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146929248 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139257075 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170575587 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131925199 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1441239 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167054441 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139812191 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153852884 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.167443487 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155786481 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153489562 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154606142 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136434045 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130563426 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138934231 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176282085 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138338009 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.134131098 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153752577 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.133651478 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158472802 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189318889 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134678045 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157557695 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138407 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132102991 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144147929 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175229229 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141851346 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170460042 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159113178 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128609102 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153554257 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143469202 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168643979 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140941567 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138625004 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.144466233 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133183841 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164611565 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171596601 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176785618 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14413274 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156562981 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156240347 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142238761 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169188345 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147664954 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234948601 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150010309 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156560635 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134086909 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165123794 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138076356 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.149827481 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142911953 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153979316 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137494293 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134461298 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153712246 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143099426 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136311734 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139716341 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166909252 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145946226 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177293741 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172428683 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158277579 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164076937 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159786205 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138118533 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.145662915 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152107437 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161892743 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139532794 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133895488 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13596061 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164671131 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.133246012 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151624527 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179677649 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155803796 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154202417 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.12769725 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153761709 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158082363 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156373167 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129477197 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14361758 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167051595 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14567269 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.160179751 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159091345 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140951759 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.154659918 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129200796 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.171023371 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170805331 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.153083227 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135239722 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262175027 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150663674 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203533352 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.132540844 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138259161 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140139842 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169774665 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.153960777 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159938704 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134039672 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142395207 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14130165 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.185490932 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.132879768 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160169895 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165407166 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165904731 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173696886 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140550725 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.258411084 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141609623 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158651688 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.146422468 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132267054 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140307134 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134102344 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140868361 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194926957 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16859847 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.156747241 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.137782502 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138842434 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.170404487 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143081639 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150168581 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140807573 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159223578 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137699452 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.140820705 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138274909 seconds)
  done (took 76.432897568 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.144278915 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.157198915 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.2407964 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.244135072 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140851105 seconds)
  done (took 1.840766614 seconds)
done (took 105.420865447 seconds)
(15/18) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.133670183 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.135145216 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.132936781 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13285786 seconds)
  done (took 1.433719933 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.171103143 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.104671624 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108095996 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.141534106 seconds)
  done (took 1.437678559 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.328516703 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.108211531 seconds)
  done (took 1.365082312 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.151378159 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.142858083 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.140106209 seconds)
  done (took 1.351903187 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138297249 seconds)
  done (took 1.051907072 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128827089 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126251363 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.194252235 seconds)
  done (took 1.362817289 seconds)
done (took 8.919669524 seconds)
(16/18) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.22157476 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.955194713 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.471005411 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.189761554 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.781034891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.447536512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.384354049 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124638146 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157319031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134601479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129219092 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.719613267 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.372425506 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.894778913 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.396372898 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.921258451 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.70714189 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125061602 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125561266 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124680851 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.372965139 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.146500075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125056397 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124360964 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705534955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426458587 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124839716 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.893802669 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.148684775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125464882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.419524605 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129916372 seconds)
  done (took 21.039229806 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.172949254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.150337187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129874164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125304981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.126678471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127435634 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150607376 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126940716 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141017152 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125388807 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.125562067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124714175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.14953415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126603696 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143195848 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126418955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125840765 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12486198 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125452814 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.157182805 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133651829 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136886566 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129042924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125029922 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12696645 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134660059 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.147951754 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126211684 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125845506 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125357115 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126864026 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126561276 seconds)
  done (took 5.200338098 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.174684429 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.168105814 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13035295 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.160011856 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.157046311 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.150485025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.18682439 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126750013 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15420655 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129999345 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13656872 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.152702499 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.143652739 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.134871612 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14200354 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127252512 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125747698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.147865089 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125332114 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126272585 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.129212572 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12525839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125749274 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.147853627 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.128027831 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13698116 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12552428 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12656216 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12668287 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.138603773 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.154037138 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137772496 seconds)
  done (took 5.433168692 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.134034027 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.141635906 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.160194093 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.157669092 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.133238602 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.129168403 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.130864611 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.155858349 seconds)
  done (took 2.070973035 seconds)
done (took 34.660629071 seconds)
(17/18) benchmarking "nullable"...
  (1/2) benchmarking "basic"...
    (1/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(true)")...
    done (took 0.134377273 seconds)
    (2/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}()")...
    done (took 0.135617296 seconds)
    (3/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}()")...
    done (took 0.130537492 seconds)
    (4/77) benchmarking ("get2", "Nullable{BigFloat}()")...
    done (took 0.125110714 seconds)
    (5/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(1.0)")...
    done (took 0.131063928 seconds)
    (6/77) benchmarking ("isnull", "Nullable{Float32}()")...
    done (took 0.136598006 seconds)
    (7/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}()")...
    done (took 0.135098953 seconds)
    (8/77) benchmarking ("get1", "Nullable{Float64}(1.0)")...
    done (took 0.153801547 seconds)
    (9/77) benchmarking ("isnull", "Nullable{BigFloat}(1.0)")...
    done (took 0.130187636 seconds)
    (10/77) benchmarking ("isnull", "Nullable{Int64}()")...
    done (took 0.133569127 seconds)
    (11/77) benchmarking ("isnull", "Nullable{Bool}()")...
    done (took 0.142718537 seconds)
    (12/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(1.0)")...
    done (took 0.154309313 seconds)
    (13/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(1)")...
    done (took 0.148559629 seconds)
    (14/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(1.0)")...
    done (took 0.135143959 seconds)
    (15/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(0.0)")...
    done (took 0.153720778 seconds)
    (16/77) benchmarking ("get2", "Nullable{Float32}()")...
    done (took 0.132548494 seconds)
    (17/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(0.0)")...
    done (took 0.13202864 seconds)
    (18/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(1.0)")...
    done (took 0.132069132 seconds)
    (19/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(0.0)")...
    done (took 0.130782732 seconds)
    (20/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}()")...
    done (took 0.131555776 seconds)
    (21/77) benchmarking ("get2", "Nullable{Float64}()")...
    done (took 0.130777329 seconds)
    (22/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}()")...
    done (took 0.131658397 seconds)
    (23/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(1)")...
    done (took 0.154623835 seconds)
    (24/77) benchmarking ("isnull", "Nullable{Int8}()")...
    done (took 0.130375643 seconds)
    (25/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(1)")...
    done (took 0.132679369 seconds)
    (26/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(1)")...
    done (took 0.133833707 seconds)
    (27/77) benchmarking ("get1", "Nullable{Bool}(true)")...
    done (took 0.131167874 seconds)
    (28/77) benchmarking ("get2", "Nullable{Int8}()")...
    done (took 0.134304477 seconds)
    (29/77) benchmarking ("get2", "Nullable{Int64}()")...
    done (took 0.13031786 seconds)
    (30/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(0.0)")...
    done (took 0.130120845 seconds)
    (31/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(1)")...
    done (took 0.154165128 seconds)
    (32/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(0.0)")...
    done (took 0.145755872 seconds)
    (33/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(false)")...
    done (took 0.134940194 seconds)
    (34/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}()")...
    done (took 0.143882631 seconds)
    (35/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(true)")...
    done (took 0.134273529 seconds)
    (36/77) benchmarking ("isnull", "Nullable{Float32}(1.0)")...
    done (took 0.130124546 seconds)
    (37/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}()")...
    done (took 0.13441976 seconds)
    (38/77) benchmarking ("get2", "Nullable{BigFloat}(1.0)")...
    done (took 0.145929744 seconds)
    (39/77) benchmarking ("isnull", "Nullable{Float64}()")...
    done (took 0.130317343 seconds)
    (40/77) benchmarking ("get2", "Nullable{Bool}(true)")...
    done (took 0.131388025 seconds)
    (41/77) benchmarking ("get1", "Nullable{Float32}(1.0)")...
    done (took 0.13089327 seconds)
    (42/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}()")...
    done (took 0.130864146 seconds)
    (43/77) benchmarking ("get2", "Nullable{Int64}(1)")...
    done (took 0.130003957 seconds)
    (44/77) benchmarking ("isnull", "Nullable{Int64}(1)")...
    done (took 0.129200664 seconds)
    (45/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(1.0)")...
    done (took 0.131361032 seconds)
    (46/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}()")...
    done (took 0.154079334 seconds)
    (47/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(0)")...
    done (took 0.13331768 seconds)
    (48/77) benchmarking ("isnull", "Nullable{BigInt}()")...
    done (took 0.130579121 seconds)
    (49/77) benchmarking ("get2", "Nullable{Float32}(1.0)")...
    done (took 0.131476799 seconds)
    (50/77) benchmarking ("get1", "Nullable{BigInt}(1)")...
    done (took 0.121990845 seconds)
    (51/77) benchmarking ("isnull", "Nullable{Float64}(1.0)")...
    done (took 0.130204933 seconds)
    (52/77) benchmarking ("get1", "Nullable{Int64}(1)")...
    done (took 0.130307875 seconds)
    (53/77) benchmarking ("isnull", "Nullable{BigFloat}()")...
    done (took 0.166094607 seconds)
    (54/77) benchmarking ("get2", "Nullable{Bool}()")...
    done (took 0.13524601 seconds)
    (55/77) benchmarking ("isnull", "Nullable{Bool}(true)")...
    done (took 0.142061424 seconds)
    (56/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}()")...
    done (took 0.134806108 seconds)
    (57/77) benchmarking ("get2", "Nullable{BigInt}()")...
    done (took 0.121616387 seconds)
    (58/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}()")...
    done (took 0.135021554 seconds)
    (59/77) benchmarking ("get2", "Nullable{Float64}(1.0)")...
    done (took 0.130591346 seconds)
    (60/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}()")...
    done (took 0.130626787 seconds)
    (61/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}()")...
    done (took 0.154557804 seconds)
    (62/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(0)")...
    done (took 0.131464711 seconds)
    (63/77) benchmarking ("get1", "Nullable{Int8}(1)")...
    done (took 0.130952923 seconds)
    (64/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(0)")...
    done (took 0.130587308 seconds)
    (65/77) benchmarking ("isnull", "Nullable{BigInt}(1)")...
    done (took 0.130379166 seconds)
    (66/77) benchmarking ("get2", "Nullable{BigInt}(1)")...
    done (took 0.122087868 seconds)
    (67/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(1.0)")...
    done (took 0.130799243 seconds)
    (68/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(0)")...
    done (took 0.157356919 seconds)
    (69/77) benchmarking ("isnull", "Nullable{Int8}(1)")...
    done (took 0.131793238 seconds)
    (70/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}()")...
    done (took 0.132013195 seconds)
    (71/77) benchmarking ("get1", "Nullable{BigFloat}(1.0)")...
    done (took 0.122178452 seconds)
    (72/77) benchmarking ("get2", "Nullable{Int8}(1)")...
    done (took 0.130238501 seconds)
    (73/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(0.0)")...
    done (took 0.13093696 seconds)
    (74/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(0)")...
    done (took 0.143718638 seconds)
    (75/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(false)")...
    done (took 0.134822542 seconds)
    (76/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(1)")...
    done (took 0.1658305 seconds)
    (77/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(0)")...
    done (took 0.137176736 seconds)
  done (took 11.397092015 seconds)
  (2/2) benchmarking "nullablearray"...
    (1/52) benchmarking ("perf_countequals", "Array", "Int64")...
    done (took 0.141772045 seconds)
    (2/52) benchmarking ("perf_countnulls", "Array", "Float32")...
    done (took 0.139462822 seconds)
    (3/52) benchmarking ("perf_countequals", "NullableArray", "Float64")...
    done (took 0.144972862 seconds)
    (4/52) benchmarking ("perf_sum", "NullableArray", "Float64")...
    done (took 0.138763296 seconds)
    (5/52) benchmarking ("perf_countnulls", "Array", "BigFloat")...
    done (took 0.138303149 seconds)
    (6/52) benchmarking ("perf_countnulls", "Array", "Complex{Float64}")...
    done (took 0.136811092 seconds)
    (7/52) benchmarking ("perf_sum", "Array", "BigFloat")...
    done (took 0.133774016 seconds)
    (8/52) benchmarking ("perf_countnulls", "NullableArray", "BigFloat")...
    done (took 0.167395695 seconds)
    (9/52) benchmarking ("perf_countnulls", "NullableArray", "Float64")...
    done (took 0.134844356 seconds)
    (10/52) benchmarking ("perf_countnulls", "NullableArray", "Int64")...
    done (took 0.139134472 seconds)
    (11/52) benchmarking ("perf_countequals", "Array", "Float32")...
    done (took 0.138285153 seconds)
    (12/52) benchmarking ("perf_sum", "NullableArray", "BigFloat")...
    done (took 0.134984062 seconds)
    (13/52) benchmarking ("perf_countnulls", "Array", "Int8")...
    done (took 0.137493613 seconds)
    (14/52) benchmarking ("perf_countequals", "Array", "BigInt")...
    done (took 0.143046162 seconds)
    (15/52) benchmarking ("perf_sum", "Array", "Float64")...
    done (took 0.165756812 seconds)
    (16/52) benchmarking ("perf_all", "Array")...
    done (took 0.199754951 seconds)
    (17/52) benchmarking ("perf_sum", "NullableArray", "Complex{Float64}")...
    done (took 0.145876444 seconds)
    (18/52) benchmarking ("perf_countnulls", "Array", "Bool")...
    done (took 0.146136076 seconds)
    (19/52) benchmarking ("perf_countequals", "NullableArray", "Float32")...
    done (took 0.147803042 seconds)
    (20/52) benchmarking ("perf_countequals", "Array", "Bool")...
    done (took 0.175286817 seconds)
    (21/52) benchmarking ("perf_any", "Array")...
    done (took 0.140939333 seconds)
    (22/52) benchmarking ("perf_countequals", "Array", "Complex{Float64}")...
    done (took 0.141909127 seconds)
    (23/52) benchmarking ("perf_countequals", "NullableArray", "Complex{Float64}")...
    done (took 0.143349175 seconds)
    (24/52) benchmarking ("perf_countequals", "NullableArray", "BigFloat")...
    done (took 0.14489099 seconds)
    (25/52) benchmarking ("perf_countequals", "NullableArray", "Int64")...
    done (took 0.139992704 seconds)
    (26/52) benchmarking ("perf_countnulls", "NullableArray", "BigInt")...
    done (took 0.14026139 seconds)
    (27/52) benchmarking ("perf_countnulls", "NullableArray", "Complex{Float64}")...
    done (took 0.161417554 seconds)
    (28/52) benchmarking ("perf_sum", "NullableArray", "Bool")...
    done (took 0.143347036 seconds)
    (29/52) benchmarking ("perf_sum", "NullableArray", "BigInt")...
    done (took 0.133497489 seconds)
    (30/52) benchmarking ("perf_sum", "Array", "Complex{Float64}")...
    done (took 0.139379094 seconds)
    (31/52) benchmarking ("perf_all", "NullableArray")...
    done (took 0.136221338 seconds)
    (32/52) benchmarking ("perf_sum", "NullableArray", "Int8")...
    done (took 0.142056999 seconds)
    (33/52) benchmarking ("perf_countequals", "NullableArray", "Bool")...
    done (took 0.142014548 seconds)
    (34/52) benchmarking ("perf_countequals", "Array", "Int8")...
    done (took 0.162446501 seconds)
    (35/52) benchmarking ("perf_sum", "Array", "Int64")...
    done (took 0.139646832 seconds)
    (36/52) benchmarking ("perf_sum", "NullableArray", "Int64")...
    done (took 0.140041483 seconds)
    (37/52) benchmarking ("perf_countnulls", "Array", "Int64")...
    done (took 0.133937446 seconds)
    (38/52) benchmarking ("perf_countnulls", "NullableArray", "Bool")...
    done (took 0.135102437 seconds)
    (39/52) benchmarking ("perf_sum", "Array", "Bool")...
    done (took 0.150921937 seconds)
    (40/52) benchmarking ("perf_countequals", "Array", "Float64")...
    done (took 0.143220174 seconds)
    (41/52) benchmarking ("perf_countnulls", "Array", "BigInt")...
    done (took 0.146086815 seconds)
    (42/52) benchmarking ("perf_any", "NullableArray")...
    done (took 0.165537139 seconds)
    (43/52) benchmarking ("perf_countequals", "NullableArray", "Int8")...
    done (took 0.143370205 seconds)
    (44/52) benchmarking ("perf_countequals", "Array", "BigFloat")...
    done (took 0.139352119 seconds)
    (45/52) benchmarking ("perf_countequals", "NullableArray", "BigInt")...
    done (took 0.145425352 seconds)
    (46/52) benchmarking ("perf_sum", "Array", "Float32")...
    done (took 0.138014818 seconds)
    (47/52) benchmarking ("perf_countnulls", "NullableArray", "Float32")...
    done (took 0.136184248 seconds)
    (48/52) benchmarking ("perf_countnulls", "NullableArray", "Int8")...
    done (took 0.135091978 seconds)
    (49/52) benchmarking ("perf_sum", "Array", "Int8")...
    done (took 0.161119427 seconds)
    (50/52) benchmarking ("perf_sum", "Array", "BigInt")...
    done (took 0.131804133 seconds)
    (51/52) benchmarking ("perf_sum", "NullableArray", "Float32")...
    done (took 0.139064 seconds)
    (52/52) benchmarking ("perf_countnulls", "Array", "Float64")...
    done (took 0.133310622 seconds)
  done (took 8.468220542 seconds)
done (took 20.786966098 seconds)
(18/18) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.361836164 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.153181802 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.185890614 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.236581116 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.247420778 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.187065251 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.180080302 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.183097986 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.080061933 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.23428347 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.172128888 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.366767823 seconds)
done (took 6.525607061 seconds)
RUNNING BENCHMARKS...
(1/18) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.03870866 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.055787558 seconds)
    (2/2) benchmarking "String"...
    done (took 1.175995903 seconds)
  done (took 3.168570417 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.056109275 seconds)
    (2/2) benchmarking "String"...
    done (took 1.105982598 seconds)
  done (took 3.082777101 seconds)
  (4/5) benchmarking "replace"...
  done (took 1.941257183 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 1.928926287 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.300851223 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 1.942922611 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 1.931950047 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.931075049 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.934653391 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.948816788 seconds)
  done (took 13.843496199 seconds)
done (took 24.995566639 seconds)
(2/18) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 1.939843238 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.222934492 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.21073834 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 1.930846428 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 1.933855745 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 1.941744769 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 1.934549036 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 1.975269582 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 1.939618466 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 1.939457902 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.260577321 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.210565694 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 1.9403963 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.374824924 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 1.939766599 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 1.937544593 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 1.935530689 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.272117285 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 1.932497181 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 1.982288148 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 1.935227104 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 1.936085962 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 1.940195596 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 1.960137564 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.03296868 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 1.956818954 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 1.985385804 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 1.931313727 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.265931294 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 1.95049872 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 1.989642887 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 1.933861771 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 1.980497888 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 1.93200537 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.944721058 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 1.936111386 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.239660288 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.041837659 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 1.939714403 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 1.945710186 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.230728961 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.942611628 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 1.931899497 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 1.936816791 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 1.936550993 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 1.943696714 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 1.957502811 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.57714841 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 1.943301031 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 1.937534526 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 1.95970005 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.35618865 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 1.945467781 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 1.952704444 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 1.931271139 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.277756574 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 1.936775905 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 1.989823821 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 1.957413098 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 1.947215808 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 1.931202871 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 1.92963545 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.006442625 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 1.944367992 seconds)
  done (took 127.873759894 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 1.930569581 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 1.938913727 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 1.939155849 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 1.938941991 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 1.946504545 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 1.929749369 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.93447605 seconds)
    (8/36) benchmarking "gemv"...
    done (took 1.932994288 seconds)
    (9/36) benchmarking "syr!"...
    done (took 1.937504249 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 1.939699869 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 1.938459125 seconds)
    (12/36) benchmarking "her!"...
    done (took 1.938298237 seconds)
    (13/36) benchmarking "trsv"...
    done (took 1.948219755 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.87496324 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.931093845 seconds)
    (16/36) benchmarking "herk!"...
    done (took 1.954344055 seconds)
    (17/36) benchmarking "trmv"...
    done (took 1.938056918 seconds)
    (18/36) benchmarking "symv"...
    done (took 1.931661815 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.94926577 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.932858918 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 1.951699529 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 1.932989217 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 1.93254461 seconds)
    (24/36) benchmarking "symv!"...
    done (took 1.931663448 seconds)
    (25/36) benchmarking "symm"...
    done (took 1.956778755 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.000969682 seconds)
    (27/36) benchmarking "syrk"...
    done (took 1.941992854 seconds)
    (28/36) benchmarking "trsm"...
    done (took 1.954770164 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.933338844 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 1.931109972 seconds)
    (31/36) benchmarking "gemm"...
    done (took 1.959584731 seconds)
    (32/36) benchmarking "symm!"...
    done (took 1.940773645 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.393347698 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.807635761 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 1.943861983 seconds)
    (36/36) benchmarking "trmm"...
    done (took 1.949185635 seconds)
  done (took 70.105491723 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.946622658 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.932086077 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.93252843 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.955133976 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.951617775 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.358209004 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.360354646 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.967739694 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.320468247 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.031314833 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 6.948409463 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.054980343 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.9533719 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.01684637 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.941976916 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.937957219 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.944671512 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.955634394 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.949280727 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.929788344 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.358667994 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.953333933 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.108858074 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.086278523 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.96225916 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.954966173 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.333102703 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.932686855 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.953563185 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.292137225 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.954405682 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.965381995 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.159746432 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.376889215 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.043331521 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.932326862 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.954772359 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.930951735 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.942823422 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.206490299 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.931326605 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.28034141 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.943153584 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.933608027 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.44942948 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.952993417 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.360181163 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.939316521 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.776285286 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.955474126 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.933353043 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.196156921 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.435242399 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.936550158 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.936093128 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.934546262 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.951192457 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.977086443 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.959357032 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.111153062 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.034104589 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.932326111 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.935013694 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.957764407 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.931424721 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.932339874 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.145287168 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.995883472 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.931331754 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.358753397 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.967975183 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.148067749 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.020629095 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.044461566 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.937946228 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.934354827 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.953083562 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.935518573 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.951413958 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.032691277 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.946185222 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.279559398 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.07961163 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.936570003 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 6.951517059 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.025042444 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.943730992 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.170216539 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.946264541 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.949722972 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.571037625 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.017631339 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.950461767 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.943623505 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.957883164 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.268533298 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.359009279 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.085811917 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.935642279 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.579075395 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.949358193 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.267486849 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.949906172 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.361949173 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.441436591 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.936052691 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.033838389 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.080811171 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.936460681 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.941920257 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 6.947446083 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.937581254 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.986832723 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.949769543 seconds)
  done (took 332.337768729 seconds)
done (took 531.24064835 seconds)
(3/18) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.776772145 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.732773731 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.868470899 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.747220232 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.724229265 seconds)
  done (took 9.77165146 seconds)
done (took 10.694088328 seconds)
(4/18) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.931098057 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.117718126 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.971331391 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.170771668 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.967659767 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.127971198 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.695262322 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.984384605 seconds)
  done (took 10.888639663 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.27274288 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.951503148 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.267218374 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.956393561 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.957097064 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.020282583 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.951660433 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.28143216 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.957359202 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.284981539 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.952005586 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.959900067 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.952662061 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.021308292 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.020665146 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.021170919 seconds)
  done (took 17.753877118 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.931125521 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.974173839 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.973422071 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.97505681 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.992156918 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.299944594 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.784123584 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.974299634 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.956712969 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.988677807 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.033985962 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.964397475 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.960988063 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.953765495 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.201559562 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.242419999 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.955634699 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.135528747 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.702835764 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.016254716 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.976507088 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.955707169 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.971541332 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.969127458 seconds)
  done (took 27.816298855 seconds)
done (took 57.380259418 seconds)
(5/18) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.932602559 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.943281435 seconds)
  done (took 4.797329261 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.270550424 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.302900699 seconds)
  done (took 3.498473992 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.521440659 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.969449612 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.732681933 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.437590202 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.956600838 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.951170592 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.606805236 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.960092249 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.950970415 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.954601353 seconds)
  done (took 12.966299345 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.962728217 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.116015411 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.127058147 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.064887693 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.105776792 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.992925373 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.977635855 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.963788276 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.15879373 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.962175392 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.097781433 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.143760929 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.086436919 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.180070565 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.984405578 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.113447886 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.161106296 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.081505554 seconds)
  done (took 20.205067766 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.956578517 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.960571869 seconds)
  done (took 2.840490576 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.0753294 seconds)
    (2/7) benchmarking "second"...
    done (took 0.981069308 seconds)
    (3/7) benchmarking "month"...
    done (took 1.046392368 seconds)
    (4/7) benchmarking "year"...
    done (took 1.035469494 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.979007329 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.960882339 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.991889038 seconds)
  done (took 7.993010565 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.547241872 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.203224494 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.33834833 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.552086201 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.670183143 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.9369463 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.67347278 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.93760685 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.937605634 seconds)
  done (took 15.719611939 seconds)
done (took 68.942669412 seconds)
(6/18) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 1.931197691 seconds)
  (2/7) benchmarking "parseint"...
  done (took 1.934032296 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 1.942100437 seconds)
  (4/7) benchmarking "pisum"...
  done (took 1.946294034 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.335767484 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 1.937720994 seconds)
  (7/7) benchmarking "mandel"...
  done (took 1.933493605 seconds)
done (took 13.887154178 seconds)
(7/18) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 1.932618887 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.93740693 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 1.933242352 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 1.938061505 seconds)
  done (took 8.663176348 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.778252281 seconds)
    (2/2) benchmarking "read"...
    done (took 1.245367632 seconds)
  done (took 3.948255776 seconds)
done (took 13.534153937 seconds)
(8/18) benchmarking "scalar"...
  (1/16) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.016298229 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.004458516 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.019309215 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.011504094 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.070507508 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.01517308 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.019899806 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.973660574 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.022361518 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.984270131 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.969439111 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.069542867 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.970259739 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.066717723 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.97737788 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.069072471 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.023355848 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.973701473 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.976379587 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.076907873 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.00961204 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.97380038 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.066754935 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.966273256 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.060141454 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.97063491 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.984560403 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.000498201 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.974782602 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.055378114 seconds)
  done (took 31.298431138 seconds)
  (2/16) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.939482761 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.942929236 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.955914367 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.012815627 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.955862411 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.953811312 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.937158677 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.951441862 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.952930736 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.952293732 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.961599276 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.953095769 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.95224145 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.956315848 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.952957092 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.965649196 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.074892128 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.953362244 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.95199165 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.963807636 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.970539811 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.954077031 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.952325964 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.959178795 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.95230172 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.941130926 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.953824865 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.953046173 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.955810287 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.952996796 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.972319524 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.975463418 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.95847542 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.022970284 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.990085887 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.961496763 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.937830803 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.944791621 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.963592421 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.936949596 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.936982577 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.953938368 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.951846916 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.976280803 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.956818941 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.954584719 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.955442568 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.957681654 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.95183772 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.956449669 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.954427678 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.952130316 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.972622918 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.954500977 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.952428919 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.941886116 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.952078396 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.937369794 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.953013797 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.953515102 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.953272269 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.937776855 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.983086655 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.954625142 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.199700883 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.983491706 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.951409221 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.959546676 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.954740632 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.084499237 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.960387365 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.077686909 seconds)
  done (took 72.462475273 seconds)
  (3/16) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.97159979 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.827776582 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.975396799 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.81947738 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.935759034 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.853104339 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.978726822 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.813674015 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.976501662 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.971163449 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.974579853 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.971096656 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.940221526 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.974815433 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.975787563 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.93044081 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.979632481 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.934365428 seconds)
  done (took 25.731146281 seconds)
  (4/16) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.973953507 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.982056692 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.016443333 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.016620623 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.982519959 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.966652028 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.997467132 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.978137437 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.863147242 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.970644991 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.974119069 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.971744205 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.931429167 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.001537597 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.04700673 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.974495902 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.98111891 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.006652686 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.972984789 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.972794844 seconds)
  done (took 22.509383293 seconds)
  (5/16) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.027428756 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.008701663 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.007435385 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.027457747 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.009380298 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.019540172 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.023734723 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.011390431 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.014193133 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267788649 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.010711488 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.008607264 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.026166752 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.010372824 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.007149702 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.026036027 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.025423237 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.026572067 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.0131864 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.011270923 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272514761 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.010295609 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.02791015 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.009321797 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.011416347 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.008346419 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.025108416 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.008782913 seconds)
  done (took 29.883522587 seconds)
  (6/16) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.989391672 seconds)
    (2/2) benchmarking "in"...
    done (took 0.985539188 seconds)
  done (took 2.899568325 seconds)
  (7/16) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.934593842 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.964836078 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.956137033 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.979163257 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.957692752 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.933931476 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.953667245 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.967048101 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.934689838 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.948897127 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.951586335 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.942699655 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.965197092 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.940268814 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.949281854 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.952660651 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.959627782 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.031089467 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.960318068 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.953710784 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.96338746 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.952648861 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.940736549 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.577915926 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.932498107 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.9591196 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.942777719 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.626646713 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.947354666 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.939370779 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.970631232 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.480293179 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.957545364 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.961399932 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.953577232 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.954850046 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.931994333 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.946021868 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.950027293 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.969215993 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.045081794 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.955703284 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.933733995 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.939965199 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.956311269 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.974349246 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.961552346 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.958574359 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.949581649 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.95527092 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.963016126 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.943502858 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.957665133 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.937960495 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.959110236 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.941571717 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.960603893 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.936919813 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.954924493 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.952603562 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.825043808 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.939197536 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.96364087 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.9862959 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.934653653 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.946171287 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.939032264 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.977955279 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.805062048 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.95599901 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.933452311 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172036371 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.970304453 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.978561108 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.967607222 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.960952977 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.932641188 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.96762976 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.933023868 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.953005091 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.978554426 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.082066423 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.936279342 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.948041169 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.94331571 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.051019579 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.954719826 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.019559842 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.933348638 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.955536628 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.960982006 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.957619033 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.932198836 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.960600638 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.931961471 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.973253077 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.935327883 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.94201302 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.966123308 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.97447249 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.957263683 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.944439 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.960645178 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.082607162 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.076989337 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.932433526 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.967918662 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.933433947 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.942511241 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.736285011 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.957397262 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.958820821 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.939927672 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.967771983 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.947398681 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.932393975 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.972128068 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.954133362 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.959477027 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.958480855 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.93405008 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.945900709 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.974990905 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.951743189 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.955676985 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.968229554 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.957381437 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.934794279 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.961247586 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.95539806 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.95660714 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.933368872 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.964856909 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.933468288 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.084777262 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.953323919 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.961543803 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.957109283 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.024050183 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.941723845 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.939668073 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.944076276 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.960739977 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.962090704 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.956982307 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.933728011 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.958051534 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.93931402 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.961157829 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.941025193 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.967930547 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.964011734 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.94073481 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.960018454 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.93301005 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.972446 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.943028602 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.954956254 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.957832352 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.98257186 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.954409488 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.769917408 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.946662612 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.966101234 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.945431781 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.942988534 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.970347047 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.954047848 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.981286778 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.934490315 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.964989749 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.936829603 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.961052515 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.959820952 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.95854734 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.97814919 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.93236297 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.053636468 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.020420794 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.957916661 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.935493858 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.959271055 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.961618829 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.932907176 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.969696236 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.975151699 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.954946954 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.932927129 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.950676814 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.080059147 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.944693433 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.707573635 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.163568422 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.944638175 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.949149011 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.966686736 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.951304536 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.031369264 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.949828329 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.035613782 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.959892104 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.956312314 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.936745929 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.977335793 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.933397668 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.971730889 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.958499423 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.98577826 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.7680359 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.046520114 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.961805275 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.934326776 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.951958221 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.95836573 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.956915917 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.956944167 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.933196507 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.969739417 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.937264085 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.949022616 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.970084739 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.958266563 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.937041309 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.962980965 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.942842505 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.948562003 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.947904718 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.956109152 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.958025902 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.935024357 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.94478248 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.945134921 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.947707478 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.955984897 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.946154075 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.95624397 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.951731026 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.955823917 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.96053897 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.954507039 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.943124734 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.959274905 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.427911225 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.956427521 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.954127503 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.949374242 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.046320042 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.951317593 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.972751299 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.93132649 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.966354934 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.955272286 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.965367717 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.933022804 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.975884318 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.940835856 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.943822453 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.967112388 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.974977417 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.94688732 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.964934541 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.984957114 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.954386308 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.940272128 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.964922579 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.945880406 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.93814776 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.961230556 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.963383769 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.976007132 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.931632575 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.968123393 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.938493135 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.170844426 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.963121359 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.115382368 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.959753983 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.961506244 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.937435495 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.957706257 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.93916241 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.946282217 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.955324715 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.945539133 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.945936761 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.962053403 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.932408981 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.97367261 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.949989353 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.956850188 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.972266111 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.978221993 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.934887455 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.033145961 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.957376973 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.96398508 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.935618356 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.959607669 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.932590487 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.946307148 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.944931177 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.95401789 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.939237804 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.968618668 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.947007258 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.94330265 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.941119371 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.952914053 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.941006329 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.969524998 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.934162988 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.000098415 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.933799833 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.957114318 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.960570608 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.946525531 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.968865929 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.933770939 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.965759011 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.958961498 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.931897144 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.935309695 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.969735172 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.934980728 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.960028056 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.933835014 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.963683105 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.967915794 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.954059258 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.954611531 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.044128802 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.034308115 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.968497651 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.93194163 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.941797594 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.955170317 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.933385563 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.957533093 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.98098604 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.953882876 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.936174252 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.941027003 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.983068439 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.948288207 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.952453719 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.946581426 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.957563358 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.984675913 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.977276846 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.353727485 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.954068845 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.93305032 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.938342299 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.984518174 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.964104383 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.934191122 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.969453505 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.934142478 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.956452267 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.939514247 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.958302221 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.951351664 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.934867844 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.944495882 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.947884112 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.96353564 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.939802014 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.940487932 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.958005114 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.94417512 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.937355367 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.954334184 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.932131025 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.944001304 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.976475249 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.932144051 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.975842513 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.964180517 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.934121694 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.964121437 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.959673777 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.944962115 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.938894649 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.953451809 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.967456118 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.933808058 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.966551206 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.942531424 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.957301269 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.962992125 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.956079338 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.957121264 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.953119866 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.933646668 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.962622806 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.947367687 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.960958971 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.933698035 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.949989171 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.969185303 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.958860263 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.963652987 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.935137228 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.042215394 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.413810583 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.934606811 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.945866958 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.040257881 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.943678183 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.957460121 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.937117047 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.961818944 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.946445005 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.957799813 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.957880128 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.967773518 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.943835326 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.944609924 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.972324195 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.985311123 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.954168403 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.941646771 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.986112829 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.935198247 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.949589359 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.965442088 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.946757639 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.964763837 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.941109385 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.949073218 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.940136028 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.964935002 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.956482366 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.956225936 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.934003467 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.944151183 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.945349997 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.971137756 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.958883162 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.939304851 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.976801431 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.934787776 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.960572403 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.939228349 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.944320631 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.945011508 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.969446432 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.934062591 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.805017705 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.960523466 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.970767237 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.935843957 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.944877786 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.943234502 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.94446251 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.940290298 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.971447458 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.934602262 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.977192621 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.947978092 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.957860043 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.98017134 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.938383354 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.944636496 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.958140378 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.962586387 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.936586293 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.774487778 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.935383825 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.971267899 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.954311389 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.961183367 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.95793817 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.953538413 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.968422746 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.955439311 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.955359974 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.94554184 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.956974833 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.974737731 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.93917286 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.968921337 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.945533148 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.940384725 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.947014485 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.961238646 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.95518837 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.953658505 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.953304379 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.934845847 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.96471668 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.933594269 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.956281119 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.9420485 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.955175153 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.962911373 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.9572886 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.94900564 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.954854611 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.958151509 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.971675329 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.933764954 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.957893896 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.953963933 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.962734952 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.958233118 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.947109057 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.953841914 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.96233078 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.970125757 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.954835601 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.9387135 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.941753974 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.965823232 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.932939212 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.947798438 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.951350077 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.980083747 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.95262258 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.962821292 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.951167958 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.952544487 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.968837878 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.955634863 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.948614233 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.939127311 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.946643839 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.963864919 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.953687873 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.939906104 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.957407148 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.970947545 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.96058742 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.93518291 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.956473411 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.043699116 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.951987179 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.943190372 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.965529368 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.941155792 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.963016866 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.9509582 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.977471579 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.933754113 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.966728015 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.962018482 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.033255634 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.02736245 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.957709373 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.947903311 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.946616622 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.831512045 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.953154263 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.935702285 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.941901199 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.977500897 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.954543418 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.937922516 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.959485288 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.954416891 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.955349932 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.933612568 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.175248973 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.972898494 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.970538811 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.958030852 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.964123948 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.933877614 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.950214978 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.951732289 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.964877554 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.957759771 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.980352948 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.93827587 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.963365677 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.490474854 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.943335384 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.936503714 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.950663431 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.962877396 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.834520451 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.97269513 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.9520335 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.93888177 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.980754024 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.959640148 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.934527383 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.10223175 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.068871087 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.935749856 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.948294416 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.03296101 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.620748892 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.955291972 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.941271885 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.964073635 seconds)
  done (took 902.512539186 seconds)
  (8/16) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.291789772 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.986694346 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.968383656 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.974021477 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.034893867 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.98328821 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.97043635 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.9824159 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.980758051 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.01106184 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.969334914 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.968712004 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.008762358 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.304890989 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.043401055 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.015188713 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.971231046 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.980665711 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.970688412 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.980548278 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.011842043 seconds)
  done (took 22.337716427 seconds)
  (9/16) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.95896304 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.959536839 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.944327206 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.970686598 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.957456793 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.955154988 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.023113759 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.953095465 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.961109464 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.945381007 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.95142412 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.943297318 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.9523549 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.95912211 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.934540507 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.963532204 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.96336214 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.955198181 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.9581847 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.955458084 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.946450891 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.961150028 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.964867695 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.948944708 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.039681228 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.957921236 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.955438614 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.955093452 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.935598449 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.964642622 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.966473471 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.934193997 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.948778443 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.952786264 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.94142871 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.96781511 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.955087934 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.955579292 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.954003624 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.946369654 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.967543358 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.957638356 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.117630457 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.971886679 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.957857509 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.940432407 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.963453596 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.955287567 seconds)
  done (took 62.084941165 seconds)
  (10/16) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.977783873 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.079620198 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.996499425 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.997579402 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.078418662 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.993327746 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.994517297 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.989049297 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.990621576 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.98285977 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.087446249 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.133248006 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.995809232 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.989150945 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.034937723 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.990747812 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.000128906 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.992172048 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.004076276 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.001185723 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.002990291 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.990668898 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.068343387 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.127106417 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.005793233 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.995650466 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.995497167 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.99522296 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.126790095 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.004283991 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.989800424 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.990766315 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.079151781 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.087205161 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.001110993 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.982417988 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.078193752 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.999039218 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.990683478 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.99129038 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.99640016 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.988159051 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.985739171 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.085755654 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.996042096 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.079875438 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.990846175 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.98277505 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.132108293 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.985319765 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.996304374 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.132621002 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.993392227 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.991197153 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.991033054 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.074282353 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.991445429 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.983567777 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.982519592 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.126841087 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.991543429 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.992482306 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.132953613 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.979296758 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.998897441 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.132646163 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.078619147 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.992754135 seconds)
  done (took 70.534026696 seconds)
  (11/16) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.969118835 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.059107153 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.100012298 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.106107598 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.05340936 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.056690047 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.055803821 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.053863077 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.05121378 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.062713553 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.048748669 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.032548584 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.016918536 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.029304749 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.059437312 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.050588303 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.05109778 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.052620843 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.057826897 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.068990523 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.050957988 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.100273901 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.052308752 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.102766013 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.308440443 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.017299439 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.05376797 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.056644134 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.105396044 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.05449355 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.308097 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.056484748 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.05389784 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.104397693 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.313557726 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.05690035 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.968347323 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.05478711 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.059180603 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.054510649 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.02899707 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.10234489 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.055444996 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.022767398 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.051568546 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.054092453 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.106106498 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.31006176 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.025971842 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.063893233 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.049914301 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.103608914 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.053853392 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.055477107 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.102713538 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.047733495 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.121323019 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.103417227 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.056340454 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.101056538 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.102567538 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.056601726 seconds)
  done (took 67.682507424 seconds)
  (12/16) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.039261556 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.975620638 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.981709015 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.963741851 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.993974663 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.962053922 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.981016642 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.981817207 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.975885751 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.335455512 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.978685759 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.004704674 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.985287486 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.960041239 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.962049702 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.007310098 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.975111099 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.987217263 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.978347633 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.963065568 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.600521641 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.956992336 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.98752132 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.962613011 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.013544568 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.576074976 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.001707631 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.00700278 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.961569057 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.971782903 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.027567504 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.367382481 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.979416724 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.996941112 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.961977581 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.978403179 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.979320541 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.969667525 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.005185756 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.97860988 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.968094955 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.038174189 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.97754631 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.963152712 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.98768064 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.969553572 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.980893551 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.356958333 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.95789221 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.040231932 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.975091443 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.965449365 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.97104933 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.348628189 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.983739398 seconds)
  done (took 57.693386598 seconds)
  (13/16) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.98278725 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.996584886 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.973654014 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.976455088 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.995399865 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.981163487 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.976012417 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.947986672 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.978745982 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.974267088 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.014509058 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.887839414 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.97730395 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.991635018 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.010250242 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.980827142 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.971238793 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.048633932 seconds)
  done (took 20.592494721 seconds)
  (14/16) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.475131814 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.289169119 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.310333918 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.935373704 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.312719243 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.291596578 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.385313526 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.380078167 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.154964219 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.153946267 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.952440142 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.492070196 seconds)
  done (took 18.060539436 seconds)
  (15/16) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.984583745 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.011597902 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.961306939 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.98387252 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.008971179 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.013542685 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.020945317 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.018940377 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.003994155 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275152873 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.022006726 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.020613229 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.004449493 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.065050597 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.009414621 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.010637995 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.021252547 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.022151529 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.984835006 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.032126276 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.026694439 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.005591893 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.024225071 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.014600218 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.021328443 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.060940692 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.00421475 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290890493 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.020229858 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.00640435 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.006945147 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.016718265 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.021951751 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30389421 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.987469119 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.010401989 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.018647079 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.018333182 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.008135682 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.056040485 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.976557237 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.005248046 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.005385698 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.029054004 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.005265696 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.026986512 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.02220644 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.018289793 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.015883262 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298131965 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.011644149 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.055477693 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.006470482 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.020740586 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.005769047 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29608083 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284292177 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.055870719 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.005496104 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284812524 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.060497052 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.018597497 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.053324806 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29232799 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.010342857 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.061023787 seconds)
  done (took 70.26305759 seconds)
  (16/16) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.057267147 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.967930467 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.012237524 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290154604 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.060301324 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.021478947 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.020126349 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.019952438 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.024442695 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.993229384 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.024304141 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.026963866 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.056615248 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.062968352 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.025476567 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.019127273 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.034203047 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.055911129 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.993380823 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296066843 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.018831967 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.057565027 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.060501602 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.056754441 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267348052 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.01159085 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.016353417 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.021397516 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.022170739 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.02399728 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.02697385 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.024434015 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.062180743 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.968011328 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.056880424 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.024129729 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.019840412 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.038799845 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.021190055 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.011266205 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.066058446 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.017744193 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.022157064 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.022226746 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282217743 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.019440776 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.019168299 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.992846339 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.018677089 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.992827496 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286120057 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268478797 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297207234 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.057757316 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.019319835 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.026898481 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.020009938 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.014131641 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.031720274 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.013204104 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.061590481 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.022967332 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295834084 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.024219362 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.013083818 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.054925015 seconds)
  done (took 70.771005029 seconds)
done (took 1548.240778436 seconds)
(9/18) benchmarking "sparse"...
  (1/4) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.106140767 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.059860782 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.935365605 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 1.96295581 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.957897164 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 1.9553308 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 1.963134419 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.388217402 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.429806055 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.260299004 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.969223661 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.142469247 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 1.991125508 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.601729951 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.97108279 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.050421041 seconds)
  done (took 26.674693903 seconds)
  (2/4) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.938522598 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.940422755 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.857297598 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.935781951 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.943634347 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.942438794 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.317022627 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.944398471 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.936836881 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.679882033 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.955020913 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.943529835 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.946423663 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.821498427 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.934477457 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.899611576 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.587276318 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.935924459 seconds)
  done (took 34.390378397 seconds)
  (3/4) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.951033049 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 1.956507864 seconds)
  done (took 4.834040755 seconds)
  (4/4) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.941098718 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.956077178 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.938273329 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.939208471 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 1.938571947 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 1.934833162 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.940636774 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 1.940391738 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 1.93450938 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.824402254 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.942895143 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.949126604 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.94508554 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.944135183 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.035857435 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.356552104 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.072418386 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.000618454 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.996116797 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.945354612 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.946226024 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.483935666 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.287652265 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.03905488 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.822905786 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.939699975 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.936737363 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.935124703 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.071985341 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.00250272 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.935507023 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.940171185 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.94582532 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.6946548 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.452262439 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 1.941459397 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.93380938 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.935685681 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.016493454 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.086785309 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.948330519 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.947277372 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 1.939555951 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.425502116 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.587161542 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.698964327 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 1.938178599 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.94772823 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.939212317 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.464093388 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.936471626 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.947116263 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.300327324 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.72665989 seconds)
  done (took 92.523140253 seconds)
done (took 159.348128987 seconds)
(10/18) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 1.939206672 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 1.940641622 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 1.942780922 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 1.941934109 seconds)
  done (took 8.691410721 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.113186191 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.874273351 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.032357148 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.771569899 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.054858761 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.94011728 seconds)
  done (took 9.715550852 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 1.939859785 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 1.934362618 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 1.937248606 seconds)
  done (took 6.741021986 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.943191125 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 1.838333199 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.223708721 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 1.938448562 seconds)
  done (took 7.873728446 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.980157386 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.955613651 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.956059075 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.965291288 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.971769722 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.074251073 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.962834688 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.004815467 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.97391922 seconds)
  done (took 9.774675817 seconds)
done (took 43.724271452 seconds)
(11/18) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.13959861 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.050641001 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.948128949 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.777420821 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.762689371 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.525536564 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.057866976 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.764346324 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.710386973 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.741524797 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.519836218 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.571170179 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.102903779 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.690274747 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.224431422 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.769134099 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.937348027 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.793968832 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.938982389 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.93489156 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.892283397 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.778751011 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.14058662 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.754209724 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.04122786 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.044436643 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.826456638 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.78580526 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.655018282 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.935492988 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.787704498 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.835684731 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.883733147 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.703180149 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860958947 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.753017103 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.769315911 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.050858986 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.058159344 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.689953464 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.748095824 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.867865718 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.934651647 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.935014395 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.733943275 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.140352977 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.041911564 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.123783004 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.786357966 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.497068805 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.146069816 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.84968134 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.78163213 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.496866336 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.790400417 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.121076818 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.93501078 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.147033554 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.356242075 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.764476274 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.232450315 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.140798406 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.814515591 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.039908466 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.343466865 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.116738125 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.93474075 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.935771131 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.658852691 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.806326741 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.896000825 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.657434696 seconds)
done (took 114.922955476 seconds)
(12/18) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.063606184 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 1.940937255 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.078800916 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.326589378 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.099929947 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.069493022 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.036643232 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.841937 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.055446021 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.860442228 seconds)
    (11/66) benchmarking ("rand!", "RandomDevice", "large IntSet")...
    done (took 1.938949686 seconds)
    (12/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 1.942288472 seconds)
    (13/66) benchmarking ("rand!", "ImplicitRNG", "large IntSet")...
    done (took 1.204092442 seconds)
    (14/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.068454312 seconds)
    (15/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.339838485 seconds)
    (16/66) benchmarking ("rand!", "MersenneTwister", "large IntSet")...
    done (took 1.207823303 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.029669594 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.74360085 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.840939357 seconds)
    (20/66) benchmarking ("rand", "ImplicitRNG", "small IntSet")...
    done (took 1.934686255 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 1.94112414 seconds)
    (22/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.151723704 seconds)
    (23/66) benchmarking ("rand!", "ImplicitRNG", "small IntSet")...
    done (took 1.935221375 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.862679526 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 1.940838812 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 1.937613488 seconds)
    (27/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.195128536 seconds)
    (28/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.750991005 seconds)
    (29/66) benchmarking ("rand", "MersenneTwister", "small IntSet")...
    done (took 1.933746845 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 1.943158991 seconds)
    (31/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.75226517 seconds)
    (32/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.935788396 seconds)
    (33/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.942690247 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large IntSet")...
    done (took 1.940402267 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.943379051 seconds)
    (36/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.111008856 seconds)
    (37/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.933759934 seconds)
    (38/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.065290729 seconds)
    (39/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.071248681 seconds)
    (40/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.07677739 seconds)
    (41/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.940205412 seconds)
    (42/66) benchmarking ("rand!", "RandomDevice", "small IntSet")...
    done (took 1.937230551 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 1.93773602 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 1.937854724 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.19499336 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.736435145 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.050670932 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.941248908 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 1.945668949 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.942924627 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.742188382 seconds)
    (52/66) benchmarking ("rand", "MersenneTwister", "large IntSet")...
    done (took 1.21113507 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.93783372 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.735139048 seconds)
    (55/66) benchmarking ("rand", "RandomDevice", "small IntSet")...
    done (took 1.939353387 seconds)
    (56/66) benchmarking ("rand!", "MersenneTwister", "small IntSet")...
    done (took 1.934538108 seconds)
    (57/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.954564982 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.853191919 seconds)
    (59/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.843600082 seconds)
    (60/66) benchmarking ("rand", "ImplicitRNG", "large IntSet")...
    done (took 1.214752249 seconds)
    (61/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.737623878 seconds)
    (62/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.064401507 seconds)
    (63/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.859762939 seconds)
    (64/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.857437713 seconds)
    (65/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.154084332 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.734500765 seconds)
  done (took 107.266312041 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.240618634 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.262012969 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.472418247 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.941155717 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.254972017 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.465290905 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.938719803 seconds)
  done (took 11.50503966 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.8893807 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.619905143 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.264871644 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.263960795 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.721871517 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.123607072 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.771235328 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.081682742 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.94129419 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.307025095 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.900190493 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.824967478 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.942144028 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 1.937383211 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.258018136 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.076963087 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.201368116 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.913092573 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.752075608 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.146555352 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.940699685 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.941112024 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.274965608 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.074981119 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.866894186 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.898288348 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.706204862 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.942014639 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.013620485 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.501425077 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.003886642 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.273264395 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.631136385 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 1.942804859 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.984115616 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.06429286 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.76641592 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.010801 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.706661073 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.248593575 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.627107754 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.581769356 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.938396463 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.667509021 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.551240867 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.156214224 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.708306595 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.792821712 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.608250399 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.620739109 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.276274485 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.60471055 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.494391336 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.944739146 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.305141 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.937079685 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.741812289 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.615677118 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.626590209 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.005137567 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.135464625 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.270800612 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.607107683 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.268274595 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.732701224 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.611138087 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.490656666 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.618582972 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.263775395 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.622700649 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.275337094 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.714247774 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.131757078 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.161877069 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.93747053 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.938317919 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.941601536 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.712729878 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 1.944740222 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.878138214 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.581331398 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.891875548 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.925197564 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.946749777 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.981458414 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.105335292 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.066332807 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.626005751 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.151174356 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.769461793 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.457029415 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.292186248 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.630423373 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.517241606 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.293954193 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.201816952 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.307566791 seconds)
  done (took 150.487266432 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.089110802 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.091757421 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.947507005 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.617442727 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.943461934 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.934349939 seconds)
  done (took 10.555109518 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.949745898 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.073058615 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.068501869 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.084457522 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.369375487 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.050653267 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.010034772 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.934983864 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.374312475 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.02353087 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.051502263 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.165762682 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.010177094 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.368054663 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.999020532 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.018428774 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.994944303 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.007456034 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.021594535 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316939969 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.940980792 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.373113779 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377019054 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.938696102 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.057462886 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.018477709 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.183190664 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.033065731 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.021422157 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.934702894 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.19665152 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.050011114 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.945479667 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.949337227 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.00385439 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.941058399 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.083165694 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.166169202 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.014294925 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.053874954 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.147062134 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379054273 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.024071649 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.150058473 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.93562498 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.93885139 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.164125643 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.183333805 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.010472484 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.158237836 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.271711779 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.026042539 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.053936191 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.140878261 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.937914696 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.938184704 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.154017053 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.998929988 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.186577162 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.936554677 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.07431551 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.056070816 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.944284824 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.010507534 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.938298355 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.024789621 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.934732484 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.138041046 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.312224426 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.079800438 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.307137662 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.083337887 seconds)
  done (took 94.756090739 seconds)
done (took 375.497821293 seconds)
(13/18) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.45337886 seconds)
  done (took 3.381140432 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.002006729 seconds)
  done (took 2.933581383 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.351070279 seconds)
  done (took 9.476183863 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 1.971424256 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 1.955850412 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.960156872 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 1.939614414 seconds)
  done (took 8.76183297 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.434883689 seconds)
  done (took 3.363257512 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 1.939404567 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 1.936300864 seconds)
  done (took 4.80602682 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.434931803 seconds)
  done (took 3.362583598 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.570292389 seconds)
  done (took 3.504417115 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 1.964998819 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 1.969242512 seconds)
  done (took 4.869455262 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 1.936502555 seconds)
  done (took 2.864890001 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.13488267 seconds)
  done (took 8.064030102 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 1.94677888 seconds)
  done (took 2.876469477 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.023004604 seconds)
  done (took 2.951904503 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.638391071 seconds)
  done (took 3.566786387 seconds)
done (took 65.712710271 seconds)
(14/18) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 1.936164597 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 1.940639552 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 1.942541955 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 1.941823508 seconds)
  done (took 8.689778882 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.942779454 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.50571879 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.730394018 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.952727842 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.290036763 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.938236207 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.937292667 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.544253596 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.766069844 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.954030368 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.943916676 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.380647606 seconds)
  done (took 21.824322316 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 1.959028462 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 1.95601317 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 1.954356374 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 1.988400573 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 1.976465969 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 1.990345891 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 1.98355767 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.05195988 seconds)
  done (took 16.790439255 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 1.93622177 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.945952356 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 1.94935372 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.937327688 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 1.957654634 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.488818989 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 1.942452868 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.942699105 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.109016171 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 1.945917218 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 1.952065619 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.262354752 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.944506932 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 1.944432983 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 1.948634933 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.94160046 seconds)
  done (took 30.090290439 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.295024865 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.090304867 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.701578252 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 1.966941222 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 1.953239662 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 1.942599492 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.341770127 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.938125607 seconds)
  done (took 21.160862439 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.716971805 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.117446752 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.83271479 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.939573891 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.937254774 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.779872581 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.100019515 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.812633694 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.789522605 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.652107622 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.668116156 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.820088154 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.090749013 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.713116727 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.936649336 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.766760356 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.936673218 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.8301944 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.155973981 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.763981668 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.731124848 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.773768997 seconds)
  done (took 37.800052619 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.157748139 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.303242102 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.09724689 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.251772618 seconds)
  done (took 5.738411806 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 1.936977912 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 1.937098578 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.295992194 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.191727163 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 1.938658933 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 1.937968622 seconds)
  done (took 11.167801716 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.258367348 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.938859078 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942058476 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966150299 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940466175 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937118792 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98193495 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.33283033 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.002426123 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.215538564 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936873715 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.261494989 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.186927952 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947401001 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940147659 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.731883116 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.166544883 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449153613 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93801691 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937065593 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.161321262 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940892013 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.94093008 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.953447053 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.940810593 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936910271 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.199668414 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.937132798 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93961939 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948011545 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945602162 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941895137 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.217590776 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.279525752 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.060895925 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941629479 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945126377 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.941802872 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 1.957292989 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 1.940751739 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942253417 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.939149776 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943175313 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942496333 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.936758912 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936877907 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34834963 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.941069364 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 1.937865427 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.938370162 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943522996 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.259997925 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.977166534 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94096956 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012465554 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939998564 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.098302768 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282041794 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591249784 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950906593 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945499155 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 1.93860822 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.941584589 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948269418 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528492624 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.982384884 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.973753559 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.993981831 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93658979 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.936950739 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.091913215 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941586586 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.08515953 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935302967 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638518299 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.945576525 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939022279 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503160968 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944192452 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 1.940109249 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.170318053 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937418607 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9372433 seconds)
    (84/481) benchmarking "5d"...
    done (took 1.937114095 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.942103054 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664622992 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801821975 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 1.937021721 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.23557115 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.331970674 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.941900083 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.095981507 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.159583304 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.159889518 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 1.937343755 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942802386 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 1.950636899 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938441109 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.094498286 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.346030812 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941432647 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.093731767 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.184911787 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.146461946 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936511269 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.747727172 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349881821 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949761717 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.134296742 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937466677 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.940949809 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.458980444 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945266359 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948849384 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.199590424 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.938092216 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.73563489 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940760889 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.009444422 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937200891 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.176283893 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.777442253 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946990791 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.286121771 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937423381 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.940483563 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942075305 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938284369 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.936943293 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.937771143 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943129283 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.940418144 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 1.939841742 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937548084 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 1.940819216 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946441343 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 1.938840245 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.163017258 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939339667 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.224729104 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937454472 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938393178 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937349147 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.167371902 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 1.911731772 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.107550223 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.277850714 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946664361 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.941020188 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945284722 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.193903133 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.058487979 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.187357096 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 1.936982969 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.187349168 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.963977291 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.458135102 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936460813 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94338364 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941100193 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.93809629 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951616546 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.450895516 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909181493 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.957566271 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.941400447 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.054162496 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.291250846 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.941617978 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.946620465 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.94052376 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941931744 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.457448339 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 1.941922129 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.159819348 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940202305 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 1.948587641 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.118176697 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.330350101 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.461252796 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.804287574 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 1.938291462 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 1.93558074 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 1.937496662 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938749617 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947341036 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938159617 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93853603 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94966308 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.953513107 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.472625037 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943629093 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.937948114 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.970088886 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944000742 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.945842424 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941777828 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 1.944021567 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942757921 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945975972 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.950392092 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.17356512 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.044732537 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.937613138 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.499918677 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947208332 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.948802454 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.936578402 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.165243332 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.938133125 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421374516 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.278056712 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944538461 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940847086 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.941114599 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.048780595 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.93828135 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937342105 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948892251 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 1.954954512 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802515711 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.942875766 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.952369158 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941084949 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590494941 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651731087 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398606679 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950849042 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 1.944447158 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.942898329 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.344088416 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947811022 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937168579 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.139699382 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.338006729 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942515039 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.335976458 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 1.909570987 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543491365 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944784993 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.167974356 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938279584 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 1.943211712 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947886557 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.151310354 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.181401045 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.946600162 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941368501 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 1.947530873 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406503497 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938036492 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.117449101 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342600953 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940142073 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.9384465 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 1.964702154 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940617196 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943252367 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.942137739 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93726567 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94558999 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.941774176 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410461536 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95303519 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944960037 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532660352 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938996687 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.348397641 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941053482 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.947926043 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.947533982 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.94092281 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 1.940971283 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 1.948290422 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.184992809 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938717073 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942098046 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.937480021 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404835965 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.807508239 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.937680152 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943029499 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729696539 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937689356 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957560796 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 1.947989531 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.942170023 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948694244 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.937753173 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938185723 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 1.947609807 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.948138716 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909923519 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432460523 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 1.950602567 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953531673 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948445015 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94041247 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.183996558 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.043767164 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.448819145 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.169128855 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943916102 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.204420389 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.981428676 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948401494 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 1.942959367 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.937980312 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.937407773 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026810669 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.160798433 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951441679 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 1.941296889 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.992900196 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.150939373 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944273724 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938238763 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931351623 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 1.940952432 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 1.955353727 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647586701 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.159166319 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.937577435 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945630461 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.940077304 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.21076595 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.233464034 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951962165 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.949252195 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.949446051 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94338095 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940946229 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949634854 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.046060376 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.247019547 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943289577 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.955163212 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.940638932 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.448939802 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650236988 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.463250137 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942902581 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.943064587 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941357824 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944919682 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.209296706 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938431406 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.218516504 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941325552 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 1.948172051 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.100160355 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945553446 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939643956 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.164882067 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.211082596 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937995836 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938005586 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950641786 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 1.938257696 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949014273 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.15118741 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431935532 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50527572 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937741058 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94062783 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.357324796 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.218880625 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938252733 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943406119 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941169528 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 1.943340762 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941235412 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.950793944 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947420567 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.179571482 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947574173 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.282423385 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.947947105 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.952837862 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.821183796 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93793342 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.188395143 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938704505 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.95410583 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458680276 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.535684318 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.198174357 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.291913354 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938257888 seconds)
    (390/481) benchmarking "6d"...
    done (took 1.95125858 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.203741323 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 1.940606334 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.940265382 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937756923 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938220781 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 1.948042776 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.943039498 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.466346133 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.194422837 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.103471294 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 1.937983531 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.165594605 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.949364167 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.161470215 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677710843 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.155631232 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937479992 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.95933507 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.943631833 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461110847 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948081414 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945105438 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.993179082 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922246502 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.942138302 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.226491869 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.825657425 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 1.93833556 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516591557 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.148125693 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.103145928 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938486892 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544636905 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.467748372 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.943902031 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449753042 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939273373 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937613185 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.22390487 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.940642457 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.943996759 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.236200654 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.968495344 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.94063223 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946263021 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.450494935 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546497501 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 1.95698509 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93937408 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 1.9431816 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938258073 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962748339 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940921085 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938158917 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.949387515 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94202716 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938669313 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798637763 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 1.944715736 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950651316 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 1.942055321 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939071342 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.943615916 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 1.958272037 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 1.94265308 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94519857 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252564437 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407668496 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948636518 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.565176853 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.264690758 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.18592564 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.947823212 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 1.939487082 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.085909268 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94022329 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938807908 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93739472 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.947249969 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518850559 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 1.949722244 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.945703112 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.999241381 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.152496031 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.151860333 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.937629829 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942815703 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945555137 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.088120481 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 1.948159572 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938258615 seconds)
  done (took 824.154391145 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.896466693 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.83111441 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.632954903 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.64530826 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.56232386 seconds)
  done (took 9.499127908 seconds)
done (took 987.853355524 seconds)
(15/18) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.963808713 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.965451375 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.966118952 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.962527236 seconds)
  done (took 4.789619274 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 1.937834385 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 1.942379319 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 1.940718486 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.937522304 seconds)
  done (took 8.691761361 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.24664016 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.381932849 seconds)
  done (took 3.561337658 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.939006541 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.702310048 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.695771258 seconds)
  done (took 6.270530168 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.240646002 seconds)
  done (took 2.170575157 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.284423335 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.34958651 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.097270306 seconds)
  done (took 4.662308555 seconds)
done (took 31.078880488 seconds)
(16/18) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.938303715 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.704371548 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.22641678 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 1.937328549 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.098992151 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.226479317 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.185927622 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 1.946048138 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 1.945347066 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 1.939783123 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.936522564 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.105466711 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.173727626 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.705492941 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.176848316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.706759895 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.110622862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 1.935025569 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 1.935555391 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 1.939264285 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.192127843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.941319485 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.935902259 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.938282222 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.11863535 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.081151395 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.937102672 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.705362808 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 1.940444628 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.938884709 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.081820694 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 1.943178329 seconds)
  done (took 68.568195689 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.94315267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.93898858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 1.938588548 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 1.937999741 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 1.940749781 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 1.947810421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.939108604 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 1.937465978 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 1.935597383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 1.946739824 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.937870448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 1.940432875 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.941717054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.938264781 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.940270226 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.939244935 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 1.937990684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 1.946721139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 1.941062742 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 1.939263986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.938012461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.943882838 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.946081401 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.944212979 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 1.947054658 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 1.937878155 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.947238496 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.937702624 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 1.93836599 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.93764871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 1.944095943 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 1.938410908 seconds)
  done (took 63.047159435 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.937673445 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.937695345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 1.938851835 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 1.937168655 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 1.937883808 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 1.939472254 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.954358691 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 1.939868847 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 1.939949639 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 1.938257531 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.942495452 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 1.937824216 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.93716615 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.943888567 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.939513082 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.9543151 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 1.947740043 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 1.937255884 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 1.939063759 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 1.942723776 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.938207943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.940186429 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.940079356 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.945972673 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 1.943306125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 1.937343055 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.937659402 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.942066633 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 1.940104646 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.938797674 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 1.938375494 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 1.942504777 seconds)
  done (took 63.047142653 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.170299135 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.355502801 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.938120956 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.93737367 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.949747064 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.199284872 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.937955172 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.176087792 seconds)
  done (took 13.596007129 seconds)
done (took 209.190785872 seconds)
(17/18) benchmarking "nullable"...
  (1/2) benchmarking "basic"...
    (1/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(true)")...
    done (took 0.966806017 seconds)
    (2/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}()")...
    done (took 0.961940709 seconds)
    (3/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}()")...
    done (took 0.963203522 seconds)
    (4/77) benchmarking ("get2", "Nullable{BigFloat}()")...
    done (took 0.963033095 seconds)
    (5/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(1.0)")...
    done (took 0.959362164 seconds)
    (6/77) benchmarking ("isnull", "Nullable{Float32}()")...
    done (took 0.959872401 seconds)
    (7/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}()")...
    done (took 0.965874774 seconds)
    (8/77) benchmarking ("get1", "Nullable{Float64}(1.0)")...
    done (took 0.956196255 seconds)
    (9/77) benchmarking ("isnull", "Nullable{BigFloat}(1.0)")...
    done (took 0.963217082 seconds)
    (10/77) benchmarking ("isnull", "Nullable{Int64}()")...
    done (took 0.960950751 seconds)
    (11/77) benchmarking ("isnull", "Nullable{Bool}()")...
    done (took 0.958558979 seconds)
    (12/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(1.0)")...
    done (took 0.968279628 seconds)
    (13/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(1)")...
    done (took 0.964698502 seconds)
    (14/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(1.0)")...
    done (took 1.095938943 seconds)
    (15/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(0.0)")...
    done (took 0.968655647 seconds)
    (16/77) benchmarking ("get2", "Nullable{Float32}()")...
    done (took 0.965954829 seconds)
    (17/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(0.0)")...
    done (took 0.959824014 seconds)
    (18/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(1.0)")...
    done (took 0.977246829 seconds)
    (19/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(0.0)")...
    done (took 0.967841218 seconds)
    (20/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}()")...
    done (took 0.968398043 seconds)
    (21/77) benchmarking ("get2", "Nullable{Float64}()")...
    done (took 0.957896165 seconds)
    (22/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}()")...
    done (took 0.967920421 seconds)
    (23/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(1)")...
    done (took 0.962983694 seconds)
    (24/77) benchmarking ("isnull", "Nullable{Int8}()")...
    done (took 0.959133734 seconds)
    (25/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(1)")...
    done (took 0.990212314 seconds)
    (26/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(1)")...
    done (took 0.963676396 seconds)
    (27/77) benchmarking ("get1", "Nullable{Bool}(true)")...
    done (took 0.955749986 seconds)
    (28/77) benchmarking ("get2", "Nullable{Int8}()")...
    done (took 0.959334647 seconds)
    (29/77) benchmarking ("get2", "Nullable{Int64}()")...
    done (took 0.95795382 seconds)
    (30/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(0.0)")...
    done (took 0.97208693 seconds)
    (31/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(1)")...
    done (took 0.964036485 seconds)
    (32/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(0.0)")...
    done (took 1.067695079 seconds)
    (33/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(false)")...
    done (took 0.962643826 seconds)
    (34/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}()")...
    done (took 0.966747755 seconds)
    (35/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(true)")...
    done (took 0.961763116 seconds)
    (36/77) benchmarking ("isnull", "Nullable{Float32}(1.0)")...
    done (took 0.958311222 seconds)
    (37/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}()")...
    done (took 0.962886099 seconds)
    (38/77) benchmarking ("get2", "Nullable{BigFloat}(1.0)")...
    done (took 0.964370795 seconds)
    (39/77) benchmarking ("isnull", "Nullable{Float64}()")...
    done (took 0.969301281 seconds)
    (40/77) benchmarking ("get2", "Nullable{Bool}(true)")...
    done (took 0.95858794 seconds)
    (41/77) benchmarking ("get1", "Nullable{Float32}(1.0)")...
    done (took 0.956087105 seconds)
    (42/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}()")...
    done (took 0.967131141 seconds)
    (43/77) benchmarking ("get2", "Nullable{Int64}(1)")...
    done (took 0.963996192 seconds)
    (44/77) benchmarking ("isnull", "Nullable{Int64}(1)")...
    done (took 0.959247689 seconds)
    (45/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(1.0)")...
    done (took 0.968138192 seconds)
    (46/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}()")...
    done (took 0.962738053 seconds)
    (47/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(0)")...
    done (took 0.962290675 seconds)
    (48/77) benchmarking ("isnull", "Nullable{BigInt}()")...
    done (took 0.959703883 seconds)
    (49/77) benchmarking ("get2", "Nullable{Float32}(1.0)")...
    done (took 0.958390859 seconds)
    (50/77) benchmarking ("get1", "Nullable{BigInt}(1)")...
    done (took 0.962370912 seconds)
    (51/77) benchmarking ("isnull", "Nullable{Float64}(1.0)")...
    done (took 0.963916558 seconds)
    (52/77) benchmarking ("get1", "Nullable{Int64}(1)")...
    done (took 0.958978622 seconds)
    (53/77) benchmarking ("isnull", "Nullable{BigFloat}()")...
    done (took 0.959336403 seconds)
    (54/77) benchmarking ("get2", "Nullable{Bool}()")...
    done (took 0.961648528 seconds)
    (55/77) benchmarking ("isnull", "Nullable{Bool}(true)")...
    done (took 0.967840453 seconds)
    (56/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}()")...
    done (took 0.962513788 seconds)
    (57/77) benchmarking ("get2", "Nullable{BigInt}()")...
    done (took 0.96157534 seconds)
    (58/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}()")...
    done (took 0.962544848 seconds)
    (59/77) benchmarking ("get2", "Nullable{Float64}(1.0)")...
    done (took 0.958895521 seconds)
    (60/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}()")...
    done (took 0.979001549 seconds)
    (61/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}()")...
    done (took 0.962001182 seconds)
    (62/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(0)")...
    done (took 0.960800153 seconds)
    (63/77) benchmarking ("get1", "Nullable{Int8}(1)")...
    done (took 0.956813638 seconds)
    (64/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(0)")...
    done (took 0.967410539 seconds)
    (65/77) benchmarking ("isnull", "Nullable{BigInt}(1)")...
    done (took 0.958142459 seconds)
    (66/77) benchmarking ("get2", "Nullable{BigInt}(1)")...
    done (took 0.963882762 seconds)
    (67/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(1.0)")...
    done (took 0.967674379 seconds)
    (68/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(0)")...
    done (took 0.962117284 seconds)
    (69/77) benchmarking ("isnull", "Nullable{Int8}(1)")...
    done (took 0.958835171 seconds)
    (70/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}()")...
    done (took 0.962420298 seconds)
    (71/77) benchmarking ("get1", "Nullable{BigFloat}(1.0)")...
    done (took 0.961905304 seconds)
    (72/77) benchmarking ("get2", "Nullable{Int8}(1)")...
    done (took 0.962855102 seconds)
    (73/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(0.0)")...
    done (took 0.96929833 seconds)
    (74/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(0)")...
    done (took 0.961935835 seconds)
    (75/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(false)")...
    done (took 0.962655614 seconds)
    (76/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(1)")...
    done (took 0.96718541 seconds)
    (77/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(0)")...
    done (took 0.979911757 seconds)
  done (took 75.390785376 seconds)
  (2/2) benchmarking "nullablearray"...
    (1/52) benchmarking ("perf_countequals", "Array", "Int64")...
    done (took 1.063903037 seconds)
    (2/52) benchmarking ("perf_countnulls", "Array", "Float32")...
    done (took 1.824248609 seconds)
    (3/52) benchmarking ("perf_countequals", "NullableArray", "Float64")...
    done (took 1.192875789 seconds)
    (4/52) benchmarking ("perf_sum", "NullableArray", "Float64")...
    done (took 1.102647672 seconds)
    (5/52) benchmarking ("perf_countnulls", "Array", "BigFloat")...
    done (took 1.348286015 seconds)
    (6/52) benchmarking ("perf_countnulls", "Array", "Complex{Float64}")...
    done (took 1.937428644 seconds)
    (7/52) benchmarking ("perf_sum", "Array", "BigFloat")...
    done (took 1.942074845 seconds)
    (8/52) benchmarking ("perf_countnulls", "NullableArray", "BigFloat")...
    done (took 1.95305651 seconds)
    (9/52) benchmarking ("perf_countnulls", "NullableArray", "Float64")...
    done (took 1.777260318 seconds)
    (10/52) benchmarking ("perf_countnulls", "NullableArray", "Int64")...
    done (took 1.773423738 seconds)
    (11/52) benchmarking ("perf_countequals", "Array", "Float32")...
    done (took 1.122280504 seconds)
    (12/52) benchmarking ("perf_sum", "NullableArray", "BigFloat")...
    done (took 1.950213354 seconds)
    (13/52) benchmarking ("perf_countnulls", "Array", "Int8")...
    done (took 1.825215939 seconds)
    (14/52) benchmarking ("perf_countequals", "Array", "BigInt")...
    done (took 1.191255771 seconds)
    (15/52) benchmarking ("perf_sum", "Array", "Float64")...
    done (took 1.06091657 seconds)
    (16/52) benchmarking ("perf_all", "Array")...
    done (took 1.854827626 seconds)
    (17/52) benchmarking ("perf_sum", "NullableArray", "Complex{Float64}")...
    done (took 1.103660434 seconds)
    (18/52) benchmarking ("perf_countnulls", "Array", "Bool")...
    done (took 1.828610239 seconds)
    (19/52) benchmarking ("perf_countequals", "NullableArray", "Float32")...
    done (took 1.199117352 seconds)
    (20/52) benchmarking ("perf_countequals", "Array", "Bool")...
    done (took 1.053903613 seconds)
    (21/52) benchmarking ("perf_any", "Array")...
    done (took 1.405147405 seconds)
    (22/52) benchmarking ("perf_countequals", "Array", "Complex{Float64}")...
    done (took 1.213053145 seconds)
    (23/52) benchmarking ("perf_countequals", "NullableArray", "Complex{Float64}")...
    done (took 1.234806168 seconds)
    (24/52) benchmarking ("perf_countequals", "NullableArray", "BigFloat")...
    done (took 1.5069572 seconds)
    (25/52) benchmarking ("perf_countequals", "NullableArray", "Int64")...
    done (took 1.177018352 seconds)
    (26/52) benchmarking ("perf_countnulls", "NullableArray", "BigInt")...
    done (took 1.943639961 seconds)
    (27/52) benchmarking ("perf_countnulls", "NullableArray", "Complex{Float64}")...
    done (took 1.778167095 seconds)
    (28/52) benchmarking ("perf_sum", "NullableArray", "Bool")...
    done (took 1.0576919 seconds)
    (29/52) benchmarking ("perf_sum", "NullableArray", "BigInt")...
    done (took 1.945470084 seconds)
    (30/52) benchmarking ("perf_sum", "Array", "Complex{Float64}")...
    done (took 1.061762688 seconds)
    (31/52) benchmarking ("perf_all", "NullableArray")...
    done (took 1.053166544 seconds)
    (32/52) benchmarking ("perf_sum", "NullableArray", "Int8")...
    done (took 1.071167902 seconds)
    (33/52) benchmarking ("perf_countequals", "NullableArray", "Bool")...
    done (took 1.185908627 seconds)
    (34/52) benchmarking ("perf_countequals", "Array", "Int8")...
    done (took 1.075122397 seconds)
    (35/52) benchmarking ("perf_sum", "Array", "Int64")...
    done (took 1.940108174 seconds)
    (36/52) benchmarking ("perf_sum", "NullableArray", "Int64")...
    done (took 1.048750558 seconds)
    (37/52) benchmarking ("perf_countnulls", "Array", "Int64")...
    done (took 1.942789244 seconds)
    (38/52) benchmarking ("perf_countnulls", "NullableArray", "Bool")...
    done (took 1.7764486 seconds)
    (39/52) benchmarking ("perf_sum", "Array", "Bool")...
    done (took 1.93921253 seconds)
    (40/52) benchmarking ("perf_countequals", "Array", "Float64")...
    done (took 1.136507562 seconds)
    (41/52) benchmarking ("perf_countnulls", "Array", "BigInt")...
    done (took 1.35518024 seconds)
    (42/52) benchmarking ("perf_any", "NullableArray")...
    done (took 1.079949924 seconds)
    (43/52) benchmarking ("perf_countequals", "NullableArray", "Int8")...
    done (took 1.186901011 seconds)
    (44/52) benchmarking ("perf_countequals", "Array", "BigFloat")...
    done (took 1.272819663 seconds)
    (45/52) benchmarking ("perf_countequals", "NullableArray", "BigInt")...
    done (took 1.506239286 seconds)
    (46/52) benchmarking ("perf_sum", "Array", "Float32")...
    done (took 1.082617679 seconds)
    (47/52) benchmarking ("perf_countnulls", "NullableArray", "Float32")...
    done (took 1.774629528 seconds)
    (48/52) benchmarking ("perf_countnulls", "NullableArray", "Int8")...
    done (took 1.774275958 seconds)
    (49/52) benchmarking ("perf_sum", "Array", "Int8")...
    done (took 1.058331392 seconds)
    (50/52) benchmarking ("perf_sum", "Array", "BigInt")...
    done (took 1.959929443 seconds)
    (51/52) benchmarking ("perf_sum", "NullableArray", "Float32")...
    done (took 1.090152841 seconds)
    (52/52) benchmarking ("perf_countnulls", "Array", "Float64")...
    done (took 1.938789184 seconds)
  done (took 76.620829974 seconds)
done (took 152.941586607 seconds)
(18/18) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 1.953682229 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.133190447 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 1.940684836 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 1.937142714 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 1.953231513 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 1.9742555 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.942651967 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 1.939497502 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.296651115 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 1.952963264 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 1.939406304 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 1.941005262 seconds)
done (took 24.839816794 seconds)
SAVING RESULT...
DONE!
