cset: moving following pidspec: 23005
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.383195889 seconds)
loading group "string"... done (took 0.575225251 seconds)
loading group "linalg"... done (took 7.334420259 seconds)
loading group "parallel"... done (took 0.164461 seconds)
loading group "find"... done (took 1.163043019 seconds)
loading group "tuple"... done (took 1.763728509 seconds)
loading group "dates"... done (took 1.252106116 seconds)
loading group "micro"... done (took 0.222548312 seconds)
loading group "io"... done (took 1.020371631 seconds)
loading group "scalar"... done (took 37.690525262 seconds)
loading group "sparse"... done (took 11.878914385 seconds)
loading group "broadcast"... done (took 1.000461135 seconds)
loading group "union"... done (took 13.239964955 seconds)
loading group "simd"... done (took 4.581866224 seconds)
loading group "random"... done (took 9.107911053 seconds)
loading group "problem"... done (took 1.715141577 seconds)
loading group "array"... done (took 21.030452915 seconds)
loading group "misc"... done (took 1.682806876 seconds)
loading group "sort"... done (took 3.370049826 seconds)
loading group "collection"... done (took 17.777167339 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.520625512 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126147781 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118728466 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121058575 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149272114 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113994056 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127151004 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087232255 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.809028263 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150028816 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119504893 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431710718 seconds)
done (took 5.141423049 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176490691 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084609603 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084659291 seconds)
  done (took 1.260150553 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065737812 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123850958 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068174448 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068967119 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06832665 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067303841 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067645452 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067820751 seconds)
  done (took 1.624306658 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074384519 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070634495 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067325601 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069722638 seconds)
  done (took 1.374927942 seconds)
done (took 5.59825405 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.789403622 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207705384 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189119568 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.414177745 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136358578 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.161957064 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646072903 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34210376 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192020976 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081904655 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.110217575 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.330267599 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110342447 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645160023 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078536011 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091779548 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137795042 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452739144 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068627722 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083759401 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09011757 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131304764 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089532794 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075625967 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146735611 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068784735 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137929798 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081634921 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067487782 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213834466 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173649052 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.650348205 seconds)
  done (took 10.328351645 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097962683 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09833294 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07044176 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123531088 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097173783 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071440624 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072585221 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068884021 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087944569 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129015308 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089579798 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102697157 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06713094 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069684802 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086302581 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204984351 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08173188 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083271248 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072226724 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076664376 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106125605 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079555518 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078393356 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07822862 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129610851 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181954279 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100327376 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098467627 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067472577 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080856555 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116129427 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128398842 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06729989 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067987461 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124965987 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095716366 seconds)
  done (took 4.581411855 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.00502651 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14586641 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091135883 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136061456 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06665813 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11030564 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067739218 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082009968 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210863381 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.460523713 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089272168 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.601140496 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112355595 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105599463 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071902512 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070081129 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092905462 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067926093 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.496251168 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096130364 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107869007 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081988958 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071134173 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069814503 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354719803 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068518797 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064966485 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069578371 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058070668 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12520494 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068755609 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.951360395 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065813853 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.128188496 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068565195 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102494014 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.297402537 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093617018 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.146216521 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070929336 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066865329 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155927658 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072041576 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068118122 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085782568 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104530587 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115078523 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067991565 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071296565 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163077682 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065911273 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081150446 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.668033078 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155603653 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081475015 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068108048 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.258857754 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.090225074 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071256626 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066440151 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.186136765 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135634156 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069125362 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068000364 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069929259 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070601752 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380995872 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070638626 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.180843022 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069303054 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079758005 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07095211 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070913706 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07468438 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074428718 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088899149 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06751015 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076216862 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067577833 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06769405 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067755411 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085046492 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.383406052 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.0674603 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068705153 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066135126 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089833347 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097187984 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06743632 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066250896 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100759573 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069029385 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067557056 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107722576 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067208116 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084451056 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.173699351 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115175673 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06880391 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066818809 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.091541193 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070049391 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100355006 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074638616 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09958971 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082339496 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069665376 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.424094709 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066837932 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06697477 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070564458 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066863998 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068759417 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068404401 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081071907 seconds)
  done (took 21.60912068 seconds)
done (took 38.615546866 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238865027 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084804072 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082945616 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079484295 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07846688 seconds)
  done (took 1.749259442 seconds)
done (took 2.913521431 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124769469 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102697853 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06534536 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098821176 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065743809 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103659559 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103144861 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083052567 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102720759 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065442311 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099715178 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065437224 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065876165 seconds)
  done (took 2.334557528 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08549856 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085117813 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071839001 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084856648 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065043035 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084314177 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083210963 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090082014 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083081394 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074203934 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065182335 seconds)
  done (took 2.033542461 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083777202 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087171947 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071839481 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084134237 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064757633 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083678938 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083509133 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088120227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083599755 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07603302 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0655024 seconds)
  done (took 2.030975708 seconds)
done (took 7.554043246 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079384526 seconds)
  done (took 1.230202155 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.595920685 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.128915444 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082816045 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112697708 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190517228 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119800752 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.26535114 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087156352 seconds)
  done (took 8.917402921 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104585906 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069488244 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074720608 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072983158 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070097564 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070509456 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072923508 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072388689 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070884796 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073671913 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071525455 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072578677 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070694365 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069835964 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070165128 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072200027 seconds)
  done (took 2.407445209 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093672066 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.0929018 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075627199 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076052135 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073386315 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073203969 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075269884 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074646053 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072151613 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073430775 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075669005 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074474072 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073765041 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065916131 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07529009 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076643108 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072054406 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074596329 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076154397 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076390666 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075873036 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065249829 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072725331 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075733547 seconds)
  done (took 3.069565826 seconds)
done (took 16.783433575 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116243515 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073114251 seconds)
  done (took 1.348519774 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082952324 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084625329 seconds)
  done (took 1.334069742 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083997709 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066811839 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091855655 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079571075 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067346042 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066772402 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089225359 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067535895 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066824165 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067065938 seconds)
  done (took 1.91379843 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069682104 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078506575 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071399498 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082456833 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074726365 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06569251 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072990412 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068958908 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078134056 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064572451 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072288823 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084427243 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072740975 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085606551 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073634582 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070034047 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072153435 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068595736 seconds)
  done (took 2.497182732 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066267331 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068457145 seconds)
  done (took 1.305708418 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068793624 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065084615 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068009588 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068016376 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065001524 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064202198 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064912726 seconds)
  done (took 1.631649512 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.378555202 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11534251 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.313936523 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072349474 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083092086 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261935126 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066913163 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072470989 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072509719 seconds)
  done (took 2.649683042 seconds)
done (took 13.853638267 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080927851 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087511192 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097203517 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.377559054 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093256398 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067329757 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115355487 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193569769 seconds)
done (took 2.295515207 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21555392 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.639362451 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.407306824 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206562622 seconds)
  done (took 2.428925387 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347342742 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089151734 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059943643 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068358015 seconds)
  done (took 1.747528555 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068344356 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071212704 seconds)
  done (took 1.322206065 seconds)
done (took 6.893717798 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068329048 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08803495 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06744792 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065407661 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067927515 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06481987 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065057419 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067792254 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068119405 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067424271 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.070297648 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067161216 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067155255 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070240211 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064758679 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065169644 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067423716 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065380105 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064554341 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065118628 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065583139 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067255398 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064793581 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064584057 seconds)
  done (took 2.836701799 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085117702 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067928776 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072982403 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073107974 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070603177 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072592272 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072223401 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066943084 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072295103 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069675327 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070309105 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070474526 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069864822 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070845542 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069612234 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070508833 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07267287 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066880574 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069794113 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070218987 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072479255 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06759144 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070467706 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072018367 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071743578 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071730089 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069442848 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06747394 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071979376 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070294411 seconds)
  done (took 3.320826557 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071657269 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064961175 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066200568 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072144878 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064888533 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065485434 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064752699 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065244647 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065230652 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064984754 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066178826 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064345298 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065095747 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06572156 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065562568 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068041999 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080492325 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065327572 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064611147 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065694117 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067968852 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064557142 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064373026 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064422703 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064252913 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064353109 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064788745 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064477109 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065553145 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064191529 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067904432 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068782828 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064478713 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071388241 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068507186 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.17756949 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068883522 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064388738 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065235021 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063900667 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064459138 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064617381 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064698076 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071776813 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065035519 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066293178 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065216519 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065505036 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065275827 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067830542 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064293052 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065224948 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067439396 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066018912 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069086286 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064318462 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066017971 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064449199 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065661621 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064689125 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064625915 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065021119 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06766664 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065840865 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080334223 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071551809 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065080862 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066375707 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065714572 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067824387 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066444521 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078781008 seconds)
  done (took 6.102584869 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091313749 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088880031 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066556267 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066270562 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062701615 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06522561 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071412761 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065956249 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067114234 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082958176 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065234023 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066111086 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066128884 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069143941 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065402656 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066100828 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074055598 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062921959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065334771 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068645321 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065341095 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07110585 seconds)
  done (took 2.736260106 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156611774 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072853913 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107623222 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077047977 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071544548 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076575798 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071094192 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070942698 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071337014 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069569211 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068769642 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07139071 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071155229 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069057529 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068960546 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068933404 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071565567 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069056553 seconds)
  done (took 2.599930924 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077198194 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067495204 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088051769 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067653924 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067334247 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069884169 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071690157 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075466878 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069515259 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066922357 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075628619 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069659556 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070087858 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067132919 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069878309 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067275052 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069253422 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067659243 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074926453 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071251562 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071772792 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075450174 seconds)
  done (took 2.768998752 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08136217 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06953244 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083730201 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069993926 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063175747 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065839859 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071200095 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066649728 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071352877 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069085494 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067168348 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065180378 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069765329 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066869074 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069934844 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066614767 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069494121 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066894561 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069446628 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063452033 seconds)
  done (took 2.58581112 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088414459 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069303602 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069476183 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077061039 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068846069 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069341952 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076421585 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069344269 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068738836 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08984382 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069062769 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069006298 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07644973 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073693894 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06873483 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076199316 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076530931 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076108953 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069247475 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069152326 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089624797 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068802262 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076671834 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068543228 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069059095 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068484942 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069157603 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073457022 seconds)
  done (took 3.255068076 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067963896 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067109622 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06470873 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064501145 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064478634 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065303118 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065185276 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064746415 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067559574 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064808012 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067141505 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067129044 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067538819 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067428625 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067937872 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067721755 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067463389 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064918745 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064897905 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06459302 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066643519 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0668378 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067388436 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064863121 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064600485 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067150341 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06490857 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064913379 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067281445 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064636673 seconds)
  done (took 3.185743716 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076912533 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074315288 seconds)
  done (took 1.355845682 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063810885 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081071895 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064375329 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071986173 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071327689 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068042181 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074502698 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070609075 seconds)
  done (took 1.766428784 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082955342 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079220906 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068753577 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080686022 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078303639 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085105071 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135960756 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068103985 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074324791 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06603825 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081613082 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066955046 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073860578 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068015122 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07326329 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07489817 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06527029 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072948717 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069971702 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066409435 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068872289 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076487622 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070145805 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062861656 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06891052 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09066127 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078940484 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067220094 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070399999 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075360059 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073703443 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061674217 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067741465 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068185215 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065493004 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077300629 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082532135 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070899382 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076899709 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068853552 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07740725 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062722163 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072901299 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074662178 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077646684 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06802366 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068104899 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062570254 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065775148 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069756819 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062402814 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070158934 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062025704 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07424294 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071608392 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078104806 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066604802 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068837565 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070308903 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071165346 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074289395 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070194342 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070488433 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067785932 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07766892 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072195208 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076141245 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062644347 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061836175 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066004553 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077499162 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091163327 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074254281 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068007118 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068578197 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06517013 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071029962 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068274764 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072909502 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07390782 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067659365 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073470631 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074712874 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067806641 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070091479 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075279092 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065468071 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070330659 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065325712 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082912026 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065412005 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064562074 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064422203 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077339722 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06983109 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066339403 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064613884 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073899794 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060864237 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066827878 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06750549 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067339189 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076717801 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070851127 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07159703 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07529018 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073917769 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067269747 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069440938 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063592801 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067641476 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065645616 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074063872 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060747115 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069381797 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.193240571 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070116805 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077480012 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067957064 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069192178 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077628364 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074409806 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067866592 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065288503 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071644516 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.069553625 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071498147 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076503864 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066883843 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063436092 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063045483 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072682541 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067335381 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072585707 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073650977 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071168179 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062559853 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06681198 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072741073 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077471018 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068389263 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069869749 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074602527 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069270163 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067486956 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074879688 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070937399 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067560288 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073539195 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06948722 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063379441 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070862652 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070052226 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067237857 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071436968 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071684981 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070174315 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068761781 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067021308 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074457735 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068439645 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066810923 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068607854 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066339232 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07798438 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070043651 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06358298 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064720242 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076659222 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066045527 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066865414 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067224959 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070456932 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068755158 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066186619 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067388457 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069621645 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077678992 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071643475 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068463275 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073995366 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079233553 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067421348 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070378578 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067673594 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068911395 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068266578 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07637044 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072694169 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072207732 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069787312 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064268848 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073102131 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075361951 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067181234 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065589297 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066608423 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071135246 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073451646 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07102433 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06802497 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065534285 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068140725 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07072682 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070127529 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067420075 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06629433 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072832333 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065262059 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073332331 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067125995 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077189029 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070338204 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061618515 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069284043 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06554386 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072932066 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061945376 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065202568 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066236586 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067117598 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065962143 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069078767 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061278583 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073444618 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074218081 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067129198 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065833158 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065666214 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073188397 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067734151 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06982939 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070078951 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072018389 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.206043581 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0687016 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072742443 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079954071 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068626138 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062588773 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074981099 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066908726 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067667175 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067755707 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067628042 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072360753 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076050196 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074304803 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061355135 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070919723 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06648955 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067228728 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063333727 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072726866 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071747963 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069426944 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075630308 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068872065 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06873998 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072717071 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068146717 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068225178 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06966482 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070865847 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06879284 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070031897 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066754993 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070792404 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068007177 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065313892 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070203388 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067999047 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069338198 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073841924 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06858678 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068623568 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070394701 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068767626 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069143993 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069342286 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068051391 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071094871 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069564667 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069039916 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070707112 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062352998 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075142692 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06767142 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074656518 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068429095 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064468247 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073564544 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070224192 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073261612 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068784795 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06787452 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069646858 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067352333 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071058756 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07418993 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065652188 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078204315 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075534378 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068810759 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070756775 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068303587 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069743577 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066542973 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069133639 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06799187 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068152888 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.0673832 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072333724 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0702138 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06790272 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069276662 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068289838 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067876655 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068934998 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061854763 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067420402 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067871027 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067418646 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077438121 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068158552 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067290536 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066878523 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069025334 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066939591 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064672975 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074610115 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075817882 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067876371 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074705815 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066375018 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068285782 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077129214 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06077213 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064857404 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.0643636 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064916734 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0736274 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067366663 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076116643 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066788429 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06621155 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063417646 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067222052 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065018531 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060929075 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063838602 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0702094 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065380949 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065953925 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066278564 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068931404 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.199661446 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079121702 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069115122 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069869894 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06846504 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065878118 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068284709 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06908869 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07153852 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069151581 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066537174 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065014327 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068150645 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068953183 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.0698231 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.07106765 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069701523 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075280853 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068299311 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071801669 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070748207 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062542598 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070627376 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068200483 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067543563 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067008639 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071651571 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070672172 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069310307 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077382855 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068335839 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069033068 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068886627 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065590303 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06795806 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06730171 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067799522 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067484387 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069265642 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07660825 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065436655 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070946318 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067925695 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068931227 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074096106 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068618195 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070759719 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073649506 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068981633 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070149206 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075864317 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07253865 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071498453 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069500185 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069248254 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073813461 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067085402 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073756716 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068607464 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069168508 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070307025 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065496458 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067356273 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067360961 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067404514 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.0737546 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068055728 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067182776 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067475543 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065942703 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069688441 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070768449 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076131244 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070393842 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07059449 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062518234 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064621961 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068339523 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066224182 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069361127 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070566346 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07344869 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070008923 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068005888 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067466405 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076756687 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073331046 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071585577 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065844456 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071274191 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068229199 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069633226 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06890239 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068016193 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068893251 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071780049 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069195005 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067466283 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074232401 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071214083 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068314807 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069562334 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068638858 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06778908 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062469465 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066975995 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068448844 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07116964 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069115295 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066655542 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076509705 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064244783 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067661643 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06963967 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065969972 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071128929 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061504655 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068251591 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067433083 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067041478 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06143413 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065795977 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.196038444 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072116158 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068681826 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064436805 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079172129 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078646582 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072080074 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068467106 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066462332 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063965391 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063348736 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067925466 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070112316 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070447609 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079234203 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06734527 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067970564 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062647492 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068210957 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07123754 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071402526 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065349353 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063771629 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067889124 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072376205 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073669278 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067147493 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068386427 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071614779 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070045975 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06588539 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071714545 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065087962 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073005993 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081214562 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06883987 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069376619 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074432622 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07543379 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067604676 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062925988 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068725418 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071528701 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069324859 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068614732 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068590039 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083273625 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071447752 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067670632 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067084399 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070915587 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067093287 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076350203 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069107612 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069065066 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072663567 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069608998 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076467669 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070656387 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076172023 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07101287 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071945398 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066820884 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06789326 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065953715 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066622197 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068879772 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067937485 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07239458 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075084829 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06785928 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0780042 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076858707 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069662212 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064550034 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066936267 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067123164 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06302523 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068833951 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065922527 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065871028 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066326419 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066828212 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068840415 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072871215 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068988728 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068521973 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067495901 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062369775 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070468086 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070228688 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069106508 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064551392 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067824779 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06796145 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071624446 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071095226 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065915018 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069712846 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069230354 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068322871 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062292775 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073684038 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06690604 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069839209 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066965922 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068080592 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067250396 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069937104 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070674555 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067688303 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068744466 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070395745 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068130478 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064444765 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064011197 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071859778 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064476949 seconds)
  done (took 43.324440026 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10453867 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065845456 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064294592 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064457484 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075156997 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065041807 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063787276 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064834517 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064434084 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066848443 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064042293 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063423288 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072083707 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0795308 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074806914 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06863629 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063315234 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064608173 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063428432 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064397793 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072523911 seconds)
  done (took 2.788925376 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075856381 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079061765 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077279031 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08368829 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07247818 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071736262 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077183896 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071869655 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079905125 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073924708 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080111045 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072427297 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074101441 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073798595 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074020251 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072281019 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079887801 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072400621 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072045923 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077451207 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073031634 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077452876 seconds)
  done (took 2.953926837 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068987963 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068201663 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070038779 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063307852 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068274959 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063135192 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071039065 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065424457 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070999693 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067177364 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067169064 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06711319 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069364317 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062437695 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06794686 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065468067 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109011679 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070727359 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067816399 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068818555 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062967956 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069652144 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063251978 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063418862 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067344887 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071069875 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068672616 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066021141 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067790178 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067265612 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067690066 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065641601 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069701964 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.0688449 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06703576 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067559652 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067537752 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068768399 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.0630128 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065709795 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068565923 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063186969 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068204563 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068897665 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065891098 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065324239 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069841077 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068337781 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062867075 seconds)
  done (took 4.627666291 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080830353 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112002191 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069112328 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090794158 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083613349 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074514237 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071413555 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091580353 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064314515 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06554221 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084015643 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08061057 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067035116 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071842217 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074680588 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066984805 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068463627 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065788468 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070842557 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06674599 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07087989 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074161938 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081509906 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079917458 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071093642 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066246251 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066791895 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071903934 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079300965 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071332771 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071939864 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072677876 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081906616 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068609791 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0664154 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069116552 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082544787 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067001407 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069639106 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065061215 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069058765 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071693481 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073625665 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083401951 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067183528 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071896895 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067439536 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064416335 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079315223 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069287236 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074916 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080320958 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070932557 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067029168 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071271042 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081151968 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066481169 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065224502 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070324426 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078820982 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064755125 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070914625 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080090458 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069339708 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074368949 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080209307 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07203896 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071199108 seconds)
  done (took 6.431339635 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07802747 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097113014 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085688714 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084270224 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077184249 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076873255 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077683671 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077391482 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076742799 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081573574 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077392016 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117299045 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073628203 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079439431 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077160277 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076921628 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077051323 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077471424 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077171545 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076846628 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077485677 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08436428 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077254136 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084085648 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081150299 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07256865 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076683296 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077048858 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084733466 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077424923 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089682773 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077211747 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07792983 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084697994 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080799484 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076703248 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066625638 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076821865 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077025723 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076995522 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072542195 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084637308 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076681021 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072800317 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077356104 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07655189 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084325788 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080659163 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079151451 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081298992 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076758057 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084463265 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0768143 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076930621 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084365033 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08686859 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084389751 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084793165 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077524536 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084409424 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08484717 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086868423 seconds)
  done (took 6.292422457 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084683917 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07598585 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083726064 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063338931 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065481033 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072845336 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065498056 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065713491 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075860713 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075565739 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077370007 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073170068 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076005847 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077466849 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073210932 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075978727 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072721649 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073038537 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075209297 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072958274 seconds)
  done (took 2.793754009 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076862129 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084225398 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068363091 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0727352 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070700211 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072648603 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069937174 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070766533 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068167346 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071149675 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077411904 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077210684 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068608253 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072564692 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076890013 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072778987 seconds)
  done (took 2.481482558 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085152658 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074582456 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081963763 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068296747 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068076566 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063874019 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066890995 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062803987 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06349635 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079617057 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067081696 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077608705 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067471726 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066362366 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064042434 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07294166 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063664172 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064485238 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067915297 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079991602 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070942325 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065540108 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070502998 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067655979 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070111437 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071904287 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066315805 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067586409 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064477505 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06759922 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070054858 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071377611 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064530681 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064989097 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066116232 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064081331 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067097882 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067618542 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073287294 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067668575 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065363913 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.0693489 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067779372 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068446905 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063593745 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067685353 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063413924 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06983795 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065040916 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.0699391 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067147243 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070175044 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068155069 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074149139 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070641002 seconds)
  done (took 5.098073858 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081382161 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071226562 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063817574 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065283462 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070698945 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068894063 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071033464 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068827846 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068503838 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065673628 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068930772 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069985673 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068312639 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071028154 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068798501 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070989379 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063406303 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068532778 seconds)
  done (took 2.567089147 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073171553 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068062411 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074780536 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068248742 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067334973 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070354089 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063195616 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066157403 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066233666 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067392387 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067394684 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069886119 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065898546 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069641599 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067252616 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067178524 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070365194 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066391822 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06759742 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063225398 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0696586 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066188756 seconds)
  done (took 2.812437402 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096549017 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083880971 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143398756 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079860931 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086219751 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073198459 seconds)
  done (took 1.880989752 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094227313 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102379233 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067591808 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070815676 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077055066 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071237587 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072031241 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072213276 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079838031 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077190946 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071786903 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080300719 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079828815 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079336464 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077295206 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077484063 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071913642 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071801943 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067841919 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085476195 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071235511 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079619152 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071492026 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07146802 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071583421 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078895198 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079600283 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077002729 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071846919 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079803431 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077049468 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071475024 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079467175 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077597562 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070898415 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080734807 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071567743 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084856413 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077128089 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079188561 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071722074 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077215106 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079934378 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075958153 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080027786 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071650094 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076488537 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072075527 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072105296 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087274051 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077476287 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07917885 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079826042 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080226148 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079972527 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087627179 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077553893 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079774485 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077840287 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077690032 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079283633 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077609133 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079362594 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077717284 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077305271 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079673485 seconds)
  done (took 6.424450798 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104750276 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067962293 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0714878 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076963987 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079183192 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071931546 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071546763 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071550854 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072360266 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068725252 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110025069 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071887834 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079470598 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07964666 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072038433 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071828999 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071693954 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079202729 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068252346 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087251636 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071771305 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079698352 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07925606 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079632184 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07674181 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07739934 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071793113 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072353625 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071757932 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071478792 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075917066 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071538545 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079458155 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068096295 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079078449 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071778898 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0716222 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076234926 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071332686 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077461866 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079659441 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085626718 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071486661 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071296758 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077045061 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071289374 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071480023 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068289222 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071701743 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068577085 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077361083 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077089181 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077131103 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078862054 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071490111 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07134245 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071973136 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071981296 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072009473 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077375451 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079127766 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071620052 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087144169 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072312181 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071762112 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079206441 seconds)
  done (took 6.323206856 seconds)
done (took 130.49457309 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18845821 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166397357 seconds)
  done (took 1.670506993 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070794216 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101294587 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077816434 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130651269 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067651236 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101831577 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100835815 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079740248 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067692213 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067635806 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068465846 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070466062 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133291189 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068312087 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067537289 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070587638 seconds)
  done (took 2.673391926 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101737989 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.164957916 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104713572 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066577497 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10073106 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074817747 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066687696 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077235149 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072718004 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067310417 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074337895 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072026543 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066878221 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072627384 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072604746 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074703608 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067365861 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074517902 seconds)
  done (took 2.802925224 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101285485 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092844458 seconds)
  done (took 1.529272668 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163441523 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136807731 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206575511 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.355460662 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166532487 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.152197797 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.148151595 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146488086 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122984741 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142574668 seconds)
  done (took 3.071538018 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102895098 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.157661673 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.271877066 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119147088 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074404532 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09509571 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120856 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080585343 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082330774 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081951155 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082720051 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07800243 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101613143 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074907696 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075736409 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077804647 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106600765 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074343109 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076637899 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07758838 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10202025 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067924139 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074827245 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074826004 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079197102 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078829284 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067611885 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066954964 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077766074 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076444807 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078013465 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094364495 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078461966 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10777095 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072553367 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108531237 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078004138 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075133075 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076674668 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074963884 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079820543 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079526872 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074932467 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077699913 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067129559 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07830703 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06739485 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068108513 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079135614 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06862857 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079174942 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078208831 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107287049 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06894534 seconds)
  done (took 6.056374901 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104635271 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10758434 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072842279 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114502025 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104364539 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074245387 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10426982 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097442448 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105732853 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071686665 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070229846 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072076532 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08363352 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084601009 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116720737 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108881065 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075372153 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073006013 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108067147 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106945887 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069790007 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098527853 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093360696 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104510007 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.0691654 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071992303 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069681129 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071911633 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078220822 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079791318 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07146605 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081851644 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086198289 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079607527 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069089671 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069894743 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070104918 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081200053 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081311611 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080967358 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079414833 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069839155 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069380077 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071462651 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071770694 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069430016 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080285044 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082084157 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080131048 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071284662 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071646414 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069878008 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072036104 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081706964 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079618562 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082652602 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081699475 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07012582 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07092832 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074108286 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082173962 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080923563 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080884041 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0710894 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080367637 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070380115 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081775656 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085820813 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070051527 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071830822 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070200341 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071235629 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070838384 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078768077 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079605043 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071114916 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070819072 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070108693 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081272207 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07983744 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070118619 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078029471 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068821391 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069899417 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070903399 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070709101 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078441845 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081542454 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070952479 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069110152 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069866426 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069771859 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067649696 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077477778 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079669019 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078674367 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078733186 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069894907 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079328482 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078181068 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071166332 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079481138 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068691543 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070729581 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.201839399 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081563448 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082045208 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082707408 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072834328 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071388524 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081646134 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083325021 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071166718 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081116853 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083029969 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081118239 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070504709 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083557536 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071636441 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081323171 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072244504 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081217341 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070474942 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081580827 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070577873 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070796404 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071049081 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081992339 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07492183 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069983261 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071675 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071751288 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081538204 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084592446 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071957268 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081594144 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079703242 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071252627 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079958198 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069859504 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081244926 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071954184 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071516237 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068622934 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083214864 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070794492 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070498539 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071429398 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082020154 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070629809 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081138765 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080203578 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070480589 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082931857 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081353843 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078781325 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081551396 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071954578 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071370756 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070006394 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070725334 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079897668 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081120193 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072953526 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0702196 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079941207 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.08017569 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068788876 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08020763 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079411306 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079919876 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070016002 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071288364 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081787416 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081682348 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080017117 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079298614 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080223667 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070261144 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079603987 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080109708 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070043971 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086188534 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069477185 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085279423 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080029895 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077585981 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080090112 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081347386 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081547759 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081428229 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084079879 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069281365 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069560044 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079465005 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069058425 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069920504 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077957597 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070084433 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069686311 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082623999 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069011261 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079258129 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068351123 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078270803 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067862507 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070866662 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083342402 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068899114 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.202950728 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08245128 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072898979 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080787004 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082728372 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081219844 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071284356 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072602957 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082029929 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081720074 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070718537 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070879927 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07261293 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080466058 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079478448 seconds)
  done (took 19.004337543 seconds)
done (took 38.146590763 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213790026 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160283362 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.1753673 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120569953 seconds)
  done (took 2.111566815 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118130381 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102916057 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094263965 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066106429 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100398505 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066661842 seconds)
  done (took 1.924198562 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313329358 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212956228 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189756876 seconds)
  done (took 2.088538859 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20297807 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190919026 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.419421375 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264566204 seconds)
  done (took 2.562827417 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146090709 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090074353 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069065315 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085561619 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135693009 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16301601 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102916847 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128428415 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080793444 seconds)
  done (took 2.430264191 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150614429 seconds)
done (took 12.641962509 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10334963 seconds)
    (2/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.103980507 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.123496549 seconds)
    (4/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077243278 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.21837207 seconds)
    (6/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.251861528 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075699729 seconds)
    (8/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.18924206 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083928998 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079976194 seconds)
    (11/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075642049 seconds)
    (12/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.156183447 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075690701 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.251965673 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085616753 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.064186745 seconds)
    (17/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.147373039 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.186177545 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092911524 seconds)
    (20/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070865997 seconds)
    (21/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.16264456 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.167885731 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081681035 seconds)
    (24/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.229037647 seconds)
    (25/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.102646929 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11799086 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094601346 seconds)
    (28/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077033372 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.096980132 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.0913766 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092122801 seconds)
    (32/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081355746 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.092089335 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073326679 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.173153816 seconds)
    (36/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158002286 seconds)
    (37/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.155295701 seconds)
    (38/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.115011328 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.192688618 seconds)
    (40/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053014712 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.097683709 seconds)
    (42/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078540591 seconds)
    (43/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067942991 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.183685477 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.094590602 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.127732353 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.0750083 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097430022 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087772692 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052802795 seconds)
    (51/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073206913 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074227288 seconds)
    (53/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.111349286 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093708779 seconds)
    (55/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05240263 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069351359 seconds)
    (57/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075582492 seconds)
    (58/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.220820125 seconds)
    (59/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091079811 seconds)
    (60/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.163247287 seconds)
    (61/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075624416 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093003788 seconds)
    (63/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066373465 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.163943891 seconds)
    (65/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076622746 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.091240393 seconds)
    (67/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120885897 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077157848 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.2013907 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.163572133 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088679771 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156081488 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124259279 seconds)
    (74/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.230753215 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090069583 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066645428 seconds)
    (77/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073114368 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17523298 seconds)
    (79/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083307731 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.163265339 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071182285 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.066486595 seconds)
    (83/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074038234 seconds)
    (84/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.120484771 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.284950916 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160880898 seconds)
    (87/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.220012148 seconds)
    (88/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.076616571 seconds)
    (89/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153926211 seconds)
    (90/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076531704 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093968103 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068805573 seconds)
    (93/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053434883 seconds)
    (94/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052518376 seconds)
    (95/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071294075 seconds)
    (96/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.183571155 seconds)
    (97/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067814921 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070225312 seconds)
    (99/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068431551 seconds)
    (100/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.158189565 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052855494 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074520374 seconds)
    (103/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076175285 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.208867933 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096484748 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.186729886 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.393663085 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147972913 seconds)
    (109/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079239574 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083147839 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052628946 seconds)
    (112/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.157495274 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078181435 seconds)
    (114/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064025887 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052774357 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067283521 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052140909 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067163048 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155692293 seconds)
    (120/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.142337855 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.137855996 seconds)
    (122/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078730924 seconds)
    (123/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068125534 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075725831 seconds)
    (125/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053407033 seconds)
    (126/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051884323 seconds)
    (127/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052374364 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07459893 seconds)
    (129/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052987947 seconds)
    (130/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053520442 seconds)
    (131/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.098728307 seconds)
    (132/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072987597 seconds)
    (133/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063683323 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07424748 seconds)
    (135/309) benchmarking ("sort", Int8, false)...
    done (took 0.143703499 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071262995 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073907814 seconds)
    (138/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.149823663 seconds)
    (139/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090944118 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139153339 seconds)
    (141/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09008511 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067660801 seconds)
    (143/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073659396 seconds)
    (144/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078057551 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.197809463 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073836763 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077702006 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123892585 seconds)
    (149/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082086252 seconds)
    (150/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069558856 seconds)
    (151/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075389121 seconds)
    (152/309) benchmarking ("sort", Float32, false)...
    done (took 0.133379733 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074195823 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066278796 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098128559 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074505643 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052592134 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091385285 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185891406 seconds)
    (160/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066253383 seconds)
    (161/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065488729 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091386968 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066552262 seconds)
    (164/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073651808 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052483588 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05187998 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.133704841 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069279412 seconds)
    (169/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078147848 seconds)
    (170/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05212582 seconds)
    (171/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062408195 seconds)
    (172/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051887046 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074863849 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066459841 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053975871 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066954768 seconds)
    (177/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071258583 seconds)
    (178/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.113353869 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.206835204 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067968553 seconds)
    (181/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091236719 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.112463414 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096133828 seconds)
    (184/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178814044 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06663296 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095014869 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067055875 seconds)
    (188/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187537303 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067668724 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148512217 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.118465419 seconds)
    (192/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105046954 seconds)
    (193/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.2756552 seconds)
    (194/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074604687 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075975362 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187577257 seconds)
    (197/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.166939349 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06859126 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077401705 seconds)
    (200/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075190688 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.187854766 seconds)
    (202/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094459952 seconds)
    (203/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079379018 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055518817 seconds)
    (205/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053687591 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144231322 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084407539 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065811234 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067520693 seconds)
    (210/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078488093 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054504209 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075399157 seconds)
    (213/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054506996 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067915662 seconds)
    (215/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053410415 seconds)
    (216/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076391361 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127277173 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075030352 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076013051 seconds)
    (220/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053639071 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067560114 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054038107 seconds)
    (223/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.195703479 seconds)
    (224/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074362992 seconds)
    (225/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053635885 seconds)
    (226/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052994863 seconds)
    (227/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052015992 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067431146 seconds)
    (229/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075471391 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.180345424 seconds)
    (231/309) benchmarking ("sort", Float64, false)...
    done (took 0.1318506 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073116071 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175994915 seconds)
    (234/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.111082016 seconds)
    (235/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063048139 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076971876 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093694981 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.055126431 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06641221 seconds)
    (240/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066463213 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052591518 seconds)
    (242/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06922021 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067120694 seconds)
    (244/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052933179 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073646692 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092150415 seconds)
    (247/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052901075 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089905071 seconds)
    (249/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069806749 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142617857 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12701529 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066987566 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092387361 seconds)
    (254/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053066716 seconds)
    (255/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067915437 seconds)
    (256/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052177286 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139677115 seconds)
    (258/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088796419 seconds)
    (259/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052241357 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068241675 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068105238 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066815176 seconds)
    (263/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074092766 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101830614 seconds)
    (265/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053084228 seconds)
    (266/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075176084 seconds)
    (267/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053039633 seconds)
    (268/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066365978 seconds)
    (269/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05420748 seconds)
    (270/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075980208 seconds)
    (271/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068214053 seconds)
    (272/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066963126 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073944566 seconds)
    (274/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054715032 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074952964 seconds)
    (276/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05398118 seconds)
    (277/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053484473 seconds)
    (278/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073169462 seconds)
    (279/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054471904 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141820696 seconds)
    (281/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081172765 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052194336 seconds)
    (283/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053003101 seconds)
    (284/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069403075 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053787948 seconds)
    (286/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053774242 seconds)
    (287/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069471999 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092380438 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074836129 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065212636 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065038117 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097478268 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052730429 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074118296 seconds)
    (295/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074330724 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081234491 seconds)
    (297/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073404631 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073106561 seconds)
    (299/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054070361 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08991549 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066700297 seconds)
    (302/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053669553 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066689049 seconds)
    (304/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053810229 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09405402 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072273005 seconds)
    (307/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052193649 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079517219 seconds)
    (309/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06447267 seconds)
  done (took 31.474961361 seconds)
done (took 32.861222528 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089016748 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095129522 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076391595 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095104679 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083045789 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077903542 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074093545 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080275 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081196995 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083638656 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079626939 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056131335 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075917409 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075940472 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076078833 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093100147 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079834483 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074381326 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074616346 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066362443 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074674402 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06703957 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068839863 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055573965 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079710516 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073073627 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073932835 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075213536 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067067668 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066864766 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070787757 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074949878 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066840317 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079947757 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073985272 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074262068 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076206674 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078027512 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068113663 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067302799 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07557315 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066698608 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074260703 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075039096 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073785431 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072975809 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074494466 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079175882 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092348843 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068762543 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076433071 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077257846 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07778381 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074426143 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071389514 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07443482 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072278989 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09253341 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074684587 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069001309 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075893275 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076317876 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072989666 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074242528 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074321533 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07646058 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07729289 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072824366 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076052926 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073124234 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066426119 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074799209 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07054288 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067068302 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077653844 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079285901 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065714217 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073114796 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074172119 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.0724499 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065591409 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068447644 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068484612 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073372962 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068733691 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055320315 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070955346 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073328317 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065916903 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075128321 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073213013 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074172521 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068200835 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077015629 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066437975 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071689731 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066635011 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066799304 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06830457 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070706749 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066350176 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068026994 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07555833 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068144586 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073195196 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080176553 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066188133 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073328219 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065269613 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066013925 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08067139 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076160774 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067048755 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068437468 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065560341 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074173417 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065478749 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065941061 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065925548 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065761827 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071793922 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065584167 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067949337 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073836703 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078810776 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06557821 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069314217 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067978753 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065823562 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072006775 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066260815 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.203784093 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070256122 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064220378 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069732162 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067973234 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075558348 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069331438 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074764085 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068420936 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076430683 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072701704 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072856105 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072982331 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066219821 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061144726 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069498191 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069472471 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068930722 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067137069 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068643129 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066571981 seconds)
done (took 12.676108528 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067720217 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141819259 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097754939 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096471426 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086959679 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067969053 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07690319 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101376486 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068559141 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101907493 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088561098 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.0870931 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116039753 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065976496 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067309128 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071076487 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068169446 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08250762 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101075246 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087894328 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116902473 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066468833 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094043855 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090350217 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089380655 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10509076 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070254958 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071385873 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071105279 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094350121 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089835855 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070787087 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067914849 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099736008 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095644145 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085445224 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067877476 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084300794 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067647853 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067355543 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068898113 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100507788 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082410987 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082651358 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071134422 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077088783 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068166738 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085285182 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091354845 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080656283 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087595604 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102399621 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070094497 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085486832 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066076167 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087844899 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078531823 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070109134 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067368177 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075198287 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067687538 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07070244 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081841556 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082129233 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071552488 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086248366 seconds)
  done (took 6.924515385 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08576477 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092550619 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084576952 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085248965 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066556115 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067875395 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067765055 seconds)
  done (took 2.040334769 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067874181 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089572885 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09019458 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091497642 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082867607 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089282472 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077035019 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06759137 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08906094 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068845789 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088674624 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102000641 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071020879 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075048011 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091600644 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068047312 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092012619 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067988865 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070965881 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091652057 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07016009 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096585199 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071056933 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068660248 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081712488 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067691523 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115495965 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072553922 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069494342 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070941257 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066070314 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108379765 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081479397 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075721134 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068211465 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08279001 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082504762 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066515532 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084292294 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076235532 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082067761 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068189726 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068956806 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06608742 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072572131 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078605238 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068670533 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069465513 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070905857 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088511751 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068694171 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081552068 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070692018 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073623582 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069699642 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074864269 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078080136 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068499416 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088331143 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069264156 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085491765 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084074502 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081914496 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084302161 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069868095 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081633683 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082221202 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070284084 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069568477 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071829135 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08429156 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066748348 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069528866 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078563593 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070030721 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091520454 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091853353 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069995443 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081114248 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068584977 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067939384 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068193352 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090833814 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073376653 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067801592 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072393908 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070935461 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065950276 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067015534 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071821288 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066108257 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069420765 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071166333 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070724018 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070698183 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084467731 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070184011 seconds)
  done (took 8.939085039 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06991149 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069164267 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070498637 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069303193 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069354394 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068861618 seconds)
  done (took 1.931585276 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09448112 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070258262 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081676592 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072737642 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105899019 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088602971 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088725335 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079252553 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084586425 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079999619 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087290299 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088643918 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093106858 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073358617 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087729371 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072484332 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088377721 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075810477 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079422081 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073690842 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087976744 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073267815 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073412374 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08329826 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076572657 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073631301 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079073924 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080063557 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079389496 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079369132 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07299141 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076696151 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072212275 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079166154 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088403037 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071701648 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072859839 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078351944 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073498355 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076899227 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089071076 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074285492 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075449663 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078097847 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079128771 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071633805 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077634674 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080179205 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087736438 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077672749 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07747097 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07261395 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076527274 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07785784 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07191294 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079236359 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078215245 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088030713 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073591706 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071718628 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069413187 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07738713 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079000306 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07691514 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079717596 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078104983 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072002285 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074038079 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073775303 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072732532 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077978336 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069979972 seconds)
  done (took 7.163156134 seconds)
done (took 28.47373575 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.537611737 seconds)
  done (took 2.016380185 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613320561 seconds)
  done (took 2.115710658 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.219468774 seconds)
  done (took 8.719169675 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401471115 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.526769608 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.727045787 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133333724 seconds)
  done (took 3.291784612 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.703832863 seconds)
  done (took 2.213799167 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214564381 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.203425337 seconds)
  done (took 1.939047475 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376810337 seconds)
  done (took 1.881769678 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.125887322 seconds)
  done (took 2.633726679 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257639315 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176053406 seconds)
  done (took 1.941578858 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.474669636 seconds)
  done (took 1.979282609 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.868572434 seconds)
  done (took 6.374520361 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212123168 seconds)
  done (took 1.765332134 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235803828 seconds)
  done (took 1.744458772 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.719869547 seconds)
  done (took 3.231206303 seconds)
done (took 43.354208955 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082692874 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083199135 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082851051 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080396171 seconds)
  done (took 1.826203409 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079297575 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07529346 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077700188 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075462505 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078937198 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074663868 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076161957 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077325036 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074550859 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07466831 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074721501 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074167608 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077092538 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075728426 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073597394 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077167644 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078292327 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074258758 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077787107 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074327466 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072481009 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077008872 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076966006 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073665726 seconds)
  done (took 3.333559863 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080247361 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075144644 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077311663 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073180474 seconds)
  done (took 1.824104771 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080743365 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094438637 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094482806 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080362996 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094335503 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088411582 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070633567 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070442319 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072229625 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079322832 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069582739 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097752217 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090288403 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079203481 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081740164 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067486224 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069815959 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089777034 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079714016 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080097211 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071967943 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079871029 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07019464 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090839028 seconds)
  done (took 3.458855043 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08704604 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10708121 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082456459 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090050079 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093481808 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066969502 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089155442 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092296694 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128937478 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067016965 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072386845 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067314582 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074678205 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066553732 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083283958 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109293449 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113437259 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070371143 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098687396 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067492796 seconds)
  done (took 3.251268264 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074949301 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071156126 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067776013 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070797824 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079453766 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073794925 seconds)
  done (took 1.967550523 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070005587 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069315964 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069419448 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069093639 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074451445 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069258082 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067695337 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069279638 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069302085 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068701952 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068367681 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067686781 seconds)
  done (took 2.356559346 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.204487704 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071123795 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071873387 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068757011 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072152558 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06841993 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082475224 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069441114 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093834871 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068038789 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068514456 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070386202 seconds)
  done (took 2.535854728 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210313523 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077497361 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240737296 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152957053 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112651575 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11790905 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11476596 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115125598 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14345768 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102524422 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170622026 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170046188 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110213226 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139826211 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091253024 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102726414 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157253823 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165347768 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107793497 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169570381 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148382075 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128785717 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155646265 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104527614 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108132532 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124458309 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073374118 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082210021 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172227739 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135402426 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146173003 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112557681 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09361209 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176386029 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172534307 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142028547 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14889564 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086546301 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107770884 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135319252 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200804983 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090190043 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164680239 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25178824 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084318619 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136140483 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121172605 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120283567 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108845898 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092287207 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147614415 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18795313 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139702601 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089669128 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126835544 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116407959 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116369461 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116814215 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18504769 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164208758 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131143491 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073392073 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110376761 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155398358 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134099774 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110990682 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127974452 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094123446 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137206783 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157507891 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123073811 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146927652 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118830971 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090792644 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120487554 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142378138 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129171925 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163354905 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125837494 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074544647 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124468197 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102303061 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081828808 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146459275 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076168668 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176457486 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100742778 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110241981 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126440823 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110055233 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110708072 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159843576 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146084098 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104895915 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.211503615 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109031272 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123471326 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149010739 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090569465 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109994776 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119113661 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079696568 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139577954 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07763913 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125994608 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079251409 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126329444 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135082713 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079786356 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124228841 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106007785 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103332387 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135766437 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162837109 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090224478 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084346523 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174335473 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124602629 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105139893 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147101054 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159136024 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102516368 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102591214 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152707265 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181798318 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091072465 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165402485 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108907014 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085503275 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.090036758 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12555434 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11410282 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125476122 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083345922 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119007174 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169493536 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076119744 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096606553 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134791149 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080029801 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082014307 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10639016 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106637609 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097140873 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101495079 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104658002 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138883195 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124815254 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10623056 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122234097 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247063041 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174307198 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0907409 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104575036 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107301628 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07205724 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136997164 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159714273 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08213582 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166082132 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124144473 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119931761 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119996635 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085545778 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143327057 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081667196 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072223041 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145918435 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111102975 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112411519 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15317074 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118128581 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127581145 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120436977 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136621256 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132677025 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132482119 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108022873 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089400628 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113318416 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129658139 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075216864 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092248413 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081758065 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106256907 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098065698 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08548431 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143122883 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126103724 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111614131 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114562803 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098352771 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148735608 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077782947 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12912245 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119844654 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097192492 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15361435 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153989755 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132702902 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100939398 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138161669 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07159173 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075311378 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088520181 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120298429 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229839442 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086532031 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119380964 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151044722 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131608978 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139164823 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126895551 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123256246 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15757812 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072065692 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120597578 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149968279 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124369181 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106376157 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092593872 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101024451 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145466321 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110398567 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185488494 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118278406 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124960436 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154801979 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102896426 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081345867 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104293914 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137899294 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105484667 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146266076 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100801837 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090341691 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110404111 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076500947 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100626644 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128747271 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120538658 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135532487 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117301523 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134232811 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078884886 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116803221 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122182128 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122492626 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065758049 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12007919 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162920047 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095641034 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118696785 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15472906 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080267462 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135558562 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176157157 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.292784134 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088148014 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112431026 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122303204 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131448935 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122084546 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143540723 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111086028 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137602458 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111861154 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087055132 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090347986 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100463012 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107860301 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097878032 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108029867 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116249781 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098390062 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135196514 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106624041 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112226465 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119796779 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100422807 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093715506 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099189486 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179261768 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121399373 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174319548 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101652748 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146752855 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165712963 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077049532 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081189472 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079807682 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143175743 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085841686 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132324673 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108882754 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119603598 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125493068 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144630205 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097357784 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070453347 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109880373 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133942819 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12585854 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099693748 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104493449 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1643348 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102545084 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080336672 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114847928 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117139128 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104035916 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17219845 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062686901 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105464688 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076676429 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08061911 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.277668067 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155512237 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08278081 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.106696961 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121732316 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114137825 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13129834 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106224443 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111162101 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129520082 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152744637 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130263064 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092071084 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114983409 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130432098 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16055208 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106797515 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09884189 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175385102 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154838083 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162189705 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08964262 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115967071 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115096696 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109666397 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14031716 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085216324 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165005215 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084722732 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13841614 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105118373 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090939603 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131359744 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110526607 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08979907 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150328432 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118786412 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084437001 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079096889 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119154424 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121163586 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107122457 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076786997 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139794027 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074854538 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133164366 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160971303 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082396304 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106503152 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097024314 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080082592 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107410888 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251943448 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091039789 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10298952 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175530995 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08848421 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152002302 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135986777 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115085315 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138344689 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104894506 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642124017 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080217808 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154645902 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119048856 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177636539 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1033009 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118762211 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112253383 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125467494 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147384308 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107035066 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182387486 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13504532 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117280795 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082496056 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103981254 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106133615 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089963229 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10916982 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114179001 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116352618 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09434428 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11778558 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126471152 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083997949 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098095502 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157851199 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118538378 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145226796 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141986031 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087185433 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118132198 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139109666 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081377868 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121716632 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153139092 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107250443 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100882036 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082274703 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10153202 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157699386 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07394076 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.310524424 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124301309 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112729252 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116045071 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114654452 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133442291 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109728882 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125870373 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095219381 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110879101 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116191919 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083619849 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079242244 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108248406 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114527377 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100857754 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100552874 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100853425 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156159625 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074443901 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101109086 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117530948 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146449168 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17836177 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090307101 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084637769 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121139938 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116523286 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114855398 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124307613 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080835914 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084162854 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081772044 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.080069591 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111221633 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115056133 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116697583 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111847239 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165579038 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085013644 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.2326691 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097504526 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107247274 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071930469 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080153401 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097265896 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099373665 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1082428 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111298443 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160292362 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096662442 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090999274 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091760268 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074696412 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08402705 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12840331 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109834939 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118271489 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246992508 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065775119 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112318268 seconds)
  done (took 60.01901234 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110102685 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085376585 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096103567 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146822013 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124873945 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204481722 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155797546 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190620324 seconds)
  done (took 2.755357115 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070233798 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097474254 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10631443 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085065115 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069176413 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072208701 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.235285903 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084567248 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068739252 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.10094851 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082099445 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072631011 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.431171273 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068311027 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070498341 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064567534 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069019993 seconds)
  done (took 3.481424927 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.393676391 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611772405 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.355199613 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074742817 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.555381792 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087328123 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.229925708 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131049853 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075244179 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525731992 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.406992618 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128980437 seconds)
  done (took 18.221691185 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076937584 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071504352 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.087498619 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085512841 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074870628 seconds)
  done (took 2.038936932 seconds)
done (took 108.633620132 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083209444 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.60570778 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054696776 seconds)
  done (took 2.332471315 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084880833 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087147596 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086855939 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084634356 seconds)
  done (took 1.996197632 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07566293 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078384747 seconds)
  done (took 1.80082688 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.235783768 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166552487 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09814116 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085000671 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081194612 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082429652 seconds)
  done (took 1.897612394 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073588993 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077153901 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074370766 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077654281 seconds)
  done (took 1.946682525 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079559815 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053691166 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056603611 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05881151 seconds)
  done (took 1.89412919 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089213483 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082426676 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080897517 seconds)
  done (took 1.899186148 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103977645 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088273251 seconds)
  done (took 1.844218447 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083884143 seconds)
  done (took 1.736966117 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097815518 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102870338 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134383959 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11266783 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141476243 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111217841 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086108591 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087659225 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077912851 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087967744 seconds)
  done (took 2.692836671 seconds)
done (took 22.266683943 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08064901 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37112504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362077292 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09176916 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670567468 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357796102 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.988924749 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094581661 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11675445 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069253981 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08643336 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651832036 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981830594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320593807 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965420339 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.420727498 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652113786 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070233759 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069317905 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069798402 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975301499 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070168882 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070115429 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070308681 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651613704 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375046345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070185855 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.420649129 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070219857 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071878599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357081429 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070650987 seconds)
  done (took 16.397857034 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072999805 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122250754 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075314524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086896768 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072329293 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071095893 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072936353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070589954 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12285953 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069616173 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087513964 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069700846 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073677679 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087957496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090083282 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0702043 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070376195 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070887861 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069982187 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070109513 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089029523 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069959098 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070618722 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07082949 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070221689 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082606965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070513941 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070664983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070637488 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072299902 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072610076 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070943348 seconds)
  done (took 4.141159435 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117744005 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126164864 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075003956 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106520572 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114071752 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071966381 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145261193 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096232524 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12878518 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070104117 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087629932 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069849944 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104218473 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070381588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090487917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069940603 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070495407 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070146191 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070237663 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070551507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089724821 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070308572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070915284 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070678531 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070302604 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084125915 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070689275 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07040983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070570615 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071618426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07351715 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070326384 seconds)
  done (took 4.373031448 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075011363 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078238395 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085112034 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086642867 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07166574 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074238581 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075270181 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071137845 seconds)
  done (took 2.282523633 seconds)
done (took 28.846769973 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081355207 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07108714 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074998311 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085434617 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075371122 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.0809409 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.0698638 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.0778797 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074392848 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075208645 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076829739 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069166863 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072940632 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068975628 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076298132 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069353824 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080827729 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07410058 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080889212 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081158519 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071395405 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074961304 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076557019 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080589569 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081111287 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080623459 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079167024 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074767847 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070452341 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072558002 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078837887 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085429611 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070269733 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081022449 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069974028 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069618294 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07327861 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069245139 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081164864 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078219679 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071262829 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078469628 seconds)
  done (took 4.829793128 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090646413 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094693735 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086664269 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06336627 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06824818 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068391201 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091814716 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061627416 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061230976 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090781303 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057860384 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061359838 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06503109 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054957187 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062186035 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058469109 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063590596 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056948218 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061675177 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061422326 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093815749 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055492832 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079655643 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065229196 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057684809 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063114727 seconds)
  done (took 3.467017154 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075787788 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087745987 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092463773 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133791332 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108435825 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081166639 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08117416 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097584251 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.090606593 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068702837 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073348018 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095617708 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091674809 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076158361 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069356324 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088281978 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086377171 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070891908 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075268642 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097103976 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089442187 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087476839 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098212454 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085416143 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06835384 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071214411 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07301848 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083438088 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074728301 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078348498 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073587884 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073111232 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07124436 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080910881 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07332006 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070967539 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09412263 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079468318 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08111497 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069852067 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077439956 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070522073 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094246703 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128482511 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06876967 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075671054 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073679499 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07905744 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069303547 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090300485 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080848934 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06886906 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072654263 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068566977 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069291144 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082833983 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071627599 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071289797 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079173676 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075275314 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094075545 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07452747 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085440888 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069062328 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077557537 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068625897 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070208677 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068210258 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097811385 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071147616 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113007284 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070909647 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070460238 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078386162 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077119599 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076745638 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069758423 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084956548 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080369299 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072909097 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078474485 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072901869 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072246785 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094022724 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07162256 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07093408 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070305378 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07516279 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072380506 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071013859 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082913368 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.079964233 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072072797 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087109087 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069158467 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070293504 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075024044 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073344175 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068658888 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079937254 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073854748 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070126669 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078765904 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069553359 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072198017 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08244255 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075612235 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06814523 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073734781 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07499736 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06982007 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070631939 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071783266 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071180935 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077937279 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075980795 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07332386 seconds)
  done (took 10.889283698 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169322018 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161114373 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073241379 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152457068 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07869652 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081560004 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.154471743 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097387181 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069981518 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070527561 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070870421 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11297884 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108325605 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118506468 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080921375 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069710204 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086605638 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117651687 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155119212 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150736343 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087465639 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079590087 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071770679 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071221151 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072984613 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080905079 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087775537 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079060764 seconds)
  done (took 4.518053696 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082421718 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107800911 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076944738 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093025259 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09276626 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069675702 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072311638 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071934433 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083953776 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080259702 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069074117 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075025809 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076342781 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073028693 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07061409 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076372716 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076379281 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070790424 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072947614 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074979533 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080558756 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09438325 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07358771 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069284625 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074545684 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06937412 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065379494 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087355281 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070135354 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097963344 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068134059 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074991097 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085050829 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07080211 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069766742 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069678062 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069537645 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070276466 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071880848 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068456912 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068671838 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059103597 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069439152 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081382256 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076773543 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05805556 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074563048 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07482075 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074771266 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066584717 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072595894 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071959051 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072974829 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076789271 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073491291 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075113124 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071013833 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076139733 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079313569 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070016233 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067320523 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068660439 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074577306 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067041149 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078650945 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074865756 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06817853 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069653571 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071586742 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077169053 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070169267 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074480232 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067233257 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071621853 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074320329 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071966723 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071380935 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067941436 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069286217 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069934349 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056823144 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069570212 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054867248 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072883739 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067649674 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068210768 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069623674 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074803327 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082046379 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071220772 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076257252 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070441059 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068884127 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073036494 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061885328 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072944485 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085956115 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084722643 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069738471 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067551229 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083071822 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074616053 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068549848 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057770312 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074842012 seconds)
  done (took 9.409356648 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092658931 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071644704 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086597077 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093618193 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.090003216 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077518566 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079702976 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071140214 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085440869 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07607294 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078776955 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069993453 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080817432 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080091526 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071766434 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080269877 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074093562 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08710747 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085125729 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069936603 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078343314 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082696577 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092389096 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084204314 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08295621 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084824255 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09325971 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079750389 seconds)
  done (took 3.994180831 seconds)
done (took 38.764748108 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.755198229 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.000502568 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.746096748 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.143598425 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.821327878 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.907043596 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.832384414 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.737231162 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.00055581 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.779447852 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.947147737 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.875141273 seconds)
done (took 65.225943472 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.763657341 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.880508115 seconds)
    (2/2) benchmarking "String"...
    done (took 1.969693099 seconds)
  done (took 5.526739397 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.938924004 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.442849108 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.99055886 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.736775172 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.744779285 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.077660984 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.546632001 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.246473066 seconds)
  done (took 30.463193987 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.924712682 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.963317851 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.463908637 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.491773668 seconds)
  done (took 15.573546281 seconds)
done (took 63.032605466 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.742059417 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.7742821 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.738802757 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.717162243 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.791987257 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.743553849 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.916562944 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.975911098 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.726670688 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.71509367 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.726187734 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.155121065 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.735881929 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.873859386 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.725040032 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.734686708 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.777368826 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.217505655 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.883738977 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.743716875 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.731737106 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.762294532 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.729286416 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.738780043 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.741608913 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.72944181 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.126299853 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.725751014 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.54081536 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.728736193 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.768159202 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.088824502 seconds)
  done (took 203.501857778 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.722718848 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.608383438 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.746788672 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.760226216 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.982616127 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.906787577 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.840302766 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.187123497 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.726892867 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.744473199 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.915187884 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.720882688 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.910914524 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.674255834 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.751391659 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.720886367 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.891887341 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.946149176 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.75642681 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.902475035 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.739512658 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.739288154 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.678921946 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.896674787 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.749783997 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.79318844 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.752516019 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.730388772 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.914765432 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.877392591 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.763338066 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.724873624 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.929072261 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.593947911 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.743560299 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.723469498 seconds)
  done (took 167.431741144 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.106640634 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.720117955 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.718412861 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.718803634 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.72391853 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.719010176 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.847430119 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.844497442 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.318566831 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.784948985 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.715979131 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.761567543 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.504108472 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.710921777 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.779913778 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.724004221 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.714058496 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.711815738 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.72594565 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.739662154 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.713293726 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.711697661 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.838539347 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.723881564 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.916454632 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.718982534 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.711139952 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.716109207 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.080107798 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.710120156 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.715088172 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.952237654 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.711100387 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.71017823 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.710133429 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.558582313 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.272112496 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.794257801 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.712174675 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.715820052 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.710960463 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.92795829 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.710526868 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.710695815 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.712130724 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.840901487 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.712343765 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.831521329 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.712600774 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.198346708 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.712335686 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.708158841 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.320036521 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.297507044 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.710187244 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.70814827 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.710261358 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.707463955 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.707031865 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.712162345 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.344103922 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.781321779 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.708222603 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.710716142 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.713284262 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.707940325 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.841503643 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.710014452 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.455956311 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.764183382 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.948641155 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.8273704 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.710701298 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.772351915 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799532854 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.705834711 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.705335186 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.705932523 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.70645773 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.785671079 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.706246929 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.831813494 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.714934679 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.708446904 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.75702699 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.775629315 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.706783573 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.556556202 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.709639547 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.705337735 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.970496471 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.771516887 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.70559866 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.705575714 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.705376505 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.833720786 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.827754461 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.419415034 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.709408854 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.705659241 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.49707763 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.709366245 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.846943294 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.705859449 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.845275344 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.709995509 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788075056 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.711256485 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.707202031 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.705357766 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.737905152 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.706568569 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.764934201 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.708353376 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.078057217 seconds)
  done (took 394.364355362 seconds)
done (took 769.136130831 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.389262754 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.341504488 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.45057009 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.369257963 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.342039227 seconds)
  done (took 13.538269289 seconds)
done (took 15.183315702 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.79251371 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.796951028 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.728836617 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.796461371 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.726574215 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.794189439 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.77876813 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.732489475 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.763394691 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.733067377 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.764275463 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.733102365 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.719539598 seconds)
  done (took 24.506211706 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.93546457 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.942810483 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.779895653 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.939545847 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.756889314 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.935947067 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.873436503 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.858652494 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.859206098 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.724153869 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.720939241 seconds)
  done (took 21.974469145 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.947278996 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.950562365 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.786616593 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.94263342 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.759517419 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.945771671 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.873650592 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.861442637 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.861431902 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.723703197 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.721490622 seconds)
  done (took 22.021939021 seconds)
done (took 70.147495175 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.717118918 seconds)
  done (took 3.364215826 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.742392404 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.894899273 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.722877879 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.721171184 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.717851814 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.718069041 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.721106166 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.717846255 seconds)
  done (took 15.604887704 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.716684566 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.712932845 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.716792108 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.716328768 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.714139877 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.714296524 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.717345318 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.717196014 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.714084694 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.717009864 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.715544209 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.71815242 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.714831191 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.715570804 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.715187464 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.717340686 seconds)
  done (took 29.102925775 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.716389729 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.715074192 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.714031567 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.715198353 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.715762597 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.714990132 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.715893732 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.714917296 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.7145497 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.714763767 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.716278278 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.714271047 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.715911203 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.714726611 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.715483185 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.715825563 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.716076611 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.715834462 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.719414138 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.71569295 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.71566465 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.715278867 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.717084233 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.715790994 seconds)
  done (took 42.826673253 seconds)
done (took 92.546107464 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.649914148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.371874871 seconds)
  done (took 8.671776023 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.725696839 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.724706631 seconds)
  done (took 5.149663289 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.724877407 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.725152745 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.724651924 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.725074142 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.725436075 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.725835114 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.724372544 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.724849504 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.725483146 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.725084326 seconds)
  done (took 18.907580026 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.725401956 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.724224821 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.722562244 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.725245427 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.724780179 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.722485605 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.725040353 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.726457052 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.726610012 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.72352545 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.725108239 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.723991342 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.725309033 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.723552273 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.725948185 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.723615544 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.722966294 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.723285349 seconds)
  done (took 32.697021268 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.725933037 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.725850451 seconds)
  done (took 5.108530726 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.723448002 seconds)
    (2/7) benchmarking "second"...
    done (took 1.72396816 seconds)
    (3/7) benchmarking "month"...
    done (took 1.723640342 seconds)
    (4/7) benchmarking "year"...
    done (took 1.723709092 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.723318768 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.723752168 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.723789171 seconds)
  done (took 13.722824802 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.727192179 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.8831573 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.952789102 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.376356966 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.728526908 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.729182672 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.682077518 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.729476781 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.731469737 seconds)
  done (took 19.198416893 seconds)
done (took 105.105265905 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.567158368 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.72220361 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.024420039 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.781464769 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.777254964 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.067772725 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.738961201 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.029677463 seconds)
done (took 42.365826475 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.80451927 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.272432913 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.302410975 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.550200233 seconds)
  done (took 12.784813458 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.707770575 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.251142941 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.764221352 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.301720961 seconds)
  done (took 19.729638769 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.0917547 seconds)
    (2/2) benchmarking "read"...
    done (took 2.07772629 seconds)
  done (took 5.832826238 seconds)
done (took 46.811304065 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.727754326 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.727727125 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.727506586 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.725022888 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.728564166 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.72630359 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.725256399 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.728091434 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.729136334 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.728510041 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.727825142 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.729517776 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728588061 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.726743776 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7261437 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726131537 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728992632 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.728082646 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727054395 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.726925647 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.726534386 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.729754809 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.727796701 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.726101498 seconds)
  done (took 43.120448661 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.729386967 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.727434191 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.729796972 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.731745167 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.726989124 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.729089004 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.729586268 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.726426146 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.730682114 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.730315973 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.727201005 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.727070741 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.730638238 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.727876733 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731178597 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.728033435 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.73061913 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727774318 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73011847 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.727374103 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.730698061 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727494504 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.728072274 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.730162328 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.728216343 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729012856 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.731715568 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.72843963 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730540211 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.72798176 seconds)
  done (took 53.53291305 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.73557567 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.739449479 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.731352661 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.731405119 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.730525747 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.730996038 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.731337706 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.731852976 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.731890778 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.730883311 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.73057885 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.730217805 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.73116652 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.733310461 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.731566567 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.732063869 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.731412561 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.731577161 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.732631745 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.731388689 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.732372947 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.731547355 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.732169474 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.731684141 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.733432396 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.732047631 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.731768829 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.732970937 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.731996532 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.733264253 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.732636027 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.733372597 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.733116655 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.732567002 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.732706152 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.732439365 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.738838472 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.739845306 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.732961601 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.733330813 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.732414365 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.733019985 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.733230504 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.732896766 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.732768445 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.732587687 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.733482098 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.733383781 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.733571053 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.7333233 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.73290349 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.733903958 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.733711429 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.734675046 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.733479416 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.733889401 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.732659174 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.733566334 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.733091479 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.734792757 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.733942357 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.733616849 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.733378838 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.733589668 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.733877784 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.735081362 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.734481373 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.734425932 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.734218246 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.734265378 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.734916859 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.734385587 seconds)
  done (took 126.447916373 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.734759059 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.732169382 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.731492742 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.732385787 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73211453 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.73396647 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.732215372 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735075854 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732676738 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.736510905 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736329235 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.734460712 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732071562 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.735713035 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.735201498 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.733951953 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.735638748 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.732460855 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.736140601 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.736681249 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.73577991 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.733170964 seconds)
  done (took 39.816389319 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.735926494 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.735490455 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.733947874 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.736712267 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.734002677 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.736237882 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.735440341 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.735884116 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735932939 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.73465851 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733927891 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736271888 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.733453414 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733187773 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.733595507 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.733925175 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.736188885 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.733960098 seconds)
  done (took 32.895175799 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.734590792 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.734149076 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.737502868 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.734704251 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.734481927 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.736944338 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.734216299 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.737260258 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.736989868 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.734492864 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.737184774 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736714953 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.736933064 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735329521 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737318481 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.735324395 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.736976296 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734905418 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.737655302 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.734764181 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.73473954 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.738429294 seconds)
  done (took 39.859268188 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.73699208 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.737831875 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.735848904 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.735161744 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.734846851 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.738381939 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.737991052 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.735878686 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.737928961 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.737878348 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736396177 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.73798696 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.736974732 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.738204101 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.73683643 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735642181 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.738219372 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.736630069 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.73856425 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.737067418 seconds)
  done (took 36.410125038 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.739808635 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739997839 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.740011109 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739951244 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.740531771 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.73970898 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.741579251 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.740168723 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.740608465 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.740708991 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.741256204 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.740887376 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741381103 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.740769498 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.740117936 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741463751 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.740366003 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.740091933 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.741430712 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.740430309 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.741710461 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.741790063 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.740883202 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.740627942 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.741131534 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.741118183 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.741805842 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.741331874 seconds)
  done (took 50.412281 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740996155 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.740459293 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.738571337 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.737780182 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.738474181 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.737737324 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.73876978 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.738165239 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.740599853 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.738133922 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.741015508 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.742180548 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.74135655 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.741161986 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.740889335 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.741593535 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741472043 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.739342547 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738449734 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738257132 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.741235185 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741258819 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.742628892 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.739526408 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739243768 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.741795698 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739337121 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.739362414 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.742111819 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.739256028 seconds)
  done (took 53.872672941 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.760008854 seconds)
    (2/2) benchmarking "in"...
    done (took 1.761096816 seconds)
  done (took 5.193358649 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.738488754 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.741873434 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.740967771 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.739181253 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.740704519 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.741497589 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.742027211 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.738940935 seconds)
  done (took 15.596175032 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.741578343 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.743231439 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.742731481 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.742195113 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.743590209 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.742274973 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.747655007 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.743264985 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.743312929 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.743689167 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.749086273 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.750045692 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.74650305 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.742672048 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.742322167 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743063134 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.742979032 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.743247199 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.744868758 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.743719309 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.744209479 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.744910226 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.74537768 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.740413752 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.745145334 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.75331097 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.747817392 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.7433978 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.742901385 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.747448101 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.742675291 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.741114927 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.744356763 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.743959525 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.743533464 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.745718017 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.752417061 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.744415326 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.749806374 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745455264 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.744240504 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.742779186 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.746584708 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.745732662 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.745858494 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.744824222 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.744657705 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.742010859 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.744310212 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.746895791 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.748910882 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.744454353 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.742738659 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.747149728 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.746404273 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.75145976 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.745925452 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.747149738 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.754058674 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.754730796 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.757126803 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.751193389 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746656702 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.745921075 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755991357 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.767203823 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.751915813 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.742640873 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.74370783 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.74527803 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.752006516 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757412135 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.754444717 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.746004917 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.746488718 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.746236032 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.746021452 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746350799 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.752401833 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.749360715 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.747470078 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.747395719 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.755406074 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.766498326 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.745318705 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.747501041 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.747974343 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.748548937 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.747330054 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.756743121 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.748316735 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.747268884 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.746618461 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.746425391 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.748290662 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.748533691 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.745257491 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.748690512 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.745671836 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.74775702 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.74894106 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.750169962 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.755798868 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748845174 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.751062559 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.753864085 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.747664209 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747011412 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.754301216 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.748227359 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749520096 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.748118953 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.75360201 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.745660597 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.750602391 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.75709175 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.748734113 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.749879698 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.749287474 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.748658965 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.758217252 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.772873071 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.748729908 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.749124501 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.752415584 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.759396927 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.749443097 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.752221784 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.748056293 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.746256533 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.745457104 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.750487158 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.750517142 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.74904652 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749195251 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.75099326 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.746229324 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.749811502 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.751150355 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.750894828 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.751200409 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.75050235 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.750291243 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.751561129 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.751315115 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.750691868 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.755576279 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.749090161 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.750651444 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.750384228 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.747917223 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.749683075 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.750517641 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.750237776 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.749746893 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.751429458 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.749959194 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.751451576 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.750002768 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.750353508 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.75068223 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.751087138 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.753732696 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.752707562 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.75370968 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.749575566 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.747799496 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.750704277 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.750678336 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.750102681 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.751099036 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.749875927 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.753869307 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.759168245 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.75192457 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.752507372 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.753597955 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752065837 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.752862758 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.752659206 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.753448944 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.758115774 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.752231847 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.757999329 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.752946012 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.752890897 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.752079091 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.752050483 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.751504873 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.752427054 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.754693769 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.758384127 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.763738618 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.758589811 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.752487157 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.756333436 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.752251385 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.756663907 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.756739115 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.752931747 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.75292275 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.753381861 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.75185926 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.754194839 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.754397943 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.753513417 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.752457058 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.755313411 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.753124107 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.75320515 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.753950252 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.753187333 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.755290525 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.750982259 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.754077235 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.753721494 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.752638339 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.751038036 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.752558235 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.752200436 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.753770301 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.754823365 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.760370978 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.750733979 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.754702439 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.755244127 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.753565821 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.752227045 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.754122214 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.756583736 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.753790677 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.759007396 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.754111235 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.754521565 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.75944255 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.754346218 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.753438863 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.756880933 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.754658876 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.751232556 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.756802329 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.762244705 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.754565487 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.755899755 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.754397236 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.753491408 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.755356917 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.760260509 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.751405037 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.753965454 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.755142662 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.756214687 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.752623844 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.756226293 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.756297448 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.756164012 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.757402337 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.75494857 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.755391672 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.756762276 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.756914319 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.756787547 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.757345595 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.758050291 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.763895222 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.760689683 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.756442858 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.757075218 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.756121241 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.759226257 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.755725097 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.757291924 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.75514792 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.768833239 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.765387898 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.761840738 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.757161256 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.756622789 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.76095199 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.75685878 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.759338967 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.758179708 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.756618946 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.75646368 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.755797865 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.754455357 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.757322246 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.757938057 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.757821843 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.758213206 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.761227728 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.75805533 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.756620593 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.758223504 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.757544556 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.756932162 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.757132252 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.758203536 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.759674149 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.758788354 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.75579758 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.757568748 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.763211091 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.757551343 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.758584945 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.758447705 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.757129623 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.756576561 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.759153232 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.758887516 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.760342901 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.766960337 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.759796197 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.766453971 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.759098122 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.766886735 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.759131061 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.761134593 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.767200198 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.756165853 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.757901134 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.758288359 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.760533261 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.76622998 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.760088052 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.759412123 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.764018164 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.761075231 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.759515784 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.758791654 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.760393358 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758982262 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.759368261 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.766707958 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.760479252 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.762398265 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.762321586 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.757447157 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.759993996 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.759248906 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.758188467 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.763382196 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.760292694 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.76065785 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.758753584 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.759733253 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.759816738 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.760587399 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.760110883 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.757655526 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.759693967 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.765631464 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.761229545 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.764722642 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.760549376 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.76697924 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.761072752 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.767357199 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.761480632 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.760725452 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.761584325 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.760828751 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.762120352 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.759615651 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.761234259 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.761631018 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.762600828 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.764889218 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.762206171 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.762969585 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.762521286 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.762494329 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.761092723 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.770353981 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.784589058 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.762926562 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.764797238 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.759735366 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.762794494 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.767255852 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.762814868 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.76001521 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.764828719 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.771191739 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.769458884 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.762435361 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.763152548 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.762086967 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762725875 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.762211597 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.762233622 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.762577553 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.762532846 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.762366345 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.763622781 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.766606653 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.762671356 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.762727336 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.763343157 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.763154429 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.772094351 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.763708156 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.764563834 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.763643044 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.763189984 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.763521287 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.762945782 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.763407691 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762732086 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.763717658 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.764346 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769494254 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.768649148 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.765669096 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.762522994 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.764326995 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.763023147 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.764160079 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.764857093 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.764098066 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.764547646 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.76430429 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.765571126 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.765044636 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.763324492 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.763930644 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.765093189 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.764833302 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.766652485 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.769810726 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764517994 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.761073447 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.763401175 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.764817198 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.763737101 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.764381191 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.771806194 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.767645163 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.774296608 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.774065225 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.77039858 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.76598503 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.767280172 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.771921575 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.764125843 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.766103411 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.766860202 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.765361079 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.765557164 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.768452574 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.7667355 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.772232141 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.76484302 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.765413624 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.773109399 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.765834588 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.765640617 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.766403176 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.768577688 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.766071076 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.763731043 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.766335377 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.766147026 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.77342372 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.766738812 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.766868923 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768466055 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.763568781 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.767397249 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.770299358 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.766747005 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.767365137 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.763045159 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.766080075 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.766760938 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767640516 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.763839042 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.766517197 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.766323619 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.770072115 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.773080408 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.764099819 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.769725636 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.767747738 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.767358175 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.769361039 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.767251256 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.765109485 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.764293818 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.767113183 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.769034505 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.767824672 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.770437676 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.76723473 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.76844147 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.768317168 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.769161544 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.770335171 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.777470559 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.775307936 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.764920143 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.766650479 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.768072164 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.771143913 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.768864745 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.768862988 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.768097752 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.772723001 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.76900362 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.769878273 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.768228727 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.771348554 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.782793821 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.768370588 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768259191 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.768865152 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.771639955 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.769063512 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.7660999 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.768642354 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.77053581 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.771818523 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.777028681 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.769970468 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.774972645 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.768719285 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.770122172 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.772863138 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.771510129 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.776864654 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.771572706 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.77100453 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.769797395 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.773369527 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.78408909 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.769694065 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.779125031 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.796945838 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.771030595 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.771616554 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.770876713 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.770025713 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.771093153 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.772174234 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.771337298 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.77021704 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.771081865 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.770723052 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.770556285 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.776549467 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.772743621 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.770142172 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.770288588 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.770044022 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.772192628 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.767832189 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.771297141 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.770589411 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.77161184 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.771167671 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.771482757 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.771138773 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783106273 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.780621519 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.771585363 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.770906915 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.768214856 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.774724035 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.773687843 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.781767368 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.77827016 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.7715581 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.772327718 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.772678344 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.772137791 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.76893188 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.77251997 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.771975615 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771093844 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.769314969 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.784640689 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.78028516 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.776068907 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.771834799 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.773100102 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.772567745 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.773874238 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.773607646 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.773479625 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.772831036 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.772601962 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.777804029 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.772258709 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.771431312 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.775266925 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.778738014 seconds)
  done (took 1050.247319555 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.770420338 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771533867 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.770122594 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.770396734 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770830531 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770275635 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77131973 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.770798593 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.770174687 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.77102977 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.770984972 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770929932 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.771120695 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.771957608 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771091264 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.770714608 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771456013 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.771743067 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.771496607 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771525485 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.771019417 seconds)
  done (took 38.893522419 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.774344316 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.771700031 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.771302189 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.774374291 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771075351 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.774747641 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.771898891 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774866993 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.774474717 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771840702 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.774762883 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774607127 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.771843848 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.772463633 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771714767 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775165181 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.775282594 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.772518325 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.775097885 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.772808121 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774705894 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.772539263 seconds)
  done (took 40.717691818 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.776371205 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.777240553 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.77413421 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.771695102 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.774851551 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.772182367 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.776128772 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.776414127 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.776381105 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.776194871 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.774413703 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.777191615 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.782179409 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.780869818 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.777268814 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.776410213 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.920106269 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.777194685 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.777686827 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.777314093 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.773859004 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.781085078 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.774464622 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.774110628 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.775331162 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.777866336 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.77674694 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.776724113 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.777166363 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.777466771 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.780768261 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.776898119 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.775721821 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.778625738 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.776615873 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.777680582 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.78121485 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.778102095 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.774203588 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.776506745 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.786264859 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.795523632 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.778000718 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.783670269 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.777453997 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.777062169 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.780945046 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.784975951 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.775082811 seconds)
  done (took 88.95879204 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.777326797 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.777663518 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.774702625 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.77719542 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.777408083 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.777541657 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.778353973 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.777930211 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.775669676 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.775077072 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.777787172 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.775649876 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.774491597 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.77892777 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.77896645 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.775769914 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.775938696 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.775280898 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.775916619 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.775115265 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.776248118 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.778313332 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.778825786 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.776485153 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.779011581 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.778035618 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.777066128 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.778810367 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.776544275 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.776413327 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.780198758 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.780021478 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.780081326 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.777296475 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.777484066 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.779583151 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.779631492 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.776137525 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.779210072 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.776225388 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.779770547 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.780279166 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.779724244 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.779550522 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.776885499 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.77734587 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.777451288 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.776855185 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.777400739 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.78029477 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.77978491 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.777142312 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.780217641 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.777756479 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.780589471 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.780524366 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.776758232 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.777705188 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.78082484 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.777833288 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.778477899 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.779980733 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.778221913 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.78036522 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.780794299 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.778514809 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.777972142 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.779750773 seconds)
  done (took 122.61276328 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.782311123 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.782417262 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782302879 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782649378 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782565963 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.78216508 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.782437252 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.783392617 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.782271438 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782353498 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.782341775 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.783631333 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.783239684 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.783261187 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.782344777 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782646177 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.783598591 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783858229 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.783282859 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784315509 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.783368469 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.783688262 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.783850447 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.783120827 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783639758 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.784964791 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.783149654 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.783965654 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.784519206 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.784003967 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784476934 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.782615923 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.783845656 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.784725569 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.785150918 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.784442414 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.783214767 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.784458771 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.784812303 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.784422829 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.783513014 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783858236 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.785234705 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.784162472 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78454447 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.784219892 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.784293944 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.784877127 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.782703351 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.785492658 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.785272 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78478278 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784461058 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.784655998 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.784498669 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.78424225 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785487966 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.785076367 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785884681 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.785818238 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.785412306 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.784788139 seconds)
  done (took 112.313485545 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.7843476 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784751536 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.782599566 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.78217342 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.784456771 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.78154631 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.784788107 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.783664363 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784225562 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.784454881 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78482251 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781984337 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783413592 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785748278 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.783017751 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784372469 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.783709294 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.783220452 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786220553 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.782743676 seconds)
  done (took 37.390589929 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.783306911 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.785158027 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.782640097 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.782788144 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.784798293 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.782784898 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.785569304 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785203346 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782209216 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785366473 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78500014 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.786202932 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782459615 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.783355751 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.785431752 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.782398198 seconds)
  done (took 30.26024733 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.783092081 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.78550582 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.787030805 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.786569641 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.783543138 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.783308821 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.786066958 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.783652419 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.783282383 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.786711868 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.786435583 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.787465817 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.786728088 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.786989866 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.784692732 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.78552457 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.78427614 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.784099852 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.786526241 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.787490402 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.784527402 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.78497803 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.787928783 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.787660336 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.785437145 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.785011744 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.785665042 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.784492716 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.78503504 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.787731981 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.785528681 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.78562746 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.784289125 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.785483853 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.789175935 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.785654465 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.787207067 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.787302232 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.787730517 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.788364603 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.787632067 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.785729107 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.787839117 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.788137903 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.785741708 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.788156578 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.784872007 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.786436822 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.785955393 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.785724729 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.788974112 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.788735263 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.788154044 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.788521174 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.787737032 seconds)
  done (took 99.959176049 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787438782 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78611292 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.783999549 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.786224257 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.787258285 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.784060933 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.787194713 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.783955121 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78450941 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.787048795 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.785773472 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.78748069 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785213478 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.787368533 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.786122341 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787872717 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.784952617 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.785800748 seconds)
  done (took 33.866261899 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.78613041 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.78553028 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.788763019 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.786067218 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.784975448 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.788530375 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785522851 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.787611004 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788123851 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.786562448 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785205727 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.788625339 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78775318 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.788464752 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.786241886 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785450653 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.78843179 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787708045 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.785358015 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785733065 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.788660437 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788535648 seconds)
  done (took 41.03125299 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.787130567 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.787452736 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.804771721 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.808594645 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.808443273 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.820498875 seconds)
  done (took 12.534957676 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786226308 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79051408 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786664746 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789863664 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788903968 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78675753 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786498786 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787448931 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790151727 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787535804 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787382274 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789976733 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789762674 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788658071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790618567 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790151086 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787621065 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786859526 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788548514 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790588129 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787822712 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790739995 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786990675 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788051291 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787443981 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78796814 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791625772 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788762938 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787646505 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791555305 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791040463 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788861993 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791313325 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788872494 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791287405 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791394287 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788736687 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790934063 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791296805 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789589258 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.791434642 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791422109 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791404873 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789509641 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791176933 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788734491 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788711489 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789240534 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788838413 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793324949 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791606639 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789811439 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792577966 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7929677 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792685358 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792466952 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791116277 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790236883 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791867828 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790456597 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789058922 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792342243 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789575476 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790311354 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792734403 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790547206 seconds)
  done (took 119.847127922 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791194848 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.790270413 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790389076 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790710415 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790311967 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789799113 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789926447 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790571029 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791294512 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790848586 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792914938 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790855012 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791460223 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790662972 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790955509 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792573618 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79118703 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791228041 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790820776 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794902171 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791159879 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792839124 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792173447 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791709321 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792433922 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793359806 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792130344 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792253033 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791702318 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791896459 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791431759 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792912623 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791820226 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.79161771 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791254859 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79189619 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792273703 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791589235 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79130241 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79478441 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79146865 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795032555 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792047785 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792188015 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794208886 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79227588 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793245524 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79353867 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793477769 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792200235 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792738153 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792656768 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79267209 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793193066 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793141836 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79335516 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793338676 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793313534 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793611271 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796286884 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793566013 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793147157 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797216988 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79384615 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793567871 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794017649 seconds)
  done (took 120.018516674 seconds)
done (took 2447.466314 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.841816851 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.841446406 seconds)
  done (took 15.407836105 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.955953035 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.909846446 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.79384691 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.790570327 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.794073933 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.815365654 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.810767753 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.795527899 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.795110707 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.794754638 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.794982682 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.984654303 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.848724495 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.794917387 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.795222096 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.889090838 seconds)
  done (took 51.092946189 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.799897042 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.799435776 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.811044276 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.802340145 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.799234541 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.810620232 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.833213027 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.802436561 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.832219118 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.811845755 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.866667998 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.808510363 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.797369059 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.847818817 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.811169463 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.813083188 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.890074657 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.873700266 seconds)
  done (took 34.537248092 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.875504314 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.798098886 seconds)
  done (took 10.406142997 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.790703158 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.85446558 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.848829561 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.8076029 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.80382412 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.823280861 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.810915577 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.811811938 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.822442182 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.834929084 seconds)
  done (took 69.938924107 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.802249949 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.797902451 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.797402129 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.797092067 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.790388186 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.793675609 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.796683421 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.790869399 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.458525375 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.833058639 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.804092704 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.802530774 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.796868958 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.799798761 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.795108622 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.820939232 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.919435266 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.795935921 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.795163318 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.804585688 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.797246609 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.868835888 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.811200396 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.799970215 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.829544066 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.460992307 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.804738372 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.803199543 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.918341756 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.79626546 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.797928217 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.797826031 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.799916729 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.185192078 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.092765213 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.798467102 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.810946092 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.806992759 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.795978178 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.92637963 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.798803748 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.803906201 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.724588998 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.071917653 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.909354771 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.849657657 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.144790511 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.814043351 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.800968311 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.829374779 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.80232986 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.79972534 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.8124637 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.315693768 seconds)
  done (took 128.70419405 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.792781206 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.056999402 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.950704345 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.795761268 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08402947 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00626038 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.794544836 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.843756114 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.796740802 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.024438554 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.016329695 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903796563 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.796014671 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.794353277 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.792122379 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.793016637 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.957330937 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.869027286 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.795893081 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.792852608 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826906723 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.039464467 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.922510612 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.796827129 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.819055936 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.008368243 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.921179494 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.903296326 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.258338893 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.793196285 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.861746619 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.79733546 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.796005249 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.794670304 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.952227903 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.891256112 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884504442 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.796856749 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.795414029 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.794715645 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.468454198 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993592024 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.893136944 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.93827089 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.047694163 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.000187098 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.584570186 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.794485296 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.534185442 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.960260029 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.030854523 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.028126817 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.920143907 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.798426879 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.066569676 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.796503303 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.796847539 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.03275049 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.03804649 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.899340224 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.798144014 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.796523108 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.795468254 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.044088274 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.799233755 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.893989023 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.798789616 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.799252249 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.894574032 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.901279504 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.045283327 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010073664 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.83066706 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.097281863 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.265266859 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.045189023 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.865288633 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03100954 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.801244902 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.797012954 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.883493797 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.64487124 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.99960183 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.047191983 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.052277286 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836094669 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.51966718 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.797176017 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.02662973 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.02185773 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.051663187 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.03791032 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.949632624 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.097628035 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.797989437 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.797453793 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.031248458 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.937184039 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.79936312 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.159930241 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03351086 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.370350133 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.830947172 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.109709396 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.932940259 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.800655168 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.444219007 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.798345286 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.026730907 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.841529855 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.799300835 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.798557104 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.019557019 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.779683217 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.798624945 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.525733563 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.863834727 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.801336713 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033932863 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.802602611 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065827718 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.799900349 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040209738 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.271364583 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.834475303 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.9734723 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.041218508 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.801637229 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.058408724 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.046878634 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.918288001 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.073994144 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.725029636 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.801097356 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091308638 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.802357771 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.800579771 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.973721985 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.802290079 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.03526211 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.802736105 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.087428287 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826660098 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.960946072 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.803096296 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.059726772 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.838560012 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.854389074 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.802688475 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.936129337 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.803677651 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.681045062 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.956155939 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.802522823 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.800586779 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.333864063 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.80336894 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.960106493 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.035282982 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827308355 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.876920812 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.473590187 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.802364936 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889845563 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.829775051 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.141909425 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.801854571 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.018244614 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.804600249 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.333334693 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.801665496 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.044933797 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.037009846 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.802978603 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.801256751 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.708948423 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.801860376 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.801418094 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.964410362 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.622067738 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.801878314 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006357696 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.804552056 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.935900968 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.805034567 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.881211881 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.157569998 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.803546031 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.802023786 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.802669442 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.803939335 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.803924599 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.011570617 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.834734647 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.334683024 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.942772724 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.074746375 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.122477411 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.054699712 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.850589829 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.80562385 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051741781 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805050986 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.868870022 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.805510708 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.828186667 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041728651 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.806995816 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.018238411 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.085471421 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.73507323 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.85544755 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.805831932 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.802789856 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.721085661 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.957424303 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896815467 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.805640935 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.804040648 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.922250164 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.931060193 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.021256831 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.806060446 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.029753098 seconds)
  done (took 888.02260405 seconds)
done (took 1199.833269262 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.804298552 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.809922408 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.792711376 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.808634325 seconds)
  done (took 28.956009006 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.820767731 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.810074077 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.812338828 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.811122836 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.81393912 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.810965971 seconds)
  done (took 12.61913824 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.833903127 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.803997081 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.808926411 seconds)
  done (took 21.187169407 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.879784397 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.19459751 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.925902831 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.231816005 seconds)
  done (took 9.972654938 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.81392761 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.8138097 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.813267802 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.814725209 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.82184678 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.823645287 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.814435403 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.815410449 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.82253294 seconds)
  done (took 18.095667635 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.212483764 seconds)
done (took 96.782272264 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.485848402 seconds)
    (2/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.810688711 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.794481249 seconds)
    (4/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.811237628 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.128819912 seconds)
    (6/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.235895703 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.836210565 seconds)
    (8/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.085560109 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.971660109 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.852606521 seconds)
    (11/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.832655286 seconds)
    (12/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.939126882 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.837404369 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.791088806 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.28933054 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.901478151 seconds)
    (17/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.164408112 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.985371453 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.739174387 seconds)
    (20/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.875910646 seconds)
    (21/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.980580755 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.917781515 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.485992351 seconds)
    (24/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.354463333 seconds)
    (25/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.948375559 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.88606393 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.595893139 seconds)
    (28/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.813096801 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.538144781 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.10313901 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.980545042 seconds)
    (32/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.904147827 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.178670507 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.912883731 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.899864824 seconds)
    (36/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.904978582 seconds)
    (37/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.106283751 seconds)
    (38/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.121890753 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.971742692 seconds)
    (40/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.977274189 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.863992632 seconds)
    (42/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.909843887 seconds)
    (43/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.807777043 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.762180374 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.816161364 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.060293297 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.921560479 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.809632317 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.159396642 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.104821219 seconds)
    (51/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.898568105 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.025007247 seconds)
    (53/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.063969771 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.174403252 seconds)
    (55/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.905837406 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.875517505 seconds)
    (57/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.89521031 seconds)
    (58/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.378388687 seconds)
    (59/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.833572646 seconds)
    (60/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.265093877 seconds)
    (61/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.814868685 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.164723411 seconds)
    (63/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.196584615 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.34067895 seconds)
    (65/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.816915472 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.608591832 seconds)
    (67/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.815088764 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.899811023 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.722552542 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.812280293 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.919891478 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.878768432 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.802596755 seconds)
    (74/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.153244474 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.765782747 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.043230309 seconds)
    (77/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.90123374 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.068196524 seconds)
    (79/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.646670014 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.009445372 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.289058823 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.536981696 seconds)
    (83/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.840595782 seconds)
    (84/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.94000288 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.922346543 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.039845553 seconds)
    (87/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.272888564 seconds)
    (88/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.916949771 seconds)
    (89/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.847686033 seconds)
    (90/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.838566699 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.49306226 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.816921071 seconds)
    (93/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.0064867 seconds)
    (94/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.168529423 seconds)
    (95/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.881354675 seconds)
    (96/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.112383243 seconds)
    (97/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.817220791 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.36176115 seconds)
    (99/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.881734652 seconds)
    (100/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.139810055 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.995662061 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.028929886 seconds)
    (103/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.910368728 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.796637397 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 3.133952166 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.009753624 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.00705921 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.816902447 seconds)
    (109/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.828885325 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.979979722 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.158571317 seconds)
    (112/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.000517898 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.893204121 seconds)
    (114/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.01440265 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.15246438 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.977162947 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.401441724 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.149826664 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.006470855 seconds)
    (120/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.804437017 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 2.373271597 seconds)
    (122/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.826373116 seconds)
    (123/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.961796555 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.83412811 seconds)
    (125/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.197875085 seconds)
    (126/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.105320357 seconds)
    (127/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.087715426 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.084552549 seconds)
    (129/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.097047912 seconds)
    (130/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.352742377 seconds)
    (131/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.813085688 seconds)
    (132/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.924138741 seconds)
    (133/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.064255773 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.038536692 seconds)
    (135/309) benchmarking ("sort", Int8, false)...
    done (took 4.805071926 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.802213935 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.584833938 seconds)
    (138/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.981871406 seconds)
    (139/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.819362297 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 8.020932502 seconds)
    (141/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.833860291 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.814849204 seconds)
    (143/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.160524519 seconds)
    (144/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.81583987 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.910195069 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.044723247 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.053739364 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.803459302 seconds)
    (149/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 3.59303302 seconds)
    (150/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.889305776 seconds)
    (151/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.825573626 seconds)
    (152/309) benchmarking ("sort", Float32, false)...
    done (took 5.533722936 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.157369603 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.035884315 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.804688774 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 3.14433369 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.137602537 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.77558363 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.823978748 seconds)
    (160/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.737300958 seconds)
    (161/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.907518262 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.816385453 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.319429238 seconds)
    (164/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.844545978 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.007810792 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.992009437 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.923875859 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.817339555 seconds)
    (169/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.91023998 seconds)
    (170/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.093342328 seconds)
    (171/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.292767094 seconds)
    (172/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.899453965 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.840358474 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.116727496 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.805936358 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.539903606 seconds)
    (177/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.926357916 seconds)
    (178/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.298299532 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.807730152 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.906334431 seconds)
    (181/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.933806388 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.071655545 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.815889575 seconds)
    (184/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.820938272 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.504315104 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.919805431 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.819897432 seconds)
    (188/309) benchmarking ("sort", BigInt, false)...
    done (took 6.904466027 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.823788314 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.911188839 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.91715838 seconds)
    (192/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.013693501 seconds)
    (193/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.80590999 seconds)
    (194/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.094869805 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.860364361 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.820160179 seconds)
    (197/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.288870976 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.127472034 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.855763406 seconds)
    (200/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.84436199 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.818055276 seconds)
    (202/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.905520469 seconds)
    (203/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.837108078 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.803387138 seconds)
    (205/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.326308099 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.821944938 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.66211683 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.886227589 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.072622356 seconds)
    (210/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.955891907 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.804205911 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.923793061 seconds)
    (213/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.315154658 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.11706707 seconds)
    (215/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.167268776 seconds)
    (216/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.820912372 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.371195232 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.04858888 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.481343146 seconds)
    (220/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.94767671 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.207658376 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.162629164 seconds)
    (223/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.807234685 seconds)
    (224/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.004590082 seconds)
    (225/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.821442338 seconds)
    (226/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.882537215 seconds)
    (227/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.893606535 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.150936709 seconds)
    (229/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.836795813 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.820464544 seconds)
    (231/309) benchmarking ("sort", Float64, false)...
    done (took 5.564962756 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.843846771 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.820992072 seconds)
    (234/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.015289411 seconds)
    (235/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.004910409 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.784926005 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.509205533 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.815134211 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.956477799 seconds)
    (240/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.903158274 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.122904294 seconds)
    (242/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.951858453 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.11248007 seconds)
    (244/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.808428612 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.085934256 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.898017046 seconds)
    (247/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.981869119 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.755892644 seconds)
    (249/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.966028358 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.766427892 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.856929886 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.985282237 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.623484161 seconds)
    (254/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.969203383 seconds)
    (255/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.823287641 seconds)
    (256/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 3.258223491 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.825751056 seconds)
    (258/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.842091132 seconds)
    (259/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.428219282 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.908604182 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.821649861 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.323188495 seconds)
    (263/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.853416844 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.894986053 seconds)
    (265/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.950318368 seconds)
    (266/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.851342819 seconds)
    (267/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.976449641 seconds)
    (268/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.912906534 seconds)
    (269/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.289464624 seconds)
    (270/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.914320225 seconds)
    (271/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.942154329 seconds)
    (272/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.824174164 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.951833221 seconds)
    (274/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.807570489 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.769625571 seconds)
    (276/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.185457124 seconds)
    (277/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.238395742 seconds)
    (278/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.91273774 seconds)
    (279/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.897497001 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.96653567 seconds)
    (281/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.73008231 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.176826 seconds)
    (283/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.172851967 seconds)
    (284/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.947884563 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.808782777 seconds)
    (286/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.897601162 seconds)
    (287/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.958584541 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.752187264 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.918037386 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.906544484 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.967600309 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.810104071 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.825947314 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.555211408 seconds)
    (295/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.850608429 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.390466875 seconds)
    (297/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.181305484 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.862278974 seconds)
    (299/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.804322561 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.019587487 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.075013766 seconds)
    (302/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.052817824 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.240450808 seconds)
    (304/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.384008951 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.930086505 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.845368931 seconds)
    (307/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.054961101 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.346834129 seconds)
    (309/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.366048433 seconds)
  done (took 994.696942604 seconds)
done (took 996.500518172 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.85669793 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.851273473 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.834426105 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.85569456 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.94723912 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.86533058 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.844873297 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.837092999 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.883362007 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.884511561 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.835463973 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.864489906 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.836014012 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.835578147 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.835092198 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.849533928 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.141989453 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.862414874 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.852867256 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.846432424 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.853170713 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.835682568 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.886253236 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.866352962 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.840491565 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.838188971 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.839789173 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.855893607 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.948730159 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.840046548 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.838693786 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.847784723 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.142489021 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.859631939 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.831280811 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.85583858 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.84840771 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.845504817 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.840272701 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.869155867 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.233654898 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.869661945 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.838499401 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.837951844 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.837202259 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.840600439 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.838365524 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.842191793 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.850485023 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.851504467 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.230379287 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.884547521 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.840949889 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.838237896 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.848506605 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.837916828 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.841388581 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.854214169 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.857058937 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.854580167 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.13388845 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.865410268 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.839902771 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.855395372 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.846043604 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.267148504 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.865289286 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.841206186 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.233348445 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.875433586 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.267306407 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.878752961 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.840401238 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.852975298 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.871235247 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.144719731 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.85698035 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.838302541 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.847487668 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.837675444 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.848379164 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85222142 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.844009767 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.839703784 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.853963712 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.869836991 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.849222465 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.840489192 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.848729432 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.85968199 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.846453835 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.850840494 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.842502496 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.834719216 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.851073474 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.842614279 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.843055403 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.843251929 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.844139061 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.849849732 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.234173149 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.888216732 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.83700104 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.837287573 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.840213182 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.85482329 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.234242746 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.872888171 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.86147965 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.887591739 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.842154137 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.136786395 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.867382327 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856759624 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.850490861 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.844484549 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.836620839 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.136560966 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.258159529 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.88786869 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.84307024 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.840777133 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.857138506 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.843004673 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.838262596 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.588845571 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.866321579 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85582008 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.963023101 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.852870993 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.873164201 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.841074363 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.845023586 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.872817543 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.859062417 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.87523053 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.844709703 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.858812255 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.858182345 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.840340456 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.852978087 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.853324246 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.843616306 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.846983497 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.837510054 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.8742344 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.85541612 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.855550888 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.863697131 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.964263419 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.839933142 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.137337952 seconds)
done (took 289.520710736 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.909745843 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.839305753 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.940220839 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.839967797 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.922452369 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.926638095 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.836753786 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.837630901 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.838377753 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.212933888 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.838655946 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.839261081 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.835254989 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.83866677 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.924140887 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.840633909 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.839410855 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.176763686 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.843137048 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.914248951 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.836842347 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.839353913 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.841091895 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.215636678 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.833684716 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.8388214 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.914285495 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.841718168 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.18064307 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.839388459 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.838439219 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.180639409 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.933542191 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.860250111 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.851892863 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.848699402 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.924698325 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.846553654 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.923162145 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.921846767 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.942343523 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.883263507 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.841350507 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.838687259 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.845627894 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.844644153 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.839584409 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.870837974 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.838114211 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.841211495 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.179052775 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.852846814 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.851364036 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.842094016 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.840493619 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.865908932 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.840377439 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.845104975 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.935095113 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.845141771 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.905558563 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.217925009 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.215914333 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.843700866 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.843493723 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.841150152 seconds)
  done (took 182.425955465 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.909284192 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.916939105 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.909652714 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.846528521 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.894510755 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.911084208 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.847208453 seconds)
  done (took 15.005179753 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.850719925 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.845106904 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.89370512 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894570513 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.844951149 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.993909643 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.844160464 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.856251318 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.842746495 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.896226246 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.84602389 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.844884228 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.852352424 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.83660888 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.893122957 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.856418984 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.960027421 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.845949586 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.846967101 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.997444576 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852785637 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.853605625 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.898622623 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.857046213 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.847578351 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.852304892 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.430619493 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.846819853 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.844853251 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.846014086 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.843961952 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.887918185 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.847277887 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.838761199 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843708169 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.960670732 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.846999761 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843424893 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.845654774 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.840401776 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.846466607 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.845879075 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.846400891 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.844229621 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.846609696 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.872107885 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.847288956 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.846244995 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.845822138 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.846637367 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.896478873 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.847677329 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.843798702 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.845030695 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.901678955 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.853995394 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.848200747 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.843933957 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.847279376 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.844876615 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.997746211 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.895451732 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.846482358 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.894970192 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.8478518 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.847884031 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.847942561 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.847458432 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.942278476 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.847765431 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.896370842 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.845313299 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.006291638 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.871828613 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.84901933 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.851714943 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.850778981 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.849754262 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.850145976 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.854835794 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.845632723 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.849174311 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.854748138 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.846558815 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.846065394 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.960205792 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.956270301 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.845958755 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.861254555 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.855525789 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.846384709 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.901992756 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.848405057 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.845904128 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.902826225 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.964836842 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.903950112 seconds)
  done (took 203.583903524 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.85259406 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.856496148 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.850148573 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.864700195 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.849417972 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.847583402 seconds)
  done (took 12.896334759 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.850002276 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.850365554 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.848550653 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.848460191 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.8489073 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.851705763 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.849603898 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.850838212 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.853233712 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.84876726 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.850620716 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.850273551 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.851845323 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.850831681 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.851387898 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.850072161 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.850939961 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.847427941 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.850110306 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.851267951 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.999994369 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.850811183 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.851117579 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.851781468 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.856502573 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.850488771 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.858591333 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.85041713 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.850564304 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.860372182 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.854936108 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.85178361 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.85215559 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.856580485 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.855424324 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.851334599 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.85426795 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.852367289 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.848428185 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.852614319 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.852087062 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.85210736 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.850992545 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.852055178 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.852838961 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.855466659 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.856002987 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.858376222 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.852214022 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.852750431 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.853024178 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.850396812 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.853155483 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.852641033 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.853534196 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857259453 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.856916879 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.852828437 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.852026204 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.853010936 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.852999494 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.853342247 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.854464339 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.85809704 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.859668595 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.853362828 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.853877888 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.857890171 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.85380956 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.853843478 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.853813201 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.850020614 seconds)
  done (took 136.318886745 seconds)
done (took 552.009830475 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.034861373 seconds)
  done (took 8.813551895 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.00791745 seconds)
  done (took 8.829561454 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.043069741 seconds)
  done (took 9.82452133 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.873369344 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.863227797 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.856969103 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.856656189 seconds)
  done (took 29.249817058 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.957726841 seconds)
  done (took 8.737522162 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.869590918 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.846347638 seconds)
  done (took 15.531206221 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.990276426 seconds)
  done (took 8.769950787 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.934351842 seconds)
  done (took 8.736360614 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.858043411 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.879390463 seconds)
  done (took 15.531357631 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.832160116 seconds)
  done (took 8.612374131 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.455441841 seconds)
  done (took 11.33563434 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.867511174 seconds)
  done (took 8.752607893 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.888143701 seconds)
  done (took 8.669120949 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.875574856 seconds)
  done (took 9.655837703 seconds)
done (took 162.827953898 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.858617144 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.846283084 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.845641929 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.843100409 seconds)
  done (took 29.171180955 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.884749535 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.883425551 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.886695063 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.892887323 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.884935534 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.881408658 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.874277769 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.875235796 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.891886353 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.883966115 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.882480038 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.883398571 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.881931763 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.873957214 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.880974083 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.881374866 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.890361952 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.880854297 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.873461452 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.881226037 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.845293924 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.88940637 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.881646602 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.845580219 seconds)
  done (took 46.888713717 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.041395943 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.914569449 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.99604741 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.893700905 seconds)
  done (took 9.615673732 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.892804463 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.894528974 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.906726165 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.94458614 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.968480344 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.901661469 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.862395719 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.859730605 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.847545025 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.894193829 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.96669311 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.883667448 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.979123078 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.83750807 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.024633374 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.834746313 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.835036383 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.887970721 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.939552449 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.951647105 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.835621047 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.885736332 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.889037031 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.879007641 seconds)
  done (took 47.372709893 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.835073531 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.839260388 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.838042338 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.831631157 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.831330895 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.831996114 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.840026073 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.831394859 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.851749156 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.831667407 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.82936897 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.830415618 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.827884861 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.828559368 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.827912404 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.841238088 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.842533483 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.828329051 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.829633092 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.833484322 seconds)
  done (took 38.44297041 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.820860748 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.672738073 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.171707845 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.073504837 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.818321132 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.817835629 seconds)
  done (took 31.130364095 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.838209566 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.825952872 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.820614551 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.876731462 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.957027133 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.825233485 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.821056836 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.831628153 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.864993311 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.879778572 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.841167878 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.848424168 seconds)
  done (took 23.981398908 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.813801138 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.816889973 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.814310971 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.829405541 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.82763018 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.823562097 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.823767961 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.811037603 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.830880828 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.833531163 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.823703047 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.828685052 seconds)
  done (took 43.627582575 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900022207 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.70060469 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.886988547 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.538798212 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283639963 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023009047 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.325607928 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.148856946 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.815154973 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085111101 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.815188777 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09732917 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.105352886 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883032508 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.852550205 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.346172093 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153480313 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097371764 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881687055 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.597118813 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230988268 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.80122719 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.598674215 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.97932127 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065651882 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.989042873 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.114874736 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.810575577 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984773581 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890416087 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864734008 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854344279 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128383551 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235798641 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95374137 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865498266 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.507831273 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.575721228 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.839841683 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.546769892 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.742968171 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.985100739 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862964696 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856203102 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78998049 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439512137 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196785466 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.860503833 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.566060325 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.855945466 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867199879 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944145125 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.859775594 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.670484258 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807007917 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.136564279 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.853435609 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862313872 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.423222374 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908867825 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.545052994 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.795306279 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.04979472 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.567777517 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.322898619 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.003871328 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.860021466 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860297617 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790868749 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.572541064 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977307008 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.002267871 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.876429758 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506326489 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169438351 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.922414586 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.938910892 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152089106 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.70883388 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.795172821 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085242195 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.808300514 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792839134 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.722578345 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.791931468 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123572978 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895118325 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.495008877 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90056958 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.193560644 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.868183723 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873987406 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864390816 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.081795296 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.739808717 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858352633 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.598345244 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.149606889 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880245348 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195783612 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791960571 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.862025455 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113584971 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.070454953 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.174734538 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.333295242 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014949415 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858512166 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.950081332 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.852139642 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.869380272 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.132812997 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915567064 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924176411 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988065921 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.816251214 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159095255 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887532232 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.032602188 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.868861307 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124954239 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.186212134 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153403743 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922190942 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.865339104 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.853546021 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.577587626 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.481965132 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.126265966 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.857254968 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415758919 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.875504534 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.856400915 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787090776 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.639451522 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.847694472 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.9803378 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.086499621 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.732018925 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259426112 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790747005 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.000067105 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.968232885 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.080263054 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.495224644 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.927698706 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10829239 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32406774 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.154218852 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970461758 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866341513 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938373654 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866899737 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.221251906 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.214408201 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.847909487 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.846851301 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.557825518 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.934057302 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86447147 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.866565168 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.655011566 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147424696 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.883040739 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.868600978 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.744804735 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.869298343 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921003439 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860521173 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.864681877 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.429830033 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.621113419 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.86410293 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.462045674 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076460123 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862267977 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.544511609 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043709474 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.943672089 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132177614 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919073003 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.795293148 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.573290493 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.551465905 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858975583 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.79242017 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.857967137 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86481277 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866529223 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.235614252 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.134236055 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89608342 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.614571139 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.97735609 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874826304 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.871021474 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862553358 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.388228083 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.925313217 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427523937 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.984052259 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000329373 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.876456181 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.796652974 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.865017239 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.864987504 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.86062509 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.814455439 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911131921 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.573089807 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314872522 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120474458 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.555862812 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88271328 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.59366776 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.990687819 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.93744283 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.630975645 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889710888 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.973743738 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945237556 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.875250985 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.584493944 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.643386008 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430047062 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191724823 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178157098 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306165079 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.295273081 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.245221104 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202878509 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099355322 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.393629147 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927529423 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.209141144 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809525183 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949335195 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.507535922 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231296005 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880943012 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093918137 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253627446 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.693825687 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024588645 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077292536 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899836195 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.720621587 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.907392979 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.070070388 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00784579 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.645334477 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084430234 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198579142 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.590015876 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.981538178 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.865320828 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.564823697 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949925507 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.579480348 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.228129571 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.460532291 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.868193481 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35962062 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.875570007 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.311963594 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220208435 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.267464125 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.953858495 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801996381 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87738941 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.876558022 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.867220928 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.84433602 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.747157847 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.121390256 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878881205 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103441783 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.227339356 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136349062 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.771239212 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.874090091 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869497285 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164342096 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.604838411 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109767896 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.267837339 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.452569763 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877236116 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.80278304 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802615729 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.561504284 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870316919 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.843103148 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094506063 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.053257954 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.822600133 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315254032 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189186485 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.123016819 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.883224697 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141384439 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142756342 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.604097872 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898498665 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.968850811 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.622298992 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.984800899 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.138650569 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.106235714 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.667436105 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.100794905 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.922984549 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.649639308 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.86907541 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084339782 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.138863717 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.859267947 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11632049 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.591932955 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.881882646 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257106669 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927145445 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.860221657 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.039464392 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.064822275 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881553004 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955444656 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881184655 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.881548412 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.882163023 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918349122 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.862142188 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.002559932 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.884782223 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959590698 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921787367 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.452359926 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.88325454 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147264389 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226740107 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.204671834 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930497013 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.871625807 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878827598 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805274193 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007541782 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.318009595 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144777281 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.001202302 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.170531956 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899181865 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.600378323 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.216021997 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197825706 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149115229 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.771399623 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868449568 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.981671026 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.134924784 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87931213 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.076309216 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097943668 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184424793 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336659594 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.062570266 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307705167 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135467197 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.227506277 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.860343568 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44697012 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.869319036 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.660783523 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.920114008 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.868604347 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153398087 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882742071 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250316708 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.895809714 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.069468894 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.387910353 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.678111842 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238124317 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.869376696 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.932971692 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15130378 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.26402202 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183317328 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946140023 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883527975 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.585994855 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009131122 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.749215704 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.149255098 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.875397974 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085845662 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.579211272 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.880989203 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150678438 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173689761 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.864571996 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.763425698 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891690489 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.878304289 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092847567 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136691664 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119212002 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875203214 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.87270501 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.688081266 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15007418 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924220318 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800404519 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.870034899 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963044954 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.114045308 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883183917 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.556289265 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.574048793 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168901097 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.787452416 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887730124 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320276566 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317818643 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198743641 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.387007447 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108771773 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.426892035 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.752627317 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246506117 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.871813574 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.321637544 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253184157 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.872254597 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.427656326 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987989238 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.142099786 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190977441 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.874928228 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707735423 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.92302694 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104186516 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550127486 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825831238 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892504823 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.937191978 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.880532206 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.009331353 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884398977 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.804008178 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7880195 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.702009525 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374961475 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.879707651 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.875281897 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.703290375 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.503913483 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982286614 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010393696 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872342361 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.590263061 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.163830922 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.121825267 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431342159 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.942294796 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.870952986 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869225574 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794923793 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.067910994 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.248769063 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174088083 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.284967527 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.983876705 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867656272 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.081732896 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079193755 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.869960323 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026964603 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318468165 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986258929 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.635031998 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.55126211 seconds)
  done (took 1686.298207025 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.878407662 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.870134378 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.882891327 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.900579037 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.877808285 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.940728458 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.88507121 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.902579799 seconds)
  done (took 56.931682483 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.848934676 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.075228098 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.862557234 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.858163145 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.886637633 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.85569414 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.050477161 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.865876071 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.877136236 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.867932767 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.852860244 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.861623021 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.182856529 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.880010902 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.85014146 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.861040153 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.861074985 seconds)
  done (took 74.189592414 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.855195634 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.041190115 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.88896276 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.87876612 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.801194831 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.873017324 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.970347839 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.885865378 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.855231199 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.083023343 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.190293609 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.855615799 seconds)
  done (took 89.960482437 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.867492804 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.858332982 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.862831758 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.858290587 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.861178035 seconds)
  done (took 11.100904827 seconds)
done (took 2190.577597194 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.102679679 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.077442549 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.090235701 seconds)
  done (took 5.949710623 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.002117206 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.048234756 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.170616244 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.17642284 seconds)
  done (took 10.181263379 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.145851035 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.224134095 seconds)
  done (took 6.1484622 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.233276731 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.880962701 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.255008847 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.851004956 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.854139462 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.853321447 seconds)
  done (took 22.342885334 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.858169037 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.860513332 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.857593026 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.859682007 seconds)
  done (took 9.216431456 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.836827177 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.679729688 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.839396468 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.853752334 seconds)
  done (took 20.989155509 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.607469674 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.255003335 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.60146042 seconds)
  done (took 9.244875908 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.45605234 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.697582544 seconds)
  done (took 8.934098474 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.114786321 seconds)
  done (took 3.894672605 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.88547002 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.1280265 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.383819405 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.39552416 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.469175863 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.703058242 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.165275107 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.087759108 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.304554586 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.319580386 seconds)
  done (took 24.62354053 seconds)
done (took 136.778128888 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.217742744 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.85272364 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.057174276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.234931951 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.083828181 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.124061284 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.067865112 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.222881885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.695816429 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.692291451 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.197016234 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.080878112 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.020669124 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.095584245 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.027079821 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.224478554 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.076040846 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.236742585 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.900984734 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.116286199 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.08770096 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.847967268 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.100952942 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.906624109 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.10546368 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.007716561 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.453032193 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.250603825 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.111578462 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.494738357 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.065836489 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.337656709 seconds)
  done (took 169.77665698 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.671255086 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.878513672 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.898831423 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.855477275 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.373245021 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.892552531 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.855382494 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.853835756 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.0996675 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.04680446 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.890781728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.32475737 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.891169173 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85514092 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.896727799 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.854950653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.22492494 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.734811076 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.88891233 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.890301829 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.89237991 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.120094482 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.884526412 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.176279459 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.167588704 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.884796879 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.836321468 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.882866776 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.885854463 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.88243749 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.885040374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.856396192 seconds)
  done (took 208.063949648 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.856551641 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.857290577 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.861560808 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.856722591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.863446224 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.871432514 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.859059558 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.857741395 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.345222603 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.39539132 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.882801901 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.873013787 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.873699078 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.856085094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.880197705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.857305982 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.88020413 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.884099602 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.883043809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.875053843 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.87408897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.628336495 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.875815338 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.633243384 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.873149563 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.875561877 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.858623545 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.876382615 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.879891681 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.872795124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.878136439 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.861074409 seconds)
  done (took 220.174177009 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.057935646 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.866202753 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.867370351 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.812478015 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.86778782 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.866977076 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.827002118 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.065609095 seconds)
  done (took 19.043591582 seconds)
done (took 618.849068236 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.385213468 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.216138663 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.044815884 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.889290853 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.122946097 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.92398091 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.886393941 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.953210881 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.616939735 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.959731886 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.576205764 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.90762624 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.672846659 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.918084367 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.008502555 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.946148275 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.440116 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.526438554 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.065132425 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.942690754 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.061779448 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.833917145 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.974721127 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.641714013 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.688269058 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.881015065 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.074531875 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.441127509 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.896920279 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.051754173 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.64396293 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.292520368 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.901221396 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.885431314 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.943626057 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.925451195 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.257636859 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.899767484 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.006079936 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.629831089 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.950920781 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.49750163 seconds)
  done (took 103.169539804 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.857391792 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.856026141 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.856742886 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.85572029 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.857687941 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.855931568 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.856432169 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.855865608 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.857879886 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.857705234 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.856376804 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.857977322 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.855750441 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.857452856 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.856147157 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.856194544 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.856646774 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.85881795 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.856919174 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.856593264 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.856405635 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.856474552 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.870730775 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.85769231 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.856859929 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.858715232 seconds)
  done (took 50.093132555 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.870931648 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.020913933 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.130780556 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.890861859 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.86936992 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.872820886 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.888268038 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.8732711 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.872039322 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.873169293 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.961865527 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.87712436 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.889377882 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.129825371 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.887617827 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.871513832 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.871663822 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.871563993 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.027340841 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.886315642 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.889806474 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.874597161 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.890001008 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.884099698 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.871688883 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.871119928 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.875207709 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.345826752 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.880059329 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.964841956 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.915894748 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.894947344 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.289066568 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.144106811 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.926349467 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.880580676 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.871860028 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.966472027 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.876620394 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.872841305 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.890506434 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.875537824 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.133274751 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.369195015 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.885566838 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.872020253 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.361552021 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.975339261 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.912106813 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.880647176 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.134959459 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.888729789 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.873587276 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.872939576 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.909408895 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.879784113 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.871017197 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.192857189 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.884751222 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.889875858 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.877432201 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.875725831 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.034731654 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.881119097 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.023354884 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.881052027 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.880626937 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.87277936 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.134861587 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.891509028 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.3793225 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.888429659 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.873462577 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.964561381 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.025844977 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.385226991 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.885617525 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.035712631 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.304849969 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.897234863 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.879455056 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.336506938 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.90248731 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.880722668 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.876762224 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.876723901 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.875018013 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.91915286 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.891870314 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.301609695 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.383371163 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.220340969 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.901286882 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.888859691 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.875202893 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.197345167 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.883361257 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.876798279 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.129879122 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.392337025 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.88980952 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.881189174 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.364443323 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.891195078 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.893426737 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.881189784 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.138204186 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.892403899 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.921442182 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.874705064 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.885503204 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.875587096 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.896043343 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.881656038 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.877892693 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.350502185 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.98638373 seconds)
  done (took 232.63473421 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.871245113 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.874454684 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.867883412 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.873912069 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.870769847 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.876643226 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.870742249 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.871384649 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.878853452 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.87108202 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.870279398 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.872350164 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.873272052 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.873323791 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.974870852 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.877349422 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.527037441 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.872260728 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.874829494 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.869136889 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.520767297 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.878204124 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.872034425 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.884279873 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.874919514 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.873583982 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.880700944 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.989466231 seconds)
  done (took 167.788538504 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.879900576 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.99518607 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.898739924 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.90299431 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.886593569 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.877982682 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.901640032 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.892259127 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.884236606 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.874401283 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.874117541 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.942347978 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.888269042 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.978796095 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.912264063 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.905456469 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.982284225 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.886046807 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.88123791 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.878391587 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.909229589 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.874647742 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.93833367 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.006568429 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.900000239 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.996423646 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.883291491 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.878909266 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.879635435 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.99622495 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.895630504 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.942432843 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.905684403 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.89745694 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.003690064 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.999503394 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.98727163 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.911087175 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.880523768 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.878128837 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.879131525 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.865299843 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.00031916 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.898282963 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.883672984 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.986717808 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.899262102 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.882288184 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.885842982 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.87766277 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.892057482 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.898365738 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.949355069 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.010409127 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.915141781 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.904567927 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.906179091 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.166727135 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.887457286 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.982068476 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.871893911 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.001186966 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.899216817 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.869245024 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.881417576 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.885484729 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.908237797 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.909632872 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.983408612 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.887339364 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.981832978 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.916122639 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.887673346 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.879040024 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.881379379 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.002034941 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.003970608 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.915501968 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.915990124 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.909699621 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.876409656 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.880791214 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.87101325 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.897769121 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.886968247 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.000916664 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.001790406 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.889422984 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.88289637 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.882885805 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.881676884 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.908281625 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.007443132 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.919961254 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.975956806 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.949970491 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.953870437 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.894835868 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.894571023 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.886805482 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.948153665 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.894016435 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.894505596 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.220816966 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.953656471 seconds)
  done (took 203.704139975 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.347077384 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.933447647 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.939790717 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.205457034 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.301162697 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.725967157 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.926633136 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.932781288 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.953112216 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.117155246 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.004696557 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.95262067 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.917992708 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.903564435 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.927734009 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.949735527 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.939473564 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.268362078 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.05069292 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.008975439 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.915656511 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.21157919 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.257278625 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.357976377 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.966603941 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.278193268 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.611146969 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.07309787 seconds)
  done (took 61.788814956 seconds)
done (took 820.96545384 seconds)
SAVING RESULT...
DONE!
