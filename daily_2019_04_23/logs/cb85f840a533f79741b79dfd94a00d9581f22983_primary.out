cset: moving following pidspec: 1472
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.293109504 seconds)
loading group "string"... done (took 0.583442915 seconds)
loading group "linalg"... done (took 7.1656051 seconds)
loading group "parallel"... done (took 0.165690714 seconds)
loading group "find"... done (took 1.118825939 seconds)
loading group "tuple"... done (took 1.979150633 seconds)
loading group "dates"... done (took 1.261807835 seconds)
loading group "micro"... done (took 0.234677058 seconds)
loading group "io"... done (took 0.965849626 seconds)
loading group "scalar"... done (took 38.899178571 seconds)
loading group "sparse"... done (took 12.278701636 seconds)
loading group "broadcast"... done (took 0.962213449 seconds)
loading group "union"... done (took 13.196144775 seconds)
loading group "simd"... done (took 4.418658769 seconds)
loading group "random"... done (took 8.919765837 seconds)
loading group "problem"... done (took 1.922341986 seconds)
loading group "array"... done (took 21.122416543 seconds)
loading group "misc"... done (took 1.916435857 seconds)
loading group "sort"... done (took 3.194753063 seconds)
loading group "collection"... done (took 17.874255091 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533984019 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142263372 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118181664 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13954976 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184815987 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133052155 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145856877 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085843432 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.048023017 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163220273 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14021449 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.47745759 seconds)
done (took 5.070344911 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.204622135 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087068218 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097180672 seconds)
  done (took 0.884513351 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067118155 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126853311 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081222799 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069057692 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067061808 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082130768 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067961776 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066843775 seconds)
  done (took 1.269860539 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075179795 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069154806 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085716108 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069338044 seconds)
  done (took 1.007999118 seconds)
done (took 4.153321131 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.898534045 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.237186989 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190272283 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453885307 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.14886997 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189617122 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.659081863 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326014038 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210929891 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10145751 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105994112 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.377247754 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107517519 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.663611215 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078382549 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106310024 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.15946964 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.4378613 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082674181 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083686848 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104797379 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143003978 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101485782 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078652262 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170137694 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070738497 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147914657 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096351465 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069115582 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.244242169 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.193468609 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680181654 seconds)
  done (took 10.462682014 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101250455 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117234596 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070263384 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140630883 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101896763 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087688284 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072269838 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083918297 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092115078 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.159338803 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115270107 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106885717 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08345331 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071217456 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101458448 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212843653 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108885273 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085873802 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088140598 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076849817 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122641965 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083823509 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09458897 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079593045 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153729502 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195946351 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111932675 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112238549 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070703643 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081281379 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132234111 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14248273 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067243853 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083120809 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141087894 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111618815 seconds)
  done (took 4.581104913 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.023081107 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.113087382 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160739654 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09284055 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15383558 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085156319 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110509207 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083744993 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100456752 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230935905 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.070789942 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.457384306 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127956635 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101768339 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0692457 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083227024 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069663424 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.503911454 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146046389 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104972943 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102677875 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075519731 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086561393 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367858048 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069033467 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067917081 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085231613 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060697598 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146169754 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069491387 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.210635617 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089461437 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088801052 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102335154 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19790356 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095132157 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124384312 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067797048 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082901295 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169628136 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075243693 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066877187 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105837435 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119554884 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104884289 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084191793 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068713139 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181290654 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067997934 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099959995 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.894128314 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16631852 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078327287 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067866945 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289830031 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084715643 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086289115 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065696044 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273330855 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.14943033 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065782048 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08465254 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067992388 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066840571 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085305886 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366169847 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068636335 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.770906172 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083634686 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077657764 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084145687 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068992153 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07314277 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090238937 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085443397 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083337479 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070038432 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066447709 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083821963 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069994802 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.101789695 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204847284 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067956196 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083881382 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065623598 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06509354 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102721713 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097091983 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085650753 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067110855 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116686897 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066247037 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084713189 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069353269 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119666421 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068196266 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102244997 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085700275 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114710213 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083089744 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.138247783 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074135497 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.112480571 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073104497 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114447076 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094128437 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068477835 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153395649 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06580717 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082926647 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067593217 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065427532 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085042688 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068618827 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098788584 seconds)
  done (took 20.983248682 seconds)
done (took 37.758642554 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291049308 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093945701 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091430937 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075519648 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.091856441 seconds)
  done (took 1.425766811 seconds)
done (took 2.18239687 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120434856 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116749965 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06455086 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112504421 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065249298 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117755228 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114547049 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082281277 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118053741 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065071743 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112639682 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065307505 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064142969 seconds)
  done (took 2.001224766 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083889185 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085832355 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086488087 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083184323 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079390973 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083141937 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080891338 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106056576 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081693103 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088919371 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06559451 seconds)
  done (took 1.678033606 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083579952 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085132344 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085968218 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082177232 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080346165 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082794947 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081244442 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103374079 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081768023 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090706491 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065837866 seconds)
  done (took 1.680279895 seconds)
done (took 6.105762063 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079537248 seconds)
  done (took 0.829960504 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.696121554 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.678086842 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085036846 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133741725 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223567472 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155128083 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.439227695 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110397772 seconds)
  done (took 10.443626775 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09029927 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100203318 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071327334 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086742681 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07306678 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085854589 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07434005 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070191058 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087521544 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073632842 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087587495 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073105257 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086488901 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072449589 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071074561 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086178551 seconds)
  done (took 2.107501803 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094246655 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092927365 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092522869 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077481457 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090056633 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073622222 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093116836 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075182186 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088303794 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074371777 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093190937 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075491006 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089551223 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06700747 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092192384 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077713237 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088066261 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076909469 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092004669 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076955657 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092691303 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066807071 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089288272 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077079584 seconds)
  done (took 2.867856527 seconds)
done (took 17.005993042 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131577112 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076601091 seconds)
  done (took 0.963003396 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082641314 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099216214 seconds)
  done (took 0.945934072 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084374324 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082477943 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090107303 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093981011 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067970989 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082223447 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103259255 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068167569 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082637879 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068364884 seconds)
  done (took 1.586468563 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070822926 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093855814 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072272222 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097847734 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076174485 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081953145 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073951765 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085073378 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079648089 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079901669 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072449316 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.0997781 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072700781 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101299148 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074601814 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085165439 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087209053 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069594072 seconds)
  done (took 2.240442456 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068218602 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068585663 seconds)
  done (took 0.903669373 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06883402 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064471969 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083074381 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06857556 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08039655 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064489641 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080887445 seconds)
  done (took 1.277778134 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.398956853 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109601186 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.242939892 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08897794 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10429607 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263024897 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084259997 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072415631 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088751918 seconds)
  done (took 2.256610195 seconds)
done (took 10.93634256 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081253019 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087688242 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111662885 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416536862 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108091173 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067408864 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132770958 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.218657439 seconds)
done (took 1.987288866 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126708579 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.615775631 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.40389039 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.21321764 seconds)
  done (took 2.001935852 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.380814068 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093442451 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075110324 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068479136 seconds)
  done (took 1.39395553 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068330863 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070855238 seconds)
  done (took 0.907760479 seconds)
done (took 5.20310531 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06946607 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067742608 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081289853 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068281619 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06561605 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08152167 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08788243 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08471091 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068055067 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067770975 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084762222 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.068155305 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.084453661 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067983499 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065481638 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081070099 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06830033 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065115854 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080974842 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066355198 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065843746 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083043685 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065707394 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064841516 seconds)
  done (took 2.553574279 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088281013 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084122229 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073200787 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08891385 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072800146 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088804001 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073726995 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068260173 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089231181 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069803751 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087435308 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07192661 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08545361 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072460899 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085124551 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072268136 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088711098 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069603674 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072915819 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088398051 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073327758 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084475781 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071820302 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089256316 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071616759 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087027828 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070831074 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083858602 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072860202 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087483576 seconds)
  done (took 3.155875026 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072688276 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06538424 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081871955 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072020604 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065324117 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083491178 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065405193 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08216701 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066885818 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06543582 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082221943 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066144704 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065746666 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082178151 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066299777 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084608213 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082037085 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066179877 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082125186 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066085552 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06870934 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081983489 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06525639 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081032217 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065390797 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065968022 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082176391 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065427633 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065706987 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081192852 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068507826 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069147028 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.08138789 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07234554 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084907395 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065634366 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069043829 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081066322 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066058518 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064863856 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080712948 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066173092 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065159808 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088129603 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065804005 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083492266 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06559772 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06688412 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082233091 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068367009 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081520444 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066189599 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067419993 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082852871 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069094771 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064850802 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082174739 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065179516 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082411405 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06507544 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065143677 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080490508 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068727812 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065979198 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096827745 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071926949 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082601362 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067244796 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067429891 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084577806 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067573036 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079405455 seconds)
  done (took 6.040371354 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117978505 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092380158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084565131 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06701322 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080051157 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066447412 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069613497 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08193932 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068132466 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087560827 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065653299 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066950816 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083890485 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078738977 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082392948 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068031737 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087752248 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064307988 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065736188 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085496767 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066288737 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084767861 seconds)
  done (took 2.501552449 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186093184 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088319078 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.11135108 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091919236 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085747833 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075395233 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071220514 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087951667 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071500946 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086943745 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070007403 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087062481 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069882717 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085616258 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070083877 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08683951 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071637463 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085644825 seconds)
  done (took 2.367506908 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079648948 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06813149 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107238065 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068195199 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085248532 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070835689 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090220657 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077135631 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086620882 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068420616 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092722207 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070336324 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086055075 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068406521 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070131242 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084265135 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070353973 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084263123 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076736313 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089158005 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073475618 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092529333 seconds)
  done (took 2.546495578 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08237339 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069983486 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102967873 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086735224 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064781639 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066476437 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090868389 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068782947 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090025399 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06998838 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068203342 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082562264 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072802617 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083847373 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072303291 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084031788 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070091608 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067903041 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086341187 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06436298 seconds)
  done (took 2.332358472 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08869895 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085027405 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069793352 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093465612 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069522413 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085322507 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07777425 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085397754 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069862088 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109594845 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070139703 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085901757 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078082306 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090361899 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069831259 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09350808 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076868414 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093472437 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069508189 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085731056 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.218568472 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069829129 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093303383 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069437037 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085543314 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069441046 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068936807 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089882848 seconds)
  done (took 3.202941516 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068645012 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066945395 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081802526 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065899931 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065620869 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081918459 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065714952 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06573832 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085556346 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065254613 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067440393 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084322277 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067957069 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083478774 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068286601 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067812673 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084393871 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066152654 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065774842 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081947932 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068117923 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068258796 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084211245 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066247977 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081265101 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068471707 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066390885 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081627819 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068742574 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06520487 seconds)
  done (took 2.960253703 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078168879 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092439614 seconds)
  done (took 0.962354549 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066589992 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082379009 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082268377 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071975356 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089208285 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069611216 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092732434 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072827886 seconds)
  done (took 1.419276542 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.0840247 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079916571 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085969137 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079726364 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095651976 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084339452 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155719388 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086999649 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075318865 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083561333 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081946277 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067829766 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091418861 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068215538 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090204054 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074841334 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066276394 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09040023 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070984101 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083688428 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069881506 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093176007 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070983204 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064881728 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086144174 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076517178 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09541623 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069042834 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087510644 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075197753 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072943156 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079313813 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068468508 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085552798 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06650318 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093950201 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083773826 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086735324 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077131582 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069113749 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094895026 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06351178 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088934638 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.0744757 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093893073 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068896213 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068833187 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080780825 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066319152 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086528415 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064343782 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068146224 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079875261 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074765827 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088263194 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078989308 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070467456 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086095692 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070395253 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08890973 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075180369 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08655435 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071238294 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069041274 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093779184 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07268134 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093451358 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064257187 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062134886 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083601971 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077521226 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107735491 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074238894 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086284865 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069819441 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083363634 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071435896 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069536648 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090591255 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07382849 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08478484 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073699628 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091593251 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068203153 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070038004 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092268669 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067130538 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086953222 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066273666 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100981714 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067053703 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06596918 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082494122 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077762245 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088219442 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068143929 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081724104 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075783681 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06267931 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085625343 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069795975 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0844421 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078349125 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089413293 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07419225 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092635177 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076336688 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067817102 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087955054 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065411615 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085396726 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067432079 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074676119 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079988451 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070836028 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084999672 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06918616 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076206592 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083422183 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068320326 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092209014 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073333174 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083235966 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065375602 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07075868 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085034155 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071533575 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092560068 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06712826 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064041774 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080031106 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071148688 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085301656 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071611572 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089364813 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070955689 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.0633867 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083140589 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072724459 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09349035 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068244224 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06823481 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090811358 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069086246 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084189453 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074502489 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086515787 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067992238 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073858753 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086163545 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064286235 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087969762 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070624337 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066191581 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088254046 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072114289 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087176397 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06936716 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066779057 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090072958 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068664046 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084143437 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068233996 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083723426 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078140292 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069070383 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08051336 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065745875 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091940034 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06673086 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067439966 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084196039 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069990176 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085765758 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066516818 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06819922 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08711929 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078634049 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089461253 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06953009 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090549493 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07952535 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084405912 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070404259 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067866977 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086638332 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069328637 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093669947 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073110214 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090090601 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070985828 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065078297 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090585517 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075519657 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084273182 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067133576 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06690709 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088840586 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073325525 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089493879 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069869106 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083429137 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06923745 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071665802 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08778526 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068734149 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084298483 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074378647 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066891209 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091902914 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069016983 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094895505 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0714777 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081730422 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071702123 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084147956 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073601684 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06356112 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08341578 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06733173 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069196389 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084648144 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070757614 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079330508 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074919195 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092236214 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069236039 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067081122 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085604838 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075704902 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085645778 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071860335 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071411997 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091273064 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077781075 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084939808 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071112128 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094932983 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068640166 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063240167 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090373478 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067263016 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084668094 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067391197 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065931353 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087839518 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07641884 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092486917 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06295002 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086860209 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067114763 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067121387 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080946789 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072732156 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070320909 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08560416 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075103615 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086488797 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069428801 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088276388 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068378377 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069201016 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087028707 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070894922 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085993369 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071375741 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066962939 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088211995 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066861581 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082783607 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07019919 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067823773 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085314113 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073668901 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085063412 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068488084 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070064763 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085701899 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068735206 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085581985 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067652026 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070699417 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086227309 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068137907 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086695107 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064658646 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074755011 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085283608 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074975565 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085257655 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065192721 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089789859 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070728369 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073263444 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086454501 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068869514 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086775629 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068507928 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070698679 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09304847 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066326941 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095417742 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075369025 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085612228 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071400797 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067892808 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087134524 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067606537 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08546383 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068986759 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067921329 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086024405 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072453908 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087501028 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068703666 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069308235 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086355085 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068321159 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086414511 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063683782 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066764745 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085169209 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068634565 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09429341 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069515039 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084398416 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068149453 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068842498 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085349025 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065740314 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09271467 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077534651 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085692814 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076046761 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066555002 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087698823 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078287707 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07988215 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066656429 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065896467 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08305513 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074883492 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085860591 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077270616 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084654757 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068872826 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065640268 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086948299 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067657522 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062640653 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084014641 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071661041 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084886013 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068018286 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068602859 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089509752 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069556898 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094551138 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067785724 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086138903 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069757762 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065603509 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08497364 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067527928 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070512151 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087168706 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066202193 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082855452 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068435185 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069007374 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08666836 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068442673 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086133105 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074801747 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068018048 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087819427 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071913001 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083395464 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071178249 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067635385 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086161845 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067252313 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088520718 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072147437 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086481593 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076789689 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067024408 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086087888 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068684925 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084343969 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068618229 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068525077 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085464093 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067649437 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086393985 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076333827 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065695564 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088150473 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067840633 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086020213 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075364448 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086272631 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07152109 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075175461 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086495956 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069595994 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093198216 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071740202 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088376157 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069541012 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069640491 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091618083 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067664638 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091506025 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069031411 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06871517 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087379102 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06641094 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085392364 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.0696566 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067423306 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091708452 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06944647 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085175758 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067573191 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066238504 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086351737 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071910014 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09342156 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070842992 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088707618 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064602636 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065746769 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087056325 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066681685 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069362192 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088857184 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073544477 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087694786 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068544356 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083775951 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077377986 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072930366 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090673476 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066084084 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089008866 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069384136 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069577233 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087350599 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069261823 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0872012 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072585701 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06980025 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086240617 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075319517 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089187993 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06963758 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086405815 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069329377 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068061651 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08151205 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06985435 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086949879 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07333214 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069890788 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085789487 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078611778 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08352833 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068915401 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071320676 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08572347 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072132188 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081757157 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069471424 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085658474 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070020422 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063775635 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085067166 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066990417 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069236975 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08536308 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064064307 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096215453 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076847029 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088057904 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068090683 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066728217 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08179379 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064392654 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084441008 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069658041 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070594574 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09549353 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06689168 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084989115 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063890142 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068960928 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087995859 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071112742 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083574339 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063905832 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067476437 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08969833 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074646909 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083627539 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069312183 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071826481 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088331312 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067904475 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089105711 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066150732 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07120423 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098736833 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069994678 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08635756 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074372394 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093114577 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069335958 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063374992 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086848056 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071304122 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085798896 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070520266 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086627647 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083130035 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088221266 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068094949 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066863277 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08870654 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068246141 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093543172 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070296873 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068937467 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090047981 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070567197 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093312462 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070840394 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092710592 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071333033 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070493155 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085559787 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067800757 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084105 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067999539 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068945047 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087531027 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073276797 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09324837 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068247475 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096793631 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077268284 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087999357 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065958327 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067247972 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085777329 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064590815 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069276093 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084897749 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067216765 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085285321 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068914068 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068996465 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090946139 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069395018 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086928184 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069163172 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062786311 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088459843 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071526695 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086469569 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06572907 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06816319 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086969767 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072446253 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088832772 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067007618 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069625788 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08856116 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069522955 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082439816 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074986308 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067089108 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088252347 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067618038 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08594614 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069794576 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070886389 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091027242 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068992722 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088005208 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077171279 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088612457 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067081659 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06555368 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091232964 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066696704 seconds)
  done (took 46.94187548 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110126702 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083088784 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063852543 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082061497 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076802222 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082798276 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064301661 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064636258 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083283707 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06859819 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081380373 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064230305 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090415866 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087704873 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094500086 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068416936 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082252771 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064900601 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081601859 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065251733 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090244356 seconds)
  done (took 2.49399286 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077418488 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090798248 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074542714 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096205502 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069721762 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09142567 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075683069 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091040483 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09554493 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069712292 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095748006 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073520141 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087838252 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069857989 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086321738 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073826086 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096765934 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070228294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091107738 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074976403 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09134256 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075179788 seconds)
  done (took 2.655820034 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069116364 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067289974 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08715608 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064183191 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066932678 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081623166 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071108676 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083853115 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071175717 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.075005177 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084678439 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066989528 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087100436 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063292039 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067922571 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083693141 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.13173457 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071334847 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06739852 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088056598 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063483073 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087506688 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064716443 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063888579 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084857178 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071715026 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086616086 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066804207 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066898859 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084385035 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068096323 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083404068 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069839825 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067144477 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084504617 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067210425 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067143159 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086259463 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064189989 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083349172 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068738765 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063542085 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086773343 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069126508 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065727553 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08423464 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069457166 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085306137 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063476238 seconds)
  done (took 4.529339596 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086293272 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131301622 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088592878 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091062046 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103057244 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093896777 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072386 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112811231 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065839203 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085233681 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08378359 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104406713 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086807914 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072570389 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092132688 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068347554 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068452743 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085869347 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071266595 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086450473 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071736297 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093243283 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100166179 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081975992 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090193301 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068168308 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085382805 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072590814 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098685209 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072420353 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091377354 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073624477 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101630695 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072949528 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086477649 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06928879 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103334434 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085623025 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07080807 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064975184 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089199385 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072446545 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093172361 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084698454 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087545922 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073107189 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087144451 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064696081 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10030638 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069957703 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094628496 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101097707 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072910223 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086622396 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072889564 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101133922 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068523423 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084000053 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07206715 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098879779 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06612032 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089700066 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082174372 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087806659 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075764306 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100522959 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072226944 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091078877 seconds)
  done (took 6.710615407 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077092719 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093208687 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082283493 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101288132 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092498176 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075310744 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092038305 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075107615 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09226156 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079714262 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093419689 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1133796 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070201668 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096030627 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074884138 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093428818 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074547923 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094084722 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074199398 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09416729 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09275012 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083111399 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092337813 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101326059 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105328496 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088770856 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074448638 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09361033 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082597343 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093525565 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104081357 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074634622 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093029929 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101628066 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087177024 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092878646 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067725603 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092881079 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074608017 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092392836 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070181634 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100865211 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074124147 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088617419 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073828574 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093652382 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100893015 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085799486 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096116332 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098400002 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07497152 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100315254 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07424582 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093666845 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100291603 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107528125 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101318444 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100559055 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07503236 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100210147 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10056512 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108625993 seconds)
  done (took 6.394471199 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089028211 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095306286 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097724271 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063963694 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066095741 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091367925 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067257172 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084006479 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077342777 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094998863 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079397312 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09009734 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074584199 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098183935 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089682052 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0758834 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090803024 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072120275 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094912695 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072509252 seconds)
  done (took 2.515401478 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078444667 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103676426 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069982725 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073666431 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090795872 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07307869 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089585494 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071060047 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087215576 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071621558 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09729846 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078222679 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088293058 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074580306 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096671778 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0735676 seconds)
  done (took 2.171324068 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080555623 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096629767 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083006776 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087658077 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067014397 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08388981 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068775727 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06370758 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084205457 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081525505 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088334733 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071118664 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087041598 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067243567 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064338403 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089756125 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064433862 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084654403 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068536883 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100465845 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079751611 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085522757 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068833581 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068820572 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.08794494 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072217809 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087804304 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065660324 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085106356 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069025372 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087035222 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076403319 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083052872 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068053558 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066124073 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084557167 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067713397 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08648967 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071101967 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067076066 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085835833 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067738811 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086657427 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069598259 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082653372 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069596263 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064453585 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093234207 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066769416 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087580067 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068503155 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088851244 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069731798 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077926 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091160656 seconds)
  done (took 5.137526082 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082867536 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071228109 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083540644 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067079757 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089397785 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070217671 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071018002 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089375996 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070483064 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084730121 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070934716 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089510635 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071100385 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071268887 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089422187 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072154253 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083288033 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070691974 seconds)
  done (took 2.256060433 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074721549 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068272219 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094738658 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068722394 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086532234 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071805767 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064727447 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086384973 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067601208 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087300996 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069132923 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070231923 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086028654 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070848413 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087124929 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068981717 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070055523 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086615348 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068979342 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082685217 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0715512 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066546127 seconds)
  done (took 2.529621948 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074131099 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094567819 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164323406 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109100865 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085132147 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100840356 seconds)
  done (took 1.489684066 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093446292 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100491864 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069633076 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108094631 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077502127 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089047571 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070355991 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088377237 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079213231 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10291731 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069980767 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098144643 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097312542 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079728211 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094226775 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075597521 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090137569 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069767311 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088160727 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106743553 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071931035 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097185915 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070915122 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088589258 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070889804 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097021223 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079454033 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102890859 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088904785 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078768175 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093950599 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07084929 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09801051 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102546016 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072106383 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098028416 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071138223 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108018783 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076095878 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096736337 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070821167 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095441572 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097581878 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076153525 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097180015 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069805428 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094327355 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069749539 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089873148 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112421033 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075918531 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09781794 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094435041 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079163707 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098078585 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11366786 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083515913 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097888619 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094497258 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084440987 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097658802 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075577527 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098386263 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102431169 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076422292 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098031995 seconds)
  done (took 6.687785924 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087398903 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107756991 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070961418 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10308921 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097168628 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070904 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088877691 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070783666 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088644993 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071091796 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129690687 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071219206 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098355264 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097693348 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071185239 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089478003 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071363211 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097280894 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070423917 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113263977 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089283105 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078619485 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097678299 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09739623 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083893557 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095605325 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070740007 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089434325 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069759208 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08963401 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07594166 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089920694 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096785105 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070267258 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09755556 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071071647 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089007311 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075447129 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090373341 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076485553 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098617392 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106551707 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071014519 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089568888 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084085088 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090477509 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069885372 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089829334 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070254405 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089448458 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083510203 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104163044 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102875711 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097189907 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07202723 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089352619 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071588409 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089560051 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07121802 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094956965 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078794984 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089570848 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114538342 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071210526 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089456552 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07955999 seconds)
  done (took 6.58775386 seconds)
done (took 129.914588582 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206308035 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.189799301 seconds)
  done (took 1.258367406 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070630911 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096708029 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099792868 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12952798 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088511057 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102074341 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119799422 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080882812 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067773452 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08754039 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068845487 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088922094 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133901119 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068204649 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087754749 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070649509 seconds)
  done (took 2.329955108 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104353263 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197400388 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110577174 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066848485 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100407878 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079603591 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08662842 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078255429 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095433522 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068024761 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078459511 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097272558 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066451815 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09685015 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076203841 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098574788 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067216831 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098819682 seconds)
  done (took 2.540671549 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105437314 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142255467 seconds)
  done (took 1.121043799 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.201027753 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.12407272 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204555904 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.420981702 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.207339688 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.278038159 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.17414406 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.173171136 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158959459 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170102053 seconds)
  done (took 2.980755752 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099905325 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170828216 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312379846 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138911105 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087447708 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116090421 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.13928169 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089804902 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102583698 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10072852 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081868295 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098960867 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098568281 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096420993 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075493556 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099228369 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121525156 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076019608 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078501318 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096969137 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118346498 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068980615 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075756171 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096164027 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077684769 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099443981 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067611882 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088117501 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077552627 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096503339 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080315176 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115357388 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098029219 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132286036 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083038716 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131899082 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099835568 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073568443 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096458863 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074306167 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098775657 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078614383 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104717927 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078091357 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08736393 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078936313 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086713992 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068848803 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100504248 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079092484 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099079616 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080455122 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130701566 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099061788 seconds)
  done (took 6.27330743 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.744417003 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11074226 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095871581 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.804405771 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090123083 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106090493 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.710397047 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118147572 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208346878 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760926351 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.091180876 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099722199 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.180150256 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.214741534 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.899673215 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282223789 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.631004146 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105268781 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109614786 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132110242 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139670005 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175645538 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149460437 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.435855699 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076399405 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093495083 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136195761 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07572417 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.138572347 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106732151 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094283124 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.153969762 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225372893 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.154884842 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097545597 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071527094 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091832936 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147064827 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220509491 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189699771 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157611841 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070095876 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091357407 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140267983 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131278916 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069811115 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139382042 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.15258374 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167284113 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075569946 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075436226 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.162488567 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138417938 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.14282356 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101856362 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.26241875 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.281616947 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070859951 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119894674 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104509898 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213359208 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104215238 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197982907 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139212401 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.1670387 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091699602 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.732578237 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147287619 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09234824 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075685388 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119256114 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074188557 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.159139825 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.123185092 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.369527072 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161526691 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075512136 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071043644 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228066888 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084606358 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09162303 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140245009 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076627804 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121686802 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143126001 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162406871 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147600623 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207011643 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141669199 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138919619 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095709068 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124301982 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076028405 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.18955299 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192136551 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140044308 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.185296093 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139447914 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161024278 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147823019 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077377364 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.149851282 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119020773 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101232225 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138222084 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190596986 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.102521157 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104309737 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074086468 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.159953473 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.12419284 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086444819 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138922115 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.148774422 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478326938 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146213022 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069077826 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108201425 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139242424 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140643061 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096213858 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21221461 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123800461 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.14736921 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121153685 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089014604 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099253237 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161622006 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080428711 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123326805 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137426962 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097916596 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.214966634 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.168234899 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099313887 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193347851 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160947241 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095719415 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148559769 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120588429 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145099216 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078075115 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136436477 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097389019 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751851967 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.164098026 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121072714 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075567376 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.175712904 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072058307 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104497469 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083131569 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090515044 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.734004852 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106924399 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079714703 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104995588 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074736566 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120968282 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156062949 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07537362 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140358404 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201516738 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07677411 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119015731 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10490949 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.141606472 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075980993 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105521185 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105537028 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084495563 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121775462 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094163604 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085057958 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146171182 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.139830006 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191159368 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.539499242 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092321579 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083000904 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198879311 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092175018 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.240452894 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134626302 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.196326559 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141628831 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101905592 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.262913592 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.141795451 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.175621745 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107134591 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151307913 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069060637 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.156491643 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143732225 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071639438 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097005505 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141088275 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.144421242 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141001852 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927384572 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071630912 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203599285 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090697671 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.150129609 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075302363 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098526688 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258685049 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072307968 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146418047 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.141245163 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095415016 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082716163 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.701249791 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.083380335 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.159667385 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076193633 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.194007957 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.142596134 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135493838 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13635335 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097237335 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139018883 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.188849404 seconds)
  done (took 40.323703315 seconds)
done (took 57.699185875 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259125062 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178682398 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.242623747 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14540163 seconds)
  done (took 1.793365928 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145083822 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105592185 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118569114 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086785516 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104735836 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087640109 seconds)
  done (took 1.543133648 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.404165234 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266444919 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231425391 seconds)
  done (took 1.799026595 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.262709284 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213567611 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.447870982 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298111585 seconds)
  done (took 2.246606023 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176083736 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114978905 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068658356 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107213568 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159582537 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.254348221 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129380317 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188132568 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08139827 seconds)
  done (took 2.220567094 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197849392 seconds)
done (took 10.69920379 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114239014 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.190899338 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.277158749 seconds)
    (4/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112531769 seconds)
    (5/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.28002582 seconds)
    (6/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081323994 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125148244 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.254017172 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.137222628 seconds)
    (10/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.216960617 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.095335903 seconds)
    (12/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078291487 seconds)
    (13/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077391418 seconds)
    (14/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.100452737 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080402813 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.121207983 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079702044 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100126227 seconds)
    (19/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082617098 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05231849 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113125415 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.155426505 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.183846069 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.083975764 seconds)
    (25/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.201886057 seconds)
    (26/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.098975736 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069555037 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071068629 seconds)
    (29/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.138120149 seconds)
    (30/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075304899 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.107078504 seconds)
    (32/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.176762074 seconds)
    (33/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.178688362 seconds)
    (34/309) benchmarking ("sort", Int8, false)...
    done (took 0.174077179 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.148456245 seconds)
    (36/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.218752264 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.102875843 seconds)
    (38/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.179265034 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.097903421 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079712656 seconds)
    (41/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.098256548 seconds)
    (42/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080127797 seconds)
    (43/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.19086712 seconds)
    (44/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.190092617 seconds)
    (45/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.101074729 seconds)
    (46/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113521592 seconds)
    (47/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107314048 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.205147213 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.099297551 seconds)
    (50/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093585 seconds)
    (51/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.214454908 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097277636 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096820555 seconds)
    (54/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076256434 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09366473 seconds)
    (56/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.190366569 seconds)
    (57/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074011343 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.100897295 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069792923 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073862655 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222546848 seconds)
    (62/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.191666638 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.076527643 seconds)
    (64/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.137768895 seconds)
    (65/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.19076456 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.0779936 seconds)
    (67/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.093166903 seconds)
    (68/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07903867 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.139080256 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074442145 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097798618 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063764896 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067607617 seconds)
    (74/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.102036387 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067665794 seconds)
    (76/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.208934431 seconds)
    (77/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.0747922 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097796148 seconds)
    (79/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08255366 seconds)
    (80/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097740265 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16891527 seconds)
    (82/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.12313113 seconds)
    (83/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063259236 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.094771614 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.068707689 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092448421 seconds)
    (87/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084519341 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10230709 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.098299931 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141737586 seconds)
    (91/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.096977344 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097251344 seconds)
    (93/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.193071035 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.173648416 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.154059884 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09207744 seconds)
    (97/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105170381 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.163468499 seconds)
    (99/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095711673 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053853638 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.064295027 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184263774 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077866093 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088873876 seconds)
    (105/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.103477019 seconds)
    (106/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096334052 seconds)
    (107/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.217890633 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076212119 seconds)
    (109/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070890608 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201594526 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074254267 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.091179173 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09934975 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.19111408 seconds)
    (115/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160267554 seconds)
    (116/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168931294 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054657708 seconds)
    (118/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.158581575 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094031408 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159420138 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052948932 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054076173 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.130159703 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067923047 seconds)
    (125/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.128546453 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144035527 seconds)
    (127/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.0750563 seconds)
    (128/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069401139 seconds)
    (129/309) benchmarking ("sort", Float32, false)...
    done (took 0.150006157 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095733881 seconds)
    (131/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053517873 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.158089686 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098472851 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064871834 seconds)
    (135/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.100073784 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092237572 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074667583 seconds)
    (138/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093640619 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.161808017 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073077791 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.114807055 seconds)
    (142/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100510566 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093896972 seconds)
    (144/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067304376 seconds)
    (145/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070856367 seconds)
    (146/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.171661692 seconds)
    (147/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053994031 seconds)
    (148/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094507737 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067616253 seconds)
    (150/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.155655422 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075630441 seconds)
    (152/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.158664282 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130663484 seconds)
    (154/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097468018 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12542114 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.075853196 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068040931 seconds)
    (158/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062773674 seconds)
    (159/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091473265 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067446158 seconds)
    (161/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066488445 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097731477 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067234451 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.167825101 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073607794 seconds)
    (166/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054458896 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.173103262 seconds)
    (168/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089391104 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054493218 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194856491 seconds)
    (171/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07655627 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075987159 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.138174265 seconds)
    (174/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.093525513 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081719835 seconds)
    (176/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.106983149 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054813555 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05392248 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100142855 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.078783352 seconds)
    (181/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196944173 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068102025 seconds)
    (183/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100622995 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093813263 seconds)
    (185/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075718674 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121304788 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088945084 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09105494 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056296704 seconds)
    (190/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055699502 seconds)
    (191/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092283842 seconds)
    (192/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.138651523 seconds)
    (193/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.07691572 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075640155 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089898813 seconds)
    (196/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115959406 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076875119 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.116876608 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053894572 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089239695 seconds)
    (201/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075201964 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067998578 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076544908 seconds)
    (204/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106727456 seconds)
    (205/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116688634 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068350792 seconds)
    (207/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.377846719 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067730514 seconds)
    (209/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056080129 seconds)
    (210/309) benchmarking ("sort", Float64, false)...
    done (took 0.150619767 seconds)
    (211/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05435513 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055961139 seconds)
    (213/309) benchmarking ("sort", BigInt, false)...
    done (took 0.233031099 seconds)
    (214/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053929309 seconds)
    (215/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.146521582 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114087483 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.16021119 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070373629 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172045839 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075705331 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076978166 seconds)
    (222/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.093958501 seconds)
    (223/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081484447 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110338616 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054816302 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073062293 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090695122 seconds)
    (228/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.074889082 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066744413 seconds)
    (230/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074889073 seconds)
    (231/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053398998 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05298724 seconds)
    (233/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.075455405 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098873602 seconds)
    (235/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053345519 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163658952 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067015083 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.075020184 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.054744728 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067589104 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078441898 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054576351 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067857131 seconds)
    (244/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194896537 seconds)
    (245/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070509959 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.165959822 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.090875088 seconds)
    (248/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.10081122 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115569131 seconds)
    (250/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113939123 seconds)
    (251/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070684807 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091794478 seconds)
    (253/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063328791 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07330946 seconds)
    (255/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092534253 seconds)
    (256/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06413619 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066976063 seconds)
    (258/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.0911759 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053727843 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06794342 seconds)
    (261/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.086675348 seconds)
    (262/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054201159 seconds)
    (263/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068542113 seconds)
    (264/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.076672132 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074505354 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066759663 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089432286 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108846139 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097641401 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053860028 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089255696 seconds)
    (272/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096405812 seconds)
    (273/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063418671 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066757364 seconds)
    (275/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.076141193 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053210114 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073950453 seconds)
    (278/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.08576927 seconds)
    (279/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.103854903 seconds)
    (280/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143040435 seconds)
    (281/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054473624 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159975393 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092160207 seconds)
    (284/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055117223 seconds)
    (285/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.077439789 seconds)
    (286/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069836418 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065231663 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098148855 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109999684 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.090457929 seconds)
    (291/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081042444 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126523708 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06653941 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075095364 seconds)
    (295/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.09067444 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092017318 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096224913 seconds)
    (298/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072732 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075151907 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.135031162 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089425684 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053483619 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053528446 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053293332 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.095479751 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13561886 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.11823501 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052967941 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104948596 seconds)
  done (took 33.503016241 seconds)
done (took 34.409433166 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083533297 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115161053 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076784047 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116190472 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082488591 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101824726 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075292635 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080207942 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.10539011 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083675286 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104067181 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056546385 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099294829 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076369146 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098498099 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093610397 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102229823 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07459808 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075120173 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089197746 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075493719 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089868565 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069860182 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057175188 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102109623 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074729713 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073223174 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099198239 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067071065 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089399841 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070557156 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074637676 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089668446 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080845796 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095881985 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075490926 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077661206 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100934944 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069741026 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089303657 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075508904 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067317566 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096340886 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075530723 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072922955 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095290828 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075295255 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104098544 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093291683 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092672582 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075240596 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100673911 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079080836 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0738002 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094337246 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075423239 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094424166 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093682466 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098266618 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070320309 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075147783 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098838584 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073457925 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074941212 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.098404914 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07770851 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100461385 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073158621 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09940519 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073127749 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067403814 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098604314 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071747113 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067053028 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099963503 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077964891 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089062447 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074138306 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074663486 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096376025 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067511903 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069396444 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.092445295 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073430652 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091486101 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057173537 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07135042 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095828691 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068346065 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076367867 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095932882 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074340481 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069507256 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101076221 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067411466 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095227996 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067857412 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067800867 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091819922 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071861999 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067209385 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092187174 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076513756 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091207366 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074119013 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081242082 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089612638 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074380755 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066813213 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.089770231 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082871342 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099729659 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067139782 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092033098 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067727164 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075125076 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089950452 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067637615 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067458395 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090168609 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073847428 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067857056 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091798939 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075415706 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103037083 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067537818 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.0710509 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092610937 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06808322 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073066028 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090208937 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067898645 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069532148 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087765662 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069504054 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090541244 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075806644 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069651226 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098359156 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069671885 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.0766445 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094843658 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073517202 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09539179 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06680716 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060966494 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092405194 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069681253 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069499918 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090189112 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069894919 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067013677 seconds)
done (took 13.406704234 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068499589 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169319559 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127448156 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097623363 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112824537 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068091888 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101631828 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104750757 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092831081 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127826591 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089793746 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109851178 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115573426 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.09029706 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06775938 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071705598 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092254149 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089533812 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127055507 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110847159 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119320123 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090081225 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121592092 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091277253 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113974596 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104590181 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.09141521 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071616558 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070959706 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117455961 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110173993 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071503971 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068206291 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124373181 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119858904 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086746453 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090286483 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086460654 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090629472 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067588794 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115406064 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101367989 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106661781 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082582053 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097420556 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070555582 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091691097 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088786823 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115755952 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081957911 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112934618 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13552205 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071587439 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107682698 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066725756 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112446688 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105475923 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070936834 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068077089 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093268059 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067748604 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071104292 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112972419 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117010673 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071421979 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106419927 seconds)
  done (took 7.341102924 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086240455 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118545583 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085853932 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109181927 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067334285 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068607491 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091087318 seconds)
  done (took 1.590589511 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068931125 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091337492 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114385859 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090969732 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110896504 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089029938 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10102805 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068924436 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109495206 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069861447 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08948514 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129430763 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06989427 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099085797 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092754105 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091424704 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092582032 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091938873 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072099856 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115249835 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07149659 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088459366 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094245574 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068309417 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106974356 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068426993 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139892589 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073456779 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070697518 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.096288903 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067570447 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141109297 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10571243 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079872794 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068497428 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106866821 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083615973 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090659007 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085729375 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09699825 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083775173 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069148675 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093706215 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067153445 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073187392 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102380693 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070091511 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093038508 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071635655 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088648461 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092828242 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083007407 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091879578 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072629898 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069967657 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098391204 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078634167 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092761041 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088945499 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070657405 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10930678 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08585127 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106103137 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085545089 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095922413 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08304294 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106031516 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071649572 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069986216 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095800891 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084585309 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.09014444 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070370924 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079764206 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094244546 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092459485 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115027702 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071276557 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102593251 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069511897 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069263381 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092324096 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091971543 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095910172 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069869116 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072982822 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095393493 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066617664 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068018034 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096192751 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067916858 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093380488 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072227304 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069801401 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094287493 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085415535 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.093469959 seconds)
  done (took 9.458359027 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070282279 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069737008 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093734462 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069579119 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069690953 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.09383291 seconds)
  done (took 1.442558426 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09998897 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094406343 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083856634 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097666144 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108059185 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107119918 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084647221 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107866571 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086922891 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105631903 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084250261 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108079243 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089911888 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098234364 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084389656 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097868568 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084441612 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102325631 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081028626 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099396794 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089901569 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098606594 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075971286 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.10767977 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072966219 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074741214 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102462441 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081818788 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.10494401 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084164912 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098228682 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072636866 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096731473 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084045564 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10800662 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073411 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098374357 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073736385 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10194302 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072876706 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107775248 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076741767 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.08017023 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098071423 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.108220902 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073451902 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073831224 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101910699 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083722649 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097551486 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073666355 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098311949 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072662476 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096912508 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073991971 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107195528 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073726638 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108485946 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075627691 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073977113 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095986 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072884896 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107132833 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072440156 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106383662 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074047339 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097459114 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075204787 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09865862 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074704026 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074110094 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095115821 seconds)
  done (took 7.45792034 seconds)
done (took 28.253274624 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.650472462 seconds)
  done (took 1.625741964 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.765062416 seconds)
  done (took 1.742823156 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.703694519 seconds)
  done (took 15.687548994 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.613718842 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.754638469 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.808314148 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134450377 seconds)
  done (took 3.289447915 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.881765398 seconds)
  done (took 1.887901723 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234844887 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224383196 seconds)
  done (took 1.444121569 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.739205497 seconds)
  done (took 1.73344202 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.285826778 seconds)
  done (took 2.27099987 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.321658512 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18166907 seconds)
  done (took 1.494998686 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.528786742 seconds)
  done (took 1.520401974 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.539178892 seconds)
  done (took 7.538455175 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229645408 seconds)
  done (took 1.236120175 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.27042709 seconds)
  done (took 1.266295675 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.119639966 seconds)
  done (took 4.116688195 seconds)
done (took 47.840118248 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07945319 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083190093 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105441306 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079970417 seconds)
  done (took 1.340356444 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079658073 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07495462 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102349194 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074765337 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102761866 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074720061 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099755617 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07875793 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074303538 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09890131 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075388322 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097214756 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07708979 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.09982354 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072442531 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077352134 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101904588 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075362564 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100799498 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075215518 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072526041 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099929681 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078017502 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097270876 seconds)
  done (took 3.066339562 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079442865 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074538921 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098983383 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073449691 seconds)
  done (took 1.327524153 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079335949 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116937529 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091448182 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078988752 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118225384 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111662853 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072376744 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073014839 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098181583 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079964151 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09304704 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100447935 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113159398 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079520617 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104136404 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068549269 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070829886 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112458002 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079366815 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103013047 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073116581 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081850518 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093508914 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09256609 seconds)
  done (took 3.19250482 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079121339 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105314133 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104529153 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091189532 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117510336 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067382123 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.102301418 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09345687 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.15087372 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067027176 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096478737 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067991509 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098055947 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067039294 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07866453 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.135404061 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113360312 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.094637589 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098976905 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091651802 seconds)
  done (took 2.930633942 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076709535 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071534338 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090520036 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070762079 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078190539 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098374358 seconds)
  done (took 1.493636619 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069573054 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069518408 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092240291 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068689255 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073152148 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092785683 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068066992 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.0686348 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092609112 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069386806 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069059387 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091884543 seconds)
  done (took 1.933159541 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.383556026 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093837697 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071010161 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08937462 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072397286 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091772243 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082455455 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069660864 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116969245 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068079028 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092675854 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070564607 seconds)
  done (took 2.312507658 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262509536 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078861243 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324499224 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168563364 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141131025 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156000428 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105544065 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140927462 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19845374 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139145323 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201642393 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224694371 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135396815 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168529957 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11640042 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108496196 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21107117 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222497077 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107350735 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225470308 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208305279 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158597494 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182116883 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129378229 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135738224 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151525549 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074029008 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106103193 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231953619 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161970437 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202266151 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138854141 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099258019 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231540318 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22608489 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195872677 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163510643 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087024484 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157790862 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165832403 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255206281 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115068129 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194171484 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135387171 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107248258 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173038451 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148107026 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148313086 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137525485 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116224194 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174842736 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241430664 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166364389 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113914815 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137944228 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142202455 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145348575 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105414707 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242188734 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217996502 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158959096 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097797268 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098627204 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211802114 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160713541 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142882551 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154635226 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121290291 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169311267 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211361116 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147229245 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173012111 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181815742 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091297636 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148152364 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195126196 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156630161 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203466105 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17902343 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075449784 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153067956 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131099662 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083473394 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169156618 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078106074 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232216483 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12627752 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140152556 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140217256 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136576132 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112604477 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222958384 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202090757 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106287509 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.09327077 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131564993 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150022672 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17740063 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115193098 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111101143 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173494937 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081136628 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167760118 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101856014 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153799371 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080798569 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177154082 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163941511 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078319683 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157378495 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130128221 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130276114 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165195321 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220827944 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092894367 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109186235 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201239427 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179667557 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107079403 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200790373 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190294065 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128465242 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131202036 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203096905 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24143322 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092506079 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223415758 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136178015 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087130681 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115165347 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157371946 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141605745 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150334094 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086121331 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.17734855 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202144037 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10213043 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098969936 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191371723 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085090486 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108659578 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140395055 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130411723 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098489639 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129519016 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135087336 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170010744 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155145361 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135586166 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155115356 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126710914 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226981868 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116625737 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107396733 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130341994 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097114394 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166059184 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192177032 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1077724 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225584753 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.15547394 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132413075 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149415328 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085340533 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169770394 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105824543 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073154093 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200177123 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138530076 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112907619 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210281813 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131243712 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156445758 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153686753 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163894366 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162757133 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162133007 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133683962 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115378382 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141683832 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155542095 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100778997 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096531988 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109791412 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131791771 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098964922 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110006353 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172324795 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180894095 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10127002 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140838694 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125950021 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180953046 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10427659 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160957159 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.149269299 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122734711 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18647525 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212775929 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165278949 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128550242 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176450043 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098124306 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076826195 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118484021 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158317679 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110603974 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085490971 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148276131 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205330761 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15914949 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167953241 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138777772 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150369566 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186930093 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.099081985 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119265395 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205626116 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154925227 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157173915 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09303221 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127297008 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175862441 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136442126 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243978801 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143455373 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152863211 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207940868 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131611102 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083255893 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134520253 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167532925 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135787786 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207756187 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127605754 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091207601 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139489283 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109237106 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132095172 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157457181 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149988092 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164185814 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145234816 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188088346 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080007001 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148204589 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152566183 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152167524 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091380289 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14970286 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194167626 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12205873 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147541277 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21215244 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082546845 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152917103 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237831963 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199710337 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087820936 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138722331 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155857436 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158818274 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14835964 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170656536 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138820766 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190942749 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113271143 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.1124305 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11384459 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100839051 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134833645 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122545376 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138454028 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146437781 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121926254 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161466568 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139926034 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139426227 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148521323 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101253346 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119267796 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12519045 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208850451 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151154741 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232782323 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129122771 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207150283 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201979798 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103148916 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081653802 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108172908 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171393772 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111952484 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164669945 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124022539 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108085168 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156802022 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199984761 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098235019 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.09654745 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139078945 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166439083 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140470148 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126964112 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108874015 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223133068 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131638957 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082479169 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155799036 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132560399 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131720035 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235652943 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06421944 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126049053 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080518359 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108955462 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159642331 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189622432 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110756203 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154233079 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150151585 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150163123 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160451968 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130999576 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099841288 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141960879 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20732274 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159568391 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118333585 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116546297 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186036447 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190285255 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13548937 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124343771 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232331364 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188227825 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222889971 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117621362 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145405048 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145412983 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112645756 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198778354 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112164752 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201291527 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112040167 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167418752 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134296825 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121327301 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159479507 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.142027291 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090899343 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207871205 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151143884 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109878083 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082495281 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147195353 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15272657 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136210517 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103337337 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170685854 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075057248 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194237799 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203539355 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110091421 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135236943 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099182982 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11035591 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138987561 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133450636 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115604106 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.121538713 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230201619 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.119626195 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182887069 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199001579 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144017885 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168399788 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128739378 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664835638 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080972672 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215404897 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150222766 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238763875 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12709146 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14931056 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139696331 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153911279 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176035354 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13365457 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.20585268 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163625941 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150119297 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107685401 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131998423 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141767645 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09362921 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135064285 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14410016 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146514967 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130001796 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151437757 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15613991 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110402395 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09793687 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21736334 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147257103 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173216969 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19795946 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087369155 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149121335 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198316757 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082984284 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.152028228 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215129962 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137936199 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12823702 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084336352 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135295874 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232410227 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07487867 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221602034 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154406964 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140180602 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143208868 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149387443 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189230852 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137745731 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156337713 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124016903 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143343521 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145657056 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086905107 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106345201 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13562253 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142776832 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102913325 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131199711 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.144930247 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187351665 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099176829 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099477966 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132560477 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176852948 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239072446 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.118486315 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085278994 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148276191 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167735249 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146865501 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155961899 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084239421 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112148039 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08455555 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.139298268 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138230344 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144800771 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105927036 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140696719 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228013365 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113495225 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226603008 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124313542 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136796047 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071729275 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108168109 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125165406 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100438182 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137823217 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127013072 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233601579 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100512946 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120197086 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121896779 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075805561 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112305382 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160552907 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140579481 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152654638 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126826293 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065874601 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139090767 seconds)
  done (took 71.860064594 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133028924 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105137124 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.11861786 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173990249 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146523119 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23892301 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.18198091 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224017807 seconds)
  done (took 2.41112978 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070453491 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117758718 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103972478 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.11762091 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09069457 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070211554 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293281685 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112445621 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068293491 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115348743 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120609185 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09259423 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.470122766 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067847785 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095728595 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086850763 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069158113 seconds)
  done (took 3.243409965 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.431434444 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.633158507 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.451245138 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075217079 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.910212587 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.107958627 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.394370121 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163539472 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092786934 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.432159952 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.725355439 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.148266288 seconds)
  done (took 17.654245193 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076312528 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070740444 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111321657 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085224011 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099814256 seconds)
  done (took 1.533802187 seconds)
done (took 115.293109031 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081770414 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.342668519 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054549696 seconds)
  done (took 1.520758343 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08439965 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085945233 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112081623 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085254124 seconds)
  done (took 1.46827437 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076549685 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078050315 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111786196 seconds)
  done (took 1.364034816 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278908038 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166788525 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090844262 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084538426 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079856296 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105823151 seconds)
  done (took 1.36855383 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074787429 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076361662 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100294984 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077838784 seconds)
  done (took 1.422313533 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07790313 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054535196 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056313839 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083131374 seconds)
  done (took 1.370943848 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091186793 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107028728 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083461556 seconds)
  done (took 1.376845927 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108660175 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113303922 seconds)
  done (took 1.319950383 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083036071 seconds)
  done (took 1.17585223 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093325089 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141267065 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158303437 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136754957 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167022416 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.13740542 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08777492 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116184065 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104482218 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090013348 seconds)
  done (took 2.331217212 seconds)
done (took 16.425401948 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079510663 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.488549944 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362112318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117715784 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668290868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357542688 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.05096727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119558264 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122127125 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095354455 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08574773 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67665665 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977757541 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.446344491 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967134409 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.418778579 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677429413 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069209806 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068843055 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095141764 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.010493115 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095179456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06937451 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069695775 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677094377 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372157986 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095867842 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.419938457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069141863 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096833573 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356440019 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095882972 seconds)
  done (took 16.461979379 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071690409 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144756294 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07486992 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08488676 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098515634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070891398 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099550282 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070381902 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153799383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0693656 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112489122 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070057691 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099169237 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071242071 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088031134 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095892134 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070351937 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069858418 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096414837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06963974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11392876 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069506066 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06984623 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096004442 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068872747 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107259277 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069614418 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069218184 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096323683 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071787334 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097805685 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070820642 seconds)
  done (took 3.882105707 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116826055 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153663003 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075092509 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130196397 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114174105 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098131706 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.17171199 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09401711 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156072771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069813352 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112667398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069703235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129610852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071334314 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11580573 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070654016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070864195 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096202456 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070013734 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09614667 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088324736 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070249012 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096653891 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070400836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096453544 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083165662 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095922724 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070555566 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070082838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097737571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073883698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070652058 seconds)
  done (took 4.173837568 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074530786 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07686083 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110743103 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085267662 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09778627 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074445304 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074503225 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097673084 seconds)
  done (took 1.800840595 seconds)
done (took 27.419690704 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079851588 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072380623 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100950301 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083251393 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101191546 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080880916 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069393397 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10231905 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078784901 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074867218 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104786969 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069211709 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098835333 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069811716 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076065803 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096394175 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081693456 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099687492 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.0813097 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081098828 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098230091 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078981488 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101527019 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081543307 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107136854 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081578893 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085026566 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102078311 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071384522 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.0987717 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079070744 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08493962 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096721173 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080898201 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096460554 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069992811 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070096404 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09560463 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081602814 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10178948 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072734424 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102088119 seconds)
  done (took 4.738900089 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089829523 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092733391 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113044159 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066780057 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09838128 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066873141 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116132331 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064953667 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060326716 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11666418 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058093414 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061200579 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.091415604 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056113399 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060825114 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058257405 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090260519 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057554477 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060505658 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087933231 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.060177077 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055657576 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088026557 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065085554 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057857529 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063268679 seconds)
  done (took 3.066547859 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077283638 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084472855 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116394371 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131485528 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135463271 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078291519 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106495185 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089586303 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114592888 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06898863 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072558554 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125835597 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088346515 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103426195 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068971522 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115838288 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084128981 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070417153 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102896021 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09152616 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113099205 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080008889 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120867663 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082167031 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068604345 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098090868 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073715138 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108806933 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07426232 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078221535 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100867638 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07335598 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097467895 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081937845 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073102336 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098732676 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091695635 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105711175 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07965867 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069656234 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099393013 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070660519 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116396534 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113521345 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095397021 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077510835 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077221899 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105894405 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069571589 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114363554 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078713748 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068899346 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099827602 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068380336 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09570239 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08307311 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071997439 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098874112 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078999373 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099314632 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083072497 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073120463 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111525785 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069586592 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103205685 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06921352 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070035942 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095475193 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093214157 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070302012 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.137419845 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0702726 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097745636 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078743877 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10400174 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075517951 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06949673 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11152439 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078747576 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099514622 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077994891 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071979587 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099136183 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089003493 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098308741 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071892087 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070853614 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102523013 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071787543 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096789103 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082085127 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068848007 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.100089876 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086371582 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095194496 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070906394 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075242381 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100975361 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068636328 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107189672 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074394074 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069517083 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105385221 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068868705 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098587504 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079114783 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07329617 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095773015 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074603096 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102306903 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070384485 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070477462 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099202767 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071284273 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.0790571 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103379217 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074250893 seconds)
  done (took 11.477222985 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193935766 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.195936779 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072511907 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.18128098 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077339325 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109056839 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.181942329 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097824866 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098574074 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069523578 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07057715 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131304662 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125404496 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107478581 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.10804638 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068484611 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115388628 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.106401016 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183867982 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.179083816 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117108602 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07782692 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071138869 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098941498 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071922204 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.106611125 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086564568 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.103541387 seconds)
  done (took 4.341410498 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084617084 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130761134 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075657561 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089818088 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120564856 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070214874 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103240033 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070870581 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109663442 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082637622 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097631161 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075840133 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076550657 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.108234889 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069947168 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107485383 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080530811 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071054555 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100878436 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074954539 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.107033942 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082598586 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100545456 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069221001 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075746262 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096179333 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065904834 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115063909 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069661655 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118425988 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068163463 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075505374 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.11094613 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070258129 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096395059 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072968787 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071700631 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100846636 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070830241 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067857134 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.09612713 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059112865 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068103459 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109020124 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076172559 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088751875 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075054459 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074337066 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102511678 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067386172 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099610385 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072159043 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072223273 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106264731 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073433892 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07447751 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.102033825 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067148496 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104496075 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07317006 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065455808 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095783895 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074485255 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067520291 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105302763 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074662805 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095734413 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073293425 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074086845 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104103498 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072984418 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072492838 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095936997 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072056376 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102906876 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074889623 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074199058 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096706846 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069289263 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070111875 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085409617 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06998437 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055315904 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100703013 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068131959 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068214555 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.10079805 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075163241 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110254084 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070673154 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103699364 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070744321 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068340472 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100518589 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065987763 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071799484 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113252359 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113209572 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070035878 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068034183 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112550916 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074302603 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06806455 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.085828417 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076338546 seconds)
  done (took 9.998346722 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096679073 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094040813 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099528321 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084077168 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124929936 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094038976 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104879431 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075722716 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07101078 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114148967 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069027497 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105847762 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069799652 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078277454 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12586346 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077580615 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099029396 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078283714 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073283482 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137278671 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084172291 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112363585 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082082317 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098189598 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07456905 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081465927 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.126129536 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081181636 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108147492 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086997073 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081413982 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.12546269 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087506083 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101534232 seconds)
  done (took 4.342177558 seconds)
done (took 39.067640693 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.211338771 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.38664835 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.173298347 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.079978728 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.195259044 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.181705244 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.187625944 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.176566897 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.43426069 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.179613772 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.419377614 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.781065453 seconds)
done (took 58.531748759 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.262441421 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.316535776 seconds)
    (2/2) benchmarking "String"...
    done (took 1.4753277 seconds)
  done (took 3.914837148 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.536201819 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.188306963 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.455904621 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.173789085 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.181966824 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.637959352 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.765865089 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.023615901 seconds)
  done (took 27.544980428 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.184034876 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.534215262 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.494842589 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.498682133 seconds)
  done (took 17.832244405 seconds)
done (took 59.213356599 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.211469802 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.245446809 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.215284387 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.162290598 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.281942205 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.207028908 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.499148945 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.399015224 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.18442704 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.166598528 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.195063406 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.17944393 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.190669183 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.492804676 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.189532058 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.189620672 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.236597491 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.625579114 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.565032405 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.185496949 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.196672401 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.232528951 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.177197729 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.180632521 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.210260349 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.180198718 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.184532833 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.191656288 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.39257922 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.183809706 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.266434426 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.658086009 seconds)
  done (took 190.792668719 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.177450818 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.173105485 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.272041976 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.228483248 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.624639114 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.382170641 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.310060886 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.701131969 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.19647493 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.18912089 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.501622893 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.177304252 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.532311112 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.206764551 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.194341977 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.25795734 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.471593461 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.507796338 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.20964513 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.447628775 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.186168435 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.398449769 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.317951609 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.422317292 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.225608139 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.199491719 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.201199141 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.204718009 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.369403903 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.389346072 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.207438731 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.179807167 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.742831802 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.043318532 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.185194821 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.184235854 seconds)
  done (took 149.342417391 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.440051608 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.182469831 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.178223803 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.17878659 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.178868476 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.209181884 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.179963992 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.70914293 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.706276224 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.688126745 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.651823489 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.241442821 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.37824739 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.184323835 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.269804001 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.197315855 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.184142862 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.199864432 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.203415187 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.184715234 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.182712887 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.703730918 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.199688514 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.18606231 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.188945977 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.184065003 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.213314061 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.57771454 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.184045706 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.212848159 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.495906436 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.226208924 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.183506672 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.453375348 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.41733913 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.2900443 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.185811621 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.21070603 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.181938897 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.447262448 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.183812246 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.182907002 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.185153897 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.724612184 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.182605791 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.694148567 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.185540872 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.04442493 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.183493874 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.183334925 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.44821237 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.537660517 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.182979512 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.182816606 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.186837207 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.183082523 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.182035695 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.212932868 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.441697335 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.281399142 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.184594307 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.183225394 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.18692123 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.211820267 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.184236067 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.305925104 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.185526846 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.677472181 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.243322035 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.291055052 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.69002332 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187757658 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275378804 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301794397 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.183314121 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.182367761 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.184578307 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.181889718 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.288176127 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.18298709 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.56125539 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189971612 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.183436923 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.240476193 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.183984762 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.272821037 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.18039424 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.450731624 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.184572639 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.184254764 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.856895349 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.184774813 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.274709048 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.183402838 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.184630758 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.183681993 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.558515885 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.686602204 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.34761304 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.183670654 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.458659918 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.183355853 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.565646764 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.657529678 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.709416805 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.183605804 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283914483 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187135274 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.182219858 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.183088681 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211934167 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.181843005 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.240170803 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.183877519 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.5728429 seconds)
  done (took 342.123824642 seconds)
done (took 684.81989239 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.834840417 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.818319139 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.932235456 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.822112806 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.801114561 seconds)
  done (took 10.337431067 seconds)
done (took 11.464713652 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.35089734 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.35633583 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.237290249 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.359810199 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.213280785 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.370543978 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.333734292 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.20366024 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.278819016 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.251973039 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.280114773 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227791911 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209189574 seconds)
  done (took 17.800552212 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.471902884 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.466749419 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.246954353 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.474762203 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.220664526 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.471841047 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369375322 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.375331394 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.362347645 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.198677792 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.197914805 seconds)
  done (took 15.983487328 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.488222071 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.466190266 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.253021271 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.484771134 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226492722 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.490255706 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.368954104 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.377363469 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.371496867 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.201495075 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.196746383 seconds)
  done (took 16.053664157 seconds)
done (took 50.967255173 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.192767543 seconds)
  done (took 2.318531063 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.22393233 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.383101237 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.20824193 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.196272459 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.192765285 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.193797771 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.193968391 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.19236198 seconds)
  done (took 10.912116545 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.187392077 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.189500338 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.184727361 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.185372018 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.190566413 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.188719478 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.189452552 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.183655748 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.187439529 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.189471746 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.190043179 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.192186495 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.187596743 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.187965628 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.187674969 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.189780742 seconds)
  done (took 20.138586571 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.19062915 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.187512647 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.189694657 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.18673977 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.188534149 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.189700179 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.190907051 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.185194333 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.187603874 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.187020143 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.188310922 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.186856225 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.189342018 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.190021585 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.18619593 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.188417761 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.190744791 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.185948387 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.193787051 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.186762232 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.19095216 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.188534486 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.190139524 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.189981234 seconds)
  done (took 29.657357096 seconds)
done (took 64.151145589 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.064449256 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.65093426 seconds)
  done (took 8.841079796 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.190515476 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.190887159 seconds)
  done (took 3.506101023 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.191669878 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.191758305 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.191748347 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.191750534 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.191939712 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.190750132 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.192203455 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.192156835 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.192092953 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.19167674 seconds)
  done (took 13.046338299 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.192438899 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.192827209 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.190116405 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.192275561 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.19249605 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.190584723 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.191137099 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.192305922 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.192293493 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.189902232 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.190345695 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.189621705 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.190132448 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.189751277 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.189675505 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.190262423 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.190750896 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.18967374 seconds)
  done (took 22.566164904 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.193282075 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.190884934 seconds)
  done (took 3.514597765 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.190459174 seconds)
    (2/7) benchmarking "second"...
    done (took 1.190235967 seconds)
    (3/7) benchmarking "month"...
    done (took 1.190918249 seconds)
    (4/7) benchmarking "year"...
    done (took 1.189524227 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.191128643 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.190700058 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.189859694 seconds)
  done (took 9.461604316 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.192738082 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.368680839 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.446771707 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.785536807 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.194614808 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.195879112 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.984217935 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.194612614 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.197752642 seconds)
  done (took 13.690618775 seconds)
done (took 75.752296582 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.151740424 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.18705278 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.961614381 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.19860364 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.201293838 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.526872627 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.212684002 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.302384643 seconds)
done (took 36.872278881 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.189647194 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.872901113 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.912388634 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.187345169 seconds)
  done (took 11.101749989 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.176916398 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.030723259 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.172747364 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.118866854 seconds)
  done (took 17.629913116 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.742384335 seconds)
    (2/2) benchmarking "read"...
    done (took 1.509702122 seconds)
  done (took 4.382403023 seconds)
done (took 40.433746841 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190616709 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.188483245 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.188662307 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.191480228 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.189985379 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.185847157 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.19287492 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.190767827 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.190859871 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.190147745 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.188914767 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.190417346 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.186187825 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192584793 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.188900308 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188889065 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191760008 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.186366827 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188069527 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.187133411 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.18814908 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.193080859 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.185493632 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.189945709 seconds)
  done (took 29.667451038 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.191417249 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.188751684 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.191714894 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.194404352 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.186889628 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.192363334 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.188645452 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.190307781 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.191072592 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.192040872 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.188327852 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.187946643 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.192158342 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.188555023 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191950146 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.187767555 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.189452523 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187024281 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191922807 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.186891511 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.192202952 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.187780161 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.187135961 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.190437916 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.185770862 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.185639483 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.189674133 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.187343217 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.188843958 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.186432948 seconds)
  done (took 36.809092613 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.190925638 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.198758572 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.188178246 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.189861589 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.191725907 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.193334011 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.193499224 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.187087647 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.190010003 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.189850758 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.189920147 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.191146089 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.189433982 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.187944649 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.191073755 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.190709456 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.187737494 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.188705088 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.19045855 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.188828088 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.192985881 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.188441705 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.187416233 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.188349211 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.187289989 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.187578503 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.189916743 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.188059807 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.188929643 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.186984947 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.186002307 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.189431145 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.189214665 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.186639842 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.188574548 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.187644428 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.191160719 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.194745415 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.187483809 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.186596592 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.186316242 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.187530693 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.189778072 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.187316082 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.187561839 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.187429504 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.185713712 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.1861296 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.190411968 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.189422763 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.186672656 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.189674755 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.188943458 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.189124637 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.187540427 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.186907677 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.190231163 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.188497223 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.188655827 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.189114196 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.190193376 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.187258747 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.187879538 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.189016414 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.190538442 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.188886904 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.194011938 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.187968386 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.185717462 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.188061137 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.186070809 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.187796893 seconds)
  done (took 86.738326268 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.190217657 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.185983263 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.184678898 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.185855883 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.186869044 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.18609142 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.188336237 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189762475 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185532361 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.188409454 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190472952 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.186604946 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184615717 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.190081559 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.187947916 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.190013136 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.187945905 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.186496304 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.188525974 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.18901408 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.188804992 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.18695131 seconds)
  done (took 27.251918159 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190041389 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.189408357 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.186045301 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.187756181 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.18743972 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.187219695 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.190780536 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.188724293 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190473021 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.190040998 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185272283 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193644854 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.187127144 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.187970232 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.191359141 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.187109385 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.193726712 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.186030806 seconds)
  done (took 22.528080098 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.189862768 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.188276558 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.194693663 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.190334688 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.187075991 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.190653954 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.19102518 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.191473626 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.191255558 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.188458181 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.189847996 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190218783 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.191590249 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188436319 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194602505 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.190006275 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.193943414 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190141745 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.194432968 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.191872133 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.189496157 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.193742447 seconds)
  done (took 27.327115585 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.191609002 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.195015425 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.189834061 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.190287992 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.193269876 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.193199376 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.191581145 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.190754722 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.195167333 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.193084831 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.190170558 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.194459175 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.191241652 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.193186181 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.192383294 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.191755965 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.192623618 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.188069691 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.194450039 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.190148111 seconds)
  done (took 24.971822087 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.194279087 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.195959008 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.19524122 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196211014 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.197483869 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.19167203 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.191473049 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.198682907 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.191613136 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.196838691 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.194958388 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.193191745 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.194907594 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.191768731 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.191170951 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.195494188 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.194000072 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.194516348 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.196924264 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.195342072 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.194491667 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.19204306 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.196421777 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.197180725 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.19559258 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.19408647 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.194124115 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.194213061 seconds)
  done (took 34.579423951 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196031319 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.199620756 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.192067927 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.195653192 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.194498832 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.19803533 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.194873297 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.191963752 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.197277197 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.19276001 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.200072076 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.192103892 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.19663433 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.195302818 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.193186169 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.199128417 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19559237 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.193611534 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197211125 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191020874 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.194442153 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191973829 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.197594647 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.198042924 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191502813 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.198506041 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.193673552 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.195221598 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.194332139 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.193838557 seconds)
  done (took 36.984249689 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.213744397 seconds)
    (2/2) benchmarking "in"...
    done (took 1.216386217 seconds)
  done (took 3.563707942 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.190830311 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.195569229 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.194642778 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.195711213 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.189366809 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.19590638 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.195974852 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.191962578 seconds)
  done (took 10.677373836 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.196320075 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.195432041 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.193163936 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.195781191 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.19380462 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.196100753 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.205180229 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.206340157 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.198649795 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.197025252 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.204785755 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.203946065 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.200768907 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.197393033 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.194404942 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.197163981 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.196508116 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.196112273 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.194352724 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.195063183 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.198837163 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.196768377 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.197140938 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.192742758 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.195773514 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.211978757 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.204446938 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.195073941 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.196574754 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.205728588 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.196125313 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.19606304 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.197987878 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.198238719 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.194789519 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.196883357 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.210780666 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.210368152 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.205890426 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.196513934 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.197752121 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.196473961 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.199228214 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.199512867 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.198633585 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.195663338 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.19655946 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.193369363 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.195168215 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.199283876 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.201147167 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.195546373 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.193919753 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.203291387 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.202079578 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.205436288 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.207455685 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.202171522 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.206850834 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.211699821 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.213719885 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.205924605 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.203399992 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.197965292 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.20848846 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.21719417 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.206889059 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.206020864 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.195282794 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.197775882 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.21028143 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.214130837 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.213380581 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.20001543 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.197786993 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.201759001 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.197531991 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.199413404 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.207324382 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.21244912 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.199656758 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.196562426 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20563159 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.221219911 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.199385179 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.200163782 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.20178449 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.198896935 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.198141725 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.21322143 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.210901541 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.199085455 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.19973825 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.199513145 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.201401969 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.197896364 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.201022678 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.20475141 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.19686324 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.201285187 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.201971789 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.201380993 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.212844926 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.200161194 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.198664922 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.208697744 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.201073742 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.199555057 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.211817093 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.201825553 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.200581876 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.20105398 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.209251914 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.19922337 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.202197409 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.20858476 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.201658896 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.200515781 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.199707229 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.201303519 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.207147381 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.223010154 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.20054245 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.199362405 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.205944745 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.213749053 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.202173855 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.206648324 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.201290235 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.200156696 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.198950569 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.204933342 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.201024388 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.203924175 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.201757425 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.201357866 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.199091737 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.201979892 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.204071951 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.204327762 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.206135051 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.20451499 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.203819451 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.205323523 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.202463906 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.2059234 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.210773834 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.203853741 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.204232861 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.205267664 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.20023699 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.204421726 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.206981452 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.203324277 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.201870747 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.204036927 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.203782741 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.202984241 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.206125882 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.202564787 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.206631461 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.203428374 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.206982665 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.206223886 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.211996252 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.203319515 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.203552345 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.20396052 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.202465999 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.210207431 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.204337053 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.202406374 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.204355701 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.21256694 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.206308935 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.203178245 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.207987066 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.207469204 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.201572667 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.202563956 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.205703829 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.213455952 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.204554118 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.212427845 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.205433654 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.206263971 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.206588192 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.205449903 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.205137232 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.204724208 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.208578234 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.212547671 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.219300334 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.216291601 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.209446523 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.209767237 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.20688395 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.210601023 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.215148265 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.204345903 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.204239701 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.205316845 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.202630873 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.206201797 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.209067006 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.207327057 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.203079208 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.204682917 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.204792782 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.205952195 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.207844509 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.207304585 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.205926875 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.202648412 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.207685244 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.203915617 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.20532523 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.201865375 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.204397609 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.204920853 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.207725609 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.204563928 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.216312214 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.202163732 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.209987851 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.208473765 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.208220182 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.203975881 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.206523209 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.209794929 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.206037871 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.214439331 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.218870106 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.206280831 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.213931662 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.217882987 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.204434581 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.211525308 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.208929898 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.206464885 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.21182896 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.2158029 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.209566805 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.208110308 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.211152497 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.205147893 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.207402775 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.21834849 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.209187111 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.20778836 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.209978114 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.213892312 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.205299622 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.211107583 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.211021045 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.209508063 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.211628116 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209278669 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.210054297 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.207450288 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.20898718 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.208028315 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.207410169 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.21103939 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.215092709 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.216131734 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.208287491 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.211284627 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.209219065 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.212323785 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.208222257 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.206826621 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.208308455 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.222398708 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.217614839 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.218615062 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.213190111 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.212649181 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.215476252 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.212536624 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.212276691 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.207739279 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.211126006 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.210023798 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.208026136 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.208784358 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.214673582 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.211843796 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210739302 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.208840463 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.214283504 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.216883065 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.206894886 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.209570935 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.213140039 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.209126099 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.208305944 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.210640746 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.212055757 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.215801301 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.208295734 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.208773626 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.221630229 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.220627046 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.210578711 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.209907413 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.211135047 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.208934248 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.210177712 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.211794135 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.214402639 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.218636689 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.215052208 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.223216329 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.211388268 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221982813 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.211764388 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.213592315 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.218640439 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.209803487 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.208169755 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.210816887 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.211047596 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.219654903 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.222655487 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.213184163 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.21471909 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.211725922 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.213230659 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.210706767 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.21107591 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.21266554 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.210041554 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.223800057 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.223464536 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.214325685 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.213190373 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.209708909 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.213588318 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.21300411 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.209355152 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.216760332 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.214170934 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.212984232 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.210913554 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.211778103 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.214556305 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.212127634 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.213519686 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.210176429 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.211876948 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.220790987 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.224433763 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.214371473 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.213292682 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.225645706 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211364867 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22370825 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.224006738 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.213204736 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.213163862 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.214305342 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.217279977 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.21242614 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.215379973 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.214923628 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.212992657 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.218562037 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.214047872 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.216538443 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.21416298 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.212301145 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.214289086 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.226014717 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.234443029 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.213470202 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.219482793 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.212433972 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.216205462 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.217101573 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.213516816 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.213296969 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.215153817 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227971942 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.222460861 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.217452738 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.213444844 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.213941254 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.214263953 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.214572853 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.214713141 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.217639481 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.216533058 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.219321465 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.213205051 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.224324651 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.216191285 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.216736913 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.217011159 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.216098254 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.228076495 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.21481176 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.218490217 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.215475918 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.218041836 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.21727078 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.217906235 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.215308156 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.218196276 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.215970796 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.215139569 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.221959618 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.223221957 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.219839232 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.214824017 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.215012662 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.219209464 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.221860676 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.218141584 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.219231075 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.21760986 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.217659294 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.215462854 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.219664075 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.214729476 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.220399537 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.221065378 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.218569426 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.220380889 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.220152244 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.223678762 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.216674578 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.221951607 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.22141705 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.218814093 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.222014447 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.231120186 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.222334106 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.231625383 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.227777826 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.223848861 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.219411525 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.221646192 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.225794813 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.219564675 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.220326013 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.221762615 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.223753621 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.219771242 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.225539388 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.220478836 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.233692438 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.221433893 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.220731363 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.229390244 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.236601956 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.221704635 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.220346291 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.226895637 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.221782512 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.21896789 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.221447963 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.219707114 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.232602647 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.235815303 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217873392 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.221645609 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.219453292 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.224755534 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22336342 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.221855206 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.224700243 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.222699099 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.224717993 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22236975 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.225599615 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.224510141 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.222739014 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.223082914 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.227092638 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.231563189 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.219722595 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.223109595 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.22581139 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.225172357 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.225267678 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.223275569 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.222751652 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.222598256 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.225529808 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.226565552 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.227116284 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.225235094 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.222661191 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.225000176 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.224873917 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.221281266 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22339317 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.23670099 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.234552864 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.221621271 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.226336006 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.225740449 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.229728381 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224724063 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.222211145 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226453555 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.226880953 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.22684602 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.223917222 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.22683655 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.226869182 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243321158 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.239475596 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227826194 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.225459754 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.232186382 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.227594174 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.226143502 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.223950438 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.230602558 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.227169113 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.23089766 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.227322891 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.236628587 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239583628 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.228352915 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.231196563 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.227977709 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.234822417 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.23025456 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2242197 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.22544611 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.231612541 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.244164505 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.226904401 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.235087226 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25778758 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.240869504 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.230080242 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.228209052 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228009848 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.226308761 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.231925516 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.22782375 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.228238643 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.228694311 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.225925368 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.23026825 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230161705 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.230143693 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.229676255 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.228077755 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.223248405 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.227817911 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.227523136 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.226223065 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.22950327 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.226477469 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.228737418 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.227554896 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.230349061 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243868992 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.236224218 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.227307806 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.229730179 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.227007292 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.236131724 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.231968618 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239569898 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.232844006 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.227669881 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.229297126 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.230384581 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.227797067 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.226640383 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.230999245 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.231158257 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227099308 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.228319954 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.243089811 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235478812 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.238018973 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.229759857 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229114133 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.229862728 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.232404839 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228566839 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230119814 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.233681745 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.231459286 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2311567 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.225672137 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.22786877 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.230607981 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.236200778 seconds)
  done (took 724.659918407 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229206144 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226725499 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.22802539 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.228386918 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226443971 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227516248 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225674718 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.229492429 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.227399093 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225659708 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.22773611 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229365842 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2269253 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.228354762 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228480793 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224427717 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228332684 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.229029306 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.228482426 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226609204 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.229466694 seconds)
  done (took 26.949564802 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.232682663 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.23048978 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.230717754 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.231231794 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227397382 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230277506 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.229381677 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232126255 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229939492 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230070302 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.233407775 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232832389 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.230737028 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.229619946 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229757974 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231306787 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.231756141 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230547722 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.234022878 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.230104036 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234293724 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22981373 seconds)
  done (took 28.248513333 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.232010373 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.2331438 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.232547236 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.230433869 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.231577687 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.229959801 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.231959765 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.229268449 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.233607553 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.233074853 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.233024153 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.233507721 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.235694235 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.237314705 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.237395984 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.232048272 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.378477294 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.233198239 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.233703597 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.232888573 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.230232612 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.242368554 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.233284446 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.229271645 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.233571192 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.233365722 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.236104891 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.233804036 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.235402111 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.232196882 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.23768335 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.235187498 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.232439459 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.237130551 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.233230625 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.235629966 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.237698658 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.235174733 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.233599019 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.238371055 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.244581266 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.251064719 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.234174384 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.244286824 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.234207806 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.234767132 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.235973551 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.242849538 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.23359806 seconds)
  done (took 61.824866238 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.235710776 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.235834136 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.232111698 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.235027236 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.233712803 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.235627058 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.234010068 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.235103019 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.23339336 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.232106254 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.233246336 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.233919309 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.233540539 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.234614834 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.237672881 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.235181235 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.234609198 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.234519139 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.231786125 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.235575753 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.2351859 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.238416601 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.234505859 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.233524969 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.236001004 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.234394607 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.234829491 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.235198458 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.232727537 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.235751213 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.233773827 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.232772674 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.237292756 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.23315664 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.229655293 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.228033296 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.228401593 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.227588414 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.229254588 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.226945549 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.228732337 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.230951615 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.224654946 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.22457829 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.218308714 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.221296842 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.219350002 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.22165968 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.221475204 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.228124304 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.213856 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.212700907 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.214702801 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.210091119 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.213858979 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.214273926 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.210213674 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.212715967 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.205601166 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.207524043 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.204801009 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.20665814 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.209351566 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.208268989 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.213481557 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.210714283 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.209862144 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.207035699 seconds)
  done (took 84.541995338 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.210383789 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.20808902 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.207122737 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206498881 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206701776 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.20620635 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.206016719 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.206230613 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.205115922 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.207540256 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208341387 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.20578601 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.204174187 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.209132711 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.206003677 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.20704576 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.202908831 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.203410366 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.202970294 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202888497 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.207317404 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.200129957 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.205437174 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.20606119 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205793909 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.205739969 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.205862647 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.203618011 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203472752 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.202821345 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.206244284 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.203601864 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.201365755 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.202366599 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.206307035 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.206335893 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.2032108 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204029863 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.206328959 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.205633798 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.207646835 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.203249238 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.207518464 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.202397078 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.20330406 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.206762312 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.204373045 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.207573193 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.20734122 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.203883541 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.204777559 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.207821272 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.207184913 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.203746337 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.203999962 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.206803382 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204372726 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.204947173 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205985104 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.207344276 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205724551 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.205015482 seconds)
  done (took 75.883012244 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206233261 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.207193062 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.205678827 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.203649249 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.207339388 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.204202654 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209633733 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.207827528 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.207228499 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.203347216 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207192718 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204756529 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205066042 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204166546 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.203635871 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206475093 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201915454 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.204512728 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209696736 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.203584101 seconds)
  done (took 25.255191695 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.2042217 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.209029085 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.207485705 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.203549843 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.209862778 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.204121765 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.207815386 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209396381 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203746499 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209680671 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.207178008 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.209657839 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206416065 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.207115396 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.210137186 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.205664004 seconds)
  done (took 20.458199632 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.207896516 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.206234113 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.205386933 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.208930343 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.201116336 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.206326046 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.209779062 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.206773098 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.204778028 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.21140256 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.21142791 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.206734421 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.206981668 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.20838376 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.204064737 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.210481391 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.209028345 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.206397911 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.211068913 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.211213635 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.208988818 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.205255916 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.208324155 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.211951009 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.20584472 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.208657947 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.207270316 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.207797199 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.204892654 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.208126569 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.209344861 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.208964859 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.209492678 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.209481508 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.21126415 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.209334528 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.212101909 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.208806997 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.209996751 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.208538783 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.21137793 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.207706293 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.209251549 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.212398352 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.211006509 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.208755035 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.20786478 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.210110854 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.209124718 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.211022858 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.212107376 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.212076055 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.210999204 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.211820314 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.212440916 seconds)
  done (took 67.631778295 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208490085 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.211883015 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.205224365 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.20783275 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.208348864 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.206120806 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.209486173 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.209300203 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20587901 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.211764886 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.206676821 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.20931804 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208280046 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.210875018 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.209699307 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208129251 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.210955572 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.206548923 seconds)
  done (took 22.905017575 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.210044209 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.211282903 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.212662543 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.210863579 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.209133421 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.212136094 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208121166 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.211882946 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21361722 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.208360303 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210080256 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.212721406 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212728407 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.212535373 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.210778851 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207998974 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.214216429 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213212806 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.207001878 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208315859 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.214777758 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210199585 seconds)
  done (took 27.78744351 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.212077029 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.210045075 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.228785633 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.25450385 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.23857528 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.210880985 seconds)
  done (took 8.505346897 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213820369 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212403018 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.212063611 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215189801 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214024763 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211955983 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208632402 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21000685 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209984518 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209358863 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205538962 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214609801 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214958689 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210811872 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213260863 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213301413 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209058203 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212210654 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211730181 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212783676 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214577508 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215911792 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210067185 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207398008 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213602519 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21363866 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216333923 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210668817 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210381963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21601036 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215634682 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212070454 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214519952 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214833722 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214032701 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214328097 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208491644 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213936215 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212724861 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214373154 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.216573452 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212837852 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21664102 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208129267 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209677329 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212465782 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210143193 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210055107 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213694242 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214731499 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215487359 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208696182 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216688012 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213364757 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215359886 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215571181 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213004089 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212225022 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217839433 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210301523 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210627503 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210064299 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214339779 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211061323 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214197331 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211507263 seconds)
  done (took 81.187151587 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211509981 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.208854485 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213501692 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212832588 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211124449 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212078612 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212701958 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212364668 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209763951 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209282903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215196793 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213432098 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21254761 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212720795 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21526128 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217530968 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213253093 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215216145 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217021588 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213667644 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21499553 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213003426 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210005666 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213750047 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214600512 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214927731 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213901536 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212140517 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213660576 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21646461 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210792856 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212351471 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213771327 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.214668083 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21116429 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213692461 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213985652 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213698829 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215012625 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218963316 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215146759 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216349514 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213847903 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210643028 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215449885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214022428 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216911668 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217010745 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211378691 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21546225 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219222533 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216504776 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213805089 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21697789 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21204787 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212857839 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218219369 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212045817 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212601251 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216963708 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215640788 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212335033 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218898293 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215365035 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216447226 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215402837 seconds)
  done (took 81.275859661 seconds)
done (took 1679.341199103 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.28050505 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.268031604 seconds)
  done (took 13.701651727 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.378506365 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.333771111 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.218251399 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.222610434 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.216066969 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.242388548 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.227583921 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.213592537 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.218039704 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.215869015 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.214830687 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.405245376 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.274432903 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.215434246 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.215688317 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.308585493 seconds)
  done (took 41.278363132 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.235556157 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.225562988 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.319717633 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.242411818 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.245139674 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.385011531 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.273000962 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.225241316 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.366113753 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.260710594 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.558795614 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.24376647 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.222490512 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.171403832 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.236281725 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.380657614 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.437141483 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.579745731 seconds)
  done (took 27.763075855 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.59543256 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.238999229 seconds)
  done (took 8.990544302 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.260279071 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.234246327 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.211440936 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.227945022 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.233645753 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.248056154 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.249147865 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.261137211 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.217213131 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.244595462 seconds)
  done (took 63.545860511 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.22799415 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.213104922 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.212561193 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.211267568 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.20384747 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.217471886 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.211188184 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.219594188 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.262519383 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.320211655 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.225298596 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.218558885 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.213120434 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.212473011 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.20957123 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.245863407 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.336074908 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.210034631 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.208548072 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.217972188 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.212446635 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.332116979 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.248051217 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.210733396 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.319984694 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.279780948 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.21608933 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.219115646 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.330506901 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.211469148 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.212592343 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.212834412 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.214633707 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.764165242 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.726685592 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.221064223 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.234241563 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.221349734 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.210332728 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.386849836 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.214120737 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.219575127 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.205662937 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.726351601 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.364369613 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.310966068 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.315203262 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.21615012 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.21493034 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.273263931 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.214696106 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.214807489 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.240622997 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.923711416 seconds)
  done (took 103.386576075 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.219625159 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.695351173 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.373243291 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.226076961 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.962030997 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.855568408 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.20721899 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.448849855 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.225370917 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.206377676 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.529651979 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.662912695 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.211159373 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.224907758 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.878593549 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.21232443 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.20912345 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.965895477 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.204829064 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.205738582 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.605443283 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.226290033 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.197243073 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.233930527 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.230134467 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.618600317 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.456082949 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.631940734 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.198381231 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.191569143 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.611880064 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.197953008 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.274687355 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.193933012 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.444767421 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.503613687 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.484410711 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.192123168 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.199822165 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.194069986 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.212850894 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.608873566 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.49359861 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.192693852 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.193059071 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.614723769 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.19294151 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.202654518 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.195812673 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.387857943 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.201457058 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.193666165 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.469921529 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.194746159 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.535000095 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.238594559 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.260492638 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.641170114 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.192687426 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.266594575 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.195349647 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.195274084 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.198123335 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.194557921 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.197370698 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.499445644 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.568347008 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.198094326 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.501921111 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.610375752 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.195402897 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.670556054 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.088994986 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.207747407 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.258993854 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.193658354 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.765167075 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.647137156 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.224071113 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.194873916 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.488940992 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.200509944 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.493804236 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.205941318 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.194653712 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.603226951 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.217691003 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.230718621 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.195163555 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.197595324 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.851261423 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.194323499 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.441839981 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.258076452 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.194735783 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.195561046 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.206753927 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.196049521 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.209044737 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.196210584 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.675230594 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.196803938 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.46600748 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.21141062 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.196438689 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.19746283 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.19952392 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.197960079 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.406427254 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.677290899 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.20020614 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.195769672 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.195881563 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.215418946 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.498792057 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.20090577 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.462446278 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.19825082 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.196013148 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.218670171 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.858095929 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.203679854 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.196406126 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.201287924 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.034638924 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.406130083 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.214023107 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.196245575 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.197823929 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.209178299 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.376626694 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.1963483 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.239271652 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.201713152 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.857173302 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.210283773 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.219677477 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.865070528 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.197650898 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.974115032 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.219768877 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.198445482 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.492633142 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.453883718 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.505783792 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.198827675 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.197093143 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.844934822 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.223978234 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.329329656 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.212958711 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.208114722 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.394299742 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.402483958 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.19752516 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.775495592 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.199892816 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.404610542 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.198163072 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.514270033 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.640977001 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.201653491 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.200201475 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.857996829 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.866501573 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.815752825 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.201615254 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.510930362 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.190528541 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.644269299 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.199327136 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.205674529 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.658677242 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.199650028 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.198640964 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.199403961 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.198557487 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.268292531 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.371227153 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.3909001 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.20330754 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.620885868 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.216195166 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.204319201 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.206633346 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.201234994 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.549321364 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.257749641 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.202033108 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.237161789 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.199867011 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.200557146 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.63369402 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.053234075 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.200978466 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.350386772 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.779858495 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.201574221 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.201663296 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.835797302 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.47166084 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.670892482 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.209086293 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.470929226 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.202496529 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.237743884 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.890012114 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.21087022 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.633301213 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.20441448 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.202464007 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.766468882 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.202345256 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.25799675 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.200196273 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.20112466 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.687510848 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.202782741 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.20151952 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.414675998 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.202355002 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.44412047 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.201519621 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.203584491 seconds)
  done (took 1078.440864494 seconds)
done (took 1338.260365972 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.202394699 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.205161777 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.191203171 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.204793009 seconds)
  done (took 25.949723626 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.212908791 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.209796909 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.210934599 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.209921092 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.212370497 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.21035057 seconds)
  done (took 8.413954802 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.237659144 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.206487334 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.205932135 seconds)
  done (took 18.798130974 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.39965394 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.352465987 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.530980596 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.10796088 seconds)
  done (took 9.539849674 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.21148386 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.210889091 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.211161958 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.213248228 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.214442001 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.215876051 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.212973562 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.213793535 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.215093286 seconds)
  done (took 12.066480617 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.684509564 seconds)
done (took 80.597656719 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.287133927 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.026879554 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.201112992 seconds)
    (4/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.216267664 seconds)
    (5/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.601560281 seconds)
    (6/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.20687653 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.205748404 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.73032705 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.433202922 seconds)
    (10/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.776520755 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.436459345 seconds)
    (12/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.30418215 seconds)
    (13/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.232691259 seconds)
    (14/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.304311795 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.246724876 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.646857323 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.221523819 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.235109616 seconds)
    (19/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.351425047 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.596847081 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.224080754 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.195668609 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.711160909 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.450062703 seconds)
    (25/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.958105975 seconds)
    (26/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.330211385 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.265556517 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.269371508 seconds)
    (29/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.369594892 seconds)
    (30/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.246488918 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.961204879 seconds)
    (32/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.74452899 seconds)
    (33/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.956750056 seconds)
    (34/309) benchmarking ("sort", Int8, false)...
    done (took 4.253645306 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.284320757 seconds)
    (36/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.192063192 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.232627618 seconds)
    (38/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.399268525 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.310203479 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.238369129 seconds)
    (41/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.197770787 seconds)
    (42/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.329719575 seconds)
    (43/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.605904174 seconds)
    (44/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.896069273 seconds)
    (45/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.747020848 seconds)
    (46/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.225799164 seconds)
    (47/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.328386411 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.660203685 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.210536171 seconds)
    (50/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.208409818 seconds)
    (51/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.491586877 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.318708616 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.56989168 seconds)
    (54/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.721303966 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.479156971 seconds)
    (56/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.23623299 seconds)
    (57/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.257236939 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.217297242 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.265215624 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.630803501 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.20918542 seconds)
    (62/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.194406984 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.684249429 seconds)
    (64/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.177581756 seconds)
    (65/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.366321289 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.212224794 seconds)
    (67/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.866549874 seconds)
    (68/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.210308675 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.281865387 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.988120414 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.259459094 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.425828989 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.612803377 seconds)
    (74/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.295354024 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.047761787 seconds)
    (76/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.744724018 seconds)
    (77/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.211122278 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.287254785 seconds)
    (79/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.44602643 seconds)
    (80/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.236670509 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.209208008 seconds)
    (82/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.429421757 seconds)
    (83/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.330053961 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.471209244 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.325843107 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.42481433 seconds)
    (87/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.500776806 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.276640401 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.31501816 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.31626931 seconds)
    (91/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.292531882 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.042681704 seconds)
    (93/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.195055245 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.20784854 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.305775176 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.923444627 seconds)
    (97/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.698976138 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.416862437 seconds)
    (99/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.23747935 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.421951962 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.797908356 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.577963998 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.546577126 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.612804373 seconds)
    (105/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.561082499 seconds)
    (106/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.33190247 seconds)
    (107/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.656454223 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.218893947 seconds)
    (109/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.190249474 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.212195131 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.237254359 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.210656986 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.21242337 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.292522018 seconds)
    (115/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.319292991 seconds)
    (116/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.508732268 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.207068051 seconds)
    (118/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.552445953 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.417493762 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.709158941 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.336974667 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.496235933 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.537250657 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.750214342 seconds)
    (125/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.53956066 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.21690967 seconds)
    (127/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.48390301 seconds)
    (128/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.347313284 seconds)
    (129/309) benchmarking ("sort", Float32, false)...
    done (took 5.171848096 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.32315924 seconds)
    (131/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.206435304 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.712907255 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.236781327 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.208501811 seconds)
    (135/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.298877285 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.232480111 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.483463744 seconds)
    (138/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.275449595 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.005277287 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.885022514 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.475838509 seconds)
    (142/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.74433263 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.295459377 seconds)
    (144/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.310068822 seconds)
    (145/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.276435745 seconds)
    (146/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.198556677 seconds)
    (147/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.410650177 seconds)
    (148/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.300315609 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.046266871 seconds)
    (150/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.923688906 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.318225567 seconds)
    (152/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.704279031 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.322128895 seconds)
    (154/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.238296955 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.236954465 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.983005604 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.001200969 seconds)
    (158/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.56205044 seconds)
    (159/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.325239391 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.89191883 seconds)
    (161/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.297188813 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.239260092 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.404597084 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.248548162 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.884809804 seconds)
    (166/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.200190781 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.255558613 seconds)
    (168/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.488571192 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.433941113 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.216454142 seconds)
    (171/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.218881332 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.239147705 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.210638925 seconds)
    (174/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.263611389 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.208980241 seconds)
    (176/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.892130584 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.515083466 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.731370892 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.756212933 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.596420292 seconds)
    (181/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.227864138 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.903794874 seconds)
    (183/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.551250949 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.216957217 seconds)
    (185/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.248056222 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.264157288 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.534857483 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.269290169 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.204980211 seconds)
    (190/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.766344655 seconds)
    (191/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.225892182 seconds)
    (192/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.52256 seconds)
    (193/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.205264437 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.243059089 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.534733334 seconds)
    (196/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.232664883 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.272584898 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.030315072 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.7151965 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.917132199 seconds)
    (201/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.302729881 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.73793141 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.222645813 seconds)
    (204/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.554555495 seconds)
    (205/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.245790936 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.885993913 seconds)
    (207/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.473015629 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.275533134 seconds)
    (209/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.224577387 seconds)
    (210/309) benchmarking ("sort", Float64, false)...
    done (took 5.422528639 seconds)
    (211/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.397058629 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.204427589 seconds)
    (213/309) benchmarking ("sort", BigInt, false)...
    done (took 6.229631765 seconds)
    (214/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.345766314 seconds)
    (215/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.516790806 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.919843256 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.220635013 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.338133855 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.216495318 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.433865494 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.846067657 seconds)
    (222/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.639667515 seconds)
    (223/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.215503156 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.472065953 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.028124326 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.240730427 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.226068951 seconds)
    (228/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.415231526 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.272120111 seconds)
    (230/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.370507547 seconds)
    (231/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.367586567 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.41632745 seconds)
    (233/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.711970555 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.853527702 seconds)
    (235/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.800592004 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.218487781 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.810660948 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.492076395 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.669633407 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.21972947 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.21837928 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.216483631 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.020049767 seconds)
    (244/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.218982249 seconds)
    (245/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.282543615 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.21747764 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.26946974 seconds)
    (248/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.78365826 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.334462423 seconds)
    (250/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.205433159 seconds)
    (251/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.256414908 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.216808631 seconds)
    (253/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.969346753 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.357168867 seconds)
    (255/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.323499091 seconds)
    (256/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.351826489 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.410968262 seconds)
    (258/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.317286007 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.372017293 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.218938173 seconds)
    (261/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.395584586 seconds)
    (262/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.400527416 seconds)
    (263/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.220087408 seconds)
    (264/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.65843989 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.247150884 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.60819201 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.573342344 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.565199182 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.625628584 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.978088749 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.435987659 seconds)
    (272/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.247446363 seconds)
    (273/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.894514822 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.616705653 seconds)
    (275/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.993330674 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.987164658 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.246488723 seconds)
    (278/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.376857147 seconds)
    (279/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.369939472 seconds)
    (280/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.222503762 seconds)
    (281/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.208330865 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.235010584 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.389504165 seconds)
    (284/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.221167001 seconds)
    (285/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.635114634 seconds)
    (286/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.358873503 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.871235004 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.307617831 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.252245475 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.309079722 seconds)
    (291/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.907022533 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.299235767 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.338955504 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.377515251 seconds)
    (295/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.224693728 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.041575413 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.278444999 seconds)
    (298/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.238313542 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.247925048 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.267583042 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.830137922 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.764646055 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.938264588 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.437501894 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.258416206 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.323856387 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.268059414 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.507957572 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.411583203 seconds)
  done (took 872.230273413 seconds)
done (took 873.381368397 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.255715448 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.249820156 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.234305044 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.255886488 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.345521791 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.262936819 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.243822305 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.235081101 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.281912028 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.283390387 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.232336158 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.260970987 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.235599622 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.233911026 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.234307507 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.24791581 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.138946262 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.236335681 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.250638915 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.243918533 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.250703237 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.233965733 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.284138178 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.261912402 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.238937287 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.237869971 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.238220269 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.253941786 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.345989809 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.237541359 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.238159583 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.246019488 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.140518852 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.234765924 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.230206832 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.254447732 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.246285724 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.24433368 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.239314183 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.267174054 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.4887153 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.237388475 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.237047767 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.236906306 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.236271089 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.241061381 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.236830568 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.241423178 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.249033522 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.250070488 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.497247138 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.252977357 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.239280608 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.236653376 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.247734504 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.236996278 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.239361661 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.252571792 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.255531204 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.252180301 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.134283001 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.24449824 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.238982978 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.253320998 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.24399394 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.544399494 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.23441269 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.241800075 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.501486568 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.244117937 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.547244559 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.247610025 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.238779637 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.251156023 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.269400811 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.145200273 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.235505021 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.236952347 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.245449392 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.237391925 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.247276482 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.25066149 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.243095231 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.239042467 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.252716948 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.266993054 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.248618044 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.239300227 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.247203853 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.25811698 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.245880596 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.249460229 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.242856052 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.233375665 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.247486179 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.242303385 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.241788342 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.241363452 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.243985377 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.249958051 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.499873951 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.256670719 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.236290005 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.235970762 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.23879193 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.252799926 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.501955463 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.242087601 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.261292864 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.287143849 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.240853128 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.139814673 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.243961449 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.255550394 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.249576485 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.243591212 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.234845759 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.140949529 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.514550828 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.255923683 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.241049183 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.239255836 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.255809141 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.2419758 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.237656187 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.151227628 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.242880316 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.254223097 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.360673181 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.251195819 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.271462011 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.238783135 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.243671945 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.269418415 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.256676518 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.271344336 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.244342783 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.25702704 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.256702861 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.237606782 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.250930329 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.251276524 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.242476858 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.246604203 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.235706846 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.269747916 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.253667837 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.253534349 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.262496073 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.363322284 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.239458128 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.142811281 seconds)
done (took 208.463045886 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.301081323 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.229915863 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.348475735 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.238779755 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.334314293 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.340261128 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.235646541 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.236546945 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.235114759 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.619761912 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.236582228 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.2360285 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.235642578 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.23621858 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.322607649 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.23870584 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.236234473 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.580678977 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.240118226 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.309563581 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.236125526 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.236690591 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.238087239 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.619268161 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.233948921 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.237220192 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.308891861 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.2399267 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.584751783 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.235179029 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.238364824 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.58440703 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.329435739 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.256771106 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.249899383 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.247166074 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.336553334 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.254904876 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.322598154 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.321760938 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.349055869 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.278187118 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.233151572 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.237954222 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.241277578 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.240849201 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.238062377 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.267178663 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.232670962 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.238311835 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.583244601 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.24996052 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.248488913 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.237953575 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.237998011 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.26108522 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.23849842 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.240835341 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.331153916 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.241218563 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.302912011 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.621847412 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.664038919 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.240691128 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.239126079 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.239811873 seconds)
  done (took 142.216538999 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.305712976 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.313768651 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.346086902 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.24170145 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.289731635 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.351130247 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.242803274 seconds)
  done (took 10.26826192 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.247383039 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.242110501 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.291659636 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.291378771 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.241941032 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.395364021 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.242489148 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.253286324 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.239113135 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.294846024 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.243701151 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.243448675 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.250004698 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.23739378 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.290524511 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.253064828 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.356617379 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.243718373 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.242916635 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.395521439 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.239894686 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.249170127 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.294267983 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.254761505 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.244496181 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.248594031 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.812688589 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.24179723 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.240371843 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.243527428 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.240714022 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.281083645 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.243557834 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.240814364 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.239712768 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359620564 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.243494659 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.241443107 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.24360111 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.242407428 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.242996439 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.244151257 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.244097311 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.241555679 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.244180182 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.267841829 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.244153898 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.244693611 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.244714784 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.245252671 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.294409422 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.244797152 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.242626001 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.242396073 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.299699178 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.251997634 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.244960472 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.242572976 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.246056735 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.242724824 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.397700528 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.292341125 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.244708457 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.29199726 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.24484305 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.245968004 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.244808101 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.246369196 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.299619905 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.245203349 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.293847755 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.243315194 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.401275454 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.268875498 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.24679253 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.247298196 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.247844214 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.245526519 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.24211371 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.250534569 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.243742064 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.245835618 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.251013757 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.243664047 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.244000109 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.347887706 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355421761 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.243687344 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.258542827 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.253589284 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.243993098 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.299412779 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.246373685 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.243521954 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.298557819 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.361113151 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.299692735 seconds)
  done (took 144.4611514 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.251344517 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.253387176 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.247644063 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.263157956 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.246547821 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.246338679 seconds)
  done (took 8.69175249 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.248334914 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.24791 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.246993296 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.24796192 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.247086203 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.247785917 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.248247731 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.247820081 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.250830878 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.248669213 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.24805858 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.249557713 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.248722055 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.247843061 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.248032317 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.247742281 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.248696527 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.246038848 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.248224982 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.248343841 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.342364604 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.248019636 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.248349995 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.249076832 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.252227848 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.248104984 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.257330887 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.248404821 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.248787576 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.255807235 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.250663769 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.249321043 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.249415746 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.254154959 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.25223271 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.250005466 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.25188135 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.249923675 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.246547293 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.249458662 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.250549353 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.249145113 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.249453991 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.250476171 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.251436371 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.2539254 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.253958551 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.257895556 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.250370519 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.250996717 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.25146738 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.249908406 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.251750345 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.25201183 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.254641013 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.254315381 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.253973193 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.251590387 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.250149975 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.250452608 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.251331497 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.251365512 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.251634652 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.253304349 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.257429735 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.251826891 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.252084461 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.253150132 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.250979677 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.251258731 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.252704918 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.249644508 seconds)
  done (took 92.316480319 seconds)
done (took 399.129261444 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.395890997 seconds)
  done (took 7.583672506 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.287726754 seconds)
  done (took 7.477179684 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.09725466 seconds)
  done (took 19.285956819 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.32207446 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.332366128 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.261331062 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.242797086 seconds)
  done (took 26.345480808 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.374829518 seconds)
  done (took 7.5614364 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.243250403 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.268517414 seconds)
  done (took 13.701800316 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.6225721 seconds)
  done (took 7.810911218 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.11144813 seconds)
  done (took 8.299560263 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.26273831 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.277202078 seconds)
  done (took 13.739084223 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.232107701 seconds)
  done (took 7.420930986 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.817653662 seconds)
  done (took 8.007598792 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.24603001 seconds)
  done (took 7.436364689 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.328976399 seconds)
  done (took 7.517119443 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.388480953 seconds)
  done (took 8.577169697 seconds)
done (took 151.95305464 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.246006429 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.246492181 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.246409586 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.247104033 seconds)
  done (took 26.175556929 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.286208768 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.286963345 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.288207441 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.297799716 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.290063539 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.287111254 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.279214721 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.279022726 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.297683376 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.290519995 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.289193116 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.289596203 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.287479478 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.279904351 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.290284173 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.288335016 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.298046081 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.288495328 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.279785098 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.290270802 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.254777295 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.297577135 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.290027607 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.254415851 seconds)
  done (took 32.051194918 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.453181603 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.325220476 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.407461219 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.306371097 seconds)
  done (took 6.682473151 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.305940185 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.30783222 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.31787644 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.357125156 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.389452183 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.316949299 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.281528432 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.276239078 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.262419834 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.307878169 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.38294817 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.324506786 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.399551309 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.25534993 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.439284437 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.254938758 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.255068642 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.306297886 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.35744371 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.382384733 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.256287463 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.308484781 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.311458609 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.324545984 seconds)
  done (took 32.872815733 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.253597392 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.26333781 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.260466457 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.254746543 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.254996088 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.25560479 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.260728402 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.255916408 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.276610205 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.256183846 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.253549893 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.254936932 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.253920364 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.256013787 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.255454173 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.268258162 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.268844586 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.255791212 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.258702865 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.261559127 seconds)
  done (took 26.371581584 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.250095348 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.181301739 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.601034296 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.5044463 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.249647944 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.251424641 seconds)
  done (took 28.230723973 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.316517754 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.433151523 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.257718842 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.571270966 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.650934888 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.258841996 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.256536128 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.465559813 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.733258654 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.739796279 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.307054855 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.317523067 seconds)
  done (took 18.502036239 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.249758514 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.252140892 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.265016866 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.267861578 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.304734876 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.260717841 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.263241209 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.250630134 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.307241444 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.310047383 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.260936379 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.306413748 seconds)
  done (took 36.492459964 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339424432 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300117448 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.143401938 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010893619 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.628254312 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.463766601 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.01184278 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.668896121 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.257080597 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526253478 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.948664094 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354572279 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.508215039 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.252548565 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.256697896 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.188301761 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478535789 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700101476 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.254289581 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.906063225 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279972792 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.258768923 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.070721611 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.281022863 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.46489435 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.386692293 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.514473625 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.253540697 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507019189 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266162501 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263673396 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.253193539 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526766742 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888323882 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347145726 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263681992 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.945139946 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.967898675 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.250758813 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.022228836 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.695792027 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.255860915 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.265050516 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.254505248 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.188169547 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.256926168 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6789245 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.261116715 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.966752266 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.255305389 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.264821025 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348957189 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.257593671 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.072732426 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251371771 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.256476939 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.252303532 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.259737594 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829731209 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.375363177 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.259410777 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.203450542 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.626719618 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.041280352 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832161911 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.358241113 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.259770487 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.259821693 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.189641807 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.981277224 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.274982605 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402883664 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.276635298 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.905649299 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908043369 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.958432528 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.199540635 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764228301 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268106585 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.192011513 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.483547456 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255857575 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190967832 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.212324614 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.190129595 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910044054 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266181722 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.586550239 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.264702336 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.672723692 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.269053763 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276570736 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280684455 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.479786038 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.141315658 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25726687 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.716420541 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413916567 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278983674 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674766758 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192107369 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.261027907 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.512145495 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.469366436 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.257589692 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.200037209 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44507397 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266879429 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.274177482 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.263906136 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.268732163 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.785135315 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270056454 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.377018285 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276205333 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.25788474 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949621962 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272672146 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.359417947 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.982397555 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.499133172 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.988517672 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260424096 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340655081 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.260093767 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.258657559 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.016806535 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.774084455 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.259089906 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.261306979 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.267857706 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.271063037 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.260241051 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204943677 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.256566367 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.017870832 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.261085066 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.483482931 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271259972 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535921338 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192225878 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406093026 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.349247575 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.482060558 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.363089932 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.257497342 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516371925 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270606681 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.273223379 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.271850604 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27830874 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35817548 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282280348 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.262660216 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.516157944 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.264330916 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.264297127 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.444060565 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.265545441 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261020289 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.264517418 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.077647805 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786368594 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239033056 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.269788598 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150245166 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.273989993 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.324264731 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.265622026 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.271267591 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.909820513 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.090114473 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.266170339 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.262765799 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484685883 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.270865005 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.016395959 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340673505 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.443215745 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.792896859 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.27532208 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.195912128 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.972319537 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.95533862 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260995972 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.197019575 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.261569543 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270702718 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.271992072 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.783181889 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.795421486 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264885953 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.935507815 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.26911507 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.272204804 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.266849045 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262461344 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.878272191 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.399007619 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274175975 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.274657427 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40645725 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.276154228 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.196444969 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.266733422 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.267076802 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.262811596 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.263316537 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295823557 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.941327167 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730032738 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.521909921 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.98799507 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274210523 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.110207324 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.293119826 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.262809796 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.783684579 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283649963 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.285131598 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272264777 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.274299518 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.994017248 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.936592632 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83531962 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928151436 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74836997 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140946629 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.275259506 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.265758474 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.687139263 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19973531 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.82907188 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434660411 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.687001836 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209930487 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448529609 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.380687367 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.961048369 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.275117923 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.492478951 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135037137 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.785284539 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289258728 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476200068 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299568637 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.271759777 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.19476035 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.789453209 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481543634 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.761554155 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342697732 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686362128 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.790672388 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.27913517 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.263718417 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.544685447 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424769555 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.976400554 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.43831607 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269309595 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.038223523 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741085719 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.26583747 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.490569576 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83953639 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.278635859 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.451770872 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201950584 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.276589683 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.276740634 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.266307085 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.403300251 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.263179026 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.520326219 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.276383174 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199774539 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.275211266 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749756763 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.129649788 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.272267259 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26655199 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961668234 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.273771814 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524665731 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.28272536 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.893506169 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274254885 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.201111892 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201070255 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.960723921 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.271541082 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242533376 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723296478 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.622303231 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28348887 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299158343 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111998382 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.520765551 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.280645769 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.795778381 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494713212 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.069889246 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289786669 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.368522239 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.799241288 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.268466514 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.268145166 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.503285098 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.086049476 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.491684576 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.16649428 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.174220042 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.26696351 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.481072671 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268594825 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.013593309 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505504026 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.979206301 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.278219447 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91694495 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295317373 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.007540023 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19754496 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.642149197 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.275907473 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347758713 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279191833 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.279042238 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.279665135 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427647149 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.024139049 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284660109 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.28362809 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363086338 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.42466619 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.899118972 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.272189736 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814024699 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960159249 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.806884104 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284260911 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.270095401 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269344018 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203691029 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418240242 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.496277888 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543886247 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398989396 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.710172355 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292138683 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.801791571 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290893491 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484203953 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545767933 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.16600052 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27471134 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284090385 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.270741118 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.282596172 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.481982711 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730939039 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797660037 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390566745 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.282178434 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.691592031 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546438028 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271385775 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271982581 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.861410627 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.291537147 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.566434538 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.276709229 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044790092 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420013976 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281749482 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911294954 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.281781221 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.427784104 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.045451345 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.052305758 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.527935176 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.696723772 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.284521742 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806250493 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.916309596 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535477469 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338785856 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281983083 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.382625964 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419035967 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.28172016 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.273461784 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27200074 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117467522 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.982519454 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.281542351 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815019061 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.537002994 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.271062107 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.274736682 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296692109 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.282160402 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.496333223 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942946278 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497205078 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283195143 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277663209 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.089024057 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81505329 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.285569735 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207618645 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.277359621 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49460097 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.510539421 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293751903 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.726844962 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.984660918 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793575397 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.245479623 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295807043 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279002815 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.91712313 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815915245 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.892930398 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734712995 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.843468097 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27634686 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552406212 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.281116868 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276194446 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554924772 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.280611973 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.276833114 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.289302733 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.812449864 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983950916 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.297632428 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.980878243 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.214924029 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.618717123 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.907019909 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213756993 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279656032 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.449006803 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278004233 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406630194 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28977889 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.284233519 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276846979 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.036202861 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551582177 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.284194272 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.272200427 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.858326371 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.293224439 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285596967 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498008529 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286113745 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.941192069 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.629199214 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.532226827 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.278394774 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.266343892 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.281604628 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279024616 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.266387164 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.474353749 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.786412539 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800919144 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.284231328 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.290893862 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.283560002 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.49589936 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490475967 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.06080514 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.304621393 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285995571 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295930597 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.191361214 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.781372861 seconds)
  done (took 1545.450182114 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.304996434 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.298730574 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.292264144 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.353477582 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.291029698 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.374201946 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.302410452 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.355381204 seconds)
  done (took 51.793797264 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.285346659 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.495133996 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.308289239 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.292497508 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.289990378 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.289471214 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.684585127 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.279497103 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.28848316 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.288551199 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.282927989 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.279395809 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.851275468 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.290027031 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.280471654 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.273170386 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.28808901 seconds)
  done (took 64.269745584 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.291468698 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.491505951 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.348594655 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.288823979 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.986096665 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.292367911 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.475767469 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.293764109 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.302307749 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.312816918 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.928310908 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.29175847 seconds)
  done (took 82.527129246 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.28836083 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.288500487 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.288735552 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.287922954 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.288872499 seconds)
  done (took 7.66462004 seconds)
done (took 1960.274692872 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.535010287 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.90585073 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.888246894 seconds)
  done (took 5.016612616 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.423035812 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.471540842 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.592274547 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.598128597 seconds)
  done (took 7.302838378 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.551175338 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.659815481 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.451469801 seconds)
  done (took 5.879777517 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.556176232 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.28811722 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.396098173 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.273372905 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.275751325 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.278135235 seconds)
  done (took 20.046677029 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.280182674 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.283325856 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.280430838 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.283005501 seconds)
  done (took 6.345246997 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.261918475 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.024988231 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.263215642 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.276173072 seconds)
  done (took 18.044485626 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.027563927 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.039461198 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.02420131 seconds)
  done (took 7.310261753 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.287247109 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.124674946 seconds)
  done (took 9.63214892 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.574440164 seconds)
  done (took 2.793155844 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.411379559 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.549516351 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.217203347 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.16808588 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.24382289 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.713038709 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.74204445 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.368463013 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.154191061 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.216790857 seconds)
  done (took 26.004368026 seconds)
done (took 121.373471235 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.872458329 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.660875191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.483277807 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.814975923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.502882952 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.483402912 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.695405911 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.784865888 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.282972459 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.269313057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.816454992 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.505427893 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.430112873 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.657977974 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.428042569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.657905506 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.506414438 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.851248378 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.494985628 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.662259194 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.698982973 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.412862975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.647707033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.48111175 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.509078833 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.436659091 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.987771454 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.659172494 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.659757037 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.056306829 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.437682284 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.822081999 seconds)
  done (took 184.891113028 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.278300194 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.277946532 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.279459801 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.282907251 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.279444418 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.292742957 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.28137517 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.290895781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.287585803 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.28000019 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.281654652 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.279653113 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.284403205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.279124573 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.282282261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.303844433 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.287238039 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.290863285 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.287453684 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.279655294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.280154445 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.279194016 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.286349395 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.278684012 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.279189284 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.290661204 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.279457996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.279211289 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.280119312 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.280958653 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.279434937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.308620833 seconds)
  done (took 202.310841351 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.2795292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.279298586 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.288405035 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.281463136 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.287677181 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.284101002 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.281976115 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.279889338 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.280624416 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.280003214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.280097613 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.296503794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.280169472 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.280070439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.281247618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.2804036 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.280390982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.302151953 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.280640292 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.292810725 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.283102314 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.287383525 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.291379079 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.280868804 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.281174697 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.283522816 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.298464857 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.281645716 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.28051952 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.293694466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.281566455 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.303817402 seconds)
  done (took 202.347949264 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.476154992 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.288358595 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.289181771 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.223269343 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.288701853 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.288663559 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.286296103 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.477698464 seconds)
  done (took 13.841398812 seconds)
done (took 604.611424284 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.473325794 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.197528927 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.48014903 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.310429233 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.988399217 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.310621333 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.31011648 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.462346237 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.173000177 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.464663508 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.481770409 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.307828784 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.614616477 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.308135919 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.541361798 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.398799139 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.116249126 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.228389336 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.604305029 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.775177562 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.550803665 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.677846826 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.463778498 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.170109974 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.605494191 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.681324246 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.907222124 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.115295357 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.309331354 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.603713441 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.788473783 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.216579543 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.358843439 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.344772538 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.398490141 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.381173752 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.131556062 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.341780966 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.482324143 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.446158765 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.769317402 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.995063576 seconds)
  done (took 87.512374312 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.279187093 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.27931325 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.277862977 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.279343772 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.28036929 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.278966636 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.277585254 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.27805567 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.279886591 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.279123185 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.279758549 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.280726826 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.278485621 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.280668923 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.278168714 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.279059704 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.280148221 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.281575477 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.279113617 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.279356935 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.279879746 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.279496618 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.280342781 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.279440607 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.280881707 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.280558612 seconds)
  done (took 34.495645375 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.293303203 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.513177495 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.681445062 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.299361685 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.293106418 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.296784902 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.361249972 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.294997244 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.294543283 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.295737352 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.440990119 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.296909306 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.327965833 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.689839553 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.296125402 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.294154294 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.294056317 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.294028392 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.521914452 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.303249181 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.365310535 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.294989135 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.363029927 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.304008757 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.298462913 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.29476362 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.298658095 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.77741444 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.297074903 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.441380974 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.981372584 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.36257978 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.736866018 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.693543162 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.981419555 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.298023087 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.295182482 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.446487102 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.29567368 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.294601471 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.363480787 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.295947037 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.690747353 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.903889153 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.309724034 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.294835336 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.795602169 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.445200068 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.512511086 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.305612539 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.712974443 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.297503333 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.297240873 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.296010098 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.512401724 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.303405855 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.295472384 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.803937858 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.30114393 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.366137921 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.296741328 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.296384589 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.530425824 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.29553468 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.518433522 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.297569583 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.305044778 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.296574467 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.695599727 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.299107157 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.924070414 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.312899283 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.298718748 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.445231467 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.522117119 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.830524435 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.302896627 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.53505501 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.750061808 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.367010065 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.304553004 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.779454945 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.3724651 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.303983925 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.30138397 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.301662933 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.299948136 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.342377508 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.367047611 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.853459774 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.921265996 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.825407736 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.371593729 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.312983851 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.299924641 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.810378293 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.30267402 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.301354774 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.692942756 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.929000146 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.314154904 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.308531008 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.912030622 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.315850843 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.369724245 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.305510201 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.702908919 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.302553194 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.343671262 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.300484115 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.307318986 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.303997452 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.37010297 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.303259922 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.30105831 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.900125217 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.466096641 seconds)
  done (took 170.081498262 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.297842924 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.299356572 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.293391864 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.293559479 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.29272209 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.299118238 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.293452492 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.294309006 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.298623849 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.293468749 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.294013498 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.293399141 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.295479126 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.315652642 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.305597973 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.301806332 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.950294861 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.295231847 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.293639852 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.29404275 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.072878099 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.29673042 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.295492279 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.293934495 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.296434395 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.293309268 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.298965751 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.316515881 seconds)
  done (took 150.995685564 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.302779833 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.804883013 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.303364249 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.419493021 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.320780387 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.300617301 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.416612518 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.352855571 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.304970268 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.30064523 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.300429338 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.572572286 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.304268125 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.761429421 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.469248719 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.420599733 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.761091982 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.303736891 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.300945859 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.300326074 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.422072188 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.308997257 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.574144174 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.809462678 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.304673454 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.8140435 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.294141039 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.303657091 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.301355774 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.81545253 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.302727959 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.577643305 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.373160623 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.355821456 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.817849749 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.765954266 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.764626327 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.432594192 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.302898744 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.301598113 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.301191913 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.292223876 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.815943025 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.307241812 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.303800573 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.809812377 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.320055591 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.304841787 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.312786725 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.301991928 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.356226655 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.359273492 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.581456781 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.821292971 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.373035153 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.324614095 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.420593953 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.653331992 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.306869077 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.767204738 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.292504271 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.816021157 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.309275857 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.292881437 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.304529271 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.30930075 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.437693731 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.420638482 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.765208121 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.305340629 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.764166534 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.439213345 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.303734668 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.304233854 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.306462488 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.819369117 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.767122405 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.438767698 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.425617583 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.47620548 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.296480898 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.304266128 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.294023675 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.373905819 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.303951625 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.821523269 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.767574094 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.306729672 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.307006544 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.306535037 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.30739308 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.460710021 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.822642872 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.376430716 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.76128366 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.594575539 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.583572981 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.30892295 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.35833313 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.305838533 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.58394246 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.309493053 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.356208866 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.713041228 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.584727934 seconds)
  done (took 154.346211874 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.526061849 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.388448965 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.391294111 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.409116687 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.809683813 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.84527739 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.44027896 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.430593194 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.406328176 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.534700335 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.378481716 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.398402614 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.47352858 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.373756537 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.975578665 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.366795355 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.394689389 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.42609912 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.407401006 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.286265941 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.895528265 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.573664761 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.463397775 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.315845597 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.393576633 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.035968681 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.826890276 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.79397962 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.459783154 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.463303805 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.778518298 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.377918687 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.195295694 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.932173153 seconds)
  done (took 62.411586299 seconds)
done (took 661.067235238 seconds)
SAVING RESULT...
DONE!
