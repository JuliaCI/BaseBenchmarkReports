cset: moving following pidspec: 7828
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.299022379 seconds)
loading group "string"... done (took 0.573355652 seconds)
loading group "linalg"... done (took 7.219171832 seconds)
loading group "parallel"... done (took 0.166357082 seconds)
loading group "find"... done (took 1.159013691 seconds)
loading group "tuple"... done (took 2.017827787 seconds)
loading group "dates"... done (took 1.287516818 seconds)
loading group "micro"... done (took 0.240124137 seconds)
loading group "io"... done (took 0.975299768 seconds)
loading group "scalar"... done (took 39.499337511 seconds)
loading group "sparse"... done (took 12.654163129 seconds)
loading group "broadcast"... done (took 1.010763935 seconds)
loading group "union"... done (took 13.743054475 seconds)
loading group "simd"... done (took 4.668953509 seconds)
loading group "random"... done (took 9.331423172 seconds)
loading group "problem"... done (took 1.981767225 seconds)
loading group "array"... done (took 22.201130534 seconds)
loading group "misc"... done (took 2.024021923 seconds)
loading group "sort"... done (took 3.399321767 seconds)
loading group "collection"... done (took 19.16932599 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537659539 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139729015 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118741639 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.135271355 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187063402 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130571553 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127026922 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101369451 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.953276557 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159545435 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13682274 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.483941972 seconds)
done (took 4.95748497 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.197303849 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086314662 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094601953 seconds)
  done (took 0.857401892 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065543617 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126588105 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064900988 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0826297 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066610619 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080228926 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067099654 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065093774 seconds)
  done (took 1.235890602 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073050204 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068118626 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084180837 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067593693 seconds)
  done (took 0.97922325 seconds)
done (took 4.021735375 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.922960959 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.237619489 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191520349 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.450388388 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150842781 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189929056 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.658431359 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.337966763 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.206889392 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.07345954 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.121371211 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.370996646 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124267994 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667419697 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076369164 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106653215 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.16702075 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447382291 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081927524 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082754672 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10345311 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127954005 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101390112 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.088034543 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.157482045 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071134406 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150116792 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096665491 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067489707 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.258176736 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172748657 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.737054599 seconds)
  done (took 10.521873796 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097563133 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.119130084 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068801359 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140570666 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104346677 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08742408 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072771679 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082793525 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094038015 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161964686 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115875122 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107017661 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081166636 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071003566 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100636817 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214456719 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107660444 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085635424 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086449495 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076735261 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122766268 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083659242 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094739033 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080879862 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15219425 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194643617 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097836086 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111755406 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068439611 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098924611 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130264066 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131352262 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065929925 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084332103 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.157579451 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095697037 seconds)
  done (took 4.544566765 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.069344324 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.174987296 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091780711 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154253028 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085145884 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111593984 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083420924 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098871232 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230141476 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.076260989 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.468735508 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129163978 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.086764841 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086020596 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069601038 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083389597 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.501414605 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146253874 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121831151 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083812385 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089886011 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071687856 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355539588 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067484845 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065767479 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085194891 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058651608 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146798161 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.141494245 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067616428 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.185045859 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087879081 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087871936 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102438813 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198414208 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095021885 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119870646 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066313991 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06411392 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083253915 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160463037 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065031819 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073510368 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084359517 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090185798 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120985946 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11967474 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06890389 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08269782 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180749469 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067217819 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082368882 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.920140126 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164109571 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092285645 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065585158 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287334614 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08415671 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090008868 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063883648 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.26840866 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.174611893 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084128642 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067873995 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065639117 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086060615 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365048472 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067482873 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.739682207 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071315999 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07567681 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085280675 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067262657 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09099485 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072956175 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100987543 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067938694 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067996533 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083672849 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066485352 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067923455 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.101997403 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202521569 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069403688 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084671042 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064886067 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101949064 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097229653 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086236558 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06601481 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116522875 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070554991 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067791143 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119494017 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067692568 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100979718 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064777065 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085656551 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128649153 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068233432 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.137404195 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067316099 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111159265 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071219539 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115120396 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096591806 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073705334 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15560416 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06474463 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065234001 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08494777 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065599444 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084999195 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069150789 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077827853 seconds)
  done (took 20.886036015 seconds)
done (took 37.704108425 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.307244725 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093191759 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093481077 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076163726 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093393692 seconds)
  done (took 1.422550064 seconds)
done (took 2.153047469 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.133816075 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119179482 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063591657 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114511939 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063655375 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119719097 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116548499 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081088892 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118328879 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063820749 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112642183 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064900967 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064233636 seconds)
  done (took 1.997030528 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08197487 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084827613 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085741969 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081952426 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063546907 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09716458 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080036524 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104785166 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080722328 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071915474 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080617857 seconds)
  done (took 1.644839444 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081138109 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083594176 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085490558 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080972043 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063802406 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097152492 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080570732 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101729193 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081447158 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07264782 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080871929 seconds)
  done (took 1.639757978 seconds)
done (took 6.00315513 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078286718 seconds)
  done (took 0.80598144 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.73168937 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.610748111 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099500475 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134990715 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.215080598 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154830283 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.44681641 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109329264 seconds)
  done (took 10.407091345 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100095224 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086418706 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069238126 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086115744 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068490553 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081912111 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089233881 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071960656 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085101696 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071901756 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071182515 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084733146 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072040966 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087233421 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06964605 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087133479 seconds)
  done (took 2.074726831 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10433283 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.102963782 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09183124 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07616158 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09034642 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073359678 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091932847 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075099141 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086803305 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073376592 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075436774 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090618328 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087238166 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066589271 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075234941 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.09223497 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071473065 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.09101002 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075698088 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091992201 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075383205 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.081342724 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072275487 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091159107 seconds)
  done (took 2.837688136 seconds)
done (took 16.854984816 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116427883 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087543734 seconds)
  done (took 0.936108818 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081718571 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097398533 seconds)
  done (took 0.92168115 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082242451 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081728554 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090005768 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095036728 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066973762 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.081844846 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.10306807 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067396983 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065473378 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082355599 seconds)
  done (took 1.557227361 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069160514 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094942289 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070438861 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097136983 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074235714 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08060937 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07493299 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068759945 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096114553 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063743317 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087630142 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099603078 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073268134 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101264434 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074466866 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085241204 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071392356 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084762008 seconds)
  done (took 2.205881865 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067465494 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068178152 seconds)
  done (took 0.875284846 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06785825 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063851407 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083349511 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066964899 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079725508 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063814564 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079393841 seconds)
  done (took 1.246679784 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.407875297 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109503996 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263675312 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072299083 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10479651 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.277739851 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083164361 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071233984 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088823205 seconds)
  done (took 2.256938166 seconds)
done (took 10.731758227 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079755161 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084750172 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110524678 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415414171 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092584766 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.080846385 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.130909414 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.2240663 seconds)
done (took 1.957464498 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127258856 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.614775742 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404023589 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213794946 seconds)
  done (took 1.979103089 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.379555858 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089353076 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073791464 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067173903 seconds)
  done (took 1.359029542 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066517434 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069832117 seconds)
  done (took 0.885253497 seconds)
done (took 5.09305176 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066878791 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066708889 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.113894882 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064024662 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084730892 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064662498 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063742216 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084484185 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066617025 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064058887 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084148148 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067341767 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066660902 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082816202 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064813642 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064352429 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082409813 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064281483 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064196259 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080595269 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066632321 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064227719 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079918556 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066643812 seconds)
  done (took 2.521346428 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08508228 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084376241 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072669828 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071712217 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.087412715 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072316894 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088747736 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067768347 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08869245 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069880947 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086591673 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071334455 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068379711 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087958218 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069693383 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087033113 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07237042 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083346387 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069305622 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086958227 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071826106 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067236727 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.08707587 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072520331 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087627468 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071072317 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084770072 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068249744 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088226401 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070737252 seconds)
  done (took 3.092629099 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07116594 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063928366 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081442825 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072512845 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063957352 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082886271 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064008801 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064731718 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081880632 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064696732 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065971678 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081053321 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064291115 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082294759 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065030797 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067646364 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098297856 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064839106 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06370835 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082179922 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067448107 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06412756 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081312295 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06452599 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081014014 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06370421 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064666398 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08035922 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065599604 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064831807 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084197346 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067950306 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064496996 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.088051673 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068458935 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064268188 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08603519 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065044435 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065036676 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080036519 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064302666 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064702791 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081233095 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072104784 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065133412 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083457836 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.0648789 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083283542 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065565878 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067528497 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08077535 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064767902 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066425781 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081969772 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068429607 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080517612 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065726067 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063760846 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081791256 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064757812 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063672063 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08090142 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06659087 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064392799 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096151467 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071426699 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064582188 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082206709 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065549774 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083156149 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066589418 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078836946 seconds)
  done (took 5.94877822 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118613901 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093156233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082941943 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066522618 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063070179 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081697669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068286836 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08103884 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066732389 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087510525 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065366031 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06588487 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082614924 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080164396 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065271486 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08295802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07160699 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07981017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065338276 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067730835 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081694568 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068232267 seconds)
  done (took 2.445466256 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187472574 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088526694 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109007422 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091896727 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068462043 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090915203 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071257827 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087713413 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071028537 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086615765 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068866959 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087914359 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068989692 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068850011 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086219007 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06941376 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.197561298 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069133214 seconds)
  done (took 2.429565899 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078513648 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066744444 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105771908 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067199872 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084030679 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069433515 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089996564 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074948245 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08641945 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066966916 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092134783 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069134689 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069818941 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084386185 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069202778 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083586148 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069687852 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066980948 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092563581 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072064631 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088908833 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075654201 seconds)
  done (took 2.486471516 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081266254 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068276505 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103153907 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070182756 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079340463 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06569831 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090749921 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067553055 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089981448 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06930616 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067647068 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082435117 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073482928 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084282045 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072750446 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067531066 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085874368 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066935687 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085911077 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06407069 seconds)
  done (took 2.29930033 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087118755 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085938039 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069266115 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093744472 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068300141 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068661732 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094217574 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06844277 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08526584 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108656318 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068309342 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068637007 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093330832 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090517016 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0684105 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093446496 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076941012 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093471113 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068893902 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085429613 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092824008 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085233745 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077430845 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08535188 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069182429 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068297393 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085817104 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07423167 seconds)
  done (took 3.040286285 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068127197 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067387274 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081916113 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065482215 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064499697 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081887808 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064751977 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064648474 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084038556 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064907468 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067068784 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083609612 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067279052 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066982939 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083899635 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067642343 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067251372 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081277294 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064888583 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06423253 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083784444 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06716059 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066712752 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081356905 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064562051 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06682272 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0810244 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064348323 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067522061 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081735929 seconds)
  done (took 2.914111693 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076316018 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073354644 seconds)
  done (took 0.916707692 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065234064 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081160529 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08133782 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071104216 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089573102 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068064109 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092053568 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072260206 seconds)
  done (took 1.389115111 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081606365 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077410443 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085505689 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080019793 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095111278 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083017663 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158815316 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085765117 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074376288 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064936348 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098447027 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067382649 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091354344 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067629876 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07300324 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091705847 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065994958 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090182346 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070107655 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066433765 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085733949 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079543609 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086994252 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.067226044 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06851779 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093550744 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080029981 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085952348 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07054085 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092930158 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072837896 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062146679 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084781631 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068285617 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0656918 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094253256 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082976842 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088086798 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076684671 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086462369 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078481722 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080240698 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071867862 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074185977 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095091509 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067739446 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086022518 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063185679 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065093559 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086597848 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063146316 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084391405 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063114784 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074779918 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.0883475 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077990675 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083506448 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069015125 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07061529 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088724412 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074677117 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086557637 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070960988 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067753562 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092372168 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07184635 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094556848 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063401253 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062605854 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083091635 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078140243 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108838457 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074298201 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068431731 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08684965 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066272855 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088372193 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069098872 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091347046 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073641755 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068670946 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091303008 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076141867 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084969713 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07032566 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09214129 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066009315 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070250437 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082947307 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084025065 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084086634 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065991563 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065309068 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096156424 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070485101 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084647891 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065449675 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074749275 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079401857 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068234056 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085725523 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06874505 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07784373 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090408457 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073424054 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094038856 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075152726 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085631444 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071134121 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065033921 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086438689 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066258115 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092539265 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062412458 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07022135 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085364344 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068624291 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093813359 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065924907 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068313328 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092956143 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073941822 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084481093 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065015539 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071337674 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08521388 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071367973 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09390586 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066463544 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063589115 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080529819 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07128277 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067596399 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089474871 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073495563 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088638916 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062848288 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065902096 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090207897 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076890717 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085879608 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068317646 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092251342 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069331141 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067805033 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09249662 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07018897 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084904306 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074286657 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069270112 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080737667 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072190066 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088271606 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066934724 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072471242 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088618641 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071559268 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086537746 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067007844 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073802847 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086435161 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067283446 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085771822 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067127218 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078657382 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088007423 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06395972 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083006404 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075487522 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065823851 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085666974 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067528465 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08758558 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06935534 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066258151 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085739672 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070178749 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097431801 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073286641 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069666226 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091099979 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079743005 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085358752 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071388479 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068122223 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087651322 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069669747 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094787262 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073604969 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091129923 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070886564 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06529668 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091950312 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076048961 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084940677 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066636978 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06727569 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089292604 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07378264 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089583515 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069214449 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06652842 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086934624 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072592026 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088333496 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068153633 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06770365 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090715916 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067531078 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092235802 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069894314 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09691892 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071899357 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064141259 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089465362 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067072133 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092589327 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064195546 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066505784 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08501054 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069802434 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067438176 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089070292 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062961614 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093939472 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076483375 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068389828 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08568843 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069048653 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093386949 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070308989 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072149437 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090171426 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075390689 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096603023 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068491867 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071842678 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097069386 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068485679 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080129131 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073796667 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067515314 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085741812 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068061873 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084323436 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072048758 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07737725 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093245545 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062830126 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088860581 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067802184 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067003316 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082167017 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073027256 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089306551 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069313134 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075125383 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086947207 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069848411 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089383347 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068000586 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068766771 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087736762 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071622407 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086487623 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071352566 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068081968 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089356042 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068301452 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066418023 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088623814 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068584571 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086005853 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074305202 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068274463 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086760336 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070952497 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086863157 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069577179 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069180116 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085645361 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071633743 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069021617 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086985149 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070597809 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08221265 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0764586 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068083507 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094675041 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069341908 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083232422 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074624879 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070900729 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091420828 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068831944 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.0869204 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07038761 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068271837 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088848565 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074674225 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084237461 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07946366 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095565383 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069127045 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071215249 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086405863 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070181915 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067256477 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087244554 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069942375 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086848022 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06893342 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073241499 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089308893 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068836608 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088243679 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069750868 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068610722 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088304757 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063783839 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068159578 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086376692 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068715462 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097242613 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070212494 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086174474 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068391012 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070146061 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085651805 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065743707 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093968506 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077236447 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069263238 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094594572 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068495341 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088182415 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079255061 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065619005 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085022387 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067076416 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084497357 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077051473 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06947577 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09612527 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069068164 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085819817 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066603349 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069908466 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086122259 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064569302 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066690483 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090068026 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068108707 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085453228 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069884299 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072489142 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087519397 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0790384 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085966895 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069804034 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069410085 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084201941 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068420081 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06825714 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089373324 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070334389 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084589083 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066132749 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068063796 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08735885 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070459871 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068586398 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088764692 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075451511 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086407164 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072164977 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090713111 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064004077 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07230045 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086949809 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068833765 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068298229 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090746858 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07238304 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088084102 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078360301 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068015735 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087707961 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069418679 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085115699 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068775423 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068897744 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087584291 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06888617 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087943109 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077743532 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067412732 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09047662 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068916725 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068876643 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094514334 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070103089 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090112589 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076506822 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086882789 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070865323 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076175387 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091151633 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072256093 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087857607 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070492321 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093125505 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068854113 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074861769 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08734692 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069986509 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071408399 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084798267 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069220718 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087404325 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067973103 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075648466 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087838601 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068463448 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086073337 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067801878 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069621551 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091073166 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077171966 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089646061 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072070188 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064467925 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084689885 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070311011 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066981742 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088755815 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072522422 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092740007 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071669373 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069094042 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086473773 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078885451 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093178293 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073164879 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067104536 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091260343 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070050756 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08927805 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070682676 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068604257 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088743476 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073426807 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088456291 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068484778 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076253683 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090767656 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07053259 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088616299 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069950807 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068925132 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082856877 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070314102 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071038157 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092377823 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07152728 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087688348 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080096388 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066000264 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087426082 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072983459 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086881157 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073643415 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06417867 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088748565 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069970358 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08868397 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064601823 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068233064 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085019476 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071730093 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068350069 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083253268 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079746762 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096695145 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072065672 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0863754 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06862822 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06453588 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082392571 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068952818 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070629791 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089077954 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080386028 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08628489 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068513086 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065115051 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087819133 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072690701 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090975385 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066104012 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064312563 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087464933 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072565219 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073929101 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086579104 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069119333 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090820684 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071723306 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067623448 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091006135 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066235691 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091342999 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082933762 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088235934 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070395583 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075623593 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095687707 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070137795 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083339728 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070430636 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072368411 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088048948 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070566292 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088208495 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085504893 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072711116 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087090814 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068744863 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090396514 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069234543 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077810182 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089070888 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070296558 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092574772 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071221298 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095985237 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072469217 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077343465 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09122426 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072643743 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086562144 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069197816 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067319596 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086145408 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070900474 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088164312 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073267964 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094907605 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068853837 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080070755 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098036828 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071503079 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084583819 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068945032 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068874271 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083367346 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070123689 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067149625 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085791244 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067589516 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067376263 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089413937 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074666942 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088715753 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071272286 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068700767 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081508798 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072227792 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091681352 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070361597 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066321882 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088200556 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070714176 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072425073 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092446574 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066761366 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08966562 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070615588 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069896115 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083103956 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075703761 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086315235 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071893932 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06861197 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087933512 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070084707 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072153999 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093041121 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071271739 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090381012 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07770634 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090368185 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066284724 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066452281 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093317925 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067817031 seconds)
  done (took 47.190746265 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110297805 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084842784 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064865226 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083315118 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076798943 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084388263 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064973449 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065966206 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08414988 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067830155 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064190815 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083164201 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074349975 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107533907 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095967027 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069570222 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082861593 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065986626 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065072243 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084692007 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074257285 seconds)
  done (took 2.468123665 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088073218 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103799396 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079821284 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10214415 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074324184 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099081616 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098111516 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080360983 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102284969 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076468427 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.101451392 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099026161 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076288242 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095305338 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076774226 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097473708 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083920514 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093364265 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.081872311 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098744122 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077659409 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099393372 seconds)
  done (took 2.798200187 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069029841 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068660281 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088893364 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064104753 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06819333 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082860721 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073051219 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066366789 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091661747 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068332224 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086093778 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067876513 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070143069 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.094514451 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069373819 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066538982 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133603468 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091623072 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068752975 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089182629 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065021474 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071497546 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.083796338 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06510809 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067843612 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.09175261 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070377648 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085887683 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069090738 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068373726 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088377849 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066567461 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070159878 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088061714 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068389274 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067761358 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087195829 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069449314 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083308853 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067482927 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069083452 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083924612 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069740819 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069815054 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086423249 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067797923 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070227367 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088817658 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064684978 seconds)
  done (took 4.558524014 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088275533 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.144818176 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09035786 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106387192 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104663003 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096232876 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073318782 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125975415 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066649357 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088066116 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087024343 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103883059 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069193261 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.094976754 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076344141 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087588669 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070953613 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086562638 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072926038 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087365853 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073550545 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094054757 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084211921 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101674572 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072913043 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087651575 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069091104 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.092926407 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081997424 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093317056 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074393043 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093746944 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08465776 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093861247 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068883122 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.09033336 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085886626 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088270317 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071989106 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086821174 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071739702 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092858844 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075896222 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104993433 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069849494 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093442798 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069536631 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.0854957 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083034688 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090621372 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077600684 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103351454 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073981089 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087792258 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07361539 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104365453 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069713077 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086522101 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073139277 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100314097 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067156449 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092108707 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083112932 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089724302 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076533875 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.1029876 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074537646 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092270003 seconds)
  done (took 6.81704606 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078717004 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095096716 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083443868 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103197124 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074894767 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.096003393 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095203224 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075574856 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095425211 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080494584 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09453408 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117161002 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071437646 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078034665 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.096133066 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094512523 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075747785 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094885942 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076175895 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094288266 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076242945 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.104101715 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07524061 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103827471 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125355563 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071126148 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094266947 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075840452 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103313671 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074514115 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108201335 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09446685 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075759611 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102209736 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.106784351 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075478982 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087012453 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075776564 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094894982 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075693202 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090351529 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084581126 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094754914 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071086334 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095368724 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075566046 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103575683 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.107546324 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078918053 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099333946 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075900943 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103539855 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093965547 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076462628 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103068577 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109585347 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104492472 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103585825 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07564626 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103717912 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103954294 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091598924 seconds)
  done (took 6.441074398 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090213268 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098361105 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079728456 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084826508 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068112538 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093798308 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067875615 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067339827 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097566064 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078007804 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100786173 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092046455 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077255046 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100482544 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073603797 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096136059 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073413678 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093133576 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07812975 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093623579 seconds)
  done (took 2.532010834 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078713099 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107029787 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070557033 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076436154 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092930206 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075935401 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091437772 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072745699 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089346011 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073342379 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099369663 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080191294 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070058794 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095715053 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099671734 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076461629 seconds)
  done (took 2.17860648 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081490816 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099472868 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084339082 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089349283 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068415047 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065752837 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089505404 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066790241 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085769939 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085053946 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090215308 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071890183 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069232743 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088944914 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067239241 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091736829 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066035835 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067609669 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088582292 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.083750934 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10025314 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067990894 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.089712036 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.07180644 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069520091 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095597077 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069291465 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.087425917 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068314089 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.08903508 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070477168 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.096339953 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067358995 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068630358 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.088252617 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067781121 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.088124443 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069891551 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072058894 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088579831 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068643823 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089087543 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070249216 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071234103 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085258711 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070469903 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085769581 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076217139 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067094868 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089000462 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069850974 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091048435 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070968555 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099414008 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073537691 seconds)
  done (took 5.197021866 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08383104 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072467108 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085482046 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067368376 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09166913 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071484269 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072749675 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090868116 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072013414 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086841402 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071605682 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072416442 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090650697 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072918353 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091404899 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072964998 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065961553 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091218037 seconds)
  done (took 2.257964042 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074975976 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069822417 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097007009 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070503779 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088991788 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071793179 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066114202 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088476917 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069060491 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069112561 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088830774 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073195176 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087262793 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071997834 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06959095 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08922202 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072479935 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067762407 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089212316 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066123597 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091042502 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068702614 seconds)
  done (took 2.533506605 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075768813 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096133266 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167179883 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111441148 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085540807 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.10328807 seconds)
  done (took 1.476154439 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093595344 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102832306 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071203284 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090414164 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098441594 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070298768 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092641336 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071970212 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100010596 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105387586 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072045361 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100054774 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080982308 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103005538 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097184091 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078428676 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090884255 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072298194 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069774966 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110639632 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091247625 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081122952 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091367499 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071410515 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092019729 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079881775 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101567772 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105894543 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071890999 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100282182 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078420887 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090369117 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081365243 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10513299 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073238502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101561641 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09164489 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090066475 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097799621 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080487272 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093222094 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077966806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100659287 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096598676 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081575288 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091406396 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077214747 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091599395 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072415655 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116547018 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097335085 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079921229 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09748495 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081199185 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101213243 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117481104 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085506218 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10091758 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098077506 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085896229 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100786337 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097778299 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07999011 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104811862 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077874883 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100982322 seconds)
  done (took 6.792475675 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085158468 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109617568 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07286707 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105431843 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080179286 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092165782 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071193983 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091865223 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07074384 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091903332 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13456387 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072589012 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099922645 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079874072 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092337468 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071034725 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09186873 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100159349 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071565361 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116713934 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071960451 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099789797 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100615037 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080831562 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106219471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077866718 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09177017 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071466234 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090754641 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071725912 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097457032 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071283035 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100111937 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070419115 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100307628 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091793365 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072120621 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097530272 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072108797 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096722444 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080819976 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111506706 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091218609 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072002481 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106231716 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072142292 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091072875 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071802772 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091439033 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071659181 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105212973 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084619363 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105710421 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100336669 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072284503 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092574433 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07217486 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091629958 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072260794 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097190334 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081068606 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091213717 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117443954 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072906506 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092200812 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081293444 seconds)
  done (took 6.664933563 seconds)
done (took 130.134979937 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20249006 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188172418 seconds)
  done (took 1.22696081 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071934674 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098768437 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101321682 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131755183 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090804945 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103371027 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101708472 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.102792958 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070152155 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090709603 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070638206 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07203209 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.155318631 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070899652 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069517039 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091681937 seconds)
  done (took 2.338749605 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098285886 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.201531768 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.083852334 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.089679079 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.0737331 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.093160496 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068530891 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075739181 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094883493 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069638281 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072204848 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090812675 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068688025 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069470292 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094827699 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072273885 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.08837343 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072194089 seconds)
  done (took 2.418936451 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097027582 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.113643456 seconds)
  done (took 1.05639148 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206149091 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.126077506 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209469134 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.428415319 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.250278594 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.288949411 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.183373811 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.179526768 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.152403928 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.178189817 seconds)
  done (took 3.045011405 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102592026 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163679831 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273664356 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138833501 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111297418 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.088106266 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139054342 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.092723508 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.10488496 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105146202 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083926082 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100502092 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10013121 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099141899 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077228938 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100335939 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103083916 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.097391279 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078644441 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099522227 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100209556 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089526392 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079339761 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097381951 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082655489 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101258942 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069681704 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069304465 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099398171 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078402965 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097294734 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087129064 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102548382 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134835372 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105507759 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.135781581 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081233646 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094662857 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078797803 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074148305 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.10204219 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101467474 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.088367212 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100270601 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06995007 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081109878 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090043992 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069857124 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097943678 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.081437866 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098189621 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076994976 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133616856 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101456329 seconds)
  done (took 6.254483021 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.767757033 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.114598436 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098953637 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.830955174 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119446208 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087337174 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.729973015 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119704303 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.21570862 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.729745236 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115603834 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.081156391 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211749564 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.220937939 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956272005 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.273389391 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.616371308 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108919496 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111782464 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137109187 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102713035 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098619135 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115012627 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.411952815 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.078029659 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09623524 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.080394876 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103305791 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143360648 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086193013 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098305883 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158482118 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.233423929 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185127877 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077964447 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073418442 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095411254 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.151697441 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223767441 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196506554 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163006856 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071302986 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094688904 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.084706001 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116277607 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071045333 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.145340378 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.155748337 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.150256273 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098357982 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079943516 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104701262 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.082009088 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166894234 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083147005 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.298685251 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.271623634 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096022657 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083391657 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110377167 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.221073258 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10703782 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204216016 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.100342416 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191757197 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074102103 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781087068 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.150576521 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074064595 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100158166 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.081964496 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099939009 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.083511992 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.149963514 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.374054736 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085918856 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098986042 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073869488 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222689691 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087734485 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072713752 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165678597 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077724261 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103569688 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.087045193 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108361016 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.150653451 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.217741721 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.084243976 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103414032 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077278843 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108803024 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077277064 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.195699733 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200343535 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143302721 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.191600269 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105030328 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.145972171 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.151759809 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102588585 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.153908737 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.082200777 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10710751 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084300598 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196273805 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127998974 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084050471 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099250695 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.079996445 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.131681685 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109561627 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.080693669 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.151955175 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459300792 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.149755386 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071719579 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110246541 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082048475 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.144696676 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10150277 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.219562521 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105231015 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.150656453 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.082230624 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.093006579 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.082609195 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144558491 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106322886 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.082764493 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105974557 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080611203 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.219041987 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196002263 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105247655 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201952392 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166391429 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07905735 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.152450264 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105356376 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149404569 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080923407 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104742193 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077436486 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784897726 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107437136 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.08219666 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099411403 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.147747325 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095429029 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08584488 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108392639 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070960801 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78317714 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088168386 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10515057 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085038584 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101209687 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.082079844 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101313638 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077280061 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.142340319 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208584488 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102125621 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.081256603 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106746638 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143475746 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078478053 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108737305 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086058859 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108340313 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.083236986 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09967934 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085842387 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151023011 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165595524 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.178168967 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569832221 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074585497 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108053559 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.186302471 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095182813 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.247788516 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103983669 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.182777484 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167638135 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083698054 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290993708 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147356308 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170404898 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088503191 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154083754 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093199519 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.08029451 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.145783042 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095770998 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079587566 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.143773094 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109218473 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085128312 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.963803734 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073520969 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207773958 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.093677059 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.153576434 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077180043 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103953861 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.275511025 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074224881 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088936492 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.168204756 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077279709 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10754527 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.67699555 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107150346 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.085382028 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100218792 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.179270822 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.145980534 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104062586 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.080927695 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102913299 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.144322218 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.19206575 seconds)
  done (took 39.199568766 seconds)
done (took 56.379886148 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.236935475 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.198854287 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.229557717 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.153453734 seconds)
  done (took 1.781364684 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.132617606 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.13215183 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126683949 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068650583 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.133501674 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068328791 seconds)
  done (took 1.53334863 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.3193754 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277290687 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.203995093 seconds)
  done (took 1.675638106 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271361166 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.226681059 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.452418088 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280811492 seconds)
  done (took 2.228460776 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.189178878 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114177344 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070936903 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109779002 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.154527827 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.224510778 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12479144 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.15765267 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.105007008 seconds)
  done (took 2.170847075 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154907341 seconds)
done (took 10.409965241 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.21018802 seconds)
    (2/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.113614038 seconds)
    (3/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.100622555 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.141048931 seconds)
    (5/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.201764577 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.260153942 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.186699733 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.127668807 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.198173393 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.122429314 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085826614 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081551921 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.103014085 seconds)
    (14/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.078697287 seconds)
    (15/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.197908115 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083400867 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.120738934 seconds)
    (18/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.176007225 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.23634633 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.171583733 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109437294 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.232521569 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196255788 seconds)
    (24/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.20069343 seconds)
    (25/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.183525048 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107205541 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.202588502 seconds)
    (28/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079857733 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.114417826 seconds)
    (30/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073620004 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.099114973 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.234079801 seconds)
    (33/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.169276902 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.103852322 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092860611 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.157879134 seconds)
    (37/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.179534864 seconds)
    (38/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056119344 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.163649514 seconds)
    (40/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07816914 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055635047 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.151648257 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076553463 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.114832274 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116996946 seconds)
    (46/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.158130237 seconds)
    (47/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.117130986 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.055075478 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.186364507 seconds)
    (50/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.142346827 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.0729998 seconds)
    (52/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076965327 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.232322938 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09528072 seconds)
    (55/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082201094 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.122089265 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069536509 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070430909 seconds)
    (59/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.137305245 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.147711722 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.123769691 seconds)
    (62/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078668257 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119191369 seconds)
    (64/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.174544094 seconds)
    (65/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.110044365 seconds)
    (66/309) benchmarking ("sort", Float64, false)...
    done (took 0.155318155 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172255326 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.12405258 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.168342433 seconds)
    (70/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.155296867 seconds)
    (71/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.200186336 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.082025611 seconds)
    (73/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.078840179 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079723771 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.176150448 seconds)
    (76/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070277986 seconds)
    (77/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.173555883 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075484618 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100024382 seconds)
    (80/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075146074 seconds)
    (81/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.073835611 seconds)
    (82/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065278409 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.09172171 seconds)
    (84/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.083300133 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.092404127 seconds)
    (86/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.161851033 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.077659698 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183393339 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123540336 seconds)
    (90/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.106426322 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.092309274 seconds)
    (92/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.113841045 seconds)
    (93/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098128364 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119390112 seconds)
    (95/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.098212502 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.055539834 seconds)
    (97/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.179194853 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.099197151 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054590698 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.080062037 seconds)
    (101/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.056173629 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092101984 seconds)
    (103/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099957581 seconds)
    (104/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.135718669 seconds)
    (105/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.134096481 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077746226 seconds)
    (107/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.077898244 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056518487 seconds)
    (109/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095923032 seconds)
    (110/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.078320638 seconds)
    (111/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.0775436 seconds)
    (112/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.132089937 seconds)
    (113/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083431696 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.194598592 seconds)
    (115/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078351105 seconds)
    (116/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17746596 seconds)
    (117/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.162663357 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.19701702 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.101496393 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.15148193 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.169624895 seconds)
    (122/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057687417 seconds)
    (123/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094457175 seconds)
    (124/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.10556698 seconds)
    (125/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.08005242 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.344270516 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.173321237 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071161677 seconds)
    (129/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079165647 seconds)
    (130/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.128704963 seconds)
    (131/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.059324472 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.123252863 seconds)
    (133/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.076281735 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078474718 seconds)
    (135/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.078093106 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.139142842 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.101823892 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.055048674 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.186242447 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117432043 seconds)
    (141/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055627531 seconds)
    (142/309) benchmarking ("sort", BigInt, false)...
    done (took 0.215506905 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.075837793 seconds)
    (144/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.079113942 seconds)
    (145/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076707706 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07524121 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.099999813 seconds)
    (148/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078649459 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.120006662 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069819 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099317208 seconds)
    (152/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.078249314 seconds)
    (153/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055984972 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076973737 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098735182 seconds)
    (156/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083944612 seconds)
    (157/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055688355 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09181074 seconds)
    (159/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.055889621 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077061062 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.112430662 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.07016459 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.161147018 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069938102 seconds)
    (165/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064172377 seconds)
    (166/309) benchmarking ("sort", Int8, false)...
    done (took 0.169617677 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100899368 seconds)
    (168/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069284662 seconds)
    (169/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078125581 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091662764 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.101510999 seconds)
    (172/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.078854301 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.079981028 seconds)
    (174/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057015162 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.144367584 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081049694 seconds)
    (177/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.178531774 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070940664 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.175973235 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076913948 seconds)
    (181/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112625749 seconds)
    (182/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056178213 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.140807881 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153518379 seconds)
    (185/309) benchmarking ("sort", Float32, false)...
    done (took 0.155991904 seconds)
    (186/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076451232 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.104388353 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135689446 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.164743105 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.055468365 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093139131 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077047301 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076302184 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.197898546 seconds)
    (195/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.104572759 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05563565 seconds)
    (197/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.118582789 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.14052329 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.080194412 seconds)
    (200/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.108625003 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069160904 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.055098444 seconds)
    (203/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.078943476 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.139271367 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066616834 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.17000211 seconds)
    (207/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06348905 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.09188063 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.070521013 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080359017 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055329162 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054936195 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.122482788 seconds)
    (214/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072553346 seconds)
    (215/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066159988 seconds)
    (216/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055491022 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102278335 seconds)
    (218/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075586146 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.101701144 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078518602 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076768068 seconds)
    (222/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106289054 seconds)
    (223/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078980881 seconds)
    (224/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056299329 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.118442411 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070774523 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091581204 seconds)
    (228/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071290356 seconds)
    (229/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05491032 seconds)
    (230/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.055014274 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.105957946 seconds)
    (232/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077861813 seconds)
    (233/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.079346312 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069560032 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068989236 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09774828 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152067024 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098761346 seconds)
    (239/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069276703 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.174387402 seconds)
    (241/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056351498 seconds)
    (242/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072192842 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091277166 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069182699 seconds)
    (245/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080860072 seconds)
    (246/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.137192993 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069608294 seconds)
    (248/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055138962 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.16814313 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070590299 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.101019319 seconds)
    (252/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.142793717 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.093043456 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070244649 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071699091 seconds)
    (256/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.089035858 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056608402 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071095941 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095797344 seconds)
    (260/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066922835 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06888687 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.09363233 seconds)
    (263/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.056288639 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066538821 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.162120841 seconds)
    (266/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055985343 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075870009 seconds)
    (268/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.095197419 seconds)
    (269/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.142769687 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09756313 seconds)
    (271/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122979251 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.105655807 seconds)
    (273/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.057159616 seconds)
    (274/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070694701 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.16659974 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05671469 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093827248 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069692038 seconds)
    (279/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078241439 seconds)
    (280/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.120290768 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085685887 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.116757403 seconds)
    (283/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.055349022 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094546072 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.102455757 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069413146 seconds)
    (287/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.106126409 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06892451 seconds)
    (289/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055800352 seconds)
    (290/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099417564 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078062047 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.205472705 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.055816261 seconds)
    (294/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087523497 seconds)
    (295/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095473007 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092976844 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.100501711 seconds)
    (298/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.055484476 seconds)
    (299/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072177422 seconds)
    (300/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097335166 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.055811414 seconds)
    (302/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.055268026 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130094094 seconds)
    (304/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093037045 seconds)
    (305/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068687744 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.099202972 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06984771 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.115888888 seconds)
    (309/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055362096 seconds)
  done (took 34.237878556 seconds)
done (took 35.109388888 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082578006 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09374344 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101889308 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.0941741 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105997669 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079871846 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.100264061 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080687935 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105922758 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083814939 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080338059 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.081926929 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079702509 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.102338439 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079455886 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09329718 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106491379 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07698012 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.100996862 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069044586 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078376495 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093366394 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071997878 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058342427 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.104450264 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077027327 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098918027 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079406297 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069503276 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.093402318 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073441732 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07665561 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092942626 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083094753 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075759138 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.101886023 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079823133 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.103069384 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071674873 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070071538 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.101638255 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069291245 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077234689 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.101255744 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076253393 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.098195783 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077833764 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081686334 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118492677 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072495463 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.10189047 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080685155 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078501708 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100604848 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074139495 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102028635 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075754605 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09355547 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.103194009 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072873115 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.103446078 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077740622 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074942319 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.104497507 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079405346 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106299179 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081112865 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075544659 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.104374566 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075716333 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069693235 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101796222 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074042658 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.09362238 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079002978 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081373227 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.092596146 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075742874 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077304311 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.098188532 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070051724 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072255623 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.095848501 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076697911 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071375739 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08197536 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074314488 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075589088 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.092458655 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07959553 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099384426 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076617166 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071678776 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.105786245 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070303438 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074985737 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.093948079 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070042359 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071781739 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097969463 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069702818 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071587515 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.102663259 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071706536 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075659371 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106309318 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070014541 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099960877 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069359957 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070142302 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10781608 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080668128 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093947649 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072556547 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069475003 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.101119073 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070204363 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069551017 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092837614 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070009691 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076249451 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.093473993 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072637312 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076966036 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107136088 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070127326 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072860821 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095493497 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070903775 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075751779 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094016847 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070062909 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.095473129 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06681813 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07206306 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093370311 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077322976 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074922671 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.101644948 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072089805 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078725404 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.098817077 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076017602 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07600446 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092489084 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062697992 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072086306 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095584413 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072565877 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.07038332 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095492873 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070608307 seconds)
done (took 13.712519027 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069929839 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.165760977 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.108668327 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.124653269 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114764729 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070526174 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079974502 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126325417 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072113927 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125478319 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093157359 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.115405525 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.104776339 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093807338 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070585838 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098422162 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072076345 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085096413 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.129596765 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091323881 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.14543508 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.093140759 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.103229812 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118118359 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.0790292 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.111822626 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070967779 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073724424 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.098538055 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095192721 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114646126 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073559235 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070457301 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.116215749 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087804251 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.102270988 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070307515 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.076911026 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.093869293 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070221001 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.12195474 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.091761346 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099601642 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076255614 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098432311 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073911855 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071752835 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.103034227 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.081288289 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074829545 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109317417 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137873964 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074247047 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104542995 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069982951 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081358976 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10340267 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073245762 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.095087462 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073665319 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.07035343 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097362507 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085277965 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.124042133 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07501926 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103886966 seconds)
  done (took 7.175244012 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08708525 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097381008 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.112130898 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088754053 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.094765753 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070598959 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094779932 seconds)
  done (took 1.58059933 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071543716 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092672914 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118151872 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093393412 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114075781 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09171999 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105777753 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07128817 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089098524 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.097403056 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092098869 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134189799 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072696122 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.102736988 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095835003 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.07067985 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119654134 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071410694 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098385078 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094146331 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074364304 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115908111 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072921123 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095465743 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085013822 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071269031 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144842462 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076566933 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097407515 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074324358 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093368017 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.122211488 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109484159 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082615372 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096048277 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085883766 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086043709 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09414684 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087845331 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101033404 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085763271 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071871683 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.097199545 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069516493 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075930339 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106601221 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072819385 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072634154 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.098356436 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091266164 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096045952 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085500081 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072223931 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099826197 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073197479 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100971626 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081505351 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072472415 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115112507 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073859462 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113101323 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088186991 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085307611 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112536056 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073632781 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109249856 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085289767 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074471142 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09780139 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075573713 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111843107 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069479644 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073585941 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106551732 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073782422 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.0945613 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.12050208 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073039092 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106556801 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.0718088 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072623393 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096073142 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094469899 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099860238 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071622072 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076123621 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099117237 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069361589 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070956245 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.099898037 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070296475 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073308963 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.099366292 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072602501 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098774698 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088104038 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071940725 seconds)
  done (took 9.657244397 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073273274 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072535232 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098094657 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073905246 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072770045 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096686657 seconds)
  done (took 1.437865656 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095685067 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.099097224 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086671325 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.078130567 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.138308408 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086837455 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.112030678 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080650416 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114911824 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.08456453 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.111259396 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086702127 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.117793303 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078741487 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.111227441 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077887874 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.111487826 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081472361 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.085184349 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103494086 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093312798 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102965951 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078479869 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112280556 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075305309 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.103073949 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083350027 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.110283334 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084747903 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079770902 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.103332745 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075352926 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.102456691 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080037898 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110936419 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07685896 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102046711 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076829834 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082529453 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.100428518 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08695503 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103752113 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.083800982 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.102118975 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080107277 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.101713825 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076435923 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10737428 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087085263 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076991768 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.101502251 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077771032 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.100305605 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076892644 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076427287 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105237879 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077325407 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.111594812 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077918379 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.102034776 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.075155749 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.100658313 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080382165 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075367497 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.110561221 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076177362 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.102018678 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078872318 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103920206 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.077943921 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.100891118 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075755555 seconds)
  done (took 7.595226021 seconds)
done (took 28.373493872 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.667984092 seconds)
  done (took 1.612252165 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.690511342 seconds)
  done (took 1.636795982 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.557125644 seconds)
  done (took 18.500841365 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.477000179 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.549851026 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.782677931 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159114588 seconds)
  done (took 2.912974965 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.908826113 seconds)
  done (took 1.872282795 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.224907229 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.21225583 seconds)
  done (took 1.387215914 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.738597895 seconds)
  done (took 1.694191025 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.334649459 seconds)
  done (took 2.283956475 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.310055911 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.14117874 seconds)
  done (took 1.410271791 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.536535495 seconds)
  done (took 1.498841676 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.734279317 seconds)
  done (took 7.6954049 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217240511 seconds)
  done (took 1.18766629 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268239232 seconds)
  done (took 1.233645836 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.573049883 seconds)
  done (took 4.534784917 seconds)
done (took 50.411669064 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080709382 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083676529 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109264848 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082141639 seconds)
  done (took 1.311004062 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083476725 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078468001 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107843319 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077357828 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.108621246 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077987552 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080014881 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.108231466 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077216247 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.105228874 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078604618 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077442326 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.10628437 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079205372 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100658676 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080869992 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.10715226 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078001843 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081023154 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.103716508 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075834332 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105525665 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080572036 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07702978 seconds)
  done (took 3.10467941 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081043172 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.0763025 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103005685 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076247008 seconds)
  done (took 1.306349918 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082239466 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09727183 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.120232379 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081829905 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.124373082 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11734936 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074784785 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07418585 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102901888 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082290901 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073416386 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.130567493 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.119253903 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081952388 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084230875 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095941728 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073702529 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.118606475 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082010939 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082220558 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100363636 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082254807 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072651809 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.121450215 seconds)
  done (took 3.246168375 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082069256 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107122784 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.109519212 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094356436 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.122707053 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.071023264 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.107248113 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097376901 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.158969595 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070145747 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.101203112 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071488758 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077060749 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.096495283 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082131733 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.141041688 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118775171 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.09966104 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10085727 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070444629 seconds)
  done (took 2.951408009 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080078736 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074276479 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096077729 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073150627 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081198731 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.103191368 seconds)
  done (took 1.48416756 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073320166 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072143667 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097148692 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071616964 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076448577 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097450351 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071139234 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072616124 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097126782 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072035192 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070636948 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.096514517 seconds)
  done (took 1.938237906 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.466524986 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073359825 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.098262747 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.07096484 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075299393 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096688358 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085283265 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072952047 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.122872189 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070970325 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.097652599 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07371482 seconds)
  done (took 2.37505273 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214673131 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106747601 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242196509 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169329708 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139058984 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150857444 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133667579 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119667391 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203865541 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138295712 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186639506 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175420178 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132766717 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170968164 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119733112 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104646729 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176847936 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22409793 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135991616 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185774212 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180808736 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146084476 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160570561 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132415284 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094131106 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150477417 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.10355309 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085825439 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214425316 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158221785 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168963427 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145539942 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127179008 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194358086 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229471416 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176051373 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170433692 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118050472 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.131308606 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.146842485 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245236873 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093355609 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213590243 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113860583 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113790308 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172880493 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148020981 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.154535389 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13039548 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093877143 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202222195 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193137435 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171293896 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120359744 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141311808 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114619168 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147462518 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13312349 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230403153 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179987202 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1606548 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076225018 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126993241 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170017039 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161549438 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.146459889 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160537757 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12684386 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17000657 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167302048 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144597827 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169978575 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187647712 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094244741 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149251619 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154517695 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150110075 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205535384 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184328833 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077466363 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145442946 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103631988 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111317402 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174239541 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08021648 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192648193 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130935789 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120288043 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117296758 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139794739 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141866257 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176838615 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170266997 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127882622 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070283861 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13569514 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.136403489 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166923973 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120496231 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114709007 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140620117 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.110713526 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156262475 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078790696 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156949161 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104063706 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156588482 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163853737 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.08179794 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139981889 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10634015 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129645421 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157015294 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17841336 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121950815 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088057473 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213053758 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155471771 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10354854 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158854326 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204914661 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103511885 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130449351 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177937556 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223355247 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094367319 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18279332 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134524661 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116415825 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093897829 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158433325 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135653801 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.142423732 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086696877 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159131171 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215054065 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079716895 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119399756 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167552606 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087363713 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113600409 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140566692 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129236668 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093753198 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126989709 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104376721 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188283626 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157841432 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106825583 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146064972 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132185275 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230753022 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094735687 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131894887 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128202943 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075797626 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172005619 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176133711 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113075208 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182556804 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.151063918 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136769636 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152202941 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089946628 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157483821 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084033464 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.102758764 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172409279 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147267912 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142784168 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176038945 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135837237 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160531039 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161232046 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152907142 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153877417 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.118460046 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140209562 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.120181748 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111994001 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145418052 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.1047002 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096780085 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.114296038 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138290764 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09644472 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115257632 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176729536 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148239354 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130328158 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138941355 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103051573 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161741552 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.109651813 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155933926 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.157175321 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101207356 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.203472587 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172237269 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166998891 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096978517 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213298461 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075493475 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106973889 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.095703968 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150107458 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115550822 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090910865 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149754038 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161776477 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162813936 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155980252 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144539559 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156050345 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170426927 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076666472 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.150309124 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164705391 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155412441 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.141896012 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119580873 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.132282861 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128883462 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136772134 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234519574 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148168774 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156460531 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188721166 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131150956 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08613022 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132124232 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164014134 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135052975 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156930404 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128312375 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094485396 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141020041 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.114024132 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139796872 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162643314 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115900654 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19693882 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.105007599 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190310265 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083032146 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145326766 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139217665 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144924944 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069147884 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154740928 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182999299 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129467124 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149630502 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171889697 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085408251 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15728076 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218605954 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173782901 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091501519 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138810017 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140566898 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144748186 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152100244 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158040295 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111602157 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16915136 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137937161 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.117957541 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093927028 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130641244 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132318063 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092260072 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128505361 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.154065248 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092350937 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194895285 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112790258 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138291074 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15122413 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.131019716 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.098000554 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131824452 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19505573 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154887567 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217992007 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102647669 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.157921493 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210509609 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080447227 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085351026 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.114546252 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158266251 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089391537 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195404009 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100739153 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137568745 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159554872 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170711302 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119493165 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.074712738 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136941442 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152220077 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117639456 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133286628 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139149035 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185450926 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127821192 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085571928 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151442785 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136871075 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101040247 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174339277 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.094586395 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10219773 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108928635 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087143442 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144656852 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1840848 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.117186674 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.161261698 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124350405 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147077337 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145193516 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129614472 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101929471 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146098953 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206145394 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163626874 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086364342 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137344277 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15533358 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174964999 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140954016 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093456882 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209942143 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172485979 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177172142 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.122775942 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12042779 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147222496 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136728575 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161795412 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116689999 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183380695 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1149544 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176383597 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13326987 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122261833 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126331646 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.128525552 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121453304 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166629226 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153646579 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089183804 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132675098 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147232137 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15917213 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135841689 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.081452055 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158817292 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07813414 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196674867 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208963386 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114789573 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106347785 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127994573 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116747526 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10878684 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13811374 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12072566 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.119703182 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20792021 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087865137 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169798265 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208382598 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148390939 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153277438 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097249814 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672464917 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.111548617 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172740003 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106000365 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212514224 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102517207 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15110431 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138509261 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148190527 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173107066 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138846255 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.212550678 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170483259 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157431193 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112755884 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138562422 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113455828 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.124346183 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132532186 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14679558 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111064642 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132756101 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155538574 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148050255 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.114096145 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09328511 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175609074 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13447013 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164455642 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157794281 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091782374 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151237814 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190804098 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087167163 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15844509 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213062835 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094072362 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132048916 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086281999 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133859297 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237152548 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078322278 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204950547 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153218525 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109841945 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146150089 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.126499017 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16796507 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137632988 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155764679 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124856278 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110534799 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135252206 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11756061 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083060032 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134825008 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145855556 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101087824 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138002617 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142906039 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17097532 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077643602 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124148061 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108344669 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194250162 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192993303 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094355214 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116559926 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141798091 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103657001 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.153184321 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154734966 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115998856 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115064654 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.089271294 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.118315796 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.122114154 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133907888 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108721952 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143977469 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183273623 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.118669387 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.260505134 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093890468 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135525876 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075661448 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.113653884 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102752298 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126528912 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138071598 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130211436 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210229216 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.127019649 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08693467 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128672642 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079188154 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117042611 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145373476 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117142555 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157047763 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126538254 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067285159 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138385353 seconds)
  done (took 68.936090285 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140002518 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.110873343 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.125886032 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.180994084 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154804061 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247082265 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.189108606 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231649367 seconds)
  done (took 2.425808009 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074930745 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.124931525 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106617482 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116132715 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072065539 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.098871654 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.309555777 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112836536 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072589657 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094148197 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.153425884 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07465959 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.489672417 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070569721 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.101361357 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.091386378 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.07298184 seconds)
  done (took 3.27829446 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.436541793 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.680307863 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.476076819 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078311365 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.108696493 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114387001 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.825726455 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.173722555 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097305574 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.454960964 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.742305201 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.139223882 seconds)
  done (took 18.37896408 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080219873 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074896676 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11563551 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088095335 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077084365 seconds)
  done (took 1.492461015 seconds)
done (took 113.177652652 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084525897 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.371197591 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058323133 seconds)
  done (took 1.514079018 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088833936 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089240116 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117421001 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087626728 seconds)
  done (took 1.443487687 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07889967 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080131646 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116169838 seconds)
  done (took 1.333677998 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.3024118 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.143223295 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.120050792 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086544697 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082114449 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.110098206 seconds)
  done (took 1.333965087 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078083061 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080106165 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105597559 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082525817 seconds)
  done (took 1.397681106 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080476833 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057375759 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059414027 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08727343 seconds)
  done (took 1.342080713 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094730125 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08379704 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.112320919 seconds)
  done (took 1.343769902 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109898108 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.118465263 seconds)
  done (took 1.284486659 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086488614 seconds)
  done (took 1.139263918 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098866614 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.149980209 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.170215407 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.144523249 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.178632012 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.144274686 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093040147 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.123266765 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.110625498 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.096276619 seconds)
  done (took 2.368386367 seconds)
done (took 16.199316928 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083447057 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.4009554 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.366455893 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124813716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675546408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361121851 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.014374746 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097776404 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142486765 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072663364 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117651681 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653421754 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.004054151 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328723286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.990185365 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330347793 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654883758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100627331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072902429 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073860272 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.996868113 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072764464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100019568 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074155761 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654630718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404508487 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073399115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.357756108 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073820281 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074503641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387662051 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073618349 seconds)
  done (took 16.058830842 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075997265 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.150847414 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080280211 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089553377 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.104192135 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07512573 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104454483 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074959429 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154800474 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073986673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089840403 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101482934 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077221171 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102144884 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.0929683 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073172147 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102215474 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073794777 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100766922 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074316453 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091635532 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101087562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074882669 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074104738 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101710107 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085118006 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101342464 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073804693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074373107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103723087 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07723778 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073650741 seconds)
  done (took 3.974507008 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121264939 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.160414655 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080432843 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136309856 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120190427 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.104273847 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1781337 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100138375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.159594496 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073513104 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117787944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074146595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.134338826 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074194234 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092752315 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101386044 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074532698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10164876 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074291977 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073941127 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120736379 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073853936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101921573 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074800007 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073809622 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114938736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074895758 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100787561 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074116313 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075405776 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104749227 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074606672 seconds)
  done (took 4.289211152 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078106223 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080685599 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115990712 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089721967 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074981404 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.105592884 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078133895 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.103231984 seconds)
  done (took 1.798996109 seconds)
done (took 27.174764935 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084790476 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075849832 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106785588 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087418741 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077905359 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.11220694 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072839739 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10828253 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080360967 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077789678 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.109817683 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07418843 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076640126 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.10069738 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080544257 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073390773 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.11179491 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076733084 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.112310871 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085135242 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075376451 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.109173418 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079157683 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.112479046 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.0842246 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083352702 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.116237542 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078917291 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101834785 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076342682 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080608962 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116794787 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073696623 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.111810448 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073947819 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073095932 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.100790601 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073538979 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083317381 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108513987 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076081924 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108115998 seconds)
  done (took 4.845739481 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092390258 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095733895 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.117897246 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067285384 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.07191872 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.095275062 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09330737 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.094345996 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067728078 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092514022 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.088841512 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063244622 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065271517 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058693039 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.091251579 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061933002 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06549645 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061476312 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.091739015 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063323989 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.065215297 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.086842257 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.065895549 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064237746 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061600449 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.095368272 seconds)
  done (took 3.112848274 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080731277 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087808433 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122287172 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135174401 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.140671121 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08032214 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.112307519 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092084891 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.118281114 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07273659 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076502637 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.131042533 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092344552 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.108335058 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073953007 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088070453 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.117256914 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075215979 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07878503 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12250904 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089715627 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.112762084 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094517113 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084796535 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.10163054 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075389324 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.105104478 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087257696 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07780361 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.110847072 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.077740209 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.104557519 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07547573 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084802299 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.106765881 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075145006 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.120937645 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083428056 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081801135 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.102108476 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077205859 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073301849 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.122496633 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.116637475 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.101627903 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.088625031 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.107556755 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083292147 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072318121 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119969227 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082123004 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.101759013 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.077424164 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071770756 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.101877025 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087147767 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075036063 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.10445875 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.083223506 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076249856 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.114174464 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076252482 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117513288 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073107154 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080665401 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.100850573 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073289828 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071838763 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.124442371 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073627122 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.142895672 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07403087 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.103950292 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082369366 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080670632 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108254011 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07366785 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.117121183 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083434073 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076162485 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.110374333 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076914698 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076588357 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119965426 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075345222 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.103480838 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074182714 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079555411 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.10427478 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075274212 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086550071 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.102290826 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076332003 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11881807 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073316648 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073915284 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108519945 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078379558 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.07223852 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114033097 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.078179688 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.10246624 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08304242 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072418054 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.10508154 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08289358 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.106931014 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072095177 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076900692 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.108982973 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074509776 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074177681 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104575411 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074958912 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.111882934 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080146551 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077171814 seconds)
  done (took 11.897176243 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.205399102 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.196567747 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076317425 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.187775538 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.08584607 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114496199 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.190603622 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.105306137 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.103617846 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074230259 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07414357 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.142689944 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105895115 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.145689233 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.111440295 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073949976 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091580035 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.143664869 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.192339506 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.18461191 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092891681 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.112464714 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075745162 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074038942 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105332721 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083480891 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.120595591 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085745294 seconds)
  done (took 4.443947106 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087130554 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.134918399 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07971762 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094113916 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.127303494 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.074018187 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.108320795 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075030976 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08523394 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.115284099 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073592144 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.109388272 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080552313 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.111570372 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074372913 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.082438921 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.112934733 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075147923 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105683698 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078081351 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079641707 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.116328796 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077282346 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.102129261 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.080498675 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07293374 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.100630891 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.092584471 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.103356509 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095510793 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.101639643 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.080381172 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082333529 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.104612182 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073815451 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075232214 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.105692483 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.075928792 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074997225 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.101760188 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072661305 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06329667 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101775499 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.087225604 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.108713207 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.065432985 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07902493 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.108907801 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079554767 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070943519 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105320553 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075826575 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.105339379 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081399289 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.079155169 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.108039494 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.076740878 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070724309 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.109906795 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.077009386 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069984968 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.101921661 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078617034 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.0729922 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111192181 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078333486 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.101963388 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075435734 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.077808347 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.109415798 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076031926 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075986453 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.101430718 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076811413 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.079134669 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.108362074 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.076950811 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072417362 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.102166076 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074227927 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060874318 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.103507206 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05993428 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076041552 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.101103265 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072355854 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075814384 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109581413 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087880995 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.104353449 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.080436285 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.103052814 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07338834 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07663991 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.097904772 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076782781 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087330498 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.12036551 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07335218 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.101544874 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087242476 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078850488 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.103111172 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.06233887 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.080094977 seconds)
  done (took 10.377854261 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096150765 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098798703 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.105315748 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087566299 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.129769109 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096480755 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.110518397 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080284722 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074788273 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.12059478 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074244248 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.0815113 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.107340902 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082242587 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126841828 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081945913 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075203544 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.112103038 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.081940685 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.138145898 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08691275 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.090441997 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.113977405 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074343564 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078791426 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.115794553 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.098875523 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113774959 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.083134114 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.117144887 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.084376451 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098082023 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.119220477 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.077716395 seconds)
  done (took 4.413260651 seconds)
done (took 40.152465367 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.155162328 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.363370402 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.139340645 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.05122909 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.138749281 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.149313204 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.167266036 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.139165034 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.733745689 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.13862051 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.39115132 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.838926637 seconds)
done (took 59.489875191 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.194536679 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.276565864 seconds)
    (2/2) benchmarking "String"...
    done (took 1.410958245 seconds)
  done (took 3.778020073 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.491535467 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.161946439 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.421819867 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.138219772 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.140664615 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.556458429 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.797217337 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.522706038 seconds)
  done (took 27.821148155 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.137871991 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.539028876 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.994869309 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.897503591 seconds)
  done (took 18.651800153 seconds)
done (took 60.019927566 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.149706717 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.163969824 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.159494942 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.124520655 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.273101386 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.165039353 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.270947539 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.200001097 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.13760328 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.127513589 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.150878832 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.139310546 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.164815182 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.301272248 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.146937179 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.139296399 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.19612923 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.73510217 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.55133416 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.151848364 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.159193666 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.149819062 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.13871861 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.139302348 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.190759172 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.142674978 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.154301681 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.143439519 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.80512984 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.145451071 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.150007243 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.599592365 seconds)
  done (took 188.450651474 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.138819766 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.081425771 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.212315097 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.193521975 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.570753009 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.34216858 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.264215256 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.631206555 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.157670459 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.151137283 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.423206062 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.138722949 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.48861985 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.123784596 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.162203238 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.241158654 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.388728221 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.461592298 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.168607814 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.412197827 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.160071705 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.522973521 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.458393932 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.352094514 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.144499252 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.207849173 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.159936287 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.143945223 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.330628648 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.318255023 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.173036908 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.159684306 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.783942201 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.00726965 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.16775627 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.175218051 seconds)
  done (took 148.102734796 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.415460408 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.141243211 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.141476487 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.141841505 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.173749404 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.141748744 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.716929041 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.715263981 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.681275779 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.32328629 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206038526 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.414502005 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.140999788 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236068135 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.152777907 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.142385452 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.155883471 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.169423558 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.142428279 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.141844884 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.728065947 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.157520029 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.553703721 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.150922838 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.14179533 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.175216742 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.538444241 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.141389253 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.142069231 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.174703544 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.468016029 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.19046835 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.142606051 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.482535924 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.691104418 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253814165 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.144243035 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.174757905 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.142954063 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.14181417 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.416143418 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.143456424 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.142762971 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.14385369 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.147095908 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.768022277 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.142725177 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.718459211 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.14350576 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.092445485 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.143743544 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.143522547 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.656672832 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.695172245 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.142192964 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.14263721 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.145703162 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.14376803 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.143070648 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.17625543 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.805198594 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.244742387 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.14500702 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.146960554 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.177365702 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.144243721 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.528689673 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.146937103 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.065794836 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.2049755 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.249625305 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.736651881 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.147759487 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239671139 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.265007163 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.144848727 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.144167333 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.14414663 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.144742232 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.252970999 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.144481795 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.584200485 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.150242394 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.145755226 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205660337 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.241032738 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.145526417 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.504251999 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.145387684 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.145137822 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.887418604 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239996248 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.144982002 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.145232992 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.144676515 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.584994898 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.144952622 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.721127589 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.383343471 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.144385212 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.819579556 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.149239892 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.595058614 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.716612295 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.773292065 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.147292431 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25415467 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.149978625 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.146689178 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.145392624 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.174149916 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.146862676 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.204180572 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.146396103 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.545894291 seconds)
  done (took 341.445105506 seconds)
done (took 680.495247138 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.855021817 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.808092513 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.943084303 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.825159098 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.804254579 seconds)
  done (took 10.325281206 seconds)
done (took 11.412967202 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.338576152 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.338202434 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.208484674 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.33802942 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.175238326 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.356053973 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.31916666 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.170644582 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.248563508 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.226888394 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.248465987 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.195916484 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.175949293 seconds)
  done (took 17.431091301 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.463334786 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.475307902 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.210191806 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.460750105 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.187894059 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.477945632 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.355127559 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.365336106 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.343988729 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.162311497 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.161941686 seconds)
  done (took 15.755760201 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.471341781 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.46161323 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.215719341 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.469212402 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.188683175 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.471736648 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.352990746 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.362116717 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.355298057 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.163050903 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.161616112 seconds)
  done (took 15.765357361 seconds)
done (took 50.042441371 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.158470138 seconds)
  done (took 2.249671862 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.192631946 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.359298901 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.17391971 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.16437408 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.159630051 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.161513195 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.164131667 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.158065066 seconds)
  done (took 10.628513004 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.153886597 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.155084525 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.15549315 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.155167625 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.154239783 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.158187355 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.157634013 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.158550961 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.15548836 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.158320302 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.157418476 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.156169507 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.15885572 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.157655872 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.155995463 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.157203183 seconds)
  done (took 19.599211849 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.157707374 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.155964945 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.156136252 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.156752785 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.156460966 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.156496314 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.156640842 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.15599876 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.157929638 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.15601728 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.157188768 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.156244864 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.157030233 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.156793055 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.156695187 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.157508691 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.155514829 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.156803724 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.161558661 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.156466732 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.158588119 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.155992528 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.157930184 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.157515406 seconds)
  done (took 28.864594219 seconds)
done (took 62.432959433 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 6.124615605 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 6.155721949 seconds)
  done (took 13.374678294 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.159239409 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.159319967 seconds)
  done (took 3.413497332 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.159699727 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.15951064 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.159556249 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.15967166 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.160150302 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.159624685 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.159653247 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.158939325 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.158841723 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.159063486 seconds)
  done (took 12.689874542 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.15932571 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.159081481 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.156969889 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.160498496 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.159301605 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.156629563 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.159995161 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.160114871 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.160410555 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.157009723 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.159804056 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.156994144 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.160054475 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.157506088 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.15973973 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.157906782 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.157170526 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.158079041 seconds)
  done (took 21.951587507 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.160855273 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.160297473 seconds)
  done (took 3.41632229 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.156497732 seconds)
    (2/7) benchmarking "second"...
    done (took 1.157639343 seconds)
    (3/7) benchmarking "month"...
    done (took 1.157527364 seconds)
    (4/7) benchmarking "year"...
    done (took 1.158075816 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.158397053 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.158644415 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.157831217 seconds)
  done (took 9.201012673 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.161609501 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.358472176 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.472530023 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.740489922 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.163248638 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.164897156 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.025592477 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.164443733 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.168227577 seconds)
  done (took 13.515602066 seconds)
done (took 78.656349676 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.191852488 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.159638144 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.078261085 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.179528601 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.17485238 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.49941215 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.170742196 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.280186216 seconds)
done (took 36.829414612 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.168648733 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.117285695 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.121586689 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.155440202 seconds)
  done (took 11.491734549 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.143524582 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.130443487 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.144258231 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.222237081 seconds)
  done (took 17.738052127 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.22233055 seconds)
    (2/2) benchmarking "read"...
    done (took 1.489487034 seconds)
  done (took 4.809292655 seconds)
done (took 41.303498873 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.162510744 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.163253822 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.159915787 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.160179087 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.163607282 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.159454928 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.160130741 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.162795932 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.162184789 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.160481784 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.162395035 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.163487046 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.162910295 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162528724 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.161352745 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.160706785 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.163403551 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.160995597 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.161465465 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.16184129 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.16378529 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.160861631 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.160874565 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.163032166 seconds)
  done (took 28.982912018 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.163583004 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.162109274 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.164658761 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.164014772 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.162043736 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.164826318 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.164719612 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.161070392 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.164388947 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.16324503 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.161359726 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.161251717 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.164242656 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.162374721 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.163829888 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.161699995 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.165091384 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.161609278 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.165166676 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.161446516 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.164544602 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16299259 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.161849258 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.164710518 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.164078585 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.162434318 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.164332189 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.162768407 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.164463674 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.162435887 seconds)
  done (took 35.997605834 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.169486637 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.172698952 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.164480763 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.165102889 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.165269743 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.165978491 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.165466863 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.164902037 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.165353203 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.164687549 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.164789605 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.165687723 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.165585123 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.165625544 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.165392464 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.165069998 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.165638624 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.16598122 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.166067633 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.165654508 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.16526995 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.166332369 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.166177923 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.166185296 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.165762883 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.165043315 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.165552282 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.166101882 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.165436806 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.165785833 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.166941258 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.165518526 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.16685476 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.166773184 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.167921896 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.167025672 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.172292441 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.173189878 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.166497713 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.16694065 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.166214918 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.166687333 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.167189432 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.167268066 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.166617751 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.166712822 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.168256827 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.167255351 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.167096928 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.166825967 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.167574254 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.167662286 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.167495914 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.167004082 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.168456827 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.167364712 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.167516394 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.167315696 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.16769097 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.168927502 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.168426847 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.168714079 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.168477042 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.168113015 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.168432215 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.168725119 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.167481979 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.167956403 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.168347665 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.168345085 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.168634934 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.168077661 seconds)
  done (took 85.125832743 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.167473983 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.166000418 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.165194364 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.165246676 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.166121936 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.168487238 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.165519104 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168785053 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165674269 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.168882513 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167991455 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.165525864 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166580511 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.168045081 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.169222267 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.16589664 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.168999824 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.166534104 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.169148762 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.169388086 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.169465776 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.167238963 seconds)
  done (took 26.785196862 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.169177321 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.169647485 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.166033279 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.169279069 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.166616575 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.169403012 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.169574013 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.169692428 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.175639583 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167286168 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.16811582 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.169674828 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.167757712 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.167792064 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.167823553 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.167199868 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170553025 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.167659895 seconds)
  done (took 22.143857339 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.167990186 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.167565138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.169959683 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.168023456 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.167683926 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.170316632 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.168155265 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.17047865 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.170126345 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.168012858 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.170479636 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.171343509 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.170969878 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.168689147 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171157412 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.168638113 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.1726129 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.169990727 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171907323 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.168960683 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.167978288 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.170781177 seconds)
  done (took 26.837684852 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.171576903 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.172150099 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.168554108 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.168437531 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.16897306 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.171002473 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.172797579 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.168533633 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.171810425 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.17114316 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.169081334 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.171472627 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.169362745 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.17068043 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.168708059 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.169417766 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.171763396 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.171322715 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.17221932 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.169197346 seconds)
  done (took 24.515911807 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.172796404 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173746505 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.173162026 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173453097 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.173480486 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.172617088 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.173756474 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.173008477 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.173572964 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.173798829 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.17336265 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.173018066 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.173054611 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.174224713 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.173644519 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.173319274 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.17383914 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.172817174 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.174150882 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.174911248 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.173992018 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.17402954 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.175295352 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.174715261 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.175213339 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.174485405 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.173936618 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.174699684 seconds)
  done (took 33.974346625 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.174016336 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.172920267 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.171418022 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.172216178 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.171313792 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.171408424 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.173165423 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.171939336 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.175129722 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.170969897 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.174842792 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.174516549 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.17491371 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.174094816 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.174300948 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.175091953 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.174909865 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.172461756 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.172193207 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.173566673 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.17446429 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173634336 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.175049021 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.172223237 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.172261406 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.176003607 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.173007805 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.173491626 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.175602804 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.172727477 seconds)
  done (took 36.31398908 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.194665924 seconds)
    (2/2) benchmarking "in"...
    done (took 1.194857875 seconds)
  done (took 3.499110817 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.17261229 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.175091288 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.175588582 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.172670898 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.173887328 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.175953424 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.175543163 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.172603056 seconds)
  done (took 10.504449384 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.174553265 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.175861414 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.177355874 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.175957417 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.176571893 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.176023431 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.183434109 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.193743167 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.176955439 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.176696788 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.182110872 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.184246223 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.178576599 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.176111045 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.176210018 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.177632474 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.177147132 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.176612889 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.178104848 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.177425484 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.177264783 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.178861497 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.1786336 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.175663394 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.178029755 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.187854681 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.183116596 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.177674541 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.177363901 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.180970025 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.176879161 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.175079905 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.177677582 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.177980424 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.17799251 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.177971729 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.185655392 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.195669279 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.182471957 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.178922507 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.178172273 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.176081658 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.179173857 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.1792332 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.179432285 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.178566882 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.179174915 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.176921252 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.178526825 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.181959206 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.184831978 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.177581393 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.176311393 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.182414407 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.179597244 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.184878576 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.19786494 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.181576189 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.187540675 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.188597122 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.191800903 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.187104724 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.181864747 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.179976781 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.18946099 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.203553369 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.186019188 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.195236107 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.176517085 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.179913391 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.185415993 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.192788303 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.189315855 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.181172426 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.180944071 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.179579482 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.179814595 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.179852323 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.186263686 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.200259887 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.180084642 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.180556245 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.191018253 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.202365616 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.178778502 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.181069702 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.181248262 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.180929048 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.180735398 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.191511506 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.199495984 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.181581862 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.180613365 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.18092389 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.181775105 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.181969975 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.18023451 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180518882 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.179474599 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.182478944 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.182033986 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.185704799 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.190234458 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.181716915 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.181354822 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.18800184 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.182897375 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.180567884 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.187322898 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.181631775 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181451143 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.182120643 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.187487537 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.180471794 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184149279 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.190632005 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.182534225 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.182594491 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.182573902 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.182325419 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.191795534 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.207221794 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.182504004 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.183253744 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.187426019 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.193953077 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.182501907 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.185587994 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.183461847 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.181222509 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.180601579 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.183750564 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.183370911 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.183385 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.182843964 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.184104665 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.181479145 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.183749672 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.183693979 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.183286669 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.184174373 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.182687438 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.183945471 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.183581323 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.184236017 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.184789696 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.189222663 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.184077739 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.183893061 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.184108446 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.182102783 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.184965759 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.184695972 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.184876648 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.184749966 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.185217154 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.182921108 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.184904151 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.185063824 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.184841686 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.185233915 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.184397378 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.187410204 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.185021319 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.187231997 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.183525495 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.183005144 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.18448758 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.186179472 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.184217455 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.185097624 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.182840119 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.187649133 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.192778179 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.185521004 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.185623117 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.186616021 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185592725 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.185115678 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.185635011 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.187839035 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.193336195 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.185402474 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.191567667 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.186699917 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.186644283 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.185580341 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.186112456 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.18490888 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.186502711 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.189274301 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.193819391 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.198506861 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.194061767 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.18689317 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.189061999 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.186485605 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.1907434 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.189197002 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.186533861 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.187540104 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.187387656 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.184997958 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.187373363 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.187957283 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.187726121 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.185652683 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.188202426 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.186753027 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.187795519 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.186854712 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.187754856 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.188119895 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.186151731 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.187197676 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.187709014 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.185895378 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.185381961 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.187160261 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.187498209 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.188695755 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.187932964 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.193424783 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.185850478 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.189665038 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.18936743 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.188166406 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.19025153 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.192820528 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.191782668 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.190976216 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.197289355 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.20862017 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.192798347 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.197769653 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.208872704 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.187525797 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.191810539 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.189621712 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.187428891 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.191297268 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.198240228 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.190161514 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.189199862 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.188654658 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.188265231 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.190152446 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.194160306 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.186527976 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.18843874 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.189668185 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.189557399 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.186960661 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.188835115 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.189175342 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.188869993 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.189632819 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.189821198 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.190357855 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.190229017 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.189411491 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.189645791 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.189385875 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.192306477 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.197923802 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.19367075 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.190242144 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.191006345 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.191118987 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.194117972 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.190501276 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.190620218 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.190004591 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.200905669 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.199426676 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.195973061 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.190347768 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.190563019 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.19536877 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.190852073 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.19397236 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.189442033 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.190893174 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.190049327 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.188799655 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.188983885 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.190419646 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.192045222 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.191441708 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.191792388 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.195970509 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.19111995 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.19044607 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.191717129 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.191397117 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.191464506 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.189750507 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.191212001 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.191727175 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.193302954 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.190321387 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.191281818 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.196828177 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.208791315 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.190563691 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.191645061 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.191035938 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.190245868 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.192456062 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.191658721 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.193637537 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.199873916 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.195391796 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.201869995 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.19343034 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.200981224 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.192830797 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.19418885 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.19983599 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.19021437 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.189652529 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.192237899 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.192237765 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.198224905 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.210579367 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.193326691 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.198147504 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.193235444 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.192864693 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.193343229 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.193172151 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.194215471 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.19332446 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.201423402 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.211952924 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.195537164 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.195348815 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.191631434 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.193544191 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.193705683 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.192684066 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.196671812 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.193724761 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.194187277 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.191995003 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.194109618 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.194065822 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.195018744 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.194856311 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.192608333 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.194875275 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.199820467 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.212741091 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.198878254 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.194703404 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.201074894 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.195137954 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.20096962 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.213010328 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.194599185 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.195499967 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.194555128 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.195572974 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.194663711 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.195423538 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.195201953 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.195916696 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.197967983 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.196089383 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.196495117 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.195509085 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.195885989 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.194594783 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.20438264 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.219051889 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.196469073 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.199793049 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.192629457 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.195904681 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.200626863 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.195578078 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.193932675 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.197406597 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.206487648 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.204654568 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.195168516 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.196041114 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.195680041 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.197476846 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.195563898 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.197160773 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.196958853 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.196845539 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.196607643 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.196074532 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.198605618 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.196511166 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.196044104 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.196403026 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.196952769 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.205459231 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.197842442 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.19716065 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.198194524 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.197258679 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.196550004 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.197605516 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.198262267 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.19761462 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.197790052 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.198541548 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.203937833 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.203231639 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.199793299 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.19557342 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.198302279 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.197131927 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.197378336 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.197630657 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.19787833 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.198006577 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.197665396 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.198285059 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.197621371 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.196052452 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.199731348 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.197786809 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.198117206 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.199921987 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.204285354 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.198223756 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.195666101 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.19723118 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.199104841 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.198449398 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.197533271 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.205209069 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.201440697 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.208869357 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.207607529 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.203680582 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.198552341 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.201709559 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.205920758 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.196316455 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.198791269 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.199836129 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.19969312 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.199728795 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.201627952 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.199217646 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.204828231 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.198937229 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.198241927 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.205705387 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.218387055 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.200210809 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.200972154 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.203290393 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.199996007 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.196462702 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.199458949 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.19804558 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.205171613 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.218296211 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.20093074 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.201154501 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.197876064 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.2012812 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.204443423 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.200248537 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.199822213 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.198475915 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.199350439 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.200104345 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.200118025 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.198348417 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.200180597 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.199600236 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.204008501 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.207401623 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.197678153 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.201527408 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.200126767 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.201608285 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.201558385 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.201443377 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.199377816 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.198571117 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.200131087 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.20177068 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.201748966 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.202941523 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.200495077 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.202694509 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.202722234 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.202079194 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.204195687 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.212610107 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.209436826 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.199427228 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.200732692 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.201685314 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.203299863 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.201427411 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.201503887 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.20061142 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.202470743 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.202097702 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.20228457 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.201621229 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.204646779 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.217600827 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.221255848 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.201289501 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.202172629 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.205200731 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.202513969 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.200526017 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.203524963 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.204248341 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.204831355 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.21100646 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.202293755 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.209457681 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.218803176 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.203870217 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.206751597 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.205632617 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.209984944 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.204915281 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.202905208 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.203458004 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.207039121 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.21740006 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.20434235 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.21268607 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233234971 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.22327119 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.203331522 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.204133516 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.202530709 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.203395377 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.205318385 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.203418484 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.204406917 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.204273931 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.205024279 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.20529685 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.209091541 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.2051454 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.204740769 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.204257597 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.203874687 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.205853449 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.202133655 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.205054846 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.205405802 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.205125257 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.205466103 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.205283435 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.205120993 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.217426864 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.214041074 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.205381197 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.205062451 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.202596327 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.207750873 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.207743192 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.216429224 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.213898551 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.206003186 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.20511561 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.206825577 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.206016389 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.204096096 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.206218852 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.204226864 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.204802442 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.203719076 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.217990606 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.21555823 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.210368373 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.205953224 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.207022559 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.207329539 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.206839529 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.207136116 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.206293958 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.20664129 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.206870683 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.211032023 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.206574893 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.205549966 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.208985756 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.216167465 seconds)
  done (took 712.570685529 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.204265238 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204573796 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.203984308 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.20513465 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20387472 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204711618 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203882629 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.204387419 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.204726154 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.205045451 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.205495998 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204883008 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204601443 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.206074449 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20628095 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.205661968 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.206235812 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.205715064 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.205708193 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20586288 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.204521814 seconds)
  done (took 26.446600283 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.207668856 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.205547604 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.205647793 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.207654864 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205556287 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.208706474 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.206344002 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208211523 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.208569389 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205350252 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.207801194 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207986407 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.205836472 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.20602878 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206540371 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208329519 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.209002827 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205647503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.21002892 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.206233757 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20940064 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.206954954 seconds)
  done (took 27.701084111 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.208707726 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.209180171 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.208284305 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.206315976 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.208291644 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.207857984 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.210065438 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.209542668 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.209434487 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.209540491 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.207585467 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.209199349 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.215798051 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.215927996 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.211035914 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.209710523 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.35449134 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.209600203 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.210588483 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.210519697 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.207378406 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.214245791 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.208296431 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.207076831 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.208515546 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.21131868 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.21100853 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.211067338 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.210922872 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.210438261 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.21562558 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.21098459 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.209209216 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.212183345 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.208562087 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.211667415 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.214344519 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.211037704 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.208234354 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.210935856 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.220946421 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.232311306 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.212308564 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.216257907 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.211849127 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.211445715 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.214333945 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.219927858 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.209287943 seconds)
  done (took 60.647396505 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.213423855 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.212317932 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.21191073 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.211772571 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.211906174 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.211636175 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.212553157 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.211103008 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.208658203 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.209182589 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.211289808 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.208869459 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.209662221 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.21201234 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.211478894 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.210257788 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.209305677 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.210554987 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.211049522 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.210212988 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.209484153 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.213015777 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.21333664 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.211150735 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.213111779 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.210372217 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.20941106 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.213027594 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.211099675 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.209980357 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.213398953 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.213050439 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.213275191 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.210819181 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.211194196 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.213135673 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.213730418 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.211247017 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.213122944 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.210723978 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.214296171 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.213338992 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.21503989 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.214122422 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.211851068 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.212045015 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.212014087 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.211296036 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.212575714 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.214300562 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.214190829 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.212026325 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.212915379 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.21244051 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.214125867 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.213804477 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.211500502 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.21250466 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.214645545 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.211397673 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.211464104 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.214343283 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.212916953 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.214973186 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.215297476 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.213835952 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.211962998 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.215078143 seconds)
  done (took 83.576598139 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.214592336 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.215846246 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215088467 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213939645 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.215393015 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.215144844 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.215198544 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.215148079 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.214850151 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.21464812 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215202271 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.215539794 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.21448765 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.215184588 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.215418203 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.214926142 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.215292525 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215553927 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.215091732 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215713162 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.2159803 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.216299769 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.215926932 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.216035309 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.215707605 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.216230503 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.21619069 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.215845496 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215711833 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.215184342 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.215435112 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.216798525 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.216798621 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.215501519 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.216128079 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.217197634 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.215795397 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.215701726 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.216458549 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.21606225 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.216282565 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215741042 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.215646263 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.216773136 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216291962 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.215794513 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.217038255 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.217381147 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.216730608 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.215989006 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.217649772 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217310412 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216203283 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.21763269 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.217160716 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.218559756 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216981217 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2167333 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216714855 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.217422965 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.218279334 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.219641906 seconds)
  done (took 76.547849303 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218057557 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218435563 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.215667434 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.215355422 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217992678 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.214970059 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218619018 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.218520862 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218007403 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.218650131 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218126061 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215402305 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217046507 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218172008 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215866914 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215546912 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215722296 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216741886 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218793641 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216721481 seconds)
  done (took 25.493143587 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.215673592 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.219275593 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.216042958 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.216956374 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.218226597 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.216466365 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.219067534 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218896604 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21682518 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218501697 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219580248 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2195365 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217039598 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.216971068 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.219468839 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.217700377 seconds)
  done (took 20.637973384 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.2164955 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.219763469 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.219972941 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.220118807 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.21764495 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.217667616 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.220528833 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.217154885 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.217454341 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.220532583 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.219951209 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.220526946 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.219854812 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.21971777 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.217276124 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.220554159 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.218422886 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.217844798 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.219718165 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.220409731 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.217957367 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.217832607 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.220163195 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.220215471 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.218523934 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.218802684 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.218106614 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.217625308 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.219081318 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.221130692 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.21834129 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.219028649 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.21765923 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.21874959 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.221333113 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.218352664 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.220971729 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.221925766 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.220434092 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.221600112 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.2210687 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.219472769 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.222098671 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.221756792 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.219890601 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.222569013 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.219354231 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.219752479 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.219587326 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.219096032 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.222143399 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.222101684 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.222522745 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.223110676 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.222603129 seconds)
  done (took 68.240284179 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220916768 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.2218943 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219444971 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.222403485 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.222317739 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.219765277 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22157258 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.219736291 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220378867 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221600225 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22027816 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.223723171 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220358024 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.222228781 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221096142 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222453525 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220212542 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.221361592 seconds)
  done (took 23.135965998 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.221081517 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.220877506 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.222534502 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.220457747 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.220601411 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223858816 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22044249 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.222972847 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22425532 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.221489831 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222070566 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.223303793 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223963398 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.224140897 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.221317731 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220910187 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.222894714 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223673717 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.221354797 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221643813 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.224375037 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223949647 seconds)
  done (took 28.048449882 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.222653486 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.222112775 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.238777845 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.264373294 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.254658474 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.224128287 seconds)
  done (took 8.582030214 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222081256 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224173534 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.22243686 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224649383 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224094382 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222427594 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221590977 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222195661 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224963254 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223390526 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222568015 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225693681 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225783216 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22220887 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22471536 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225590993 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222472262 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223404186 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224062428 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225356429 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223882867 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226486022 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222937802 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223286643 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222406874 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223768074 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225625057 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224714985 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224199623 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226411561 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226532245 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224984794 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226967389 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223782986 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227814273 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226441113 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224247625 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227311366 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226865011 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224867128 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.226987416 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227514493 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227196655 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224693353 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226585713 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224792592 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224598583 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223955831 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224157455 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228349148 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227133732 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223855344 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227126714 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22805232 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227672768 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227840253 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225385569 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225943375 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227194917 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226514002 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224135426 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227029666 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224923521 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225521156 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228102141 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226094068 seconds)
  done (took 82.016390096 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225710656 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.225615388 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225756627 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22708125 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225909765 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226187777 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226289509 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225725652 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225984006 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225596106 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228887059 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226691835 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226102061 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226285052 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225713421 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226046431 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226291753 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226230468 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226794584 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229177508 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226674625 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227041072 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22663025 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227028268 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227025865 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229137446 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2267793 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226538052 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226935406 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227391115 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227896059 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227210901 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227016342 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.22754858 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226749113 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227308628 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227911579 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227030424 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227624679 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229665722 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227255155 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229761911 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228356976 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228283388 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227814142 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228204141 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228238652 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228655751 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228999189 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228675118 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229174513 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228862338 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228954587 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228437149 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228119752 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229200594 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228833234 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22850687 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229464891 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230213296 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228747864 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228293586 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231315248 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229334199 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229562701 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229229168 seconds)
  done (took 82.187486626 seconds)
done (took 1661.609248997 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.29183839 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.246242866 seconds)
  done (took 13.700249769 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.392429777 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.349439787 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.229830943 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.26062112 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.229565004 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.226241996 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.227316506 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.229742496 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.229412938 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.229777236 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.230244322 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.418542158 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.230096168 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.230581299 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.22991799 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.321955434 seconds)
  done (took 41.43495529 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.259791882 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.236039642 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.359666831 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.257855991 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.259229972 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.433209523 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.29250763 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.235117583 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.425994999 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.280952081 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.006911487 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.263815965 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.23453811 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.442188966 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.252972034 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.433701504 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.502122996 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.940903087 seconds)
  done (took 29.281513275 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.739750932 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.264919735 seconds)
  done (took 9.170157554 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.24045857 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.262614052 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.233192267 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.246725351 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.258712353 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.285114117 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.292436307 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.295630278 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.249341751 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.245087835 seconds)
  done (took 63.78041636 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.254863274 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.234973128 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.23642707 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.234195661 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.227455029 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.226823898 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.233631872 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.229603345 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.292792468 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.376728453 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.255552584 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.242924608 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.235893364 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.234526476 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.231790384 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.270137807 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.422385396 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.233348162 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.23277127 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.241253854 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.235628321 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.368630676 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.278876453 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.233900208 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.372884094 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.317789441 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.240714684 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.242487935 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.42119297 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.233704046 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.234982918 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.235362805 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.23780914 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.818964636 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.796925043 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.244032973 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.260871 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.244424019 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.234675395 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.413881619 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.236397501 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.243560062 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.228375556 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.789635544 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.397605947 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.356669626 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.567184511 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.237703217 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.237149771 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.302583566 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.23729228 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.237196779 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.266960929 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.024571224 seconds)
  done (took 107.346509373 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.265662181 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.727863941 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.401302544 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.248827595 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.141496346 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.010103734 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.231459278 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.545911191 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.281429117 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.231220514 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.522764215 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.776187069 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.231552961 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.238916592 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.78950824 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.330589109 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.229614787 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.127323698 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.229953242 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.233845338 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.662854526 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.256518408 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.230620002 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.397929811 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.273359984 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.723973097 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.806053764 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.708266372 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.234900824 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.231209389 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.737562201 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.240619063 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.230907644 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.232534714 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.519689767 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.618851022 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.593285729 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.236573195 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.254577921 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.232227522 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.257047647 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.721114843 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.606022204 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.232904236 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.242578287 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.726081292 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.232119533 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.233252972 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.237368074 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.444541989 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.23522766 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.235114745 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.867317603 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.236750924 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.536048092 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.298961427 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.250050919 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752806677 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.233696586 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.411490673 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.25357002 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.233100584 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.234011985 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.234277989 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.232963395 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.608603329 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.761677591 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.234671607 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.609449526 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.732490778 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.236713396 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.789654298 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.126088404 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.26319965 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.283539314 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.232480167 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.955896694 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.751421647 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.254629049 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.233580866 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.596181292 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.236129983 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.526141824 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.24950975 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.232979266 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.675721261 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.262455487 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.26671962 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.234297827 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.234059103 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.047499128 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.23422977 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.518943557 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.278814201 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.234509823 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.235223078 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.283912341 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.233861057 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.250607777 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.235520093 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.793719179 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.243479484 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.398460829 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.261042566 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.254194233 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.241192327 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.239128822 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.237554393 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.464298354 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.749039068 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.243083123 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.238243146 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.253506365 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.24305822 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.389081579 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.23910762 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.572040565 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.235521757 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.234669014 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.240717479 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.040469372 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.265726432 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.236056006 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.258248372 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.103998535 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.450073462 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.255694135 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.236491318 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.23598588 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.243205231 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.770748245 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.241202513 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.311568299 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.237883285 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.972665953 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.258567086 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.269390114 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.875394438 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.239987988 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.245168703 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.246867476 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.237759921 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.55639305 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.534844685 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722400617 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.239978088 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.264044426 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963932392 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.2587725 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.387544388 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.257199978 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.2316438 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.437261535 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.627878551 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.238215334 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.785690908 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.236955624 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460741983 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.244713388 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.57350001 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.771117999 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.237868363 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.239761392 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982768609 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900976374 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.894105416 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.237905753 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.536926222 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.245014736 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.696490787 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.239194435 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.239649876 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.853288803 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.243534881 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.23703107 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.239773834 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.237891745 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.308041103 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.414543107 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.621600682 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.245642877 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.729246299 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.296730132 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.240046874 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.248272393 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.243418557 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.590852914 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.269383751 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.240570455 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.262875085 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.240518435 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.243543112 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.74247445 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.170640259 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.243214922 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.39634004 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.908565712 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.240417142 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.241261709 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.93978214 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.622225084 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.77955675 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.297489784 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.579450202 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.24566033 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.281831628 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.081917602 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.293823408 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.742948031 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.243029291 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.240053686 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875616558 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.239502505 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.372768724 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.240074175 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.239977153 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.814454068 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.239996769 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.242289892 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.82074388 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.243862121 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.503035622 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.244792378 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.274941107 seconds)
  done (took 1093.613647647 seconds)
done (took 1359.489231036 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.24242546 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.246303327 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.231993569 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.243872825 seconds)
  done (took 26.144324118 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.2491118 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.244720998 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.245926861 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.243835973 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.247583148 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.245294251 seconds)
  done (took 8.653349822 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.335572016 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.242216955 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.241783646 seconds)
  done (took 18.995731789 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.483233005 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.621630315 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.651413358 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.663396544 seconds)
  done (took 10.597211476 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.246871011 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.245659617 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.246823885 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.249095961 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.252161579 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.251441725 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.248514793 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.248793006 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.252139015 seconds)
  done (took 12.41555238 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.598533851 seconds)
done (took 83.581158437 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.239738903 seconds)
    (2/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.255730808 seconds)
    (3/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.310891574 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.119897559 seconds)
    (5/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.439159362 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.753977981 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.257357206 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.286023899 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.241039685 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.132121245 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.53811598 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.304137275 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.271692036 seconds)
    (14/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.347372244 seconds)
    (15/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.243449993 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.258429867 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.25914678 seconds)
    (18/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.414049845 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.859241235 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.249366773 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.053142364 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.680296985 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.168309322 seconds)
    (24/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.24339166 seconds)
    (25/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.266076924 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.93245783 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.334175311 seconds)
    (28/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.285704417 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.354193778 seconds)
    (30/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.308435019 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.346813983 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.232555456 seconds)
    (33/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.082614938 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.354099383 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.679398026 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.288675827 seconds)
    (37/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.872831517 seconds)
    (38/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.814384997 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.270717388 seconds)
    (40/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.271596352 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.587518576 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.230532523 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.35980071 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.954322228 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.4989748 seconds)
    (46/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.078908779 seconds)
    (47/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.26190978 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.921942931 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.258321994 seconds)
    (50/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.702576385 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.310988942 seconds)
    (52/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.102758488 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.767165739 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.303840913 seconds)
    (55/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.252360712 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.46957356 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.044395999 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.245540175 seconds)
    (59/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.084463367 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.230831089 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.291963088 seconds)
    (62/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.255544259 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.253308982 seconds)
    (64/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.8156672 seconds)
    (65/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.264647753 seconds)
    (66/309) benchmarking ("sort", Float64, false)...
    done (took 5.616226522 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.245534221 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.909389181 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.6897014 seconds)
    (70/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.676595957 seconds)
    (71/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.742005183 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.356997051 seconds)
    (73/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.24557655 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.274496309 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.60242475 seconds)
    (76/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.261734156 seconds)
    (77/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.684632322 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.098837706 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.133257722 seconds)
    (80/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.27264825 seconds)
    (81/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.360459238 seconds)
    (82/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.569565097 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.058630168 seconds)
    (84/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.272910738 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.508594145 seconds)
    (86/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.008407255 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.484626308 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.247716654 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.273441291 seconds)
    (90/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.239422363 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.242089337 seconds)
    (92/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.774927251 seconds)
    (93/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.517488046 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.306617139 seconds)
    (95/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.355497153 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.985782356 seconds)
    (97/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.259383525 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.906849919 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.99006257 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.068994841 seconds)
    (101/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.924477842 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.711794398 seconds)
    (103/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.357836742 seconds)
    (104/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.443335195 seconds)
    (105/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.661653026 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.275894871 seconds)
    (107/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.469309185 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.257720652 seconds)
    (109/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.337942561 seconds)
    (110/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.651738496 seconds)
    (111/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.338054699 seconds)
    (112/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.543585575 seconds)
    (113/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.333734172 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.175583913 seconds)
    (115/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.276066187 seconds)
    (116/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.583632039 seconds)
    (117/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.379873227 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.354363263 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.485918551 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.270379001 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.905168865 seconds)
    (122/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.241305858 seconds)
    (123/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.29253092 seconds)
    (124/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.945007224 seconds)
    (125/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.262954108 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.665813767 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.278060973 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.282674633 seconds)
    (129/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.280335083 seconds)
    (130/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.178273412 seconds)
    (131/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.37857533 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.299241907 seconds)
    (133/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.449162888 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.374960132 seconds)
    (135/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.097861218 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.772052308 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.274127775 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.773931851 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.989698991 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.509570499 seconds)
    (141/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.939271939 seconds)
    (142/309) benchmarking ("sort", BigInt, false)...
    done (took 6.253925552 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.803388026 seconds)
    (144/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.238023246 seconds)
    (145/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.297022343 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.086844609 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.514249468 seconds)
    (148/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.298363333 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.246226234 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.875261339 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.300401107 seconds)
    (152/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.762788075 seconds)
    (153/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.141464266 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.382351764 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.278707516 seconds)
    (156/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.373898919 seconds)
    (157/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.662164219 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.089377218 seconds)
    (159/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.599001867 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.277627648 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.97636724 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.252040383 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.250053569 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.009130406 seconds)
    (165/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.64354268 seconds)
    (166/309) benchmarking ("sort", Int8, false)...
    done (took 4.278863767 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.275561297 seconds)
    (168/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.798467984 seconds)
    (169/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.260625891 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.207518734 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.249433656 seconds)
    (172/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.238131526 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.198814334 seconds)
    (174/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.237222534 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.373607441 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.261963668 seconds)
    (177/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.87480021 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.250321401 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.600004255 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.351220762 seconds)
    (181/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.975684077 seconds)
    (182/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.986569417 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.325913781 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.356630392 seconds)
    (185/309) benchmarking ("sort", Float32, false)...
    done (took 5.279618143 seconds)
    (186/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.279480759 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.267655743 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.361055043 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.396017148 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.539709719 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.698155075 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.295084824 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.269190873 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.265009016 seconds)
    (195/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.338324154 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.371245011 seconds)
    (197/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.031993861 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.347546439 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.294702374 seconds)
    (200/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.009838936 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.502140667 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.710348404 seconds)
    (203/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.964494556 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.871905728 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.257703709 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.361381575 seconds)
    (207/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.634987279 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.312633515 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.261771465 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.252730458 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.811937916 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.798426722 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.842887114 seconds)
    (214/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.409397695 seconds)
    (215/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.729934913 seconds)
    (216/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.58660158 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.643936348 seconds)
    (218/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.28963079 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.352081387 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.891516391 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.478772162 seconds)
    (222/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.731717189 seconds)
    (223/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.267473631 seconds)
    (224/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.576685641 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.91891489 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.319172058 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.15283024 seconds)
    (228/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.336097063 seconds)
    (229/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.756112323 seconds)
    (230/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.656477624 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.730316824 seconds)
    (232/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.279678714 seconds)
    (233/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.36514755 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.270131861 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.936086626 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.27830334 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.255503648 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.779687138 seconds)
    (239/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.337679686 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.261512736 seconds)
    (241/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.225565557 seconds)
    (242/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.324720839 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.29656707 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.68435124 seconds)
    (245/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.309952872 seconds)
    (246/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.647884143 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.265886377 seconds)
    (248/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.949445403 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.259368964 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.271961142 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.283296725 seconds)
    (252/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.710547241 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.094141997 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.267024118 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.368056026 seconds)
    (256/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.846939523 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.26302884 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.256802678 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.323799553 seconds)
    (260/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.241671071 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.723775414 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.498913548 seconds)
    (263/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.686362558 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.215159651 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.256969547 seconds)
    (266/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.452126418 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.283368209 seconds)
    (268/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.341445234 seconds)
    (269/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.131914732 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.270926908 seconds)
    (271/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.283046482 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.6397153 seconds)
    (273/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.827781999 seconds)
    (274/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.256565511 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.925543721 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.90979746 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.257556681 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.755974308 seconds)
    (279/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.26813934 seconds)
    (280/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.284593621 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.886205072 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.064059855 seconds)
    (283/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.784805033 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.598639744 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.362710983 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.341525817 seconds)
    (287/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.005464933 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.390516489 seconds)
    (289/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.693107655 seconds)
    (290/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.383796216 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.102578063 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.257599306 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.201518745 seconds)
    (294/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.746898952 seconds)
    (295/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.316013676 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.985176331 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.300709653 seconds)
    (298/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.589057081 seconds)
    (299/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.363447862 seconds)
    (300/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.379672459 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.456212256 seconds)
    (302/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.924500477 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.33625626 seconds)
    (304/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.274962075 seconds)
    (305/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.341996409 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.28242476 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.689381102 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.631465627 seconds)
    (309/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.257182261 seconds)
  done (took 914.679038263 seconds)
done (took 915.85467502 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.294179442 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.286166907 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.271812124 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.292869955 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.38251433 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.299429276 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.281398013 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.274557597 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.319032352 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.320739506 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.269233326 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.297780456 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.272307626 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.269991058 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.270586664 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.284132451 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.459788748 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.272855498 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.287716174 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.281638806 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.287252425 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.269841163 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.321223235 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.299728542 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.276323847 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.276048363 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.274566854 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.291307872 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.382682823 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.274016264 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.275747921 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.283867978 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.456841963 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.272507602 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.268377198 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.292676467 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.281697393 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.282513608 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.276994671 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.304797108 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.858639835 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.271956615 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.273807042 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.273900743 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.274637586 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.278038739 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.273916901 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.281329866 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285802881 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.286798998 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.847368919 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.287931029 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.275611995 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.274504257 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.284395401 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.272790873 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.278765983 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288674238 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.291924632 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.289157513 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.399524718 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.279664268 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.277707073 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.289733639 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.280499087 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.890447882 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.270482325 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.279450317 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.863327885 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.280494385 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.889160565 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.282661394 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.276454681 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.287779671 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.305800932 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.416639046 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.270444846 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.273886362 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.280982548 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.271852419 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.285425209 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.287014155 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.280096998 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.276374629 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.2884308 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.305607578 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.287124955 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.276042088 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.285075519 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.294432259 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.281788787 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.286107761 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.278694033 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.27245527 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.286631842 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.280024622 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.276954574 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.27787821 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.281571095 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.286493244 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.865811491 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.292050478 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.273968777 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.273566214 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.276294859 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.289105182 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.869404054 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.276971513 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.297699992 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.324638373 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.279519668 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.407560235 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.279753755 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.292718993 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.286650099 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.280381614 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.272476215 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.410138481 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.857609274 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.291732522 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.279752401 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.275737486 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.291946262 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.279239899 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.273563397 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.444798568 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.280635214 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.290774433 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.397540378 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.290169614 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.308614863 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.275046877 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.281662428 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.305569066 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.293214405 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.308024179 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.281274059 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29301227 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.293848727 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.274930748 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.288258018 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.288527151 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.279312162 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.285136226 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.274463467 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.311813629 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.289480731 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290485552 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.29995323 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.398990836 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.276855386 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.439533405 seconds)
done (took 218.669923262 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.336248378 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.270912836 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.365086877 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.274441482 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.376146095 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.373904149 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.272297645 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.272957359 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.271712446 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.651535419 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.272165909 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.272618221 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.27114408 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.271935786 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.356446516 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.274425018 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.272119124 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.61540804 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.274982131 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.344837347 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.273999284 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.27300264 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.274736453 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.653623382 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.27039384 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.271767759 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.351904824 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.275879501 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.619779193 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.268599209 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.272539684 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.619393155 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.364040113 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.292272138 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.285172754 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.283659575 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.378207265 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.294787896 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.355688441 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.357092258 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.366761417 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.313935828 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.269548699 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.276477816 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.277880432 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.276194235 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.27461605 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.303690949 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.275346387 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.274717316 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.618033441 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.28633338 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.274721011 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.274329546 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.275220927 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.305846842 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.274833486 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.277258659 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.365770422 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.278028205 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.33900354 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.656454166 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.654828485 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.277837681 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.275485074 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.275702001 seconds)
  done (took 144.552141852 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.342612125 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.349183824 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.395932593 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.277588337 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.325685586 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.398256491 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.278125275 seconds)
  done (took 10.573458612 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.282577082 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.277655393 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.327462622 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.32647466 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.276555945 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.424631432 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.277228051 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.28859636 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.274428628 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.330607169 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.280424276 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.278941544 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.285066857 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.275828891 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.325066865 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.287658791 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.392611868 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.278542154 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.280247905 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.429544298 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.276441142 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.285846578 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.329967551 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.288727833 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.282113187 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.28465584 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.848760955 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.280369512 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.277797061 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.280540862 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.277275252 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.317346537 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.280631338 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.277387672 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.277831161 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395188635 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.28058137 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.278216303 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.280854527 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.276652845 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.280363331 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.280724007 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.280996844 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.278187791 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.281007006 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.302374639 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.280959796 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.281148775 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.280076201 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.281820665 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.328833269 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.280828449 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.27859719 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.277337213 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.334320908 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.286722785 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.281507844 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.278593504 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.281232522 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.278692879 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.431064349 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.327872071 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.280745973 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.328627387 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.281419801 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.281307228 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.281052286 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.281310534 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.335167603 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.28187405 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.329590987 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.278692798 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.435826614 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.303337437 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.283125402 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.283561475 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.283322205 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.281145957 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.277555124 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.286931357 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.279533864 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.282855244 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.287025324 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.279895447 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.280499747 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.383488082 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.390399965 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.279477904 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.293524423 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.287305081 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.279852611 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.334686899 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.283282514 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.281429616 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.333092337 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.397735384 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.334324371 seconds)
  done (took 147.962575357 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.286643129 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.29016352 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.283402969 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.297836023 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.283713623 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.282295906 seconds)
  done (took 8.934711828 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.285832719 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.284823723 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.284010449 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.283041803 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.284128244 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.285269695 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.283692161 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285198432 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.289102498 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.283796475 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.285206028 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.288156658 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.286676786 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.283326278 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.285651848 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.284299511 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.284763049 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.281512913 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.284281678 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.28452132 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.387896182 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.284269504 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.284883509 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.285176626 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.290129955 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.28516938 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.29126369 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.284677851 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.284073937 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.292572482 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.287503888 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.286495128 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.28533939 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.289565673 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.289735087 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.286422599 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.289606776 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.28868941 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.282344179 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.287686402 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.288325697 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.284943824 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.285481694 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.28903788 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.286766967 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.290507281 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.293670054 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.292052305 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.285924442 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.289115172 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.288749031 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.285562399 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.287299051 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.28880733 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.287359692 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.289526998 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.294081838 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.287558032 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.286045422 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.286878268 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.288925005 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.287654689 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.287185765 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.291680244 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.28354675 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.289242362 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.287072931 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.2916661 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.287412281 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.286796666 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.291352647 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.28492538 seconds)
  done (took 94.980245676 seconds)
done (took 408.204718263 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.378033645 seconds)
  done (took 7.592645513 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.411867688 seconds)
  done (took 7.62905866 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.986183014 seconds)
  done (took 24.208488754 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.339272104 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.372683479 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.29515618 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.286304724 seconds)
  done (took 26.509132762 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.463692427 seconds)
  done (took 7.679435817 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.285259681 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.281045341 seconds)
  done (took 13.784088196 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.31231219 seconds)
  done (took 7.529267431 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.320010319 seconds)
  done (took 7.542368558 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.290119242 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.299225602 seconds)
  done (took 13.821503054 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.274681322 seconds)
  done (took 7.491764989 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.532221485 seconds)
  done (took 8.749332566 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.282591451 seconds)
  done (took 7.500555394 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.3353271 seconds)
  done (took 7.551630602 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.100227701 seconds)
  done (took 10.316913826 seconds)
done (took 159.120468721 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.28112731 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.282407164 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.28251929 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.280636539 seconds)
  done (took 26.342890523 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.32243871 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.322199414 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.323913205 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.333260565 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.325440899 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.793637689 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.315192138 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.315246827 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.33384988 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.326213583 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.325404018 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.324774154 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.32400909 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.315635294 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.324819565 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.324195662 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.333946972 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.32684191 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.314877611 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.326401547 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.290018064 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.334826631 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.327537062 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.290307491 seconds)
  done (took 33.412811784 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.486705924 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.359034732 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.442345628 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.341173689 seconds)
  done (took 6.847802779 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.342397159 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.344979962 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.355847158 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.394808833 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.419622873 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.352866327 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.317001267 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.311365469 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.298195708 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.343974796 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.419397227 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.359487978 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.42729203 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.289942464 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.477061901 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.29063263 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.290462545 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.342112319 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.393289732 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.417224351 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.2904212 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.342599889 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.347024468 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.359864438 seconds)
  done (took 33.747551948 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.288655572 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.298193533 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.295991481 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.288886956 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.289199706 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.288971261 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.296322466 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.290420581 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.310755361 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.290756987 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.290347046 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.289393167 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.289622208 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.289278542 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.289333938 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.30331413 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.304041078 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.28964415 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.293404155 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.295793151 seconds)
  done (took 27.091618694 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.283925546 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.138024728 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.635367093 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.540096952 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.285110763 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.283892531 seconds)
  done (took 27.385461812 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.370944575 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.513935235 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.289920528 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.711625595 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.791730337 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.295920064 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.291106708 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.560110212 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.921895241 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.925516733 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.356657647 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.3627595 seconds)
  done (took 19.61392642 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.285272332 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.289081652 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.298150702 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.305202962 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.353271883 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.295484562 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.298259913 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.282910529 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.35818122 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.357309007 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.29436536 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.354930601 seconds)
  done (took 36.993039645 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374191236 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332004597 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.406448714 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.077172388 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.011135567 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497956578 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.07883836 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.724957639 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.292376619 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561274402 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290342782 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379714263 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.541839367 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303798771 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.290746772 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.382097713 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513349833 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835194174 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289487004 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.664284796 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316884614 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.292381661 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.865550332 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.322860743 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.499078354 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.265876553 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.549072726 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.06586176 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607093306 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.299490616 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298811083 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286723287 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563083597 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989119789 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384072968 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298230739 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.015074435 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.833782469 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.272428825 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.742734197 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309374856 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.294989418 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299318168 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289409868 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.222520156 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303756497 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.742560207 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.294584553 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.000219154 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.288989474 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299755099 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383939707 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.292023561 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.860280841 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354868429 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.295509634 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.286056359 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295354483 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858023559 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.227365935 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299999598 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.227925582 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.697697481 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.763562477 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979086518 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.392316723 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.294131607 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.29299809 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225649299 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.763408466 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.311873973 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4375229 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.316068148 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.939863225 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08664537 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.309517368 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.220935964 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9022457 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309356844 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.229265444 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.518552954 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068720559 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224832999 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.23819397 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.22504164 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090085899 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299862594 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.778033454 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.299502955 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.728719191 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.302927725 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308784528 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315436711 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.515553447 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.175306978 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291710225 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.297702099 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418901726 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312292802 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.733475905 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227007383 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.296047798 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548661811 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.503879891 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292320816 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.403172211 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50607998 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305849509 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.307581961 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.30681031 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.307904996 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.923740539 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.304407539 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.257621375 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314143935 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.069222923 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122236842 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298947305 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.397350261 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.292286651 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562955767 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.146473443 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.189617953 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360216218 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297623352 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.292871785 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.788026033 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.145825447 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.451281844 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.294612599 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302383649 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.307773148 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.29368063 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25276458 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.292133032 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293939262 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.074447446 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.516318289 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292887386 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591376718 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228395687 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440434533 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.30320304 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.51650399 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.597043194 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.291821853 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555491225 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296244749 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.303924531 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.309698959 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312835736 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39060534 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316781675 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.293670764 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.571737032 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.298441619 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.298927842 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.796170979 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.077219954 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301384695 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.299351394 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.199848494 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942975695 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276421895 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.294350153 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184633514 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.309170448 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364406543 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.301534718 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.305485635 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.37553894 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.136279227 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.300041219 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.294362832 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523535831 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.306376257 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.780911512 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381744509 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.505207809 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.947526406 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313481221 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.230059946 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.006553195 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.988570858 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296314028 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.48428951 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.295502405 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305623803 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307231418 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.837601709 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94389347 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302814348 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.69671919 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.307274658 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307411316 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.302251262 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297542142 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.368672199 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.265473028 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314888839 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.311960217 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441035138 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.311767255 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.231910162 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.813940302 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.302808308 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.297228034 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.072632509 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331237759 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.698115566 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79911763 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559960578 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.133759905 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.308946388 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.818371924 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.335577565 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.300798089 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303948128 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303731435 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.338558505 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306403984 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.309268826 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.775132419 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.741647729 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86575014 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121110158 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908802779 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32305658 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.308870917 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.185511624 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.747398305 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233687068 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.954326278 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512548153 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.744994486 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258082255 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510780103 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.615081732 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169900064 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314077769 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527276023 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328146037 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.30270514 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.316112988 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512030925 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335805399 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.315080278 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.229593544 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.584475553 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544055357 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301871192 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38516713 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.742260412 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317522744 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.08168649 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.298944687 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.766290153 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48728145 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.845788662 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.694528321 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.314285846 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.310253947 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790296976 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.301745509 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.830018501 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978802318 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.311194252 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.516768788 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237646387 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.311801966 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.311116733 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.302345953 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.834439586 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.299257563 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.571476522 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.311761532 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234177922 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.301060324 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891855894 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.169870353 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.30834981 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302297343 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14650638 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30670632 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626444665 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.302346008 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.372210176 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310247858 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.236833481 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.23649489 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.995244198 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.312208187 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278313946 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868095817 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.688761115 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.316134594 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338270567 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14973927 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.558540428 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.316498917 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954315599 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532961089 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.127333096 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325413162 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.403207658 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308786935 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.293993673 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.200577839 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.538353921 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202099898 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.527060976 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.440135972 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.209459584 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.301357211 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.515975828 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.19968644 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320758044 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576306578 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.015027945 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.30591614 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10876733 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330210488 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.303474899 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.319684407 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.71316443 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.310275168 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374833157 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.315434783 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.316623984 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.315977526 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491502795 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313720356 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310957306 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.318983944 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399246756 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.312304858 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.331280594 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.079237559 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964427939 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134323999 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.964089354 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.322587328 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.305184959 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312669154 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24085628 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453425438 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.835089334 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578517087 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435537731 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.779691174 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32773643 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310712892 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31845089 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52097356 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579983421 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.179856092 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314244816 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.968767309 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.188761959 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.317470551 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.517036535 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87583941 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937455812 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425045663 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321654754 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.749861291 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580896673 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396628002 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306963982 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.896798571 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.31325514 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.778010194 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.311885843 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314658894 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458247857 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316154627 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015058867 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.317006431 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.462872924 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.079891858 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.748938355 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.567375802 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.877763566 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.319917001 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966649586 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106222673 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578734542 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377363208 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316989603 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.416412377 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453089943 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.320425657 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.194119597 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306343256 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149767902 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.017546376 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.317269092 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967376552 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579235929 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.304703695 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.320664928 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335228816 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.31820798 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.532003108 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114332091 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531696538 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318165126 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.317166454 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.878630952 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965824111 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32189823 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243705778 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.313102104 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576064181 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.545761878 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333918657 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.762041942 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.019661898 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928931243 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.28068351 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33039623 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324479445 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106554895 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969523955 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.392258269 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872905125 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.967803046 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315060811 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584821007 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.314186454 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.310411656 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585929209 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.314464795 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.317772188 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320465351 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.969590052 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176146975 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.320619912 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.741849053 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.251026557 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.536357541 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972359634 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247473936 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311680831 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.510469116 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.311933354 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441817195 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.322602257 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.31678945 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317189082 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.043805016 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596010254 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.317095025 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.308078914 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.309765088 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.316634512 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318258135 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562362101 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316074584 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.987303426 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.661043649 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.56665881 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.324008858 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.295723047 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.314963524 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313037924 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.034427652 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.289505157 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.871660068 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943583182 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.326536678 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.322249725 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.315788213 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.529064358 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524349922 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311342605 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328520159 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311222954 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.329337053 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.218178649 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.078006824 seconds)
  done (took 1583.470864602 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.315880148 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.341759345 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.333968026 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.321582002 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.343475253 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.383622118 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.344794022 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.403421345 seconds)
  done (took 52.033682502 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.328286813 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.47561776 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.344891663 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.318927247 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.321159886 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.319854926 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.825405003 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.328873603 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.321455614 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.322449741 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.324242871 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.327653879 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.037201791 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.322196921 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.326736415 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.321708393 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.325089269 seconds)
  done (took 65.143433897 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.319927794 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.915655482 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.36628985 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.314541758 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.101617402 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.328758171 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.076410539 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.338173944 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.31812699 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.321135111 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.974735367 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.362048413 seconds)
  done (took 80.98518497 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.321947055 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.320654572 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.321346857 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.32046238 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.321304396 seconds)
  done (took 7.852858177 seconds)
done (took 2002.138259871 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.562809031 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.115140989 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.042927103 seconds)
  done (took 5.405382739 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.462355227 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.510442273 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.669150214 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.667042146 seconds)
  done (took 7.556652803 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.594378806 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.69210818 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.51026669 seconds)
  done (took 6.044188116 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.93168605 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.329402815 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.461839764 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.314443346 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.316826953 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.316854171 seconds)
  done (took 20.197814212 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.319257096 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.322392786 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.31953527 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.322843277 seconds)
  done (took 6.533136276 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.300901297 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.022638433 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.301340959 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.316668008 seconds)
  done (took 18.190984118 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.068365058 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.078246366 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.062189605 seconds)
  done (took 7.457194486 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.323870863 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.158875307 seconds)
  done (took 9.731292614 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.633797109 seconds)
  done (took 2.885611046 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.451656343 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.650837516 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.508195508 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.408757113 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.499865395 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.729894373 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.21538463 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.722958472 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.394640127 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.834253166 seconds)
  done (took 29.667558408 seconds)
done (took 127.20221439 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.583934314 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.336873239 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.517767239 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.555636599 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.553587587 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.517166795 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.603324707 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.521765272 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.06624372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.053647436 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.560244852 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.57995807 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.553872822 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.338017025 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.552473084 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.343593642 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.556311384 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.623836344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.246147985 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.32648147 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.604483038 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.192755733 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.3891583 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.20839669 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.549719895 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.467626826 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.792226304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.344018321 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.329597144 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.819075332 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.469089433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.316856934 seconds)
  done (took 195.725199717 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.317093571 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.321569439 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.317189398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.33451701 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.316480845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.318398413 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.333978654 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.337799255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.335393888 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.317106155 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.316586368 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.328360568 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.319688903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.317338435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.318201025 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.317824419 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.324029395 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.325102719 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.329543226 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.318331247 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.318696993 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.333843732 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.317867206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.317274284 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.317234599 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.317911913 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.316183894 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.333373341 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.317817304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.325399625 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.318006427 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.318142093 seconds)
  done (took 203.568629698 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.331031613 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.325721269 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.318605433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.323764996 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.318290911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.320423786 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.321324931 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.319889702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.322819797 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.31924578 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.327192297 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.320721777 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.342010873 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.318238904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.339410104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.319111921 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.33056313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.321881938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.319330544 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.323223921 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.319654489 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.31959928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.333792102 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.319659388 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.322440688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.320281723 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.330932519 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.320622261 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.318948617 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.335727781 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.322554897 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.32018608 seconds)
  done (took 203.619624862 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.517833311 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.328078816 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.329459603 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.265326927 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.329157547 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.327863662 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.32539464 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.527095509 seconds)
  done (took 14.204873121 seconds)
done (took 618.366193698 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.80054114 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.500191176 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.534243589 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.349960789 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.180218572 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.350431908 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.349456 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.535512731 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.28740883 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.538844581 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.691721614 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.345034976 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.838631551 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.34731417 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.619695568 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.454330755 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.271059365 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.391071019 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.689044768 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.94860585 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.626566079 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.918708444 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.535842221 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.297827224 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.843564769 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.9178214 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.145583313 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.273413485 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.350389917 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.691180428 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.144895999 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.407591055 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.416428931 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.395505755 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.452438039 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.433174713 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.385116635 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.395277413 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.539429182 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.678772583 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.945392205 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.111057933 seconds)
  done (took 93.185015468 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.318452634 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.317474258 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.317164096 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.319529449 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.320137167 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.318305705 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.317304766 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.317938833 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.317402688 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.318313171 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.317424361 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.320513471 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.318150683 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.320472837 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.3187272 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.31762587 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.319933361 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.32035498 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.319226222 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.319119194 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.318537266 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.318618109 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.319288403 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.318863294 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.319518563 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.32026415 seconds)
  done (took 35.546331704 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.332168444 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.595097964 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.776722867 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.337711296 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.331226209 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.33575612 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.419984393 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.333183736 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.335200564 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.335933271 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.512493546 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.335676919 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.37196074 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.802805047 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.333831284 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.33294293 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.33374918 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.331583235 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.60496938 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.342723321 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.421270152 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.334974062 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.421170127 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.343589644 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.335636409 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.334066657 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.338352389 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.877518855 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.334414812 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.512999766 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.248981914 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.422550548 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.839790721 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.787905132 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.255298056 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.338927839 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.335380911 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.518806665 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.335075674 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.33410585 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.421087626 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.334984063 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.7877781 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.996471296 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.353251404 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.343660885 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.901763014 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.518316369 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.6177949 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.342150774 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.811600464 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.337122345 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.33697554 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.336858854 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.616771227 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.341825926 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.335353901 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.94101736 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.358531636 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.423217363 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.338010441 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.335949035 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.612407323 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.336316403 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.608650067 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.337532929 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.345398131 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.336555449 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.788154908 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.336695486 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.019518593 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.353066392 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.337052448 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.513350695 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.609375943 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.936719486 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.339566795 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.617311213 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.852395621 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.422483872 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.340283257 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.869136956 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.425189426 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.339822571 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.339046838 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.338411849 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.337970419 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.383984769 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.421355289 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.940199818 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.0126358 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.965293425 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.445432604 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.351279914 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.336977003 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.942911885 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.35831505 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.338908473 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.78377349 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.022976671 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.359373994 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.347137736 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.007962234 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.358001605 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.426278827 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.343453977 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.802724059 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.33781579 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.385882948 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.339134994 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.344534559 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.341023419 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.426549532 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.341831779 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.339704019 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.98946299 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.542570096 seconds)
  done (took 177.530361906 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.347620904 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.331054291 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.349185134 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.331649245 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.332024207 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.337809614 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.33193071 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.331472626 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.338481421 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.331936784 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.333092653 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.333764254 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.33296819 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.351080689 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.342735241 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.338917689 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.942992763 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.33333417 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.330626273 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.333265162 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.161092907 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.336864465 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.332191839 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.333070348 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.333480166 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.334805971 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.357194209 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.337250621 seconds)
  done (took 152.126443523 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.34047624 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.012190927 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.346632967 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.48864766 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.363826321 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.338224913 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.486830526 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.404575232 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.340855501 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.338095518 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.339562089 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.687703022 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.342081386 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.92646603 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.559913875 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.489442105 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.926521991 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.341856471 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.33810136 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.339698864 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.491298307 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.352231735 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.684907245 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.984187932 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.343198255 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.983779566 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.33054872 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.341993526 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.33992654 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.98765119 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.340168235 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.703293173 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.433077354 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.409190714 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.987880133 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.941361864 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.93448391 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.508043459 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.3428074 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.338987048 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.341362719 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.331360558 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.025769339 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.349560346 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.34257877 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.020279951 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.365579586 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.342705956 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.351518157 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.340318059 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.408067657 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.40997646 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.711649212 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.036901269 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.432596812 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.363088332 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.493346412 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.757637888 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.3454851 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.929513231 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.330165542 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.028736415 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.350507732 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.330644929 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.342466288 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.347270639 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.517196344 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.497148826 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.931619865 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.342986965 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.931892414 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.518162932 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.346259814 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.342429632 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.343854894 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.030172934 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.93777081 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.519134171 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.504689346 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.570297653 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.333342193 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.343240545 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.332656928 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.431203168 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.343943791 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.033107015 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.936901301 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.34535134 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.345388488 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.345097842 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.344833305 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.546185598 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.031824213 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.437571771 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.929405335 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.729151763 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.717067049 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.35128965 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.410137646 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.34323955 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.71270976 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.350439096 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.408927439 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.824716274 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.713452698 seconds)
  done (took 163.204565164 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.614971225 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.641940825 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.440967073 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.467986541 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.008796345 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.94677707 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.743205685 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.475947896 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.462399897 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.605369166 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.635573684 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.433441569 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.537614306 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.424488629 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.127859805 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.423549934 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.445260865 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.473951704 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.450379653 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.426156164 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.023301274 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.643378549 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.531705184 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.455585704 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.44946217 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.195389157 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.936628109 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.940109319 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.539204794 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.807442004 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.91798931 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.526526909 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.43319484 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.10591239 seconds)
  done (took 66.564047728 seconds)
done (took 689.409931347 seconds)
SAVING RESULT...
DONE!
