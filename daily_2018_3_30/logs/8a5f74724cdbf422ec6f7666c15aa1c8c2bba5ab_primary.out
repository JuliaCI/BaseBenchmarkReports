cset: moving following pidspec: 15375
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.604968448 seconds)
loading group "string"... done (took 0.526154556 seconds)
loading group "linalg"... done (took 9.539661428 seconds)
loading group "parallel"... done (took 0.174228278 seconds)
loading group "find"... done (took 4.52793557 seconds)
loading group "tuple"... done (took 2.111860875 seconds)
loading group "dates"... done (took 1.4022468 seconds)
loading group "micro"... done (took 0.201078407 seconds)
loading group "io"... done (took 0.527972458 seconds)
loading group "scalar"... done (took 59.178080612 seconds)
loading group "sparse"... done (took 14.837568557 seconds)
loading group "broadcast"... done (took 1.843816589 seconds)
loading group "union"... done (took 11.425729331 seconds)
loading group "simd"... done (took 3.871057216 seconds)
loading group "random"... done (took 14.061238753 seconds)
loading group "problem"... done (took 2.26943349 seconds)
loading group "array"... done (took 24.426065081 seconds)
loading group "misc"... done (took 1.184106328 seconds)
loading group "sort"... done (took 3.704629854 seconds)
loading group "collection"... done (took 22.208955116 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.702989979 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148043742 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.256883039 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.208116305 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277480974 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168195567 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159623949 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.172562941 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.680386894 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213737098 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140495626 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435014451 seconds)
done (took 6.34290304 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.262023297 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.2428724 seconds)
    (2/2) benchmarking "String"...
    done (took 0.189647501 seconds)
  done (took 1.153812713 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078020268 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159284294 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109670544 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096336235 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094343818 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110661647 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095424413 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111443074 seconds)
  done (took 1.502577966 seconds)
done (took 3.721999815 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.522781777 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.885576803 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.512419428 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.182080719 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.316915198 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.307791251 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.267529232 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.22499242 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092756512 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085663391 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177975389 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.423446665 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.387328515 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.955602828 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069698091 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095803423 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.156536213 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.785951906 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083202193 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.124413893 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.517485444 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.214932522 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116582745 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.10581161 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188647678 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136098995 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.140025365 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10249996 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.663687629 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132847478 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.215535242 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085532981 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137897045 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.167747498 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.232356341 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.096761125 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687206336 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200430101 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097617861 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103886111 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.690295102 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.121980791 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.205971494 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108268151 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068736011 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.161964155 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117612307 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.081513609 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097728126 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.108143688 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16486998 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.438061231 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108172288 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.192577199 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09566133 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688595882 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099211502 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276711594 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.129361101 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098631283 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094703847 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.092263757 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161587754 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09575575 seconds)
  done (took 20.263228162 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.171439568 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.188608263 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079748946 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159928403 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122405001 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100071943 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085664932 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080112091 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.129230684 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179539221 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.145094472 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.192871701 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078916149 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091853657 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.171869551 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230643313 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.127344315 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105626225 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089997849 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108258737 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123681247 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114772172 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093584922 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092220858 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173584766 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205089901 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109525558 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124463508 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090997596 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09873434 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14630318 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14994364 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097726413 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.092324262 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.193085885 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110759142 seconds)
  done (took 5.399229036 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.246588233 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.107512874 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.252127681 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.201897347 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.155163576 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.186698243 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178509974 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.295052859 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.230127048 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163441208 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130636785 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097207905 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080947393 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081421973 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096964829 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.349529126 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.151820192 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.194725801 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189694687 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099623623 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100554328 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36568099 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105516783 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088757459 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113944489 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064947207 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.228650897 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096273529 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.066844004 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085826448 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.12370109 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116265411 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213019973 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126849169 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122126093 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114412484 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.0884574 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22542763 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121449568 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081157565 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.114842953 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134939407 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114128288 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.114146158 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.127720625 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219138983 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.089643943 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11400638 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.046492186 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198654543 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.178324227 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.108004984 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295086973 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111511061 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.123007766 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094246665 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.797382109 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118027179 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085390626 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.1025512 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099841785 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082589071 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.475280687 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111379684 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.299736524 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086694203 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159396257 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099710721 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121398555 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08771702 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104164351 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111851967 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.089943577 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098158324 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089081554 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080476622 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.109934926 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112506685 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102580658 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083052729 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149362227 seconds)
    (82/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116198074 seconds)
    (83/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110633606 seconds)
    (84/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125447449 seconds)
    (85/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091615413 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087474851 seconds)
    (87/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131357947 seconds)
    (88/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083687468 seconds)
    (89/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.107730925 seconds)
    (90/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168041721 seconds)
    (91/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.120641956 seconds)
    (92/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113829263 seconds)
    (93/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118615264 seconds)
    (94/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144846376 seconds)
    (95/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.090576804 seconds)
    (96/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.261415402 seconds)
    (97/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.10105511 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089653175 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123441995 seconds)
    (100/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103100526 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.178972568 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129507235 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101856159 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081808669 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104406715 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086257608 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079547052 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.10137977 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148662416 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090135986 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098180033 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.091075621 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084899843 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112264071 seconds)
  done (took 28.827531604 seconds)
done (took 55.216119143 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.424958901 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082220323 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081266659 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102636723 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082575289 seconds)
  done (took 1.575590189 seconds)
done (took 2.354154503 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314107389 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201022714 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088556397 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191396741 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088153095 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.199965821 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186253596 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102695353 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209873256 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086121329 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194663058 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089277601 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107477514 seconds)
  done (took 2.854962978 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10602471 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109990103 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.108962815 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.12659391 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089732702 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106509948 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.12670886 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11288497 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10573136 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.119356831 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090573729 seconds)
  done (took 1.979571532 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102221048 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108692471 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096804368 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123107985 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090365779 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103066313 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122514667 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112340834 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104142589 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118979389 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091532475 seconds)
  done (took 1.952853606 seconds)
done (took 7.562763199 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.243136738 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.961032953 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.19229644 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.249445864 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.36356015 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.305381697 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.618443629 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202294963 seconds)
  done (took 16.039073961 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.128740801 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.198248066 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091785886 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098488685 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.113089707 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097356965 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099595902 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.113426582 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092970145 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093150826 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092639346 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.115945864 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099839888 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.096000543 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.117266718 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100720815 seconds)
  done (took 2.592585629 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.149834828 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.147551802 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099296439 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100235946 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.114529548 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100097638 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103807529 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117626517 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094998326 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097394 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119568504 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100456628 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098593446 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.111182215 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100903802 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119338567 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.114030746 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099396538 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.119765651 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.120009259 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103493402 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100909638 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.119302237 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105434086 seconds)
  done (took 3.519544285 seconds)
done (took 22.934695178 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.153422519 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107894033 seconds)
  done (took 1.045178206 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.167919115 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184491215 seconds)
  done (took 1.142060833 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.118677861 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095545581 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.143916562 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108907911 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096330616 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.114351347 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121845542 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.114796868 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096935967 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097404507 seconds)
  done (took 1.907015799 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.100444513 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098348137 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.127284211 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.176453767 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.124357465 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099139914 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.100088295 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.118820504 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10297575 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094922752 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.120225249 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116224873 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100548681 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.133594987 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101122685 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.118466293 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105866154 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099198382 seconds)
  done (took 2.837679596 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.096206116 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097855714 seconds)
  done (took 0.993264391 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097539861 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094149965 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095956184 seconds)
    (4/7) benchmarking "year"...
    done (took 0.114947555 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096203869 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094339839 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.113786949 seconds)
  done (took 1.497176332 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.533267311 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236422783 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.372525286 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073862091 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.127634122 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.460507941 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.105678771 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072069215 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092067797 seconds)
  done (took 2.903207617 seconds)
done (took 13.121197691 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096183089 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.246921402 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.641157693 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114360019 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091388736 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162852117 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.323330966 seconds)
done (took 2.477035946 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351005776 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.165918779 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085677218 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093095707 seconds)
  done (took 1.485541879 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086681545 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103177014 seconds)
  done (took 0.991088056 seconds)
done (took 3.284643371 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091999291 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.091651599 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.140336221 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.091404154 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090354243 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.090036164 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.111513974 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091936102 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089897256 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.110618188 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.090689982 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09124668 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.090709719 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110266036 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090904236 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090948837 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107825584 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092109839 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09112371 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092319058 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110295555 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090948717 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089977902 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.109144266 seconds)
  done (took 3.179296493 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.115213302 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095715789 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.116554257 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099532732 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09947927 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113643254 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095418613 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091372889 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113315693 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093857498 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09506771 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.111927672 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093051377 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095153741 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111063248 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.09677321 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096251653 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091718647 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11109502 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095370893 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094538728 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110571646 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096226601 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095110452 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113120684 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095506857 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092313134 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110974719 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095046135 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094030246 seconds)
  done (took 3.832715282 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098461426 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08928809 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09221467 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11772107 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089530209 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091120972 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105333171 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091945693 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092832153 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091227198 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111222258 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09169134 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090567207 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110433465 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093509594 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093744502 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117622942 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.09227298 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091334825 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091557245 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.113308152 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091644778 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090942065 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.110628072 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091272595 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087916968 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09163687 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.110699392 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092886177 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090812032 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112394153 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095403724 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091547593 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.118673823 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096702773 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091711786 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.116193821 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088848203 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093304248 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08826482 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106713338 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092269682 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090684323 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.116179471 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092996985 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092962525 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091031155 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.11073567 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092319753 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093360737 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.107785649 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092417839 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09374697 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.110967574 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094937101 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089297759 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091289883 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106127627 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093026943 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092519843 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.105998947 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089725315 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096616356 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090873182 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123989873 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09897787 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091253481 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111367913 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09300891 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096110211 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111350555 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.102143581 seconds)
  done (took 7.88161295 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115346252 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100299975 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110482241 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093418732 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093273987 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090988835 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115785633 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093602897 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092305085 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116518816 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092584604 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093947236 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111882765 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092937591 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091997875 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110593603 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099375919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09147075 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.110230282 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09554653 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095069505 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098273099 seconds)
  done (took 3.017797511 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.242847443 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098641549 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14126064 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124599954 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110413455 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124806441 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097561202 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099089966 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115900662 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102535576 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100961424 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115267247 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110625763 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120414408 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101293084 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102564815 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114489351 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102962252 seconds)
  done (took 2.942743449 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10735166 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095714316 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.15526731 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095202059 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093898638 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.11295408 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1000936 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113596702 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.114776295 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094719389 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100378886 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112708681 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095340588 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09407758 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111815492 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095873025 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094623652 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111766179 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101544339 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099592274 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116917027 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102605763 seconds)
  done (took 3.135410265 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114760724 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096927083 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130007336 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097178885 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093169291 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.11161557 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099196643 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095627839 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.120758152 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095298263 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094916843 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093240068 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.12726517 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095320591 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09879822 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11382891 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095942766 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094273395 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112752379 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093860787 seconds)
  done (took 2.896043215 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.201607729 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129304262 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109291087 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117551099 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129277423 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110966034 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135553272 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110478537 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110660713 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140627553 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11390217 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109551106 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137448531 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115534234 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128779107 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117869228 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137201135 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118968601 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110250841 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128343392 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12184862 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109885127 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136877178 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110309942 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127725345 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111219191 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109746324 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134181078 seconds)
  done (took 4.296965772 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098000256 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097441682 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095693351 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.116524808 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094037593 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094497045 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092216086 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111149884 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092747229 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091837098 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111206569 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093465296 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092493565 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091081449 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112065615 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093202477 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092019978 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.111483591 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092525903 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092697478 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092820799 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112597033 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092165288 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092805078 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11159277 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093425523 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092580909 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091802703 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112137494 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093608614 seconds)
  done (took 3.774911406 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.109986958 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10664794 seconds)
  done (took 1.043379431 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.104829409 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112481448 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.093537164 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112664875 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100281812 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092917626 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120639998 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100211967 seconds)
  done (took 1.66392324 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.175337933 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.19676218 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097974777 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.125472564 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170863001 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.183520837 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131484139 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.119830529 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093623652 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085619263 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.184806176 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085887226 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113720741 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091807618 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093973235 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120892998 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094713058 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102395885 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.121465351 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096020592 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09899154 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119010871 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096474322 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103007202 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.108493496 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097070212 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096647908 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.125783178 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091298268 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094402682 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112745954 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09472372 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097230661 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.117107867 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095136062 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.192610771 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102052409 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091115737 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115052998 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09895653 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125848685 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.11545568 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.096784853 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093530268 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115838442 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098703292 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.1001139 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.114229437 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087746586 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090076738 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.115363479 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091376565 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094287746 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093941632 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.114336733 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10162178 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096583075 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092255837 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091023446 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089209056 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.113191421 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091142886 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09607851 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116234861 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096695138 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095227535 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114245951 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094751471 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096483593 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.11509254 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094294425 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110348941 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114810213 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099487794 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098390302 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.114418312 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09143725 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100094133 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111811557 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095702846 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097795485 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.141938558 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097243549 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090192234 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.108678674 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101883629 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096114139 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.115632035 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08767446 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103065823 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.115210386 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096049839 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088153988 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092180958 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.110042126 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097638811 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086983739 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115043754 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094033032 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098709528 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119591441 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09347043 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09732375 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117825942 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100604855 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092437079 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.178920155 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090416049 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109667919 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097924733 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099985177 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09099655 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.117492976 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093840124 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092385319 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.116375195 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102775879 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.098838105 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.122131187 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099234935 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096186295 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.116509069 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097178781 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094136261 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.11169314 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098991113 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102891023 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.115957392 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097865307 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094965479 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.114342332 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.096299364 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09971576 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092239405 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120982241 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092380994 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094669534 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.116230445 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100242003 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095139192 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.110976967 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094675082 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095228155 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.115162094 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098249099 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.096469048 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.110823981 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088596806 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095672562 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110695349 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096900033 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103411212 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.110152769 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099863329 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.09225958 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121909342 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.09340308 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.1005157 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098092924 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.121615676 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100303704 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087278071 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.116049707 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097861413 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095382554 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.111683881 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096092693 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09457611 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.123033613 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.090390345 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098947569 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106294503 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093418834 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100103401 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095029794 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.117612398 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091003848 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132716924 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.128087813 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100156764 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094746844 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114110224 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098752785 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093222592 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.118429704 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101203959 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09825565 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111981992 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093828397 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098891052 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.110273536 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098132592 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093317115 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116271977 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088521355 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096226143 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.106885582 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.100251609 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097779868 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099679263 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.120552765 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097925706 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09400179 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124030005 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092561292 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099289425 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.107843912 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101038572 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105611742 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.121412751 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102474868 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098018209 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113670039 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097280062 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103598594 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117420924 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.097045799 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097122146 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088520183 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.110115103 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101702191 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098296725 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.111677811 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095624845 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098906504 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.117205749 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.094432259 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.097535757 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.119029159 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100188695 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.092415275 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115286263 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092917623 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093791002 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121257171 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.089149941 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092112998 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.117556103 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101085244 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096097291 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.114445473 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098766179 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101530101 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098248481 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.118323717 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094114144 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102898952 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113560533 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096645263 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091993338 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.118765699 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.091205587 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097420863 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115758481 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093392237 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.092965083 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118948387 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103236729 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100153337 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113289003 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101249837 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101394457 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100685289 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113947976 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.111400391 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090161445 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10889468 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09309436 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088172889 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.117180103 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.093271364 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101910907 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.112894406 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095069523 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099512627 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116778758 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.093808884 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101643347 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125945833 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.091207778 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089400116 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113948999 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09652208 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.093062412 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.112166074 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100030016 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098507827 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100648552 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.120567645 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.093023908 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095172076 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.121863155 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09352451 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101204128 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.122074309 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102584736 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091222757 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.120540901 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.094949612 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099467019 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.109766933 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.0965681 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094695909 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115572046 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093509206 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094455786 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.111720443 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090570797 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.093440736 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.123177132 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.096578306 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10029198 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.095304195 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.11478967 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093370255 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091369895 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.122882531 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094894357 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103039685 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.118035169 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089969959 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090962848 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120921137 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097322159 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101894336 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111475908 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.10128698 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103037569 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099766165 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117752466 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.106169912 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10394794 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122571105 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100978911 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088680825 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.11596326 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101620804 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095583813 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.119283769 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098708052 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089514928 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118094224 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102852583 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097795145 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.114961902 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.09129438 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097495997 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103336161 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.122565501 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100496428 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097679478 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116966587 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.093560774 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099730099 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.122359763 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097556459 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103090577 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117250069 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10093303 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092937446 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.12106819 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098535277 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090866231 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089509007 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.115142788 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102909012 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089702372 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.122487561 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102772727 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.094091952 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.115493579 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102156816 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092986935 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118645892 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102111368 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094546062 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126633187 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098896726 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094675839 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100476421 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.122696216 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.091002626 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.095254379 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116931371 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103004622 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094207998 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.12170757 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097454522 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10125687 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.119986054 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102687103 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102154012 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.121388018 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.091323818 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103125693 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120011794 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099719726 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.094216837 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094930915 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.112403558 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096823372 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102912929 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.114470987 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106309132 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103342168 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.116084756 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.096046228 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101564803 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115533142 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103714103 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.09314196 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118421789 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091307929 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.099417106 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.116145751 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104173503 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.094341354 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.110108966 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101957423 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102193703 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09992498 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.1204442 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103818895 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090210146 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.11144441 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100961149 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.095006749 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128107141 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100719677 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.095322161 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115555105 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099637485 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097853962 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124948862 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.093418142 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093973497 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097446836 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119214795 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095308107 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090729029 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.122148393 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097530782 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09786866 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.118022839 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091904167 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095671852 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.124134023 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095919405 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.093483123 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.115211976 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104865353 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.096276671 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.113397954 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091987062 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102711934 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.119348908 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104220456 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094922134 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117519649 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.095934688 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099061645 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.123486369 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.096779111 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096966475 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094871087 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124307873 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102949055 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08994967 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.115199143 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107562667 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101484264 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.120457741 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.100521227 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095707375 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125296759 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103964155 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099287685 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.111045538 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.092802178 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095433687 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.111019827 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101420337 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101453516 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116333972 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.096517203 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102986183 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101282791 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.121934501 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100636361 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090502588 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125441739 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.095709518 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100047511 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.111175443 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.093060644 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099406148 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10194945 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.118151824 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.098703531 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097453158 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.121146431 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092424441 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095484071 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.12128369 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101976516 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102143938 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117205226 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.097399548 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102794884 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.127430978 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099962661 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095454871 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125096301 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105833288 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097941084 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.117284164 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101756388 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104219996 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.119668102 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10582351 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.095985453 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097258824 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.126858925 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10443952 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105252259 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118808711 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.092538064 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102123455 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.116405799 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091524117 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099935653 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126377477 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105862042 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097112108 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.115765124 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106800977 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101699113 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117860493 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095721165 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095187401 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.123939756 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095760602 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101121366 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.114648943 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105795813 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105051842 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102670566 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.127626923 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092985534 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102222805 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.121295937 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106637921 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098043388 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.114186639 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.093389128 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099986972 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.126362626 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.105133786 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100978626 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.122575213 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103175484 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098831017 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096996314 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.11679107 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105581417 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103771322 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.121086512 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100993783 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096563974 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119478824 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099559804 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103846138 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.12511882 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.099495378 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108366659 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.124276889 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09743871 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095240826 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118340332 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101645324 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.099081866 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101699779 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.116918675 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.093381315 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102955653 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.126375924 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097901212 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10469512 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126099057 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.097941474 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100688028 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.128575847 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104155936 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098637217 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.119161069 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101956384 seconds)
  done (took 63.40974818 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148416758 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105789647 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121355926 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099688714 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118309481 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123716966 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100193836 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101660429 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123218627 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111167561 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099361577 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121511882 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116444014 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140942142 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118601865 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110602809 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12069234 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103240876 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100505385 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120985536 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115964933 seconds)
  done (took 3.301236115 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117906852 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113872311 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132742585 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115076694 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107390461 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132799002 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112154897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132635863 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115769562 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108255918 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136280877 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111969762 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.129417308 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110194863 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107576946 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.130096845 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114457547 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107230945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133111677 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110944372 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.129867073 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112552819 seconds)
  done (took 3.502461861 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.13247972 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104094911 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099463779 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.122297519 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104577541 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.100247167 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124734687 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.102485597 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109504874 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.117581249 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092155833 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096035744 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098723396 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.122434053 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095321535 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.100461315 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.130874357 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.105381008 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105064855 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.121130663 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.093348823 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101252708 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100818794 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.11308856 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106300451 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105062216 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.123184849 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.1061711 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091429999 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.124239243 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101975378 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09450397 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091733238 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112433736 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091913721 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103918539 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.124148552 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.102024997 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.10091355 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091040176 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.123440937 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104502306 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091646397 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.12202081 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.102534841 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095637753 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.124581292 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101162036 seconds)
  done (took 6.009167985 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129905574 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167601835 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.342205916 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137303643 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137365421 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11087738 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102532855 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139338942 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10180999 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.126229667 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116040239 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114481579 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128828125 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108052075 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10205212 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.128201181 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105844388 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103100071 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129631601 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104689134 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.128077376 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108261705 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114328328 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133790452 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107208467 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103390827 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124394259 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109429048 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113937127 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.131123689 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108172898 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108227604 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.13596254 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106255136 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124521118 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105609762 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115966177 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.125984575 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105216363 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103117965 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.125769589 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107699305 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105719233 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136846138 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105279495 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105965948 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126964011 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102551328 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112582515 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.127800995 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111424258 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.135050034 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107874959 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104868904 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128741793 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114395277 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104335963 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.125029333 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107966971 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112814503 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.122736044 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107798492 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113235141 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.126590565 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110897211 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135962558 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107142833 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105887307 seconds)
  done (took 9.206853416 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134897358 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107845806 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137701616 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116114102 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107528549 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130460175 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1077855 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.128929241 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109450683 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112360281 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128389018 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.227387586 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12838952 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113494252 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.1309312 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10927733 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107876153 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130148891 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109684316 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108768329 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.130184962 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117923429 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109236898 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137808885 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120144284 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12574239 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109686825 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108409754 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138035995 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110255889 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118552751 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.130426738 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108928164 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13754661 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123111505 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.1084914 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125799255 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109897186 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107621606 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130078502 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106874975 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11635332 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130546764 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105064902 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108103572 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131578096 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116564349 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.14167535 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113941206 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113130955 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.131136591 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11725023 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130179139 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110586518 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117323883 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144573466 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117471993 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137161766 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109701655 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115827692 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138012396 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123253521 seconds)
  done (took 8.46255294 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102090633 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101595925 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101271962 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.123267819 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102714846 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101358697 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123111543 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103460481 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102928166 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100344417 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124229369 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102851078 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101540347 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123727788 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102685063 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103298497 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100605259 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122591208 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102444978 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101716419 seconds)
  done (took 3.042351892 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112498993 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119601963 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124292671 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10987488 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103975646 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130060153 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105349075 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104258296 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104379965 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127508901 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112561992 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.132234557 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104812428 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109601621 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.133736434 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110519228 seconds)
  done (took 2.740804897 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123271604 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120237256 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.212411273 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106049015 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12799341 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111754981 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104095448 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.129845633 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104168796 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109519096 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.131282707 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106805997 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104282542 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.127765864 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105953582 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107122764 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101842856 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.130274638 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105741626 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.217870089 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108997995 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105644642 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.129762091 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107661997 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104196468 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.131603517 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111010312 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103590008 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.129296836 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106144145 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105284573 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.13445981 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104640442 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.109060486 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.127814163 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.107600812 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105421977 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.12665375 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108530665 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104832008 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.12778633 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106816853 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104667781 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.128096216 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.105435581 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106179689 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102750817 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.132712943 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106340657 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105558466 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.127644046 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110849083 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107998853 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.135788667 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111783861 seconds)
  done (took 7.37786506 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117729583 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106112521 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13749927 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103268294 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105483343 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104652971 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128862737 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107776745 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105018188 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125701775 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106097207 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.107101324 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.128281246 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107694625 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105867075 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.126446138 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.104160534 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105477574 seconds)
  done (took 2.934842112 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112397668 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104824274 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.1079724 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127256076 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103982918 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103787168 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125691055 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104461876 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103416408 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.127178488 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106267131 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104075098 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103076759 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.128039477 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105320455 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103612207 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.126730774 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104144414 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104936604 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124674952 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105668506 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103912275 seconds)
  done (took 3.349345064 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117385941 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.215989436 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111969693 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223448531 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.102713459 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.124122831 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.112315918 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101015066 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.140847636 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.102389615 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100389921 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.12342114 seconds)
  done (took 2.483819174 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13390555 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141420718 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128103192 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106346754 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114265675 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132162636 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11066804 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108824343 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141164929 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120671844 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131596428 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118531889 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118600034 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139401263 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113757319 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137453812 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110885653 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108836364 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127678984 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125309457 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109238208 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140537519 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110211684 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130867925 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11213853 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117944626 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140400512 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122172727 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129876975 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119494864 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114447991 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131781402 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118732965 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141429572 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107902316 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117694696 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130987275 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125877613 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113510443 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140524094 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105772942 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134664325 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118534685 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115520473 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139493763 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110036346 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115219302 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133460856 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111281814 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153442803 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116688837 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139506835 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115779273 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117215259 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140056507 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130174033 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144403584 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118007393 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113309152 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145765893 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118599781 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138279096 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118393994 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143636641 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115260867 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118957102 seconds)
  done (took 9.122362499 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146336934 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105558849 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132139362 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122802537 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139924487 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111669576 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111065706 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131696622 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110723017 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107918632 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175352614 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110583363 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140459988 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119910635 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11094849 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133608361 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111807493 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117746906 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130245722 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131248608 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13177536 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119772413 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117688225 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14155822 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121464416 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137035834 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111866671 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109794676 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132626783 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111054448 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114448227 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132386639 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118387059 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127897368 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120300539 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110384572 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13382939 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117253165 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10911045 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136934941 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118437601 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148299838 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110741204 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110246232 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145405838 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11096919 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109372908 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132804418 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109921793 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107300416 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144786606 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12009001 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144108165 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119930283 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131406986 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111427519 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110521182 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133263713 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112012715 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115882397 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140991332 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113021531 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153786511 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112460966 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110686082 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142303199 seconds)
  done (took 9.090753097 seconds)
done (took 172.50591953 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.18068058 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.21788942 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199316927 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.159177171 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096638895 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.155221611 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129899656 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200548398 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.098404188 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.097030997 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.096579472 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.124569341 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.164410544 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096253356 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.121074076 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.100543573 seconds)
  done (took 3.143570153 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.185983606 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.335659911 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111219412 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.124653792 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103598064 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101447209 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123503247 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.104679151 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102289097 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.13132601 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102888798 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097744185 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.132280907 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098754709 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100986185 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.124543788 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110086442 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101036601 seconds)
  done (took 3.215093619 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123663077 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147765646 seconds)
  done (took 1.195172306 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.133096549 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218167531 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.287378988 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173292331 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12339832 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.144611405 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152318333 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137254013 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192904393 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.138011251 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11597182 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099179319 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150575796 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107823776 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138986679 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101325905 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.130163505 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.139912812 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115925611 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103890679 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.149494189 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107187499 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.107576932 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.140012877 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180985722 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137390694 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105701733 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105251151 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.127400528 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11727123 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.131937548 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.121281107 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113209325 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.18293198 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.126825211 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156994566 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131987733 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.103333792 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115639388 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.124796919 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106161724 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105321697 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.139010143 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100590972 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105301969 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131851639 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106691021 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104511651 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.133304203 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110211189 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.132620868 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109124259 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.178788761 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109490044 seconds)
  done (took 8.0849553 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.888220837 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14459717 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101604736 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.027582236 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148450676 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116216034 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.850195867 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.150084876 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255909594 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.897718251 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11788337 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.13281826 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242744503 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259633791 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.293107442 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362832175 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.739690802 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116837949 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13017925 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166016418 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109693403 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149675125 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121810223 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.524764625 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10399871 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102110655 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.134829173 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11072801 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179705401 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.103105297 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129643154 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175570232 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.294086281 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212007182 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124623286 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102698288 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101747465 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187520141 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278080228 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224902453 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.196379424 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100324148 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102497874 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131622204 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122785545 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099751347 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180688957 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193822007 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190955605 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106394997 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110978552 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135450929 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109215012 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180673261 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100338577 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362450725 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.386596131 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102342177 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110926664 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.138076242 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274190523 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103488747 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239235537 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152264607 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221746303 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102383687 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842387384 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18738058 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102109006 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107237461 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.133186261 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108236189 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131701119 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170261558 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.506556348 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112703616 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129688191 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104452046 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237392165 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103296993 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102074348 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184224386 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103371102 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133810872 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114853468 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135839542 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168387194 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271819395 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134677341 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113058098 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107244143 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138273077 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.104849317 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234775348 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233278361 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177561788 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209241863 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133609303 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179688068 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.165230511 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130739036 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167815139 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.135554326 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114171602 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132169125 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229339923 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136011407 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126485387 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108755599 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112480348 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161118899 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106618446 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133784102 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167240436 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.562091722 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18879219 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099241335 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129466012 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113644143 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182229226 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109580428 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267208045 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112107411 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187177061 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.133324227 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.101807682 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110766902 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182853345 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109705386 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137713679 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109687218 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134604477 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.262667252 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223427846 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134780835 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253860312 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.17742575 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.13218584 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169479195 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136384931 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190027336 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113421991 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108886205 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127252952 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835083912 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117913684 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110401109 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134886726 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18531361 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127297115 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105231521 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101930471 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124300604 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.818514543 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109549127 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099822525 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.128367286 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109883707 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.111428393 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134867091 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108702452 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183038987 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246107807 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110497716 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.134353061 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103253938 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183025981 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.104666088 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102825494 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.128449812 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103566534 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111849212 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.133798126 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106262928 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192294453 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177551734 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.23375698 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.641070513 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103630598 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10307602 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270420036 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104363696 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.330621584 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111389907 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.262970024 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161853119 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123888739 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.3656935 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187285437 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18720957 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107019055 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195256982 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12300139 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113564413 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179188918 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104560649 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110204012 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179887828 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114843004 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138780148 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.281129802 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102444176 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253593934 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099728142 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191318235 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126067961 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110669364 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.332314427 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102675284 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142797786 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18192857 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109527885 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103686844 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.680719001 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104309578 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140237405 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1091553 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235392831 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187007175 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111388929 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138926939 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11182896 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.18288501 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235025332 seconds)
  done (took 48.406436977 seconds)
done (took 64.958012767 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273971421 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.181421076 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.287133616 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183532248 seconds)
  done (took 1.943072164 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.282853427 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165752234 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.261525163 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.100728622 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.267796257 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100207949 seconds)
  done (took 2.128665106 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.18249094 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174523014 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150385936 seconds)
  done (took 1.461923054 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205766787 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.222517351 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.337010196 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.236091977 seconds)
  done (took 2.037304103 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.304042678 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122220248 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.129332543 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.240032353 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.257235899 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.215282888 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128296912 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.182872352 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132978704 seconds)
  done (took 2.707100223 seconds)
done (took 11.226546026 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.234792772 seconds)
    (2/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.451437388 seconds)
    (3/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.227615009 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.201300046 seconds)
    (5/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.15697522 seconds)
    (6/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.361856971 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116847814 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.137008884 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.15167269 seconds)
    (10/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.241261013 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.150084353 seconds)
    (12/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.22721288 seconds)
    (13/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.27047364 seconds)
    (14/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.271852373 seconds)
    (15/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.320502589 seconds)
    (16/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.111758054 seconds)
    (17/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.389901228 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.220584069 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.2467973 seconds)
    (20/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.29728807 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.136496155 seconds)
    (22/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.183832768 seconds)
    (23/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.203903982 seconds)
    (24/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108154579 seconds)
    (25/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.385252793 seconds)
    (26/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.214657861 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.12707253 seconds)
    (28/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.154494436 seconds)
    (29/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.141412087 seconds)
    (30/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.115608347 seconds)
    (31/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.175237816 seconds)
    (32/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.210356124 seconds)
    (33/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120795213 seconds)
    (34/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.271907729 seconds)
    (35/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.181464607 seconds)
    (36/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.182683288 seconds)
    (37/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.10229983 seconds)
    (38/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.229771776 seconds)
    (39/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.275627913 seconds)
    (40/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.219826282 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107441444 seconds)
    (42/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.196359691 seconds)
    (43/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.205773908 seconds)
    (44/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.171166479 seconds)
    (45/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.081107331 seconds)
    (46/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.109028241 seconds)
    (47/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.146861652 seconds)
    (48/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082303925 seconds)
    (49/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.1369361 seconds)
    (50/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.223524218 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.113515884 seconds)
    (52/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.203567815 seconds)
    (53/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.248396561 seconds)
    (54/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.195918832 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.125728612 seconds)
    (56/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.222232952 seconds)
    (57/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.082623616 seconds)
    (58/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.174810115 seconds)
    (59/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.146037 seconds)
    (60/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111604356 seconds)
    (61/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.199045188 seconds)
    (62/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.174788923 seconds)
    (63/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126974678 seconds)
    (64/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082214788 seconds)
    (65/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.132692193 seconds)
    (66/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.113586449 seconds)
    (67/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.149055049 seconds)
    (68/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.186530408 seconds)
    (69/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080094342 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.132759584 seconds)
    (71/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.138125095 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.106459555 seconds)
    (73/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.139096294 seconds)
    (74/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.086592747 seconds)
    (75/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082688842 seconds)
    (76/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.080484128 seconds)
    (77/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.138972639 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.132712722 seconds)
    (79/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.223546095 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11570646 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12673037 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.131876136 seconds)
    (83/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.088684057 seconds)
    (84/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.176576005 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106535951 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.138347003 seconds)
    (87/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112594568 seconds)
    (88/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.141926068 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.132514525 seconds)
    (90/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104132429 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110005395 seconds)
    (92/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.112747343 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.106731058 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106339193 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.113235585 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.130583285 seconds)
    (97/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.138663815 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.113274718 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.13163437 seconds)
    (100/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087400951 seconds)
    (101/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.106291112 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.155735896 seconds)
    (103/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.08026117 seconds)
    (104/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112525945 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.106254287 seconds)
    (106/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.10550565 seconds)
    (107/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135052307 seconds)
    (108/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109409055 seconds)
    (109/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.111126926 seconds)
    (110/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.085980943 seconds)
    (111/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081941382 seconds)
    (112/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.140899506 seconds)
    (113/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114596008 seconds)
    (114/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.114578981 seconds)
    (115/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.200528826 seconds)
    (116/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.137562766 seconds)
    (117/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.083024132 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111970975 seconds)
    (119/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083086725 seconds)
    (120/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.085032357 seconds)
    (121/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.112753212 seconds)
    (122/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.132194904 seconds)
    (123/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11202685 seconds)
    (124/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.139811619 seconds)
    (125/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.085439189 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.088295084 seconds)
    (127/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.082983381 seconds)
    (128/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.079791057 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.14886724 seconds)
    (130/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126711788 seconds)
    (131/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125829911 seconds)
    (132/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.110606784 seconds)
    (133/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087496882 seconds)
    (134/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.08774998 seconds)
    (135/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.086988083 seconds)
    (136/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.136067754 seconds)
    (137/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114638579 seconds)
    (138/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080456368 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105044312 seconds)
    (140/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.207480827 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113886414 seconds)
    (142/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112915814 seconds)
    (143/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.207914638 seconds)
    (144/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079405788 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105844323 seconds)
    (146/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129841101 seconds)
    (147/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.212516027 seconds)
    (148/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.07962015 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.133112442 seconds)
    (150/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112679934 seconds)
    (151/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.08664975 seconds)
    (152/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078820473 seconds)
    (153/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.111404324 seconds)
    (154/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.081018061 seconds)
    (155/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103036694 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114253918 seconds)
    (157/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.221838933 seconds)
    (158/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079993771 seconds)
    (159/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081469507 seconds)
    (160/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078555463 seconds)
    (161/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.113452097 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.106777772 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.102299843 seconds)
    (164/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.111718481 seconds)
    (165/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.087184611 seconds)
    (166/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.106713922 seconds)
    (167/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112311491 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.113427214 seconds)
    (169/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.087932728 seconds)
    (170/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086821798 seconds)
    (171/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112290821 seconds)
    (172/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079354245 seconds)
    (173/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.109832909 seconds)
    (174/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127406115 seconds)
    (175/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.104233132 seconds)
    (176/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.1114807 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.1040866 seconds)
    (178/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083288122 seconds)
    (179/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083775395 seconds)
    (180/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.159406368 seconds)
    (181/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083934216 seconds)
    (182/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.084041965 seconds)
    (183/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082480768 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125616895 seconds)
    (185/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.105889404 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.105612028 seconds)
    (187/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.086126069 seconds)
    (188/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.083644606 seconds)
    (189/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.108117665 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081036776 seconds)
    (191/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.10708645 seconds)
    (192/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.080365874 seconds)
  done (took 27.904147725 seconds)
done (took 28.862019003 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233982631 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133094589 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113780516 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113564728 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.238384499 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119979391 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.15727047 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.116209504 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123390259 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.139474442 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.105477809 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126636392 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.141099188 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206463163 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.142693716 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.10701159 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104460613 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.151406937 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129995981 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130210744 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.237241466 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106630822 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.151261792 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.106255388 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.239735793 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108082414 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.113841226 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.143704297 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12854755 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114412961 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.141960439 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105386876 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128986475 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.155436259 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106158224 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.115702067 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130233603 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088370689 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114625052 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115441079 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.152801242 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.116116617 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113122555 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.131349242 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11565873 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113821313 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.131357792 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118864878 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103254221 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.142052187 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108041802 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.130065278 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.140133669 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104373394 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103904853 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.132516425 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125921199 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105404033 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.153234418 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105874501 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106391459 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131240875 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117981614 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106553633 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112590004 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.130904924 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115591398 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115954205 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.140282375 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.110569664 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10548244 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.139993633 seconds)
done (took 10.366693881 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.114822033 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.150037393 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.237302508 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.24129439 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.135074166 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.150676513 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119298584 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128934339 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.146933611 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125349897 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142973678 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.16512634 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.246149876 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122198894 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.121536746 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.146739537 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.118126627 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113939693 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.241198469 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.158060974 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.133828001 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.122486077 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159884881 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122565708 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.109078346 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.169850429 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113834407 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.144186851 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.112928424 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118076093 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.157145096 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.10997647 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113171533 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.153713877 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127774691 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121239934 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.147708746 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119365386 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.110256984 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.135808882 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119562878 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127710564 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.136528225 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.124810739 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117579698 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.151933947 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117942516 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122223506 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.139030253 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118148916 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111103852 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.162233589 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121899506 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126385467 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.148800233 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122679592 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124198178 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.148850964 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113659303 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.12180101 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.137632871 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110661537 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110891003 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.158343827 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.114046037 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.148443968 seconds)
  done (took 10.07261907 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.133607123 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138758244 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.146106682 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120765251 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11444052 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.128289854 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.104100576 seconds)
  done (took 1.88585094 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.111674257 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.248847428 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.221803724 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.24710852 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.246763737 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.258263378 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129373452 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104917198 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.167742916 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115968913 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.251443701 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.277076101 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11619198 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.149494443 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.224929808 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.133742002 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.251268798 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.106345273 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119684641 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.251645445 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122386265 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.165900586 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.119518984 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.105236132 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.244807616 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.134129181 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.297573156 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125067163 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11513919 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.147740406 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120778208 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.212513628 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.21876921 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.149145986 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114290317 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.251102207 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.245285025 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120544842 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.262650875 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.110555757 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.244879543 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11907817 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.14954835 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12144729 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12145105 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.236992733 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125212693 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.149026715 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120026923 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.257136288 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.117412247 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.249532738 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.117154448 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.147534234 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.118013112 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12073544 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.15530472 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.122292613 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.254803889 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123238286 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.252054145 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.250511268 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.221065428 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250933969 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.157930984 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.223902103 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.235758768 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118946561 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14283902 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122659869 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.254108116 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119362142 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.146191208 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.217574429 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151406847 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.225403791 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.253098658 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14532628 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.119743584 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.111303028 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118292767 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.137542342 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.241482635 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120903302 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117846035 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152858791 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119365644 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121404264 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.139199598 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.130364083 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119877875 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.144542509 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.125981326 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119826755 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150372794 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.255562889 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118846444 seconds)
  done (took 17.450963333 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.11579772 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10842931 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111932293 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.135678559 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108760997 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.109322026 seconds)
  done (took 1.724397496 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.151800645 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123468135 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.156341973 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123433264 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.19695224 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.230254047 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.262999978 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114665143 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.168019268 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133583569 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.259286303 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.260580856 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.260456517 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.125113153 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.264166808 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.124299001 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.268592457 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.119696266 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.157579343 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120781516 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.119754044 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.154561241 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11869952 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.251746416 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120927624 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122129174 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142382201 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.148877152 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.156565025 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.116614529 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123732023 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146717602 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.114792476 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114577479 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.261524957 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.113124857 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.145924481 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123303159 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123734836 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.149948064 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.263723479 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118937495 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12675587 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.153287159 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.117084944 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.113124871 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.154053222 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11440406 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.265772403 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124116519 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.151988923 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122945126 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121519241 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.153447113 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11509365 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114883342 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.152223234 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.26613591 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126783311 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113992704 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.149588369 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.123581305 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115362946 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.153562003 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.122788927 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123954821 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.141323445 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123493582 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118000015 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.150146694 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.125058192 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.12113376 seconds)
  done (took 12.084213708 seconds)
done (took 44.212191285 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.510754321 seconds)
  done (took 2.538438049 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.965083125 seconds)
  done (took 1.997320972 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.697868797 seconds)
  done (took 19.762964379 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.452083061 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.471865047 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.167679235 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151306648 seconds)
  done (took 3.274707015 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.842128287 seconds)
  done (took 1.896001847 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.334987264 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.245106378 seconds)
  done (took 1.615653214 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.736019715 seconds)
  done (took 1.784317762 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.558231748 seconds)
  done (took 2.593020237 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.299922183 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.244145764 seconds)
  done (took 1.598177825 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.661580108 seconds)
  done (took 1.712015103 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.582376409 seconds)
  done (took 20.639329596 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269758841 seconds)
  done (took 1.326206398 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.294934423 seconds)
  done (took 1.353819501 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.631456511 seconds)
  done (took 4.686800742 seconds)
done (took 67.823681525 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.124975199 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.120610465 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.120324539 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14419513 seconds)
  done (took 1.552829357 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.130592929 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121106271 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.14993024 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120976878 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126359031 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.146846463 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121831181 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.124011997 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119685565 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150240161 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122313141 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118738827 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149586629 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121559395 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118054018 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149719165 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125645025 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120602583 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.148529339 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122219258 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12155572 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148661238 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125440358 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123729727 seconds)
  done (took 4.181920095 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.121573132 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11247894 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113332329 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.136524118 seconds)
  done (took 1.546870647 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.132890075 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133223262 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156931718 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129099624 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133624135 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157458607 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120325298 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117505334 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.147198886 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.131199964 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135902471 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159911868 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132696126 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.149732617 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.132877397 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.1154038 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121497132 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.158671373 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128814498 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.155587654 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.1223421 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127522049 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.151411186 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130365982 seconds)
  done (took 4.33655568 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.201733307 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.133264159 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.178906563 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165380427 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.182905854 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.12022842 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148270726 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.154179519 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.128122973 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.148681118 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.125040582 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166206504 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.155984216 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122504453 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120326247 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.154163328 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133446813 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.152797089 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.16841842 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.126310104 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154926711 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132667181 seconds)
  done (took 4.338306855 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12964595 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11123658 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.134095225 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.112358486 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12398657 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.141018991 seconds)
  done (took 1.818014121 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.11533082 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105522817 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106182746 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.13226234 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.111183123 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10584659 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.131093004 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.108049224 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.106543062 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105710825 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.132177703 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106811906 seconds)
  done (took 2.423505903 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.337966349 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.111298307 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.138715839 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.114540048 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.116581627 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.109061973 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.152057669 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.111135533 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267876097 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.107295568 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.136341124 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195078288 seconds)
  done (took 2.964962925 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21654452 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151906214 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261408027 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.691513212 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171410227 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194535589 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287661994 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19575453 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.211608507 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140144064 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221458923 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164536356 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186164872 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188730346 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170007944 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159345007 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196693587 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243519251 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145239056 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242370756 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158121688 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206696716 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220282342 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153591295 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168322721 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16448886 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119687224 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157293003 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170110021 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195886449 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205981245 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152960364 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171369963 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196256235 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269005743 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212848398 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27638522 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135517039 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200842156 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.219394944 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263744552 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143610972 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22220274 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154441439 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159219422 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190752514 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184930935 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185550888 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.164051758 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14642324 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2149055 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210335426 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175174428 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166378021 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325584846 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137942115 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144947234 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255458811 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219026288 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231443611 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182743443 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.153725599 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17845806 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220412448 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243723053 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144220082 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.195318987 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126867711 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196104328 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236230218 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189408451 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19264453 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.242703396 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133556537 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201715742 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170393462 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187303929 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23511384 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175263821 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120731345 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180942999 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135431677 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157078999 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193145419 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151285995 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217049567 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162492549 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.351414329 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182567979 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186422955 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164464496 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192262908 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16489341 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179795822 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102268925 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173244945 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.1642614 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189874899 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131308472 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185454104 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143018761 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128027985 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18339995 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124191402 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202211655 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136095968 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193787885 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175536654 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.16162321 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180321277 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178855051 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.162860992 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199888398 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222738073 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132968044 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133897497 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249999603 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198286132 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138351795 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202902244 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19799547 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179198674 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138291074 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196523778 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222946781 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145810931 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230811909 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140650472 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164033204 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.143153852 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203311672 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163489893 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.190623467 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129490318 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.195178729 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194888897 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.157574252 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141610718 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213519539 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13610741 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154681888 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140893517 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13744525 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.173480853 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150979278 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.169082797 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158446289 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197883503 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168615933 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188717557 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13783013 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205378099 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132730053 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.199610382 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150954784 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.148495089 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17786261 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229700099 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131813321 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211748541 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.165052695 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213047525 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203663553 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13182696 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214263592 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130256703 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122490926 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194493547 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200434989 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166465097 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.220075282 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208159377 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.169125833 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.194835614 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151040186 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200894453 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.21713552 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159618213 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.173795335 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175463718 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202585873 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121456337 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124303971 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.15871748 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139273427 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16093133 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140607759 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212840516 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167388513 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208625597 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196767664 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140213485 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223531289 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127435165 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192101196 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177131301 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171330487 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.190487346 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222213686 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209936486 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144909583 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195955415 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123392477 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129054145 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.167160501 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163828474 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169390644 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13928362 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172011808 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192676513 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205053617 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150785758 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223449062 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197168646 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201982871 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.154450188 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16372241 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201438504 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169838792 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.214175962 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135769455 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.192410323 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195324931 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173561632 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193640707 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199437994 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210631523 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197911963 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.197561843 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132249812 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182169383 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163802042 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170814902 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165963739 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17723518 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133113596 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156194944 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.170968284 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142698977 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219051737 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176725703 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185156025 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.190190307 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175375858 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157760207 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143784509 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205995603 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148870839 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.136685584 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174970089 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228504109 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152291604 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188377869 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202125468 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134794959 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.31769096 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223171228 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21207597 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138888225 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167695607 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175457992 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192001048 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16439183 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217199219 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143958485 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240976377 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20272538 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.146198157 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132050057 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179329316 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153286567 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.171432459 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.154646401 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.195079604 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147619552 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221464133 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138296719 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200563637 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210302481 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148349479 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151422468 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171977723 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259774899 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170517426 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204917442 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166384691 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.196537541 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213412827 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126255006 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127866169 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.163244448 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18673382 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131444375 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210002477 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195851184 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214455488 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177867354 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194208325 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143141081 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.15861922 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169875288 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179160488 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187124855 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165149493 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139213686 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224102069 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129813385 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163498539 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162896863 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319555422 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153154726 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206158868 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107233513 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.312459786 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13367964 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164124274 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166559658 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202724979 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134970099 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190255995 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202604169 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14154305 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194212179 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136252079 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213357784 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216585841 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170379845 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208075478 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.17593423 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167319711 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194010857 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177235189 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17636999 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.15046914 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191721825 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197096584 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.209561331 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133614217 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199882793 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172311822 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203429968 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208786707 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142599319 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213009669 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130200695 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168226824 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169126559 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126894042 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193345865 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197527408 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132822866 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210619911 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173704861 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132242148 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161085637 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148899374 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196828801 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142581645 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.160463255 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18929531 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.162218374 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183631745 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245862557 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131095644 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199336661 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148225434 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162924035 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140831081 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177381937 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135296732 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178412996 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213370971 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133534163 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213119532 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195354248 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16889388 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189797581 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14609587 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.294319351 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13056834 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222773095 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153382346 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230041896 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152524533 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207140839 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172001388 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183793014 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167950808 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181761243 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.221861726 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199189868 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.195181374 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134494839 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145420063 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16945474 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.136207251 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182106654 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171294096 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173157211 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.140082496 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.169023111 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177744314 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.150138107 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174233275 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203173006 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183008636 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221570768 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189933614 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170189163 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177224137 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210421193 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131159529 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.197827565 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204932647 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147735543 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154240325 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.166876519 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140227497 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246794354 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12758574 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194062199 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176541769 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202379224 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174523788 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.167038326 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181613464 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172881888 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17961374 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15922741 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.155104568 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200052718 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136235463 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127619642 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203929234 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194541921 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16693223 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173109086 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179261361 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22571468 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127093017 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136151933 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320554461 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165624581 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225315893 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.166389085 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139594404 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148994421 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192154875 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166568917 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203118157 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131438697 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161435625 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.148778149 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.185500166 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.145187948 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199238628 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185028058 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194081786 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187245632 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.165797596 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.256659688 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174289784 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174409992 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117377887 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.65794251 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146588139 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164874286 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145188948 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213794607 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246186626 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165937321 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.178593409 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139137554 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127884597 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161128928 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165980241 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183767008 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17023865 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179647772 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104844832 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142772319 seconds)
  done (took 87.986450772 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169229658 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.154288645 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.170159812 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224379803 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199069818 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294557605 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230949921 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248478379 seconds)
  done (took 2.850784316 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.124814107 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161490706 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144800137 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146258299 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111967331 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.487475066 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.16256739 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.123360546 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164037577 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154153959 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.139511972 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.58069235 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.125459877 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.148461803 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124735428 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.139317173 seconds)
  done (took 4.182708236 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.776277536 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.548919469 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.145477281 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.285768535 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.267538117 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.209616488 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.794244419 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.206741286 seconds)
  done (took 12.387884785 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.173900452 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.160971559 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.455122399 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.313152093 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.186734609 seconds)
  done (took 2.452283385 seconds)
done (took 134.069603283 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.130839276 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126354287 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125700287 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156789818 seconds)
  done (took 1.689207417 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.200500629 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093588676 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094755957 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121865567 seconds)
  done (took 1.673527961 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.476623231 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092584771 seconds)
  done (took 1.759116962 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.161862814 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143079577 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.173049755 seconds)
  done (took 1.653103886 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142289801 seconds)
  done (took 1.30924899 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.134332702 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12981912 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.275842726 seconds)
  done (took 1.708368008 seconds)
done (took 10.966696486 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128375064 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.926826276 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.436012786 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135674897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71688276 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430453635 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.427636783 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.180355801 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180053222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.14197258 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135867043 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.692533493 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.439750099 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.878222547 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.394271036 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.904893274 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697875525 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113914385 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.150298253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115918862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.403059339 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141634667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115008261 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11420173 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.723769298 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.4255992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112265151 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.922846707 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113206458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11622367 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431362075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113783863 seconds)
  done (took 21.112837901 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12244195 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172167543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149679146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116210594 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116339018 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142866978 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127026667 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124675334 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209302281 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113166822 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165115728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113502129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119357909 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142531907 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139541954 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112779543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144696555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11671402 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120671904 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144018268 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136628965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112478699 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.143932001 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115962556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113744585 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.164222663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114785915 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125981688 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.143364768 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118517181 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117534838 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143035207 seconds)
  done (took 5.438625811 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.169531471 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180551446 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.152197341 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151370686 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192289835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115932155 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.231211222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153280506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209085702 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116833791 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136266023 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141795839 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155958246 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114212088 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.169051319 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113187773 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116351156 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14551139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122181157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115119076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164869427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113439037 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115344585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144410996 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115143171 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16429085 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115599441 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.127066163 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.142470016 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119459811 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11947754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142309727 seconds)
  done (took 5.755035091 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.135239259 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128813279 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135986831 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166851959 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123259233 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127327593 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158284512 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123198063 seconds)
  done (took 2.270474126 seconds)
done (took 35.749061106 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.149069758 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132475115 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134946664 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158761657 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.260196883 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122659108 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130791778 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119987931 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.160006269 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135322277 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.1132222 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152990697 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133690498 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12494897 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.25970373 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.129635336 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.266453385 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.262620367 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.12138529 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127562113 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.15445415 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234561773 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.158942688 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.122821143 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.25253805 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117248485 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.253559827 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12457906 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123692075 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.146304561 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.232467093 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.158379172 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.122611135 seconds)
  done (took 6.561610559 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.249567532 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155766271 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.124727533 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.123255484 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123946577 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152579124 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.24902274 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.155603986 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122432447 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.121906136 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.153366334 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229843782 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.161203505 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118284127 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.124536654 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111407422 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.282090762 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.155740453 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.115354771 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095496661 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117295151 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.153012518 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.263374739 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.149888701 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.123236726 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121595922 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.155679123 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.128961578 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124126632 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123873186 seconds)
  done (took 5.774397244 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.136559206 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136945115 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.170750764 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.192379054 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.151813136 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.166079324 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142990795 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136556754 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175621542 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116865916 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.131284608 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.182980514 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132450745 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12601426 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146599136 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134967518 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138420219 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147688927 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125221813 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133186749 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.168818502 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133141954 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139077905 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154845598 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115829694 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123720843 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.157389327 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128134977 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12557084 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.161926354 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.119239596 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119594136 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.149205988 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.151980259 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11971305 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.160503098 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143476569 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128753164 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.160696395 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.149290271 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118990663 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.149085979 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145169277 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169713849 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.150197124 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130045789 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127879142 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.16297219 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.116163501 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135127654 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.190478788 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.120134065 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.166038352 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116751335 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11510122 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124391899 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.147454461 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121661145 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131123645 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.149543665 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141559159 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123495163 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158074941 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119075225 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127226044 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.145552721 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.117073983 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120741405 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.172383935 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125496927 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.154424331 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.146479209 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.129748968 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130717299 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12770727 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.159945863 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116480892 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127281267 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.158250761 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123487596 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130083602 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.149566657 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.1202623 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.133503284 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.166789248 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.130381441 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.128264698 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.160701426 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120827333 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.119014252 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163977978 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118586333 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121146364 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.159851647 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117926301 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120960808 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.158999787 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130860944 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.116326421 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14270375 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.152021725 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116057708 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.141894431 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.151413924 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123836218 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.1273005 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.190026656 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117013232 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127613905 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.160540907 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117631998 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.125927619 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.150993169 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.117511151 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135163699 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.163479608 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124355794 seconds)
  done (took 17.497710691 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.368854616 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.349142416 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189627538 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.434700095 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130466551 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.278954953 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.348595877 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.351381575 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116758227 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.18334787 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17978804 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.317079947 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.151441124 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.14615047 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.350686882 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.406894076 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.180406016 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153776063 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184712344 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131888393 seconds)
  done (took 6.159247109 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.146113711 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152939624 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170378099 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145195664 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126688648 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.165164868 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117622971 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138558037 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.16085817 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126926448 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.119419117 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.164292827 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130336277 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.134008226 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162698144 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150484058 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124216138 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.154062159 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.141194093 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121575604 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135207716 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141975756 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125734255 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.170731803 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.136993091 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127925514 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.147005516 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123123111 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123734748 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.155811689 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122975385 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133952782 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.156294845 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107440349 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127976826 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.162044872 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124374648 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120533033 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122042532 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151789346 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13327336 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129326752 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.155623078 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101646996 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135776842 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.110908259 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.163493689 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130303897 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107842807 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.16682433 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130169036 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130757682 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.154710626 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.141075362 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123738853 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.163334045 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129296419 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.13067832 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.152087766 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116340365 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115578889 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119882182 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.157025098 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.131903926 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128414196 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.167819423 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.133161304 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116774893 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.153281926 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121809598 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120708623 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.16310337 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137838582 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126222433 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.155226174 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.130153628 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125197528 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125336519 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127775367 seconds)
  done (took 12.05200475 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.153289484 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128506783 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.164328968 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.155346154 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131401109 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.152501736 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128473156 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.137799323 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.132020477 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.166730213 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134477317 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130923192 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171088034 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.128994328 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127236952 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.1634257 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131762322 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.1862667 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138961547 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14506459 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.164361704 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123574919 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129459545 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.158571799 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147650275 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.129397119 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.175984734 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132827048 seconds)
  done (took 5.290439974 seconds)
done (took 54.518387839 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.353948068 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.54337743 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.313281294 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.31668727 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.353687091 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.320093343 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.309721543 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.315362168 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.835940524 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.284041989 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.312928155 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.311195161 seconds)
done (took 29.778720689 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.41175254 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.840843126 seconds)
    (2/2) benchmarking "String"...
    done (took 1.588998803 seconds)
  done (took 4.628640256 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.320162241 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.302934428 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.554113244 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.301044863 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.301059809 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.305176066 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.312111088 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.306928904 seconds)
  done (took 16.584217359 seconds)
done (took 27.144250326 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.360127727 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.490699334 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.540176734 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.277283967 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.304232888 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.315641374 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.301565868 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.327967046 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.308771371 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.280060749 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.735193573 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.569014274 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.316536585 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.672599784 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.280013984 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.306930495 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.320664374 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.53958647 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.306600502 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.332978533 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.277648909 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.298535719 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.322600114 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.303787531 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.307587447 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.306054045 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.330722168 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.299371862 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.525754671 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.320041152 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.333626947 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.299023323 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.313592799 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.304963043 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.309295151 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.308243256 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.499345979 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.309729421 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.278244311 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.317843449 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.488307922 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.303034911 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.298021501 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.296454628 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.280932017 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.347272245 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.302486798 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.411510054 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.320838502 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.306267038 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.298790786 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.665348747 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.300828263 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.299353911 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.312496384 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.522399442 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.31935203 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.362204172 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.323896759 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.304133799 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.301031715 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.303370175 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.303864594 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.306647599 seconds)
  done (took 149.931481928 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.301172978 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.303206311 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.298280226 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.360071378 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.305802236 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.304490659 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.301615557 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.29944635 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.301325743 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.330249815 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.304050598 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.300371643 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.306789246 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.257049114 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.309784003 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.314879708 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.305220205 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.301123687 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.328332631 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.303211209 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.29989578 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.304790021 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.312785116 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.29956406 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.301967695 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.374833255 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.334361585 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.335514461 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.311161387 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.303302106 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.34168435 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.352792423 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.933137938 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.155025399 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.30828185 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.323268822 seconds)
  done (took 83.925983533 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.301810393 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.301833655 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.304566675 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.33713581 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.303410831 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.893036608 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.891935444 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.273883445 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.489311121 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.724831309 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.567732814 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.306744851 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.396083643 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.314818907 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.300215259 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.319488695 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.328039619 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.302873264 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.305986464 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.894552837 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.31966247 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.528807555 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.480062894 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.315264619 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337760161 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.697771241 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.302239661 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337588496 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.637554934 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.352124152 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.301419335 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.654100748 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.429149249 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.416256282 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.30291567 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335752294 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.307079048 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.587450601 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.304489459 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.305098793 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.309985237 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.958793529 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.306177506 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.889376461 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.306494308 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.279500628 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.306925549 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.305510824 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.289605934 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.989457699 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.303160868 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.304925613 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.304430961 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.304699771 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.306442145 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.33733812 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.285848489 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.396014849 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.302791111 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.306550659 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337037026 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.303068366 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.516296886 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.305230639 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.789985719 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.356147914 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.407645016 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.871016606 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.303621929 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397182333 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.417496858 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.300370867 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.304115996 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.304359555 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.304192655 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.413517277 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.29979066 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.974704054 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.473866003 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.310774403 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.656508544 seconds)
    (82/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.397478754 seconds)
    (83/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.301047729 seconds)
    (84/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620445541 seconds)
    (85/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.301093071 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.301836433 seconds)
    (87/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.976861785 seconds)
    (88/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.392594 seconds)
    (89/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.297083493 seconds)
    (90/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.304361742 seconds)
    (91/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.304035697 seconds)
    (92/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.971581252 seconds)
    (93/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.86216277 seconds)
    (94/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.522306353 seconds)
    (95/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.302311248 seconds)
    (96/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.969593429 seconds)
    (97/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.304514543 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.304167743 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.15224145 seconds)
    (100/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.839946178 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.299013562 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.926490641 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.302897741 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.411637213 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.474918521 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.316486792 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.305283049 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.300751411 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.632815152 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.306900131 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.360637509 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.300828785 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.304070344 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.703931769 seconds)
  done (took 385.12787222 seconds)
done (took 620.183843079 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.198056161 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.13992828 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.286398464 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.153526418 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.134039663 seconds)
  done (took 12.109911798 seconds)
done (took 13.304742042 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.500740878 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.493238106 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.364926925 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499774302 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.333677781 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.510082336 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.475227466 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.32215681 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417501559 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.38116984 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412647719 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.35230408 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.333698863 seconds)
  done (took 19.592003852 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.618298323 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.307027458 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.372504585 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.567533867 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.345029387 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.597479255 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.63325268 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.307728492 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.502757633 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.324937421 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.326184834 seconds)
  done (took 19.101157327 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.596535887 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.311840171 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.371059548 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.575700388 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.346439176 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.601939098 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.634386734 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.309387302 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.493069229 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.353468168 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.326370868 seconds)
  done (took 19.116276541 seconds)
done (took 59.009197391 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.342144459 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.399386409 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.337862086 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.321206829 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.320266459 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.322727473 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.324525867 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.320246821 seconds)
  done (took 11.882426328 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.316798058 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.320844743 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.322063501 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.320501639 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.318539042 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.317870597 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.317300977 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.318846986 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.318120415 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.323563046 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.320615486 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.320626319 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.315956671 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.318333955 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.318825609 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.320434556 seconds)
  done (took 22.30747553 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.323654392 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.320474643 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.322262504 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.318658247 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.318024516 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.317545953 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.321933624 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.317322153 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.319763208 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.31915721 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.321456979 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.321480348 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.320353056 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.319986943 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.31581747 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.321025134 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.325138583 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.32092359 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.323549331 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.319878317 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.321872869 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.318741501 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.319718997 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.322419504 seconds)
  done (took 32.888972589 seconds)
done (took 68.277643677 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.306341403 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.308892663 seconds)
  done (took 5.811234477 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.377892138 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.379398219 seconds)
  done (took 3.9547113 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.321140636 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.3204385 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.319832417 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.32118668 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.323165722 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.321716635 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.321776673 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.321993733 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.320733087 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.323439292 seconds)
  done (took 14.412585684 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.320332073 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.324302625 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.320754336 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.32341434 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.32045716 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.321825267 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.320654253 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.319588604 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.320654269 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.318147966 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.322684089 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.324221026 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.321515183 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.320017555 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.322668667 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.321073364 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.322616548 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.320759224 seconds)
  done (took 24.982404902 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.33381451 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.340266901 seconds)
  done (took 3.874734232 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.449347808 seconds)
    (2/7) benchmarking "second"...
    done (took 1.362516023 seconds)
    (3/7) benchmarking "month"...
    done (took 1.427214054 seconds)
    (4/7) benchmarking "year"...
    done (took 1.418031872 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.363703774 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.340871459 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.361205116 seconds)
  done (took 10.920376612 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.308995312 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.600611303 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.778803967 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.462361106 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.299997856 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.319981509 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.285258558 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.32287627 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.32345534 seconds)
  done (took 14.900563212 seconds)
done (took 80.055668404 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.305949961 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.360084802 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.311150626 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.323507515 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.6257928 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.355678499 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.30699614 seconds)
done (took 16.790571091 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.286129255 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.289316238 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.288160254 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.327175823 seconds)
  done (took 10.386320745 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.308186543 seconds)
    (2/2) benchmarking "read"...
    done (took 1.628696275 seconds)
  done (took 5.132270093 seconds)
done (took 16.71789777 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329653945 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.32053614 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.319407445 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.319503811 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.317895625 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.317755425 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.317171261 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.320550291 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.318604958 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.316701251 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.321859744 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.319387062 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.315968509 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319046916 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.319536639 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.320357068 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320185759 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320433547 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.31915087 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320911855 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319600479 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318927183 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.319519974 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.321510147 seconds)
  done (took 32.870254066 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.321517891 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.319067052 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.321480241 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.320682016 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.321984363 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.320636967 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.319969021 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.3220685 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.32071746 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.321786321 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31970548 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.322086005 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.319379966 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.321269656 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321648695 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.321392267 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.322015469 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323219935 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318886474 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.325126301 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.320302762 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32119625 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.320239628 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324641935 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.325161673 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.318290907 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.320237756 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.324326095 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.320417251 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.323079461 seconds)
  done (took 40.841327845 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.326392158 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.327947213 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.320323549 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.320443976 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.319332712 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.320186694 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.319922978 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.318491851 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.322285667 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.319157282 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.321068677 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.322169005 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.320788448 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.32095503 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.319450549 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.321387697 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.317850255 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.321108263 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.31856283 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.320039385 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.32116177 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.321552583 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.321722344 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.321467348 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.320518741 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.322040485 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.320744644 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.319993046 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.320167116 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.322655372 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.321969822 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.323780218 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.322913649 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.321805304 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.320454507 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.321247222 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.325903998 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.327060539 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.320113717 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.322081271 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.32248828 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.322014091 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.323268973 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.31894134 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.322287891 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.320698789 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.322994969 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.318492232 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.322099389 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.320312181 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.322888028 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.324593928 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.321356158 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.321657247 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.322956407 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.320999689 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.322025379 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.31994319 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.319021965 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.323265644 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.320331644 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.322831485 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.320198832 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.32404692 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.323341372 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.321287998 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.324364823 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.324378473 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.324474698 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.320891974 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.321717792 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.323197269 seconds)
  done (took 96.362754513 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.321982078 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.324095759 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.320182573 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.322783664 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.321217147 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.323034569 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.320756273 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323839083 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321380673 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.319840387 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322839068 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.324044118 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321062773 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.323762234 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.323180699 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.322223128 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.321355642 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322663771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.323147468 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.325533215 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.323481179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.320525654 seconds)
  done (took 30.290071171 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323819416 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.32521543 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.322328131 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.324337787 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.325411909 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.32544511 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.322252141 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.322537075 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325247986 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322758996 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319592519 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324585207 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.322944268 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322091626 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.323154946 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.3222311 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.323641226 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.326077636 seconds)
  done (took 25.022800136 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.326160438 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.320823638 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.324275807 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.321136285 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.323949174 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.322823364 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.321228111 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.321515546 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.324095091 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.32331546 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.325851019 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320206613 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.325417213 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322718155 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324558522 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.324025585 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.323243398 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32305735 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324412274 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.323423173 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.324482608 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.323185485 seconds)
  done (took 30.311737914 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.326305892 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.323727343 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.323977963 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.321863857 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.322967043 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.323031552 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.325805016 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.324955839 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.326276719 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.32546075 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326192308 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.32423078 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.32550734 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.322920953 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.323429616 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.323740876 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.325202654 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.326448951 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324347739 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.328542342 seconds)
  done (took 27.695459394 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.326599605 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.32301353 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.324891846 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.324170965 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.324541135 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.323422753 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.325405252 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.324729041 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.324900802 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.323032289 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.325415432 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.323978626 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.326835613 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.325029707 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.32338919 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327312356 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.325969661 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.324582192 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.325771564 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325879656 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.325970296 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.323579893 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.328383245 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.325529788 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.328870354 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328502097 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.325562338 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.324831514 seconds)
  done (took 38.311615424 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330084644 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.326508407 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.327437087 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.328421771 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.326137733 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.329417902 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.327443342 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.328084087 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.326923331 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.32772779 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.328060859 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.325642192 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.328730536 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.329977743 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.327811035 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.328380612 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326192907 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.329815716 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327351845 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325872814 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.325921442 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329579663 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.328899415 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.328803437 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328021847 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.32887871 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330213802 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.328278275 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330762437 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.327060173 seconds)
  done (took 41.045466195 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.344975958 seconds)
    (2/2) benchmarking "in"...
    done (took 1.34748894 seconds)
  done (took 3.895425789 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.330635541 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.329763275 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.331397238 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.32943886 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.3282082 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.325578963 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.331179807 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.328024559 seconds)
  done (took 11.839408373 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.321204184 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.329114743 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.32808646 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.330380326 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.32753051 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.322156773 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.332080256 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.333892402 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.32366575 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.326467543 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.326714706 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.326603405 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.326742722 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.326850389 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.325873423 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.326881185 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.333522949 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.331046682 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.329276315 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.327636185 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.332932153 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326463705 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.330089284 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.332280416 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.325456715 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.332436455 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.331897145 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.335608611 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.326503934 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.330924161 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.327534149 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.333503796 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.328775087 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.327961731 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.3282511 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.332766396 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.330806906 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.333164409 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.33885465 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.336976684 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.329924141 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.331893862 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.329224421 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.330457885 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.330948639 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.336988129 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.334782026 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.332926375 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.327883116 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.32657759 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.335408813 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.326947629 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.334360917 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.330938419 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.333143507 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.338479849 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.340767308 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.326745181 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.330631932 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.336265816 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.344648295 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.342568213 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.335727219 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.339048402 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.333366533 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.343479621 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.340866781 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.342471349 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.333533262 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.334927804 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.338686955 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.348428653 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.345700081 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.341926514 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.333623549 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.333742181 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.329130728 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.33762145 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.336881201 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.339799308 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.341480799 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.335843824 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.333591931 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.342225656 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.332686149 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.340101232 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.334260609 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.336143733 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.330323281 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.341913886 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.34266591 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.33595657 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.329819927 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.331342166 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.334365819 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.338589668 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.330323485 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.333867123 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.336857649 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.337107087 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.334401279 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.332398702 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.33813578 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.339879159 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.3345518 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.337739684 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.342917871 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.332440569 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.344347223 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.341878997 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.33867843 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.32914625 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.334973946 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.342685826 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.329057696 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.337679649 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.340769813 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.334746289 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.340417514 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.338301898 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.338302878 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.35004549 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.343169543 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.3383303 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.333418055 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.34206384 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.338322655 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.339189497 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.342025348 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.337429336 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.33782872 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.336606386 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.344425007 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.336042478 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.339176886 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.331551253 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.341647523 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.338070547 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.341884953 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.335726902 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.342552343 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.338603213 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.34184147 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.345641418 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.345545978 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.332684691 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.349823157 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.340612994 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.332775971 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.336849773 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.336899163 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.333905979 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.328604419 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.337375953 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.328470921 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.334690207 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.317239355 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.328771906 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.324550031 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.325063561 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.323567475 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.318226526 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.32057268 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.322471215 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.318792566 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.317826227 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.32190578 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.318546545 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.321143049 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.308679591 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.320071685 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.30905857 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.313221016 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.319934509 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.313229746 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.317561817 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.310718506 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.32307158 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316557378 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.31520429 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.307192694 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.317049455 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.32038732 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.316712043 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.324876609 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.312010861 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.316008976 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.307972176 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.313078369 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.319011776 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.310459985 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.323257366 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.320032866 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.327137336 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.314678516 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.317232337 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.309639341 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.321207674 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.317943421 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.324556145 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.31791186 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.316279319 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307721941 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.320922222 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.307683843 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.321023515 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.307864732 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.319870314 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.316451243 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.32008833 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.317516432 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.3112806 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.317267995 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.321614637 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.3200841 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.31862901 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.314019626 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.321732854 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.308082345 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.314059335 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.321223903 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.320102959 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.322522807 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.327256944 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.319541196 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.324208454 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.320952056 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.314287804 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.323258636 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.317102252 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.31922012 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.325091814 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.324010684 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.313740224 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.324107383 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.325113578 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.314801917 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.322514132 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.330126174 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.318857992 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.314961429 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.322328923 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.320685693 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.320879609 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.314211076 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.314924255 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.322563036 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.321707837 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.332809 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.309186973 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.323702696 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.314552819 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.321864055 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.31635304 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.321748987 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.322624474 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.323600952 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.327913233 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.321824554 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.314466312 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.326515081 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.321789035 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.31779263 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.313643184 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.320914828 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.321318129 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.323406381 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.322200976 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.318376928 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.322262482 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.317151595 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.323230664 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.313139924 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.334634391 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.338323626 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.323538802 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.328837012 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.324421654 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.325726053 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.322552649 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.317029646 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.319401886 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.320513751 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.319294132 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.316108487 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.324773109 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.315739111 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.325829801 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321909633 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.323193425 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.326786173 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.324462384 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.315869217 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.325228793 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.323017977 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.319792529 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.316608189 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.325977997 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.317679583 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.324872145 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.322797533 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.320235799 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.329458772 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.329986203 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.316474733 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.322110239 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.315666833 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.319171129 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.318566311 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.328710764 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.316536516 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.328535504 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.318143396 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.319866737 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.31871578 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329173984 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.33417551 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.320093289 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.32550698 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.320741165 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.316299711 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.318118599 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.325088403 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.331989963 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.337304784 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.314219046 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.324265532 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.324705301 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.323132497 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.323435071 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.326319176 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.323925736 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.321861767 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.327117195 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.329223484 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.31906281 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.329552221 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.335671656 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.322393444 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.32530718 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.317863884 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.325442138 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.33391903 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.316598057 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.320658115 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.322504064 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.329703839 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.326550842 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.32810251 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.326056047 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.328193072 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.332840992 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.321510787 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.318545637 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.312271831 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.318459322 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.321071523 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.315915164 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.325450339 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.30999557 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.320621682 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.316050233 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.310529219 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.310938627 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.312740361 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.321354716 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.308251194 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.321201972 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.314282454 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.31028332 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.312505527 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.321280732 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.307145285 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317056784 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.328003866 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.304534425 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.312922441 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.308481444 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.303558283 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.314320201 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.31347259 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.306426794 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.307235906 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.304131577 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.31182443 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.301384494 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.309853962 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.302251895 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.310710397 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.30690791 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.30625623 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.301970995 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.303042712 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.297434085 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.303478678 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.301975389 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.312117515 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.30198171 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298879219 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.297842391 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.30533587 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.311669101 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.299321725 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.303019933 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.299425067 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.295650462 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.298234117 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.303411067 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.292774735 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.30110267 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.292143173 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293615598 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.294280546 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.301356384 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.299828607 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.300898444 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.292826595 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.295676322 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298808442 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.299858845 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296256178 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.296777848 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.304735076 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.292307107 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.29269332 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.302796726 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.293899094 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.306614723 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291960688 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.297226336 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.297422035 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.299388942 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.299175976 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.301747283 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.293909169 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.295541126 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.304209341 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.301632377 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.295870598 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.294652315 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.30004831 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.292911497 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294301012 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.296707869 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.29452184 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.289799915 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.299951364 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.287869814 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.289908417 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.290567271 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.299740975 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.300768933 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.295032077 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.285610805 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.298401869 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.300219709 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.300519249 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.284347602 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.287498991 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.286456921 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.288678866 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.288479722 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.281299777 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.297664386 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.292352571 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.287456791 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286113529 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.286194089 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.276871939 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290621806 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287888903 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.279807344 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.291765025 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.282244607 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294728516 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286830977 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.286546178 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.278111001 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.278663773 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.283798144 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.281006382 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.289304547 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287551905 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.289203932 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.285468918 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287456039 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285495333 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.286076416 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.286585977 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.280924156 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290090194 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.278652775 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.28748409 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.288692763 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27959499 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.289872139 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283804562 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.28001998 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.282215251 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.291752561 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.287441824 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.279570593 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.282668777 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.292531961 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.29950051 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.290545661 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283029572 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.285000502 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.289915781 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.287091707 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.288182225 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.279470918 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.298751763 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.300943832 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280665534 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.282677316 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292156753 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.298280346 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.283389042 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.287651151 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.283395373 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.285674852 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.291800555 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.288120211 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294803047 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.295249721 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.283970756 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.291228258 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.283836301 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.28723406 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.293700261 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.300495477 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.290993524 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.288053439 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.301955438 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.305746948 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291650804 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310784735 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.297684723 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.291448921 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.296986895 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284071533 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.295311551 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.289479529 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.298317437 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.291830517 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.29151259 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.291607052 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.283216502 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.294013521 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.300856341 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.303057682 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.295115783 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.284072647 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.288822352 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.293315319 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.292092785 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.296472985 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.294785528 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.29472078 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.293499482 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.285310915 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304310605 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.308930119 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.300348003 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.295912035 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.292989433 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.295598514 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.296428085 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291568927 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.294532842 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.293521007 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.293870379 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.291674968 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.303843297 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.295732937 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.28962844 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.293173556 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289928428 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.299180297 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.304695197 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313015953 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.297520156 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.297272824 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.295210186 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.294170176 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290044501 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.298252278 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294202215 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.288583412 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.292243353 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295794737 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.295178267 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.294089322 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.289302589 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.299425163 seconds)
  done (took 784.667572793 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294729549 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295019777 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29731865 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295688896 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296966145 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296337622 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295389262 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.295183089 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296371535 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.295301167 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.295581429 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295092282 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.292842772 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.294113012 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296489395 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296073655 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292605828 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291921469 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286276453 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288785616 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287019652 seconds)
  done (took 28.349572792 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.285079828 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.288395707 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.291096733 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287718702 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279929537 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.281272654 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.283899911 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28351258 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278352266 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279275668 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27885973 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289362707 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.281603542 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283350342 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283255666 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282265428 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.282916988 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283299501 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.283775102 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282964094 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282180107 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.282541384 seconds)
  done (took 29.401954137 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.282239436 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.282721018 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.274784132 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.285417643 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.282512414 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.281569036 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.283273177 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.282037554 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282696598 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.274876939 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.275803876 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.277517902 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.278259587 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.287190836 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.279857263 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.287750959 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.284040849 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.284319907 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.283805549 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.284134758 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.285850934 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.297023806 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.282071989 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.274855144 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.285489468 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.283147292 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.28404265 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.28533091 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.276710988 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.286043578 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.282558525 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.277653767 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.285394838 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.287138933 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.2788422 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.288318462 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.283951567 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.28427257 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.284359129 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.284377353 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.298381798 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.284565183 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.288171378 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.298436486 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.285885331 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.278975968 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.289871666 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.284761215 seconds)
  done (took 62.790507157 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.284427991 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.28442796 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.284187884 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286898769 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.285342201 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.28501016 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.284959162 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286028462 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.285610759 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.284914926 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.285229985 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.286235774 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.285546734 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.285390108 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284591099 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285979013 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286061476 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.284157235 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.285543147 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286076419 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.285844497 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.285399643 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.285319445 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.286590902 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287619567 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286917171 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286763498 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.287863027 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.28714525 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.285515656 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.288732699 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287565274 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.28762898 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.287205093 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.287347048 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286392697 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.286302695 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.287029509 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287538985 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.286262319 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.288280258 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287612952 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.288603209 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.288675534 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.287945847 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.288022618 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287657305 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.287077885 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.288261264 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.287962321 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.290310924 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.28746611 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287779208 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.288874755 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.288434617 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.288072022 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.287803097 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.288219155 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.289435823 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.288703946 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.288324434 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288321129 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.290161957 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287860942 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.288963361 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.288547695 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.290273114 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288486006 seconds)
  done (took 88.691686308 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288708775 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.288729286 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289656984 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289410963 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289024234 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.290164939 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289266003 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.289366305 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289328687 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289586501 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289397946 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.289229048 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.289472459 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29030414 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290128987 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292421861 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.289914177 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290246045 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291554285 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291241713 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.291199678 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292045245 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291825595 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290962677 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292107055 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291465324 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291743048 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290638567 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292427598 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293134952 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29169207 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.290834769 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291085731 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292312647 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.291324106 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.2908187 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290740646 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292127626 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.291434988 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.292222233 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.291716996 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292464323 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293244004 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.2930412 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292582835 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292224421 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293454639 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.292132704 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293820835 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291184698 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.292760197 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292993999 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29332998 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292518215 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293544451 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.292216711 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294455156 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293741343 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291926229 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293463632 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293768322 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.294627627 seconds)
  done (took 81.249338518 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293297295 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.29308977 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.294069147 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.295970969 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.292739675 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29318138 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.293684869 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.294067606 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.293590432 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.292683342 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294665081 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294758546 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294898664 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294039452 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.294574738 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293914323 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293717834 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294717547 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290188644 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293566375 seconds)
  done (took 27.051227309 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.293415784 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.289537573 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.29486195 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295211905 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.29442395 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295715123 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.293584941 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293946251 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293540738 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293755465 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294996656 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295179446 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294885092 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296083788 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295704658 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295701504 seconds)
  done (took 21.889282512 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294885429 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.295693519 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296136384 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.29569548 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.295821273 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.295130575 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.296541014 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.297103584 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.295665787 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.296189364 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.296512087 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.295985004 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.296601819 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.296861275 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.296378931 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.297284452 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.296753196 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.295972034 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.298087632 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.297230133 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.298723624 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.295808493 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.297540239 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.296333073 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.297730702 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.298490325 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.297254563 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.297483862 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.29604111 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.299212644 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.297991876 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.298151986 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.297721198 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.297891363 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.297312672 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.298158542 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.294370264 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.297643263 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.298524912 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.297733981 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.297713884 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.298491035 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.299539268 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.294608649 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296644462 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.297818755 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.298017255 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.299843162 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.298344648 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.298448954 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.297284664 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.29937732 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.299632698 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.299696787 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.299178232 seconds)
  done (took 72.533130801 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298976168 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299378442 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.299774851 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.299333844 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299309953 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.298391378 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297995673 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296889155 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300556073 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.299464191 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299453546 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.300968263 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299063459 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.300405909 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300835186 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300712992 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.300881211 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300175101 seconds)
  done (took 24.574794257 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.299543742 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.300435595 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.299892394 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.300502751 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.300416016 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.300148748 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300113708 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.300387022 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301732178 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.301279613 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299735892 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.301236114 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300771557 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.301555266 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.302485812 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301924147 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.301574805 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300458325 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.301146751 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301173865 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.301942862 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301323912 seconds)
  done (took 29.803794337 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.293707493 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.292226741 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.293562 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.30889175 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.305620499 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.293293381 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.292688429 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.293648048 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.312798303 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.326727767 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.322961072 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.306360859 seconds)
  done (took 16.827559528 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302478659 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302044547 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302185673 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303457371 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303186403 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302643575 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30389966 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304889986 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303187904 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303479254 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302057508 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300334562 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303044613 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299675703 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30235667 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303945024 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302949583 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302417231 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303594201 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303566998 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303543243 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303538254 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303834844 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3049685 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302728789 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303862706 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304905301 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303423884 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30546914 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303855736 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304404978 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305833368 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304195739 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304479972 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304134415 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306453399 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304210893 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30451485 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305238435 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30571354 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30386156 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304594218 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304884544 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300562352 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305802378 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305171427 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307470069 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306754671 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306050743 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307561897 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305100914 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305955387 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303064004 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306401822 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303305493 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306511207 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30638054 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307505924 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307377894 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30669177 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303996583 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305576761 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309165941 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307855133 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307197163 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305073063 seconds)
  done (took 87.281844248 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305801259 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308634147 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307926272 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308266387 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304644383 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3066931 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308253523 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31149857 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306906302 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30572102 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308981646 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311013231 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309259732 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309926615 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310648542 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307438759 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306070262 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310179427 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30953798 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305919428 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309694231 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308501383 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307521035 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302188992 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306139192 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308128361 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304447292 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30768914 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307263228 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311298606 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310005356 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308590031 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308775222 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305808352 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307943858 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307725252 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307399139 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318426959 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311096449 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30927855 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30982053 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307152161 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307940868 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302757244 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312015169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306952837 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311256967 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30790786 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311633351 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313039681 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308512515 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313056045 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307813458 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30844427 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309301076 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312106901 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304091748 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313137758 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308538956 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31360725 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309387013 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310486514 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30961749 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311172002 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312875624 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310595721 seconds)
  done (took 87.576094971 seconds)
done (took 1822.370526274 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.463389552 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.420765356 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.302409073 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.310509068 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.301154431 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.290995612 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.311856649 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.299804647 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.299908726 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.302352065 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.297074708 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.490224846 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.333537076 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.300450931 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.301273843 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.400881879 seconds)
  done (took 26.610795175 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.324719 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.318001452 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.42191015 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.31938187 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.335686014 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.491750079 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.372473155 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.32014514 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.47409005 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.328762377 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.3028866 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.331429613 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.321278214 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.300983306 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.332103496 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.491635633 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.564160861 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.30820579 seconds)
  done (took 28.846871341 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.736263285 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.319946616 seconds)
  done (took 5.254629372 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.332359077 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.313705275 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.316900517 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.316625923 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.316519774 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.305433333 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.318015083 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.323363207 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.309556872 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.438192959 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.317150518 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.328616982 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.313840654 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.318140905 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.323378536 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.363609036 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.469564032 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.325568038 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.325268156 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.325581177 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.314702598 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.406605541 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.354679773 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.323299391 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.430749532 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.322287064 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.32548997 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.322484125 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.429237059 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.329801208 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.315389782 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.317839388 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.321325487 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.266439594 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.842512217 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.309825924 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.343337048 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.325089852 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.328133958 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.450908471 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.32191388 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.324160757 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.306223579 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.839906168 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.423813726 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.427751213 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.310594518 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.32045757 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.323032772 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.378520577 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.31921883 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.318156717 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.370967037 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.11208344 seconds)
  done (took 84.379677986 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.364005294 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.309995056 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493085255 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.329465712 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.314246846 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.309644955 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.311146725 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.580752688 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.325356965 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310516962 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.630515184 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.91108353 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.318572647 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.377633122 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.351127156 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.359665119 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321433858 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.314803284 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.31464001 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.314994169 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873808438 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313489622 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.315898981 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.398769255 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.351450889 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.837583026 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.319321513 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.31261751 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.317243484 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.311025406 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.886387737 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.321637118 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.362647536 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.310184004 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.595246804 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.693776031 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.659098228 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.320573214 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.345775077 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.31049637 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.339128081 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.834319946 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.677689363 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.318322034 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.312710333 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.832087509 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.314814765 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.317347964 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.325049226 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.578432595 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.310175093 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.315721308 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.311562001 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.316647416 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.313263642 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.364597886 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.35424438 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.848086076 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320313026 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.31473294 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.324226106 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.314973631 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.318324828 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320095209 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.318158185 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.678593821 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.569810292 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.320513827 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.672791425 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.886012562 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.318073971 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.973402822 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.320216022 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.332647984 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.363518049 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.314705692 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.318017797 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.844515106 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.318354254 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.314978152 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.65841423 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.322630588 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.621500394 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.333037537 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314702441 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888076085 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.325815488 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.37135138 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.317320755 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.319928964 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.321091095 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.322257119 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.598062829 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.359656175 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.313559835 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.312145884 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.34793365 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314032701 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.334519182 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.323102237 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.953014654 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.324913034 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.315982338 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.338340009 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317111851 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.316693426 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.316469736 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.317492746 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.595123212 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.314540428 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.328680875 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321330096 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.318259264 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.326636036 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.407679862 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.328053833 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.620879642 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.320119865 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313846202 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.321435783 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313686553 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.337645389 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315776998 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.33221291 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.314619621 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.619531596 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.331466313 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.320125853 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.317876607 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320684798 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.333466489 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.317774012 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.371279012 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.320918828 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079655149 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.333313396 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.335860276 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.316206563 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.330708963 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318808319 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.33677232 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.316939086 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618267666 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.605010642 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.571984829 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.322599926 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.321268899 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.105796846 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.325640039 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.500610728 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.334523141 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.320103893 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.605870908 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.545055027 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.31960512 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.320614647 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.324817786 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.60190667 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.329601093 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.635455302 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.912929909 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.323356331 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.328963488 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.088774296 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.132490115 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.324634682 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.323085348 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.626070765 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.340411423 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.324684981 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.321125793 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.326741295 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.319343169 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.330285904 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.32855154 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.321359403 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.323134114 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.619491191 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.513382058 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.339106125 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.33285565 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.846533877 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.345605314 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321396947 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.330724206 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.324222779 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.323530984 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.375747349 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.327086644 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.370168981 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.327200485 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.334637389 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.875104825 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.326138838 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.325276778 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.51690329 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.035576326 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.325030097 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.322467893 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.322866561 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.375180061 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.881962411 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.362710467 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.622893172 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.337539105 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.361543935 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.322167435 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.342798272 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.881270013 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.328986442 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.324569891 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.049151005 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.331019344 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.8022748 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.322352677 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.32303714 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.987771409 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.329763037 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.322874715 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.328368076 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.323473893 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.64370567 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.323110155 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.326580609 seconds)
  done (took 495.304091984 seconds)
done (took 641.583732808 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.322153273 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.321413761 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.326398669 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.327308479 seconds)
  done (took 10.508521664 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.342841191 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.330726979 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.339785687 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.330574745 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.339546401 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.331445358 seconds)
  done (took 9.224377292 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.323691546 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.329152382 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.328155626 seconds)
  done (took 8.189482094 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.527811588 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.346629996 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.674504703 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.32858131 seconds)
  done (took 9.091572812 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.342850386 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.337171221 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.338032574 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.341190095 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.340144441 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.343840696 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.340873787 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.339039158 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.340541151 seconds)
  done (took 13.276780578 seconds)
done (took 51.508651459 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.407976497 seconds)
    (2/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.307469169 seconds)
    (3/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.455036443 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.401243823 seconds)
    (5/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.41198274 seconds)
    (6/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.441477957 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.365018905 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.431951587 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.427758307 seconds)
    (10/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.489548281 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.458373353 seconds)
    (12/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.308626874 seconds)
    (13/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.519864524 seconds)
    (14/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.510079344 seconds)
    (15/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.496054277 seconds)
    (16/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.312305596 seconds)
    (17/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.40940809 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.326599514 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.600418448 seconds)
    (20/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.743359059 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.408400096 seconds)
    (22/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.393137372 seconds)
    (23/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.535438895 seconds)
    (24/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.452220213 seconds)
    (25/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.603498668 seconds)
    (26/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.313452404 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.419144803 seconds)
    (28/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.421825373 seconds)
    (29/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.36311775 seconds)
    (30/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.408018931 seconds)
    (31/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.30749225 seconds)
    (32/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.463814225 seconds)
    (33/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.348132553 seconds)
    (34/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.426004119 seconds)
    (35/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.64271793 seconds)
    (36/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.339342349 seconds)
    (37/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.536420333 seconds)
    (38/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.601286594 seconds)
    (39/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.546520315 seconds)
    (40/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.565615078 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.431379568 seconds)
    (42/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.510576914 seconds)
    (43/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.307176379 seconds)
    (44/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.572192383 seconds)
    (45/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.405843887 seconds)
    (46/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.631996637 seconds)
    (47/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.450911059 seconds)
    (48/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.425630255 seconds)
    (49/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.495536224 seconds)
    (50/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.68134371 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.431085384 seconds)
    (52/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.520249399 seconds)
    (53/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.357271813 seconds)
    (54/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.308306845 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.475921507 seconds)
    (56/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.488756477 seconds)
    (57/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.312375772 seconds)
    (58/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.309951897 seconds)
    (59/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.3416804 seconds)
    (60/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.423100514 seconds)
    (61/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.640523246 seconds)
    (62/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.426307039 seconds)
    (63/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.425317117 seconds)
    (64/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.429458634 seconds)
    (65/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.599552742 seconds)
    (66/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.311673942 seconds)
    (67/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.461031304 seconds)
    (68/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.403580397 seconds)
    (69/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.309386867 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.340916049 seconds)
    (71/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.320497069 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.478163347 seconds)
    (73/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.372304553 seconds)
    (74/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.676197192 seconds)
    (75/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.486586409 seconds)
    (76/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.308022905 seconds)
    (77/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.371562297 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.414669654 seconds)
    (79/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.681736553 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.442881746 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.420439698 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.332960752 seconds)
    (83/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.844376715 seconds)
    (84/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.315839112 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.570788108 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.371532885 seconds)
    (87/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.373378286 seconds)
    (88/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.414863699 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.587319048 seconds)
    (90/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.426174809 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.451428001 seconds)
    (92/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.682685693 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.449653511 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.460437271 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.371207856 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.445382517 seconds)
    (97/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.31146503 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.532005563 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.486475372 seconds)
    (100/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.680091123 seconds)
    (101/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.340445087 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.448179002 seconds)
    (103/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.321138366 seconds)
    (104/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.366986536 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.464900931 seconds)
    (106/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.317995735 seconds)
    (107/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.613957012 seconds)
    (108/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.520627652 seconds)
    (109/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.819607064 seconds)
    (110/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.449906537 seconds)
    (111/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.309719246 seconds)
    (112/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.414840653 seconds)
    (113/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.488604205 seconds)
    (114/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.552036761 seconds)
    (115/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.309114232 seconds)
    (116/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.386092737 seconds)
    (117/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.413190317 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.373495528 seconds)
    (119/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.510248088 seconds)
    (120/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.541661725 seconds)
    (121/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.325464101 seconds)
    (122/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.410793264 seconds)
    (123/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.364943835 seconds)
    (124/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.371551986 seconds)
    (125/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.543298559 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.316565713 seconds)
    (127/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.500084127 seconds)
    (128/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.358161548 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.342178576 seconds)
    (130/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.475602101 seconds)
    (131/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.426097843 seconds)
    (132/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.316456677 seconds)
    (133/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.580862166 seconds)
    (134/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.317401595 seconds)
    (135/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.504063769 seconds)
    (136/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.376658678 seconds)
    (137/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.419025605 seconds)
    (138/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.311339695 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.49402151 seconds)
    (140/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.312107668 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.403927575 seconds)
    (142/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.406669925 seconds)
    (143/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.316204614 seconds)
    (144/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.310954715 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.489489927 seconds)
    (146/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.447821245 seconds)
    (147/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.408942459 seconds)
    (148/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.367272654 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.492867275 seconds)
    (150/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.375134865 seconds)
    (151/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.576333619 seconds)
    (152/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.315865738 seconds)
    (153/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.506690959 seconds)
    (154/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.40954935 seconds)
    (155/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.404168199 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.42275523 seconds)
    (157/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.485391324 seconds)
    (158/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.319631461 seconds)
    (159/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.31450967 seconds)
    (160/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.315694352 seconds)
    (161/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.325637444 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.341322126 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.410523272 seconds)
    (164/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.577395041 seconds)
    (165/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.492693935 seconds)
    (166/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.348255436 seconds)
    (167/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.387105299 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.619685277 seconds)
    (169/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.627278815 seconds)
    (170/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.599147783 seconds)
    (171/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.373830321 seconds)
    (172/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.322050454 seconds)
    (173/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.317006826 seconds)
    (174/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.45475069 seconds)
    (175/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.518914538 seconds)
    (176/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.576527837 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.451393213 seconds)
    (178/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.453698967 seconds)
    (179/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.321728544 seconds)
    (180/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.456072547 seconds)
    (181/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.626116073 seconds)
    (182/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.487476576 seconds)
    (183/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.319276976 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.537265603 seconds)
    (185/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.3689915 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.443535588 seconds)
    (187/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.550982145 seconds)
    (188/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.554194053 seconds)
    (189/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.494259666 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.32056984 seconds)
    (191/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.36116429 seconds)
    (192/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.448279357 seconds)
  done (took 326.057332265 seconds)
done (took 327.267923162 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364438844 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.438434503 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.345252532 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.348271472 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352202814 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.340237238 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.385462009 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.348287673 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.368346716 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.365879682 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.355052955 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.355025855 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.367679695 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.356327296 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.383480001 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.35023512 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.352405174 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.359102772 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.364534068 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.365978637 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351665807 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.348722036 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.379814086 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.352350897 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359784137 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363506777 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.355478841 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.351718906 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.361429622 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.370195843 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.34824353 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.352935825 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.366572925 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.363017241 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.352929054 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.361257281 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350767881 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.436519389 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.375769492 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.359682587 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.361160867 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.36788941 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.357396215 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.355849385 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.365011562 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.382995992 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359175633 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.371974467 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.345756567 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.348395935 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369789175 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.369407665 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.357005276 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.357962026 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.346235407 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.368014598 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.360429653 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373346973 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.361029717 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358028515 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.385875544 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375055951 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.365788374 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35803668 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.358043477 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.37034934 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.359622035 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.368280335 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.364042143 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352478295 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353229849 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.364315411 seconds)
done (took 107.376200678 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.473927758 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.348067153 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.512508625 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.362194724 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.514917724 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.473764461 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.356687052 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.364308204 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.362909478 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.155690982 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.361452109 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.363538323 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.351339073 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.358912399 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.472195171 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.358881351 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.362200017 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.053699533 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.360476158 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.489096031 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.358988019 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.358074262 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.359680366 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.154619945 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.350580788 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.345217228 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.495577038 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.362370693 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.05716845 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.34832758 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.35249922 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.051527889 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.490088616 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386202835 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.369164907 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.37195414 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.519079086 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.367996628 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.478134176 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.481671925 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.519631324 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.402652299 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.348182218 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.348407483 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.362544305 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.364448573 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.363366217 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.39543643 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.354758705 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.364866454 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.06024361 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.375069254 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.374220692 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.366375545 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.368302528 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.391062322 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.365572555 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.368262483 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.498166248 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.372943514 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.475908958 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.160423354 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.166640128 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.36739827 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.353231408 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.3682404 seconds)
  done (took 109.998169674 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.427426566 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.431261823 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.464038593 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.357954003 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.405357208 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.46826638 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.363973637 seconds)
  done (took 11.151080285 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.366384186 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.365846784 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.406997612 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.407970903 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.365769535 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.527064988 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.367529722 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.367314953 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.366097972 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.409007105 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.362270006 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.365219207 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.380296862 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.354598813 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.405826815 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.368586566 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.476458536 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.357514802 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.36693172 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.51516062 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363716388 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.378651417 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.411303514 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.375832463 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.371765895 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.361336837 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.14588835 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367641907 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372111685 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.367656668 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36396678 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.428876387 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.37418367 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.355148242 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372421612 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.471556409 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.369943596 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363754527 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.366312022 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.361132528 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.366377443 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.367104456 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.371172561 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.366596497 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.369346973 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.383220692 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.369893577 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.370211015 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.36646952 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368290059 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.405746161 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.369040179 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.367297103 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.368211709 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.415757932 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376170175 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.368310004 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.368494059 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.365908059 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366194385 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.518663764 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.405083962 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.374215715 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.40981002 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.371681467 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.369983872 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.368421138 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.365961007 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.460237906 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.3723451 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.412980044 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.372889887 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.549664868 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.385779854 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370135915 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.364372607 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.365585226 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.373922807 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.35584594 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.369104292 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.368399722 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.364279141 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.366627095 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36953516 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368436858 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.52290802 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471938209 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.373251413 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.377053488 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.37452895 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.373752302 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.414926014 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.372902877 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.372666337 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410052934 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.480943543 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.416693005 seconds)
  done (took 140.686944262 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.371898378 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.37277098 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.371514329 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.389827022 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.363874153 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.364358172 seconds)
  done (took 9.471792264 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.368392045 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.377714315 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.372908876 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.374402355 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.374260703 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.372949822 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.370859831 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362525544 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.37420433 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.370880759 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.372967046 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.370002504 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.372773353 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.375106623 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.372923305 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.372579311 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.37335312 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.371285571 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.374397994 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377628008 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.363887354 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.378271788 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.376398977 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.368309582 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.38189011 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.373900179 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39277395 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.376000544 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.374699062 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.370519157 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.377850407 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.37719547 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.369178674 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.371278795 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.383037542 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.370371843 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380605459 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.380605348 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.374678625 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.376094353 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.377131311 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374151528 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.37668147 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.376842279 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.36834301 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.369616246 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.378271075 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.390755577 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.374945518 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.37688437 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.375991578 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.377352733 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.376969514 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.377666874 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.366076667 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372298169 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.380290019 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.379867836 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.377975259 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.368861542 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.377947357 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.37757959 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.367451293 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.380202695 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.376586683 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.375535165 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.374798851 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.379332414 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378016211 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.376917129 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.380500104 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.380966698 seconds)
  done (took 101.26084061 seconds)
done (took 373.799743372 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.877131807 seconds)
  done (took 4.113867066 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.367786339 seconds)
  done (took 3.613260965 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.657138192 seconds)
  done (took 22.905184472 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.400924941 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.401229608 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.37806476 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.364171767 seconds)
  done (took 10.789934117 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.6341951 seconds)
  done (took 3.878747532 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.378283626 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.372871395 seconds)
  done (took 5.994613993 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.566822654 seconds)
  done (took 3.809696336 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.615457497 seconds)
  done (took 3.866885417 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.376710567 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.389230264 seconds)
  done (took 6.022084482 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.352965255 seconds)
  done (took 3.598098604 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.038078021 seconds)
  done (took 21.287591838 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.386211311 seconds)
  done (took 3.638384867 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.399275559 seconds)
  done (took 3.646874839 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.939637765 seconds)
  done (took 6.182127791 seconds)
done (took 104.58882125 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.369697361 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.365447673 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.366805904 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.367086702 seconds)
  done (took 10.714947331 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.444709117 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.445622832 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.452951151 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.44146638 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.440475942 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.44855976 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.428422106 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.409533048 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.437820656 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.436056395 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.452338037 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.445284487 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.447733559 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.408032424 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.438097397 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.448220618 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.442830197 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.456551692 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.409425931 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.440801296 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.386222385 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.441456738 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.43683446 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.3880096 seconds)
  done (took 35.674787191 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.896635196 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.442125794 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.529267811 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.424945115 seconds)
  done (took 7.539427217 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.481033036 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.488940775 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.509118317 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.540933912 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.590573183 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.500277482 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.407219651 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.402845429 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.391875608 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.488930465 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.576115325 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.486595621 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.706573832 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.383041446 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.700941145 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.385367141 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.384821838 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.488681383 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.539559302 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.568023663 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.384273027 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.490222083 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.495735446 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.491549918 seconds)
  done (took 37.128285451 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.394752455 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.402303707 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.39027993 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.399261049 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.386275896 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.388469079 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.389594386 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.393804838 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.383351292 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.38696787 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.387010565 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.401091653 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.386670027 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.386907074 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.390628453 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.38948923 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.392307032 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.395301179 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.394516988 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.388682976 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.385990156 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.397095105 seconds)
  done (took 31.860237074 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.37025598 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.371240429 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.722729778 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.625821501 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.368920306 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.369688616 seconds)
  done (took 14.075498732 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.447539761 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.58614179 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.379779412 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.727334321 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.815217243 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.383431126 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.376831378 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.622324709 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.917406625 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.90879388 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.429478454 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.450188599 seconds)
  done (took 20.302763748 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.374395636 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.373753387 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.379383959 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.393814225 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.4312687 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.38392564 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.38527004 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.369548401 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.437806608 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.438248445 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.386587535 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.437307642 seconds)
  done (took 22.048428472 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466728411 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385916872 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.401348328 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455437144 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384429874 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380911685 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.457046818 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.110908492 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.393528823 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657324883 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388535646 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461309795 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633732449 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397358981 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38670896 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.352747791 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614456196 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867471256 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387632064 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385291673 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419050681 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385097295 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.418191671 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.593990393 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390669018 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388143041 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.692352444 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386740629 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668676381 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640690524 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.645119515 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392124406 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662184238 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033180159 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495940524 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589881264 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382044496 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3885047 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.378296963 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.421031855 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399456877 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39015915 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640718057 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387414163 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389055859 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397639222 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1193459 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.40016281 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.388093763 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386297493 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644406811 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476940455 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.396581628 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386887284 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402756991 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390990527 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.394406953 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517613634 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033471524 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402587283 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401569536 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.393580356 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391284404 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405823383 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027122544 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.396557965 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.39701885 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396399357 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386166071 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387863421 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418140596 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392770218 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.406401581 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390269637 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148030587 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40654849 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394232138 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921025282 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399932789 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.395176651 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61666563 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391386991 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390265597 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.388621426 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389104278 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121097844 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3993435 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.360312415 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430671423 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.116855722 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.598243203 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418376988 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419199609 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614577206 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.361751726 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391407642 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.397186836 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39352808 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411051723 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.118905703 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391220652 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.396075689 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641650659 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.602727947 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399740207 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.364476894 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872873226 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406383126 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.421064013 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391087027 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599545712 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.00764461 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660996598 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39475539 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447290297 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395086412 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182390937 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407280337 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.404144 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404342998 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670607124 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.207364527 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398730738 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464724172 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403493764 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394826199 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392078066 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397994619 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396811383 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.575729288 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403065085 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.653457882 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.395668886 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392893511 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.401693657 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39885559 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.408524018 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.613739024 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403789345 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67106798 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391725903 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394458374 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394009571 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.609436755 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.393128851 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.399627081 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.734533998 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395721892 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.431480194 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65468538 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430196968 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507010327 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429961856 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.41129037 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648718924 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.404875305 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.401210487 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396212579 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403510088 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396783036 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.404388459 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399218137 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008400313 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37609212 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403020352 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398237248 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.411249855 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468758425 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406808258 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604870541 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.410044607 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40528233 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.401182937 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.405584083 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621644708 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656131935 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.397932055 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589566023 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.875320625 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.009911332 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417664425 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.397153664 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.39707755 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.397552701 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397224854 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395276238 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39844584 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604750061 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666636323 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389713344 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.015396482 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406643196 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396274825 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.408897501 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652594982 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.410487652 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402650115 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.398016659 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403600892 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417619238 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661931169 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620970422 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.41396073 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400935886 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.915881558 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407310872 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.4012313 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398184504 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424081441 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398558583 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308730593 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.744174539 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398087949 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656215542 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405111554 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.422178126 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.401745944 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398964689 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405825008 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.411113219 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423477069 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.606713581 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408821075 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407798589 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03598696 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168291473 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960026505 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405658298 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.402553476 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407958202 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131240091 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402848359 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399719899 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645374858 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134099122 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403843521 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87789724 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.4037491 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156110527 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659225876 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622266705 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401090429 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.402568303 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667926463 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611948616 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42550789 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405060049 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404445042 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.365026664 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963264833 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403595979 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58698614 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134363159 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402264482 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405393258 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.456409932 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.419571113 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797165401 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404617355 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399425281 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410358855 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410716017 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306299373 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409024539 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396442945 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042292711 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.417443393 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.887684785 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404728719 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.613469773 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663548684 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.632555254 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.408940814 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.411151165 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.647887909 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663379339 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399500809 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399600579 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96608101 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.284914795 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.409580583 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40248349 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203125252 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40772872 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688830136 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.40928673 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.416908554 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414092171 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406519381 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402719232 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.403758917 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414041244 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380705563 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885631267 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.403652895 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403189045 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410044041 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408415159 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647770556 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.417152105 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.021721468 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632449489 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397508454 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448401055 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.410234176 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410312308 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.380774178 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403217207 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401089505 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427229303 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.626225894 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.401006584 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.375717779 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418326177 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619527048 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401658961 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.415643025 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625385375 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.410809808 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.415159231 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194379556 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439352952 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417261866 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408165921 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403513562 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44104132 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476797941 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608512592 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.67231603 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.6682461 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80084201 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426483693 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412325473 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.420445907 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49310371 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408202175 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.426576651 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.409883097 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029488177 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185452188 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.029393533 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675101788 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409719352 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414524263 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406272458 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652271133 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40667634 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684103092 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407982796 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.410830868 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450637757 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415296526 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424598684 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627000288 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682320785 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406882607 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416562472 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411008611 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.410322885 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673364514 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.622823429 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894359009 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946366289 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414052503 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420365112 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.152155345 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687216621 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406824681 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404801491 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408622403 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.426737624 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.412057821 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.442149628 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414085557 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659985143 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672824085 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06842039 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.671256375 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.436921305 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.345382888 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4128515 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679415755 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253492895 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61939238 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044098013 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139162471 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667227926 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48865736 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619405374 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.415886328 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652138585 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.409251292 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.436682687 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410165241 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411048253 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.410469226 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.67450252 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040720547 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669356279 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.422031006 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.423201054 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443867814 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.621516318 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639999853 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1514691 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640966733 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681371859 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.427597352 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414443465 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04783676 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676560482 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416150009 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.417861214 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635068221 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420646976 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452236402 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.286246182 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.417054481 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952738315 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.624809324 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432932603 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41818517 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157553518 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043785979 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.419229312 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902665234 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423226378 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429012514 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698220775 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.422855914 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416505785 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703047656 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.423060173 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418509935 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629339409 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.042852203 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1863823 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.430972739 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41599305 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.417838691 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418820258 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480219577 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41871955 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424881192 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.819283247 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421931562 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415039733 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432996297 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.422445581 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417781338 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.420141629 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416432696 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.426902096 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.407133026 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.408983139 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424396122 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.548762308 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990743332 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424199936 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.061752059 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.754336397 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.662546094 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.43105549 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.394074587 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.421666551 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420599132 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4204618 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415584302 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410491249 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976911893 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.417080813 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.687024803 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.422197943 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.631747125 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627374272 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420486495 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634475385 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440838907 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439386447 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.391983507 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420665556 seconds)
  done (took 995.516469501 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.43471302 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.416841356 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.428182273 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.409638801 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.446217323 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.432859121 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.435469481 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.487985608 seconds)
  done (took 20.776389599 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.415940073 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.422601761 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.415854543 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.422335207 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.417635551 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.909195483 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.410704751 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.422107929 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.431706071 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.414369254 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.419705564 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.058595447 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.422348106 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.417546176 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.431934997 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.428954753 seconds)
  done (took 33.150099662 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.19127862 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.45801605 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.081588059 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.478824264 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.414085658 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.414707872 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.584005174 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.424295703 seconds)
  done (took 26.337395391 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.424777102 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.426003587 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.423528184 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.423926661 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.423429627 seconds)
  done (took 8.411078582 seconds)
done (took 1264.78643792 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.429436294 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.430609943 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.431927858 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.425531479 seconds)
  done (took 7.004494298 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.391266378 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.391937453 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.390375889 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.40925016 seconds)
  done (took 9.874133084 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.111858091 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.942487956 seconds)
  done (took 5.345471974 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.941451292 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.932038012 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.932832888 seconds)
  done (took 7.095421202 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.691726413 seconds)
  done (took 2.983368632 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.373482639 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.415696411 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.423765747 seconds)
  done (took 8.508225396 seconds)
done (took 42.103835715 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.413605407 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.178309321 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.571575012 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.417924663 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.576914244 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.573441658 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.663202523 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.415012956 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.428645863 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.407380774 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.419396429 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.574784742 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.654835824 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.17649863 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.654438373 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.180203134 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.576247612 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.428938013 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.415615416 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.417217889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.667221654 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.421030267 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.410338648 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.419737564 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.577864431 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.55479376 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.429540322 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.179761965 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.420367835 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.415204264 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.579387915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.416855601 seconds)
  done (took 83.925774808 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.417778541 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.427011793 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.425391308 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.416884081 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.417288256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.425048153 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.418315795 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.417406924 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.428531711 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.422827648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416373383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.418048567 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.417298364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.414141826 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.436009894 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.417300385 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.421942063 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.422775308 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.415964398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.417090895 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.418471373 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.430243658 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417760197 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.442746208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.415342742 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.418598066 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.437289688 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.418091877 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.416256839 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.41817526 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.419234668 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.437132772 seconds)
  done (took 78.80050167 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.418092688 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.416014822 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.430539906 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.418650698 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.4323955 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.428759688 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.415322782 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.421199057 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.421248674 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415214478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.430148564 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.42776848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.418954432 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.432311631 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.422858951 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.420745806 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.419554864 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.425722993 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.415041857 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.432896551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.423128346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.431501786 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.418997183 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.418042523 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.436842662 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.438145472 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.419539065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.421890312 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.425614364 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.420600094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.424430287 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.419790487 seconds)
  done (took 78.861461061 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.662494502 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.433280496 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.440041961 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.429376466 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.438609781 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.437213663 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.429542598 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.688415685 seconds)
  done (took 15.26031617 seconds)
done (took 258.135090619 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.425551826 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.916294969 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.463997404 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.429189655 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.443708836 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.452976883 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.632492884 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.459412993 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.619635005 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.446563325 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.447473582 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.431407634 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.230271429 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.574500539 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.237334012 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.360786942 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.310480296 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.424071555 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.98288629 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.660458595 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.460715739 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.420352113 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.249497716 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.327331259 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.410165235 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.486208226 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.493931043 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.588179087 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.549440719 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.487558363 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.920595955 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.438462957 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.441367762 seconds)
  done (took 65.525082843 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.430110473 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.438523521 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.441115063 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.43911992 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.440488686 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.436633665 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.433514372 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.435792581 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.432532932 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.441079984 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.440238135 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.439997926 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.442225722 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.439251239 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.440085394 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.410988953 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.423865142 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.437957961 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.43334807 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.411894157 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.437905082 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.434051981 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.444614072 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.434367667 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.44297814 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.440622443 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.437895632 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.434711054 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.437103137 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.433621079 seconds)
  done (took 44.369929196 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.437416956 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.019984289 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.176205456 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.439437613 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.429663586 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.434001978 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.718738347 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.443778898 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.433029517 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.434511237 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.889580122 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.441324052 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.462322007 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.185464973 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.437310435 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.439659338 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.443609886 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.430202796 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.02860091 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.437713462 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.718483531 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.440538496 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.724609263 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.441012283 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.431399524 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.434681691 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.433715619 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.226347772 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.453041699 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.896803265 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.213055358 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.723002213 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.165566351 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.23202305 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.215346058 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.4507871 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.44127003 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.904295556 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.435048711 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.434569109 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.721709624 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.435432638 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.192299859 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.106716387 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.454320687 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.441179662 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.257467395 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.899174198 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.674311473 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.442739726 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.232517317 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.441123614 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.447499352 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.435734245 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.679120455 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.439361897 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.436660542 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.29296184 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.440788128 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.721818731 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.445951743 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.435220651 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.029099228 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.43370153 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.020273652 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.439631127 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.446717672 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.438485844 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.19789015 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.441235584 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.132737395 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.455523459 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.445115392 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.899865673 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.025104482 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.30321009 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.43976585 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.033713839 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.193568643 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.741456607 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.442648566 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.201373803 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.740737558 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.443441418 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.445935142 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.449241139 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.447564344 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.512949043 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.724059357 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.047005834 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.134100606 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.301513365 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.724875891 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.44759949 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.442000184 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.299448251 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.449641259 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.450393981 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.193208438 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.135012947 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.457905198 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.4485508 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.118412054 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.457151001 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.727908373 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.44578348 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.238121056 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.44156893 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.514808954 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.450657114 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.447505743 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.445788463 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.728792143 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.444878003 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.447307059 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.118578316 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.927562714 seconds)
  done (took 199.968949252 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.444456947 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.434897419 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.441424503 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.432128948 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.432815794 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.442473043 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.431283156 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.436893769 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.440602855 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.435626313 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.435753063 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.441212685 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.439765215 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.43221451 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.451296612 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.434838435 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.436723941 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.456552596 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.428702944 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.437040893 seconds)
  done (took 46.075852788 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.451510001 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.999274091 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.976995171 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.450511477 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.453501139 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.441996985 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.500254074 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.455211182 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.452940523 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.740998004 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.615967797 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.456335528 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.45210719 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.45234191 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.978932721 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.426115575 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.740412469 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.003505778 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.451355253 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.995999836 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.425713968 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.455187517 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.443307904 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.003663011 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.750912796 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.727679461 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.500832792 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.003184445 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.450819104 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.454021418 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.999302262 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.452620683 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.44303016 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.986032489 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.454132424 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.463988725 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.452904471 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.50097525 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.503861574 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.741329112 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.007061801 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.737562773 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.466200903 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.608336809 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.455527646 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.421197538 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.013436764 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.45683174 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.426633268 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.454808616 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.459561124 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.992345422 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.444566612 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.99123113 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.456638006 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.454360372 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.006584073 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.992315879 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.982870203 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.619770752 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.446585075 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.733274062 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.454490753 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.016310813 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.454074766 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.454756605 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.456613563 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.620025591 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.009289281 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.734377912 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.745056463 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.747745778 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.451858335 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.51413404 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.456866689 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.747545013 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.512294116 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.836187661 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.750612666 seconds)
  done (took 130.616603888 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.72864011 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.560720746 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.820015238 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.017893798 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.947201597 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.581825606 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.556624904 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.687550368 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.453300895 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.563774482 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.090179071 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.537210651 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.192912453 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.509480994 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.554712065 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.571659068 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.842750559 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.406544216 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.090332049 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.073842338 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.450959288 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.547528697 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.957911733 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.646928907 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.463345113 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.024313808 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.387279543 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.964238181 seconds)
  done (took 54.544813673 seconds)
done (took 542.396289233 seconds)
SAVING RESULT...
DONE!
